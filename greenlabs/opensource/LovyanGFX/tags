!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t A8() const { return a; }$/;"	f	struct:lgfx::v0::argb8888_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t A8() const { return a; }$/;"	f	struct:lgfx::v0::bgra8888_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    inline void A8(uint8_t a8) { a = a8; }$/;"	f	struct:lgfx::v0::argb8888_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    inline void A8(uint8_t a8) { a = a8; }$/;"	f	struct:lgfx::v0::bgra8888_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v0::bgr666_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v0::bgr888_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v0::grayscale_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v0::rgb332_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v0::rgb565_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v0::rgb888_t
A8	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v0::swap565_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t A8(void) const { return a; }$/;"	f	struct:lgfx::v1::argb8888_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t A8(void) const { return a; }$/;"	f	struct:lgfx::v1::bgra8888_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    inline void A8(uint8_t a8) { a = a8; }$/;"	f	struct:lgfx::v1::argb8888_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    inline void A8(uint8_t a8) { a = a8; }$/;"	f	struct:lgfx::v1::bgra8888_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t A8() { return 255; }$/;"	f	struct:lgfx::v1::bgr888_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t A8(void) { return 255; }$/;"	f	struct:lgfx::v1::bgr666_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t A8(void) { return 255; }$/;"	f	struct:lgfx::v1::grayscale_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t A8(void) { return 255; }$/;"	f	struct:lgfx::v1::rgb332_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t A8(void) { return 255; }$/;"	f	struct:lgfx::v1::rgb565_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t A8(void) { return 255; }$/;"	f	struct:lgfx::v1::rgb888_t
A8	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t A8(void) { return 255; }$/;"	f	struct:lgfx::v1::swap565_t
AC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t AC_:1;            \/*!< bit:      8  AC APB Clock Enable                *\/$/;"	m	struct:__anon301::__anon302
AC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t AC_:1;            \/*!< bit:      8  AC APB Clock Enable                *\/$/;"	m	struct:__anon87::__anon88
ADC0_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ADC0_:1;          \/*!< bit:      7  ADC0 APB Clock Enable              *\/$/;"	m	struct:__anon303::__anon304
ADC0_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ADC0_:1;          \/*!< bit:      7  ADC0 APB Clock Enable              *\/$/;"	m	struct:__anon89::__anon90
ADC1_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ADC1_:1;          \/*!< bit:      8  ADC1 APB Clock Enable              *\/$/;"	m	struct:__anon303::__anon304
ADC1_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ADC1_:1;          \/*!< bit:      8  ADC1 APB Clock Enable              *\/$/;"	m	struct:__anon89::__anon90
ADDR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ADDR:8;           \/*!< bit:  0.. 7  Address Value                      *\/$/;"	m	struct:__anon447::__anon448
ADDR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_ADDR_Type      ADDR;        \/**< \\brief Offset: 0x24 (R\/W 32) SPI Address *\/$/;"	m	struct:__anon453
ADDR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ADDR:8;           \/*!< bit:  0.. 7  Address Value                      *\/$/;"	m	struct:__anon233::__anon234
ADDR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_ADDR_Type      ADDR;        \/**< \\brief Offset: 0x24 (R\/W 32) SPI Address *\/$/;"	m	struct:__anon239
ADDRMASK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ADDRMASK:8;       \/*!< bit: 16..23  Address Mask                       *\/$/;"	m	struct:__anon447::__anon448
ADDRMASK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ADDRMASK:8;       \/*!< bit: 16..23  Address Mask                       *\/$/;"	m	struct:__anon233::__anon234
ADJCTL3	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t ADJCTL3 = 0xF7;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
AES_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t AES_:1;           \/*!< bit:      9  AES APB Clock Enable               *\/$/;"	m	struct:__anon301::__anon302
AES_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t AES_:1;           \/*!< bit:      9  AES APB Clock Enable               *\/$/;"	m	struct:__anon87::__anon88
AHBMASK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_AHBMASK_Type         AHBMASK;     \/**< \\brief Offset: 0x10 (R\/W 32) AHB Mask *\/$/;"	m	struct:__anon305
AHBMASK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_AHBMASK_Type         AHBMASK;     \/**< \\brief Offset: 0x10 (R\/W 32) AHB Mask *\/$/;"	m	struct:__anon91
ALOCK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ALOCK:1;          \/*!< bit:     11  Auto Lock                          *\/$/;"	m	struct:__anon345::__anon346
ALOCK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ALOCK:1;          \/*!< bit:     11  Auto Lock                          *\/$/;"	m	struct:__anon131::__anon132
AMODE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t AMODE:2;          \/*!< bit: 14..15  Address Mode                       *\/$/;"	m	struct:__anon429::__anon430
AMODE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t AMODE:2;          \/*!< bit: 14..15  Address Mode                       *\/$/;"	m	struct:__anon215::__anon216
APBAMASK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_APBAMASK_Type        APBAMASK;    \/**< \\brief Offset: 0x14 (R\/W 32) APBA Mask *\/$/;"	m	struct:__anon305
APBAMASK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_APBAMASK_Type        APBAMASK;    \/**< \\brief Offset: 0x14 (R\/W 32) APBA Mask *\/$/;"	m	struct:__anon91
APBBMASK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_APBBMASK_Type        APBBMASK;    \/**< \\brief Offset: 0x18 (R\/W 32) APBB Mask *\/$/;"	m	struct:__anon305
APBBMASK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_APBBMASK_Type        APBBMASK;    \/**< \\brief Offset: 0x18 (R\/W 32) APBB Mask *\/$/;"	m	struct:__anon91
APBCMASK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_APBCMASK_Type        APBCMASK;    \/**< \\brief Offset: 0x1C (R\/W 32) APBC Mask *\/$/;"	m	struct:__anon305
APBCMASK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_APBCMASK_Type        APBCMASK;    \/**< \\brief Offset: 0x1C (R\/W 32) APBC Mask *\/$/;"	m	struct:__anon91
APBDMASK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_APBDMASK_Type        APBDMASK;    \/**< \\brief Offset: 0x20 (R\/W 32) APBD Mask *\/$/;"	m	struct:__anon305
APBDMASK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_APBDMASK_Type        APBDMASK;    \/**< \\brief Offset: 0x20 (R\/W 32) APBD Mask *\/$/;"	m	struct:__anon91
ASCIIFONTLIB24X48_H_	src/lgfx/Fonts/Ascii24x48.h	/^#define ASCIIFONTLIB24X48_H_$/;"	d
ASCIIFONTLIB8X16_H_	src/lgfx/Fonts/Ascii8x16.h	/^#define ASCIIFONTLIB8X16_H_$/;"	d
AllocationSource	src/lgfx/v0/LGFX_Sprite.hpp	/^    enum AllocationSource$/;"	g	class:lgfx::v0::LGFX_Sprite
AllocationSource	src/lgfx/v1/misc/SpriteBuffer.hpp	/^  enum AllocationSource$/;"	g	namespace:lgfx::v1
AsciiFont24x48	src/lgfx/v0/lgfx_fonts.cpp	/^  const FixedBMPfont AsciiFont24x48 = { FontLib24x48, fontlib24x48_info, 24, 48, 40 };$/;"	m	namespace:fonts::v0	file:
AsciiFont24x48	src/lgfx/v1/lgfx_fonts.cpp	/^    const FixedBMPfont AsciiFont24x48 = { FontLib24x48, fontlib24x48_info, 24, 48, 40 };$/;"	m	namespace:lgfx::v1::fonts	file:
AsciiFont8x16	src/lgfx/v0/lgfx_fonts.cpp	/^  const FixedBMPfont AsciiFont8x16  = { FontLib8x16 , font0_info,  8, 16, 13 };$/;"	m	namespace:fonts::v0	file:
AsciiFont8x16	src/lgfx/v1/lgfx_fonts.cpp	/^    const FixedBMPfont AsciiFont8x16  = { FontLib8x16 , font0_info,  8, 16, 13 };$/;"	m	namespace:lgfx::v1::fonts	file:
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return  b * 0x15; }$/;"	f	struct:lgfx::v0::rgb332_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return ( b * 0x21) >> 4; }$/;"	f	struct:lgfx::v0::swap565_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return (b * 0x21) >> 4; }$/;"	f	struct:lgfx::v0::rgb565_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return b; }$/;"	f	struct:lgfx::v0::bgr666_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return b>>2; }$/;"	f	struct:lgfx::v0::argb8888_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return b>>2; }$/;"	f	struct:lgfx::v0::bgr888_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return b>>2; }$/;"	f	struct:lgfx::v0::bgra8888_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return b>>2; }$/;"	f	struct:lgfx::v0::grayscale_t
B6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B6() const { return b>>2; }$/;"	f	struct:lgfx::v0::rgb888_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6() const { return b >> 2; }$/;"	f	struct:lgfx::v1::bgr888_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return  b2 * 0x15; }$/;"	f	struct:lgfx::v1::rgb332_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return (b5 << 1) + (b5 >> 4); }$/;"	f	struct:lgfx::v1::rgb565_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return (b5 << 1) + (b5 >> 4); }$/;"	f	struct:lgfx::v1::swap565_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return b >> 2; }$/;"	f	struct:lgfx::v1::argb8888_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return b >> 2; }$/;"	f	struct:lgfx::v1::bgra8888_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return b >> 2; }$/;"	f	struct:lgfx::v1::grayscale_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return b >> 2; }$/;"	f	struct:lgfx::v1::rgb888_t
B6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B6(void) const { return b6; }$/;"	f	struct:lgfx::v1::bgr666_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return  b * 0x55; }       \/\/ (b<<6)|(b<<4)|(b<<2)|b;$/;"	f	struct:lgfx::v0::rgb332_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return ( b * 0x21) >> 2; }$/;"	f	struct:lgfx::v0::swap565_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return (b * 0x21) >> 2; } \/\/ (b << 3) | (b >> 2);$/;"	f	struct:lgfx::v0::rgb565_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return b; }$/;"	f	struct:lgfx::v0::argb8888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return b; }$/;"	f	struct:lgfx::v0::bgr888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return b; }$/;"	f	struct:lgfx::v0::bgra8888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return b; }$/;"	f	struct:lgfx::v0::grayscale_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return b; }$/;"	f	struct:lgfx::v0::rgb888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t B8() const { return b<<2; }$/;"	f	struct:lgfx::v0::bgr666_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8 >> 3; }$/;"	f	struct:lgfx::v0::rgb565_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8 >> 3; }$/;"	f	struct:lgfx::v0::swap565_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8 >> 6; }$/;"	f	struct:lgfx::v0::rgb332_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v0::argb8888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v0::bgr888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v0::bgra8888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v0::grayscale_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v0::rgb888_t
B8	src/lgfx/v0/lgfx_common.hpp	/^    inline void B8(uint8_t b8) { b = b8>>2; }$/;"	f	struct:lgfx::v0::bgr666_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8() const { return b; }$/;"	f	struct:lgfx::v1::bgr888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return  b2 * 0x55; }       \/\/ (b<<6)|(b<<4)|(b<<2)|b;$/;"	f	struct:lgfx::v1::rgb332_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return (b5 << 3) + (b5 >> 2); }$/;"	f	struct:lgfx::v1::rgb565_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return (b5 << 3) + (b5 >> 2); }$/;"	f	struct:lgfx::v1::swap565_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return (b6 << 2) + (b6 >> 4); }$/;"	f	struct:lgfx::v1::bgr666_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return b; }$/;"	f	struct:lgfx::v1::argb8888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return b; }$/;"	f	struct:lgfx::v1::bgra8888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return b; }$/;"	f	struct:lgfx::v1::grayscale_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t B8(void) const { return b; }$/;"	f	struct:lgfx::v1::rgb888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v1::argb8888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v1::bgr888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v1::bgra8888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v1::grayscale_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b = b8; }$/;"	f	struct:lgfx::v1::rgb888_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b2 = b8 >> 6; }$/;"	f	struct:lgfx::v1::rgb332_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b5 = b8 >> 3; }$/;"	f	struct:lgfx::v1::rgb565_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b5 = b8 >> 3; }$/;"	f	struct:lgfx::v1::swap565_t
B8	src/lgfx/v1/misc/colortype.hpp	/^    inline void B8(uint8_t b8) { b6 = b8 >> 2; }$/;"	f	struct:lgfx::v1::bgr666_t
BAUD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  BAUD:8;           \/*!< bit:  0.. 7  Baud Rate Value                    *\/$/;"	m	struct:__anon433::__anon434
BAUD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_BAUD_Type      BAUD;        \/**< \\brief Offset: 0x0C (R\/W  8) SPI Baud Rate *\/$/;"	m	struct:__anon453
BAUD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  BAUD:8;           \/*!< bit:  0.. 7  Baud Rate Value                    *\/$/;"	m	struct:__anon219::__anon220
BAUD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_BAUD_Type      BAUD;        \/**< \\brief Offset: 0x0C (R\/W  8) SPI Baud Rate *\/$/;"	m	struct:__anon239
BC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef BC_DATUM$/;"	d
BC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t BC_DATUM   = textdatum_t::bottom_center;$/;"	m	namespace:lgfx::v0::textdatum
BC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef BC_DATUM$/;"	d
BC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t BC_DATUM   = textdatum_t::bottom_center;$/;"	m	namespace:lgfx::v1::textdatum
BDFfont	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr BDFfont(const void *chartbl, const uint16_t *indextbl, uint16_t indexsize, uint8_t width, uint8_t halfwidth, uint8_t height, uint8_t baseline, uint8_t y_advance)$/;"	f	struct:lgfx::v0::BDFfont
BDFfont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct BDFfont : public BaseFont {$/;"	s	namespace:lgfx::v0
BDFfont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr BDFfont(const void *char_tbl, const uint16_t *index_tbl, uint16_t index_size, uint8_t w, uint8_t half_width, uint8_t h, uint8_t bl, uint8_t y_adv)$/;"	f	struct:lgfx::v1::BDFfont
BDFfont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct BDFfont : public BaseFont {$/;"	s	namespace:lgfx::v1
BKUPRAM_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BKUPRAM_:1;       \/*!< bit:     11  BKUPRAM AHB Clock Mask             *\/$/;"	m	struct:__anon295::__anon296
BKUPRAM_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BKUPRAM_:1;       \/*!< bit:     11  BKUPRAM AHB Clock Mask             *\/$/;"	m	struct:__anon81::__anon82
BLACK	src/LGFX_TFT_eSPI.hpp	/^    #undef BLACK$/;"	d
BLACK	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int BLACK           = 0x0000;      \/*   0,   0,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
BLACK_LEVEL	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t BLACK_LEVEL;$/;"	m	struct:lgfx::v1::internal_t	file:
BLANKING_LEVEL	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t BLANKING_LEVEL;$/;"	m	struct:lgfx::v1::internal_t	file:
BLUE	src/LGFX_TFT_eSPI.hpp	/^    #undef BLUE$/;"	d
BLUE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int BLUE            = 0x001F;      \/*   0,   0, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
BL_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef BL_DATUM$/;"	d
BL_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t BL_DATUM   = textdatum_t::bottom_left;$/;"	m	namespace:lgfx::v0::textdatum
BL_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef BL_DATUM$/;"	d
BL_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t BL_DATUM   = textdatum_t::bottom_left;$/;"	m	namespace:lgfx::v1::textdatum
BMPfont	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr BMPfont(const void *chartbl, const uint8_t *widthtbl, uint8_t width, uint8_t height, uint8_t baseline) : BaseFont(chartbl, widthtbl, width, height, baseline ) {}$/;"	f	struct:lgfx::v0::BMPfont
BMPfont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct BMPfont : public BaseFont {$/;"	s	namespace:lgfx::v0
BMPfont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr BMPfont(const void *char_tbl, const uint8_t *width_tbl, uint8_t w, uint8_t h, uint8_t bl) : BaseFont(char_tbl, width_tbl, w, h, bl ) {}$/;"	f	struct:lgfx::v1::BMPfont
BMPfont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct BMPfont : public BaseFont {$/;"	s	namespace:lgfx::v1
BR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef BR_DATUM$/;"	d
BR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t BR_DATUM   = textdatum_t::bottom_right;$/;"	m	namespace:lgfx::v0::textdatum
BR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef BR_DATUM$/;"	d
BR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t BR_DATUM   = textdatum_t::bottom_right;$/;"	m	namespace:lgfx::v1::textdatum
BUFOVF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t BUFOVF:1;         \/*!< bit:      2  Buffer Overflow                    *\/$/;"	m	struct:__anon441::__anon442
BUFOVF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t BUFOVF:1;         \/*!< bit:      2  Buffer Overflow                    *\/$/;"	m	struct:__anon227::__anon228
BUSY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t BUSY:1;           \/*!< bit:     15  Busy                               *\/$/;"	m	struct:__anon320::__anon321
BUSY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t BUSY:1;           \/*!< bit:     15  Busy                               *\/$/;"	m	struct:__anon106::__anon107
BUSYCH	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH:12;        \/*!< bit:  0..11  Busy Channel x                     *\/$/;"	m	struct:__anon325::__anon327
BUSYCH	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  BUSYCH:1;         \/*!< bit:      1  Busy Channel                       *\/$/;"	m	struct:__anon339::__anon340
BUSYCH	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  EVSYS_BUSYCH_Type         BUSYCH;      \/**< \\brief Offset: 0x018 (R\/  32) Busy Channels *\/$/;"	m	struct:__anon344
BUSYCH	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH:12;        \/*!< bit:  0..11  Busy Channel x                     *\/$/;"	m	struct:__anon111::__anon113
BUSYCH	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  BUSYCH:1;         \/*!< bit:      1  Busy Channel                       *\/$/;"	m	struct:__anon125::__anon126
BUSYCH	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  EVSYS_BUSYCH_Type         BUSYCH;      \/**< \\brief Offset: 0x018 (R\/  32) Busy Channels *\/$/;"	m	struct:__anon130
BUSYCH0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH0:1;        \/*!< bit:      0  Busy Channel 0                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH0:1;        \/*!< bit:      0  Busy Channel 0                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH1:1;        \/*!< bit:      1  Busy Channel 1                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH1:1;        \/*!< bit:      1  Busy Channel 1                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH10	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH10:1;       \/*!< bit:     10  Busy Channel 10                    *\/$/;"	m	struct:__anon325::__anon326
BUSYCH10	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH10:1;       \/*!< bit:     10  Busy Channel 10                    *\/$/;"	m	struct:__anon111::__anon112
BUSYCH11	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH11:1;       \/*!< bit:     11  Busy Channel 11                    *\/$/;"	m	struct:__anon325::__anon326
BUSYCH11	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH11:1;       \/*!< bit:     11  Busy Channel 11                    *\/$/;"	m	struct:__anon111::__anon112
BUSYCH2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH2:1;        \/*!< bit:      2  Busy Channel 2                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH2:1;        \/*!< bit:      2  Busy Channel 2                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH3:1;        \/*!< bit:      3  Busy Channel 3                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH3:1;        \/*!< bit:      3  Busy Channel 3                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH4:1;        \/*!< bit:      4  Busy Channel 4                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH4:1;        \/*!< bit:      4  Busy Channel 4                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH5:1;        \/*!< bit:      5  Busy Channel 5                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH5:1;        \/*!< bit:      5  Busy Channel 5                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH6:1;        \/*!< bit:      6  Busy Channel 6                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH6:1;        \/*!< bit:      6  Busy Channel 6                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH7	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH7:1;        \/*!< bit:      7  Busy Channel 7                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH7	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH7:1;        \/*!< bit:      7  Busy Channel 7                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH8:1;        \/*!< bit:      8  Busy Channel 8                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH8:1;        \/*!< bit:      8  Busy Channel 8                     *\/$/;"	m	struct:__anon111::__anon112
BUSYCH9	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH9:1;        \/*!< bit:      9  Busy Channel 9                     *\/$/;"	m	struct:__anon325::__anon326
BUSYCH9	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t BUSYCH9:1;        \/*!< bit:      9  Busy Channel 9                     *\/$/;"	m	struct:__anon111::__anon112
BYTECLIP	src/lgfx/utility/lgfx_tjpgd.c	/^static inline int32_t BYTECLIP ($/;"	f	file:
BaseFont	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr BaseFont(const void *chartbl, const uint8_t *widthtbl, uint8_t width, uint8_t height, uint8_t baseline)$/;"	f	struct:lgfx::v0::BaseFont
BaseFont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct BaseFont : public IFont {$/;"	s	namespace:lgfx::v0
BaseFont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr BaseFont()$/;"	f	struct:lgfx::v1::BaseFont
BaseFont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr BaseFont(const void *char_tbl, const uint8_t *width_tbl, uint8_t w, uint8_t h, uint8_t bl)$/;"	f	struct:lgfx::v1::BaseFont
BaseFont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct BaseFont : public IFont {$/;"	s	namespace:lgfx::v1
Bayer	src/lgfx/utility/lgfx_tjpgd.c	/^static const int_fast8_t Bayer[16] = { 0, 4, 1, 5,-2, 2,-1, 3, 1, 5, 0, 4,-1, 3,-2, 2};$/;"	v	file:
Bayer	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  constexpr uint8_t Panel_GDEW0154M09::Bayer[16];$/;"	m	class:lgfx::v0::Panel_GDEW0154M09	file:
Bayer	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    static constexpr uint8_t Bayer[16] = { 8, 200, 40, 232, 72, 136, 104, 168, 56, 248, 24, 216, 120, 184, 88, 152 };$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
Bayer	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  constexpr int8_t Panel_IT8951::Bayer[16];$/;"	m	class:lgfx::v0::Panel_IT8951	file:
Bayer	src/lgfx/v0/panel/Panel_IT8951.hpp	/^  static constexpr int8_t Bayer[16] = {-30, 2, -22, 10, 18, -14, 26, -6, -18, 14, -26, 6, 30, -2, 22, -10};$/;"	m	struct:lgfx::v0::Panel_IT8951
Bayer	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  static constexpr uint8_t Bayer[16] = { 8, 200, 40, 232, 72, 136, 104, 168, 56, 248, 24, 216, 120, 184, 88, 152 };$/;"	m	namespace:lgfx::v1	file:
Bayer	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr int8_t Bayer[16] = {-30, 2, -22, 10, 18, -14, 26, -6, -18, 14, -26, 6, 30, -2, 22, -10};$/;"	m	namespace:lgfx::v1	file:
Bayer	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  static constexpr uint8_t Bayer[16] = { 8, 136, 40, 168, 200, 72, 232, 104, 56, 184, 24, 152, 248, 120, 216, 88 };$/;"	m	namespace:lgfx::v1	file:
Bayer	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  static constexpr int8_t Bayer[16] = {-30, 2, -22, 10, 18, -14, 26, -6, -18, 14, -26, 6, 30, -2, 22, -10};$/;"	m	namespace:lgfx::v1	file:
BitBucket	src/lgfx/utility/lgfx_qrcode.c	/^typedef struct BitBucket {$/;"	s	file:
BitBucket	src/lgfx/utility/lgfx_qrcode.c	/^} BitBucket;$/;"	t	typeref:struct:BitBucket	file:
Bus_HUB75	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^  class Bus_HUB75 : public Bus_ImagePush$/;"	c	namespace:lgfx::v1
Bus_I2C	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^  class Bus_I2C : public IBus$/;"	c	namespace:lgfx::v1
Bus_I2C	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^  class Bus_I2C : public IBus$/;"	c	namespace:lgfx::v1
Bus_I2C	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^  class Bus_I2C : public IBus$/;"	c	namespace:lgfx::v1
Bus_I2C	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^  class Bus_I2C : public IBus$/;"	c	namespace:lgfx::v1
Bus_I2C	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^  class Bus_I2C : public IBus$/;"	c	namespace:lgfx::v1
Bus_ImagePush	src/lgfx/v1/Bus.hpp	/^  struct Bus_ImagePush : public Bus_NULL$/;"	s	namespace:lgfx::v1
Bus_NULL	src/lgfx/v1/Bus.hpp	/^  struct Bus_NULL : public IBus$/;"	s	namespace:lgfx::v1
Bus_Parallel16	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^  class Bus_Parallel16 : public IBus$/;"	c	namespace:lgfx::v1
Bus_Parallel16	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^  class Bus_Parallel16 : public IBus$/;"	c	namespace:lgfx::v1
Bus_Parallel8	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^  class Bus_Parallel8 : public IBus$/;"	c	namespace:lgfx::v1
Bus_Parallel8	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^  class Bus_Parallel8 : public IBus$/;"	c	namespace:lgfx::v1
Bus_Parallel8	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^  class Bus_Parallel8 : public IBus$/;"	c	namespace:lgfx::v1
Bus_Parallel8	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^  class Bus_Parallel8 : public IBus$/;"	c	namespace:lgfx::v1
Bus_RGB	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^  class Bus_RGB : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_SPI	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^  class Bus_SPI : public IBus$/;"	c	namespace:lgfx::v1
Bus_Stream	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^  class Bus_Stream : public IBus$/;"	c	namespace:lgfx::v1
Bypass	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    Bypass            = 0xFF$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
Byte	src/lgfx/utility/miniz.c	/^  typedef unsigned char Byte;$/;"	t	file:
Bytef	src/lgfx/utility/miniz.c	/^  typedef Byte Bytef;$/;"	t	file:
CACHE_SIZE	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    static constexpr size_t CACHE_SIZE = 132;$/;"	m	class:lgfx::v1::Bus_Parallel8
CACHE_SIZE	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    static constexpr size_t CACHE_SIZE = 132;$/;"	m	class:lgfx::v1::Bus_Parallel16
CACHE_SIZE	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    static constexpr size_t CACHE_SIZE = 132;$/;"	m	class:lgfx::v1::Bus_Parallel8
CACHE_SIZE	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    static constexpr size_t CACHE_SIZE = 256;$/;"	m	class:lgfx::v1::Bus_Parallel16
CACHE_SIZE	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    static constexpr size_t CACHE_SIZE = 256;$/;"	m	class:lgfx::v1::Bus_Parallel8
CACHE_THRESH	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr size_t CACHE_THRESH = 128;$/;"	m	namespace:lgfx::v1	file:
CACHE_THRESH	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr size_t CACHE_THRESH = 128;$/;"	m	namespace:lgfx::v1	file:
CACHE_THRESH	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr size_t CACHE_THRESH = 128;$/;"	m	namespace:lgfx::v1	file:
CAPTEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CAPTEN:2;         \/*!< bit: 16..17  Capture Channel x Enable           *\/$/;"	m	struct:__anon345::__anon347
CAPTEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CAPTEN:2;         \/*!< bit: 16..17  Capture Channel x Enable           *\/$/;"	m	struct:__anon131::__anon133
CAPTEN0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CAPTEN0:1;        \/*!< bit:     16  Capture Channel 0 Enable           *\/$/;"	m	struct:__anon345::__anon346
CAPTEN0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CAPTEN0:1;        \/*!< bit:     16  Capture Channel 0 Enable           *\/$/;"	m	struct:__anon131::__anon132
CAPTEN1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CAPTEN1:1;        \/*!< bit:     17  Capture Channel 1 Enable           *\/$/;"	m	struct:__anon345::__anon346
CAPTEN1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CAPTEN1:1;        \/*!< bit:     17  Capture Channel 1 Enable           *\/$/;"	m	struct:__anon131::__anon132
CAPTMODE0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CAPTMODE0:2;      \/*!< bit: 24..25  Capture Mode Channel 0             *\/$/;"	m	struct:__anon345::__anon346
CAPTMODE0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CAPTMODE0:2;      \/*!< bit: 24..25  Capture Mode Channel 0             *\/$/;"	m	struct:__anon131::__anon132
CAPTMODE1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CAPTMODE1:2;      \/*!< bit: 27..28  Capture mode Channel 1             *\/$/;"	m	struct:__anon345::__anon346
CAPTMODE1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CAPTMODE1:2;      \/*!< bit: 27..28  Capture mode Channel 1             *\/$/;"	m	struct:__anon131::__anon132
CASET	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t CASET   = 0x2A;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
CASET	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t CASET   = 0x15;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
CC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t CC:16;            \/*!< bit:  0..15  Counter\/Compare Value              *\/$/;"	m	struct:__anon385::__anon386
CC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CC:2;             \/*!< bit:  6.. 7  Compare Channel x                  *\/$/;"	m	struct:__anon374::__anon376
CC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CC:32;            \/*!< bit:  0..31  Counter\/Compare Value              *\/$/;"	m	struct:__anon387::__anon388
CC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CC:8;             \/*!< bit:  0.. 7  Counter\/Compare Value              *\/$/;"	m	struct:__anon389::__anon390
CC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_CC_Type         CC[2];       \/**< \\brief Offset: 0x1C (R\/W  8) COUNT8 Compare and Capture *\/$/;"	m	struct:__anon395
CC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t CC:16;            \/*!< bit:  0..15  Counter\/Compare Value              *\/$/;"	m	struct:__anon171::__anon172
CC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CC:2;             \/*!< bit:  6.. 7  Compare Channel x                  *\/$/;"	m	struct:__anon160::__anon162
CC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CC:32;            \/*!< bit:  0..31  Counter\/Compare Value              *\/$/;"	m	struct:__anon173::__anon174
CC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CC:8;             \/*!< bit:  0.. 7  Counter\/Compare Value              *\/$/;"	m	struct:__anon175::__anon176
CC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_CC_Type         CC[2];       \/**< \\brief Offset: 0x1C (R\/W  8) COUNT8 Compare and Capture *\/$/;"	m	struct:__anon181
CC0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CC0:1;            \/*!< bit:      6  Compare Channel 0                  *\/$/;"	m	struct:__anon374::__anon375
CC0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CC0:1;            \/*!< bit:      6  Compare Channel 0                  *\/$/;"	m	struct:__anon160::__anon161
CC1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CC1:1;            \/*!< bit:      7  Compare Channel 1                  *\/$/;"	m	struct:__anon374::__anon375
CC1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CC1:1;            \/*!< bit:      7  Compare Channel 1                  *\/$/;"	m	struct:__anon160::__anon161
CCBUF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CCBUF:8;          \/*!< bit:  0.. 7  Counter\/Compare Buffer Value       *\/$/;"	m	struct:__anon393::__anon394
CCBUF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_CCBUF_Type      CCBUF[2];    \/**< \\brief Offset: 0x30 (R\/W  8) COUNT8 Compare and Capture Buffer *\/$/;"	m	struct:__anon395
CCBUF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CCBUF:8;          \/*!< bit:  0.. 7  Counter\/Compare Buffer Value       *\/$/;"	m	struct:__anon179::__anon180
CCBUF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_CCBUF_Type      CCBUF[2];    \/**< \\brief Offset: 0x30 (R\/W  8) COUNT8 Compare and Capture Buffer *\/$/;"	m	struct:__anon181
CCBUFV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CCBUFV:2;         \/*!< bit:  4.. 5  Compare channel buffer x valid     *\/$/;"	m	struct:__anon364::__anon366
CCBUFV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CCBUFV:2;         \/*!< bit:  4.. 5  Compare channel buffer x valid     *\/$/;"	m	struct:__anon150::__anon152
CCBUFV0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CCBUFV0:1;        \/*!< bit:      4  Compare channel buffer 0 valid     *\/$/;"	m	struct:__anon364::__anon365
CCBUFV0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CCBUFV0:1;        \/*!< bit:      4  Compare channel buffer 0 valid     *\/$/;"	m	struct:__anon150::__anon151
CCBUFV1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CCBUFV1:1;        \/*!< bit:      5  Compare channel buffer 1 valid     *\/$/;"	m	struct:__anon364::__anon365
CCBUFV1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CCBUFV1:1;        \/*!< bit:      5  Compare channel buffer 1 valid     *\/$/;"	m	struct:__anon150::__anon151
CCL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define CCL /;"	d
CCL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define CCL /;"	d
CCL_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CCL_:1;           \/*!< bit:     14  CCL APB Clock Enable               *\/$/;"	m	struct:__anon301::__anon302
CCL_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CCL_:1;           \/*!< bit:     14  CCL APB Clock Enable               *\/$/;"	m	struct:__anon87::__anon88
CCL_CTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} CCL_CTRL_Type;$/;"	t	typeref:union:__anon306
CCL_CTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} CCL_CTRL_Type;$/;"	t	typeref:union:__anon92
CCL_INSTS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define CCL_INSTS /;"	d
CCL_INSTS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define CCL_INSTS /;"	d
CCL_INST_NUM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define CCL_INST_NUM /;"	d
CCL_INST_NUM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define CCL_INST_NUM /;"	d
CCL_LUTCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} CCL_LUTCTRL_Type;$/;"	t	typeref:union:__anon310
CCL_LUTCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} CCL_LUTCTRL_Type;$/;"	t	typeref:union:__anon96
CCL_SEQCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} CCL_SEQCTRL_Type;$/;"	t	typeref:union:__anon308
CCL_SEQCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} CCL_SEQCTRL_Type;$/;"	t	typeref:union:__anon94
CC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef CC_DATUM$/;"	d
CC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t CC_DATUM   = textdatum_t::middle_center;$/;"	m	namespace:lgfx::v0::textdatum
CC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef CC_DATUM$/;"	d
CC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t CC_DATUM   = textdatum_t::middle_center;$/;"	m	namespace:lgfx::v1::textdatum
CHANNEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL:32;       \/*!< bit:  0..31  Channel x Software Selection       *\/$/;"	m	struct:__anon315::__anon317
CHANNEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL:6;        \/*!< bit:  0.. 5  Channel Event Selection            *\/$/;"	m	struct:__anon341::__anon342
CHANNEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHANNEL_Type        CHANNEL;     \/**< \\brief Offset: 0x000 (R\/W 32) Channel n Control *\/$/;"	m	struct:__anon343
CHANNEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL:32;       \/*!< bit:  0..31  Channel x Software Selection       *\/$/;"	m	struct:__anon101::__anon103
CHANNEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL:6;        \/*!< bit:  0.. 5  Channel Event Selection            *\/$/;"	m	struct:__anon127::__anon128
CHANNEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHANNEL_Type        CHANNEL;     \/**< \\brief Offset: 0x000 (R\/W 32) Channel n Control *\/$/;"	m	struct:__anon129
CHANNEL0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL0:1;       \/*!< bit:      0  Channel 0 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL0:1;       \/*!< bit:      0  Channel 0 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL1:1;       \/*!< bit:      1  Channel 1 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL1:1;       \/*!< bit:      1  Channel 1 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL10	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL10:1;      \/*!< bit:     10  Channel 10 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL10	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL10:1;      \/*!< bit:     10  Channel 10 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL11	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL11:1;      \/*!< bit:     11  Channel 11 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL11	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL11:1;      \/*!< bit:     11  Channel 11 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL12	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL12:1;      \/*!< bit:     12  Channel 12 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL12	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL12:1;      \/*!< bit:     12  Channel 12 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL13	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL13:1;      \/*!< bit:     13  Channel 13 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL13	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL13:1;      \/*!< bit:     13  Channel 13 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL14	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL14:1;      \/*!< bit:     14  Channel 14 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL14	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL14:1;      \/*!< bit:     14  Channel 14 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL15	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL15:1;      \/*!< bit:     15  Channel 15 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL15	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL15:1;      \/*!< bit:     15  Channel 15 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL16	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL16:1;      \/*!< bit:     16  Channel 16 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL16	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL16:1;      \/*!< bit:     16  Channel 16 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL17	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL17:1;      \/*!< bit:     17  Channel 17 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL17	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL17:1;      \/*!< bit:     17  Channel 17 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL18	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL18:1;      \/*!< bit:     18  Channel 18 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL18	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL18:1;      \/*!< bit:     18  Channel 18 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL19	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL19:1;      \/*!< bit:     19  Channel 19 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL19	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL19:1;      \/*!< bit:     19  Channel 19 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL2:1;       \/*!< bit:      2  Channel 2 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL2:1;       \/*!< bit:      2  Channel 2 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL20	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL20:1;      \/*!< bit:     20  Channel 20 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL20	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL20:1;      \/*!< bit:     20  Channel 20 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL21	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL21:1;      \/*!< bit:     21  Channel 21 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL21	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL21:1;      \/*!< bit:     21  Channel 21 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL22	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL22:1;      \/*!< bit:     22  Channel 22 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL22	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL22:1;      \/*!< bit:     22  Channel 22 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL23	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL23:1;      \/*!< bit:     23  Channel 23 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL23	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL23:1;      \/*!< bit:     23  Channel 23 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL24	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL24:1;      \/*!< bit:     24  Channel 24 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL24	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL24:1;      \/*!< bit:     24  Channel 24 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL25	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL25:1;      \/*!< bit:     25  Channel 25 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL25	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL25:1;      \/*!< bit:     25  Channel 25 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL26	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL26:1;      \/*!< bit:     26  Channel 26 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL26	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL26:1;      \/*!< bit:     26  Channel 26 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL27	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL27:1;      \/*!< bit:     27  Channel 27 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL27	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL27:1;      \/*!< bit:     27  Channel 27 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL28	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL28:1;      \/*!< bit:     28  Channel 28 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL28	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL28:1;      \/*!< bit:     28  Channel 28 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL29	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL29:1;      \/*!< bit:     29  Channel 29 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL29	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL29:1;      \/*!< bit:     29  Channel 29 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL3:1;       \/*!< bit:      3  Channel 3 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL3:1;       \/*!< bit:      3  Channel 3 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL30	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL30:1;      \/*!< bit:     30  Channel 30 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL30	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL30:1;      \/*!< bit:     30  Channel 30 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL31	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL31:1;      \/*!< bit:     31  Channel 31 Software Selection      *\/$/;"	m	struct:__anon315::__anon316
CHANNEL31	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL31:1;      \/*!< bit:     31  Channel 31 Software Selection      *\/$/;"	m	struct:__anon101::__anon102
CHANNEL4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL4:1;       \/*!< bit:      4  Channel 4 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL4:1;       \/*!< bit:      4  Channel 4 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL5:1;       \/*!< bit:      5  Channel 5 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL5:1;       \/*!< bit:      5  Channel 5 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL6:1;       \/*!< bit:      6  Channel 6 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL6:1;       \/*!< bit:      6  Channel 6 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL7	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL7:1;       \/*!< bit:      7  Channel 7 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL7	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL7:1;       \/*!< bit:      7  Channel 7 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL8:1;       \/*!< bit:      8  Channel 8 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL8:1;       \/*!< bit:      8  Channel 8 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHANNEL9	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL9:1;       \/*!< bit:      9  Channel 9 Software Selection       *\/$/;"	m	struct:__anon315::__anon316
CHANNEL9	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHANNEL9:1;       \/*!< bit:      9  Channel 9 Software Selection       *\/$/;"	m	struct:__anon101::__anon102
CHEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHEN:1;           \/*!< bit:      6  Channel Enable                     *\/$/;"	m	struct:__anon282::__anon283
CHEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHEN:1;           \/*!< bit:      6  Channel Enable                     *\/$/;"	m	struct:__anon68::__anon69
CHINT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT:12;         \/*!< bit:  0..11  Channel x Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon324
CHINT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT:12;         \/*!< bit:  0..11  Channel x Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon110
CHINT0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT0:1;         \/*!< bit:      0  Channel 0 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT0:1;         \/*!< bit:      0  Channel 0 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT1:1;         \/*!< bit:      1  Channel 1 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT1:1;         \/*!< bit:      1  Channel 1 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT10	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT10:1;        \/*!< bit:     10  Channel 10 Pending Interrupt       *\/$/;"	m	struct:__anon322::__anon323
CHINT10	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT10:1;        \/*!< bit:     10  Channel 10 Pending Interrupt       *\/$/;"	m	struct:__anon108::__anon109
CHINT11	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT11:1;        \/*!< bit:     11  Channel 11 Pending Interrupt       *\/$/;"	m	struct:__anon322::__anon323
CHINT11	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT11:1;        \/*!< bit:     11  Channel 11 Pending Interrupt       *\/$/;"	m	struct:__anon108::__anon109
CHINT2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT2:1;         \/*!< bit:      2  Channel 2 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT2:1;         \/*!< bit:      2  Channel 2 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT3:1;         \/*!< bit:      3  Channel 3 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT3:1;         \/*!< bit:      3  Channel 3 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT4:1;         \/*!< bit:      4  Channel 4 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT4:1;         \/*!< bit:      4  Channel 4 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT5:1;         \/*!< bit:      5  Channel 5 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT5:1;         \/*!< bit:      5  Channel 5 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT6:1;         \/*!< bit:      6  Channel 6 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT6:1;         \/*!< bit:      6  Channel 6 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT7	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT7:1;         \/*!< bit:      7  Channel 7 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT7	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT7:1;         \/*!< bit:      7  Channel 7 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT8:1;         \/*!< bit:      8  Channel 8 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT8:1;         \/*!< bit:      8  Channel 8 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINT9	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHINT9:1;         \/*!< bit:      9  Channel 9 Pending Interrupt        *\/$/;"	m	struct:__anon322::__anon323
CHINT9	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHINT9:1;         \/*!< bit:      9  Channel 9 Pending Interrupt        *\/$/;"	m	struct:__anon108::__anon109
CHINTENCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHINTENCLR_Type     CHINTENCLR;  \/**< \\brief Offset: 0x004 (R\/W  8) Channel n Interrupt Enable Clear *\/$/;"	m	struct:__anon343
CHINTENCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHINTENCLR_Type     CHINTENCLR;  \/**< \\brief Offset: 0x004 (R\/W  8) Channel n Interrupt Enable Clear *\/$/;"	m	struct:__anon129
CHINTENSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHINTENSET_Type     CHINTENSET;  \/**< \\brief Offset: 0x005 (R\/W  8) Channel n Interrupt Enable Set *\/$/;"	m	struct:__anon343
CHINTENSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHINTENSET_Type     CHINTENSET;  \/**< \\brief Offset: 0x005 (R\/W  8) Channel n Interrupt Enable Set *\/$/;"	m	struct:__anon129
CHINTFLAG	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHINTFLAG_Type      CHINTFLAG;   \/**< \\brief Offset: 0x006 (R\/W  8) Channel n Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon343
CHINTFLAG	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_CHINTFLAG_Type      CHINTFLAG;   \/**< \\brief Offset: 0x006 (R\/W  8) Channel n Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon129
CHSIZE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CHSIZE:3;         \/*!< bit:  0.. 2  Character Size                     *\/$/;"	m	struct:__anon429::__anon430
CHSIZE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CHSIZE:3;         \/*!< bit:  0.. 2  Character Size                     *\/$/;"	m	struct:__anon215::__anon216
CHSTATUS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  EVSYS_CHSTATUS_Type       CHSTATUS;    \/**< \\brief Offset: 0x007 (R\/   8) Channel n Status *\/$/;"	m	struct:__anon343
CHSTATUS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  EVSYS_CHSTATUS_Type       CHSTATUS;    \/**< \\brief Offset: 0x007 (R\/   8) Channel n Status *\/$/;"	m	struct:__anon129
CKRDY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  CKRDY:1;          \/*!< bit:      0  Clock Ready                        *\/$/;"	m	struct:__anon289::__anon290
CKRDY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CKRDY:1;          \/*!< bit:      0  Clock Ready Interrupt Enable       *\/$/;"	m	struct:__anon285::__anon286
CKRDY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CKRDY:1;          \/*!< bit:      0  Clock Ready Interrupt Enable       *\/$/;"	m	struct:__anon287::__anon288
CKRDY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  CKRDY:1;          \/*!< bit:      0  Clock Ready                        *\/$/;"	m	struct:__anon75::__anon76
CKRDY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CKRDY:1;          \/*!< bit:      0  Clock Ready Interrupt Enable       *\/$/;"	m	struct:__anon71::__anon72
CKRDY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CKRDY:1;          \/*!< bit:      0  Clock Ready Interrupt Enable       *\/$/;"	m	struct:__anon73::__anon74
CL_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef CL_DATUM$/;"	d
CL_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t CL_DATUM   = textdatum_t::middle_left;$/;"	m	namespace:lgfx::v0::textdatum
CL_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef CL_DATUM$/;"	d
CL_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t CL_DATUM   = textdatum_t::middle_left;$/;"	m	namespace:lgfx::v1::textdatum
CMCC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CMCC_:1;          \/*!< bit:      8  CMCC AHB Clock Mask                *\/$/;"	m	struct:__anon295::__anon296
CMCC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CMCC_:1;          \/*!< bit:      8  CMCC AHB Clock Mask                *\/$/;"	m	struct:__anon81::__anon82
CMD	src/lgfx/v0/panel/Panel_HX8357.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_HX8357B
CMD	src/lgfx/v0/panel/Panel_HX8357.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_HX8357D
CMD	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_ILI9163
CMD	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^    struct CMD : public PanelIlitekCommon::CommandCommon$/;"	s	struct:lgfx::v0::Panel_ILI9341
CMD	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^    struct CMD : public PanelIlitekCommon::CommandCommon$/;"	s	struct:lgfx::v0::Panel_ILI9342
CMD	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_ILI9481
CMD	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_ILI9486
CMD	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_ILI9488
CMD	src/lgfx/v0/panel/Panel_ST7735.hpp	/^    struct CMD : public PanelIlitekCommon::CommandCommon$/;"	s	struct:lgfx::v0::Panel_ST7735
CMD	src/lgfx/v0/panel/Panel_ST7789.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_ST7789
CMD	src/lgfx/v0/panel/Panel_ST7796.hpp	/^    struct CMD : public CommandCommon$/;"	s	struct:lgfx::v0::Panel_ST7796
CMD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CMD:3;            \/*!< bit:  5.. 7  Command                            *\/$/;"	m	struct:__anon348::__anon349
CMD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  CMD:3;            \/*!< bit:  5.. 7  Command                            *\/$/;"	m	struct:__anon350::__anon351
CMD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CMD:3;            \/*!< bit:  5.. 7  Command                            *\/$/;"	m	struct:__anon134::__anon135
CMD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  CMD:3;            \/*!< bit:  5.. 7  Command                            *\/$/;"	m	struct:__anon136::__anon137
CMDLOCK	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t CMDLOCK = 0xFD;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
CMD_ADJCTL3	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_ADJCTL3 = 0xF7;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_ADJCTL3	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_ADJCTL3 = 0xF7;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_BRIGHTNESS	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_BRIGHTNESS   = 0x22; \/\/ 2Byte バックライト data[1]==明るさ 0~255$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_CASET	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_CASET   = 0x2A;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_CASET	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_CASET        = 0x2A; \/\/ 5Byte X方向の範囲選択 data[1~2]==XS  data[3~4]==XE$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_CASET	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_CASET        = 0x2A; \/\/ 3Byte X方向の範囲選択 data[1]==XS  data[2]==XE$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_CASET	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_CASET   = 0x15;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_CASET	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_CASET   = 0x15;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_CHANGE_ADDR	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_CHANGE_ADDR  = 0xA0; \/\/ 4Byte i2cアドレス変更 [0]=0xA0 [1]=変更後のI2Cアドレス [2]=変更後のI2Cアドレスのビット反転値 [3]=0xA0$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_CHARGEPUMP	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_CHARGEPUMP  = 0x8D;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_CLOCKDIV	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_CLOCKDIV       = 0xB3;   \/\/!< Set display clock divide ratio\/oscillator frequency$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_CMDLOCK	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_CMDLOCK = 0xFD;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_CMDLOCK	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_CMDLOCK = 0xFD;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_COLMOD	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_COLMOD  = 0x3A;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_COLUMNADDR	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_COLUMNADDR  = 0x21;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_COMSCANDEC	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_COMSCANDEC          = 0xC8;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_COMSCANINC	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_COMSCANINC          = 0xC0;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_COMSCANINC	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_COMSCANINC  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_CONTRASTA	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_CONTRASTA      = 0x81;   \/\/!< Set contrast for color A$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_CONTRASTB	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_CONTRASTB      = 0x82;   \/\/!< Set contrast for color B$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_CONTRASTC	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_CONTRASTC      = 0x83;   \/\/!< Set contrast for color C$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_COPY	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_COPY           = 0x23;$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_COPYRECT	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_COPYRECT     = 0x23; \/\/13Byte 矩形範囲コピー [1~2]==XS [3~4]==YS [5~6]==XE [7~8]==YE [9~10]==DST_X [11~12]==DST_Y$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_COPYRECT	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_COPYRECT     = 0x23; \/\/ 7Byte 矩形範囲コピー [1]==XS [2]==YS [3]==XE [4]==YE [5]==DST_X [6]==DST_Y$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_CSCON	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_CSCON   = 0xF0; \/\/ Command Set Control$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_DCDC	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_DCDC                = 0xAD;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_DEACTIVATE_SCROLL	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_DEACTIVATE_SCROLL   = 0x2E;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_DFUNCTR	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_DFUNCTR	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_DFUNCTR	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    static constexpr uint8_t CMD_DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v1::Panel_ILI9342
CMD_DFUNCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_DFUNCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_DFUNCTR	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_DISPLAYALLOFF	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DISPLAYALLOFF  = 0xA6;   \/\/!< Set entire display OFF$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_DISPLAYALLON	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_DISPLAYALLON        = 0xA5;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_DISPLAYALLON	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DISPLAYALLON   = 0xA5;   \/\/!< Set entire display ON$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_DISPLAYALLON_RESUME	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_DISPLAYALLON_RESUME = 0xA4;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_DISPLAYOFF	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DISPLAYOFF     = 0xAE;   \/\/!< Display OFF (sleep mode)$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_DISPLAYOFFSET	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DISPLAYOFFSET  = 0xA2;   \/\/!< Set display offset$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_DISPLAYON	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DISPLAYON      = 0xAF;   \/\/!< Normal Brightness Display ON$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_DISPLAY_CTRL1	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_DISPLAY_CTRL1 = 0x07;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_DISPOFF	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_DISPOFF = 0x28;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_DISPOFF	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_DISPOFF = 0xA6;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_DISPOFF	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_DISPOFF = 0xA4;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_DISPON	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_DISPON  = 0x29;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_DISPON	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_DISPON  = 0xA4;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_DISPON	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_DISPON  = 0xA5;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_DISPONDIMMER	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DISPONDIMMER   = 0xAC;$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_DISP_OFF	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_DISP_OFF            = 0xAE;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_DISP_ON	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_DISP_ON             = 0xAF;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_DISSET5	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_DISSET5 = 0xB6;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_DOCA	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_DOCA    = 0xE8; \/\/ Display Output Ctrl Adjust $/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_DRAWLINE	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DRAWLINE       = 0x21;   \/\/!< Draw line$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_DRAWPIXEL	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL    = 0x60; \/\/ 5Byte ドット描画 [1~2]==X [3~4]==Y$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_DRAWPIXEL	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL    = 0x60; \/\/ 3Byte ドット描画 [1]==X [2]==Y$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_DRAWPIXEL_16	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_16 = 0x62; \/\/ 7Byte ドット描画 [1~2]==X [3~4]==Y [5~6]==RGB565$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_DRAWPIXEL_16	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_16 = 0x62; \/\/ 5Byte ドット描画 [1]==X [2]==Y [3~4]==RGB565$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_DRAWPIXEL_24	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_24 = 0x63; \/\/ 8Byte ドット描画 [1~2]==X [3~4]==Y [5~7]==RGB888$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_DRAWPIXEL_24	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_24 = 0x63; \/\/ 6Byte ドット描画 [1]==X [2]==Y [3~5]==RGB888$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_DRAWPIXEL_32	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_32 = 0x64; \/\/ 9Byte ドット描画 [1~2]==X [3~4]==Y [5~8]==ARGB8888$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_DRAWPIXEL_32	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_32 = 0x64; \/\/ 7Byte ドット描画 [1]==X [2]==Y [3~6]==ARGB8888$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_DRAWPIXEL_8	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_8  = 0x61; \/\/ 6Byte ドット描画 [1~2]==X [3~4]==Y [5  ]==RGB332$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_DRAWPIXEL_8	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_DRAWPIXEL_8  = 0x61; \/\/ 4Byte ドット描画 [1]==X [2]==Y [3  ]==RGB332$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_DRAWRECT	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_DRAWRECT       = 0x22;   \/\/!< Draw rectangle$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_ENTRY_MODE	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_ENTRY_MODE  = 0x03;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_ETMOD	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_ETMOD   = 0xB7;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_ETMOD	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_ETMOD   = 0xB7;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_ETMOD	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_ETMOD   = 0xB7;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_FILL	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_FILL           = 0x26;   \/\/!< Fill enable\/disable$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_FILLRECT	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_FILLRECT     = 0x68; \/\/ 9Byte 矩形塗潰 [1~2]==XS [3~4]==YS [5~6]==XE [7~8]==YE$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_FILLRECT	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_FILLRECT     = 0x68; \/\/ 5Byte 矩形塗潰 [1]==XS [2]==YS [3]==XE [4]==YE$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_FILLRECT_16	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_FILLRECT_16  = 0x6A; \/\/11Byte 矩形塗潰 [1~2]==XS [3~4]==YS [5~6]==XE [7~8]==YE [9~10]==RGB565$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_FILLRECT_16	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_FILLRECT_16  = 0x6A; \/\/ 7Byte 矩形塗潰 [1]==XS [2]==YS [3]==XE [4]==YE [5~6]==RGB565$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_FILLRECT_24	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_FILLRECT_24  = 0x6B; \/\/12Byte 矩形塗潰 [1~2]==XS [3~4]==YS [5~6]==XE [7~8]==YE [9~11]==RGB888$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_FILLRECT_24	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_FILLRECT_24  = 0x6B; \/\/ 8Byte 矩形塗潰 [1]==XS [2]==YS [3]==XE [4]==YE [5~7]==RGB888$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_FILLRECT_32	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_FILLRECT_32  = 0x6C; \/\/13Byte 矩形塗潰 [1~2]==XS [3~4]==YS [5~6]==XE [7~8]==YE [9~12]==ARGB8888$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_FILLRECT_32	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_FILLRECT_32  = 0x6C; \/\/ 9Byte 矩形塗潰 [1]==XS [2]==YS [3]==XE [4]==YE [5~8]==ARGB8888$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_FILLRECT_8	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_FILLRECT_8   = 0x69; \/\/10Byte 矩形塗潰 [1~2]==XS [3~4]==YS [5~6]==XE [7~8]==YE [9  ]==RGB332$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_FILLRECT_8	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_FILLRECT_8   = 0x69; \/\/ 6Byte 矩形塗潰 [1]==XS [2]==YS [3]==XE [4]==YE [5  ]==RGB332$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_FRCTR2	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_FRCTR2   = 0xC6;      \/\/ FR Control 2$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_FRMCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_FRMCTR = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ILI9481
CMD_FRMCTR1	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_FRMCTR1	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_FRMCTR1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_FRMCTR1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_FRMCTR1	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_FRMCTR1	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_FRMCTR2	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_FRMCTR2	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_FRMCTR2	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_FRMCTR2	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_FRMCTR2	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_FRMCTR2	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_FRMCTR3	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_FRMCTR3	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_FRMCTR3	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_FRMCTR3	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_FRMCTR3	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_FRMCTR3	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_GAMMASET	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_GAMMASET= 0x26;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_GCTRL	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_GCTRL    = 0xB7;      \/\/ Gate control$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_GETSCANLINE	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_GETSCANLINE= 0x45;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_GMCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_GMCTR  = 0xC8;$/;"	m	struct:lgfx::v1::Panel_ILI9481
CMD_GMCTRN1	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction (E1h)$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_GMCTRN1	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction (E1h)$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_GMCTRN1	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    static constexpr uint8_t CMD_GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction (E1h)$/;"	m	struct:lgfx::v1::Panel_ILI9342
CMD_GMCTRN1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_GMCTRN1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_GMCTRN1	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_GMCTRN1 = 0xE1;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_GMCTRN1	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_GMCTRP1	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction (E0h)$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_GMCTRP1	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction (E0h)$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_GMCTRP1	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    static constexpr uint8_t CMD_GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction (E0h)$/;"	m	struct:lgfx::v1::Panel_ILI9342
CMD_GMCTRP1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_GMCTRP1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_GMCTRP1	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_GMCTRP1 = 0xE0;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_GMCTRP1	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_H_ADDR1	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_H_ADDR1 = 0x36;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_H_ADDR2	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_H_ADDR2 = 0x37;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_IDMOFF	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_IDMOFF  = 0x38;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_IDMON	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_IDMON   = 0x39;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_IDXRD	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_IDXRD   = 0xDD; \/\/ ILI9341 only, indexed control register read$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_IFCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_IFCTR  = 0xC6;$/;"	m	struct:lgfx::v1::Panel_ILI9481
CMD_INIT_DELAY	src/lgfx/v0/panel/PanelCommon.hpp	/^  static constexpr uint8_t CMD_INIT_DELAY = 0x80;$/;"	m	namespace:lgfx::v0
CMD_INIT_DELAY	src/lgfx/v1/panel/Panel_Device.hpp	/^    static constexpr uint8_t CMD_INIT_DELAY = 0x80;$/;"	m	struct:lgfx::v1::Panel_Device
CMD_INVCTR	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_INVCTR  = 0xB4;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_INVCTR	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_INVCTR  = 0xB4;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_INVCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_INVCTR  = 0xB4;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_INVCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_INVCTR  = 0xB4;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_INVCTR	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_INVCTR  = 0xB4;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_INVCTR	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_INVCTR  = 0xB4;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_INVERTDISPLAY	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_INVERTDISPLAY       = 0xA7;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_INVERTDISPLAY	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_INVERTDISPLAY  = 0xA7;   \/\/!< Invert display$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_INVOFF	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_INVOFF  = 0x20;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_INVOFF	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_INVOFF       = 0x20; \/\/ 1Byte 色反転を解除;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_INVOFF	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_INVOFF  = 0xA4;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_INVOFF	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_INVOFF  = 0xA6;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_INVON	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_INVON   = 0x21;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_INVON	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_INVON        = 0x21; \/\/ 1Byte 色反転を有効;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_INVON	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_INVON   = 0xA7;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_INVON	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_INVON   = 0xA7;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_LCMCTRL	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_LCMCTRL  = 0xC0;      \/\/ LCM control$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_MADCTL	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_MADCTL  = 0x36;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_MADCTL	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_MADCTL  = 0xA0;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_MADCTL	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_MADCTL  = 0xA0;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_MASTERCURRENT	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_MASTERCURRENT  = 0x87;   \/\/!< Master current control$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_MEMORYMODE	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_MEMORYMODE  = 0x20;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_NOP	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_NOP     = 0x00;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_NOP	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_NOP          = 0x00; \/\/ 1Byte 何もしない;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_NOP	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_NOP          = 0x00; \/\/ 1Byte 何もしない;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_NOP	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_NOP     = 0xE3;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_NOP	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_NOP            = 0xE3;$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_NOP	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_NOP     = 0xE3;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_NORMALDISPLAY	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_NORMALDISPLAY       = 0xA6;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_NORMALDISPLAY	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_NORMALDISPLAY  = 0xA4;   \/\/!< Set display to normal mode$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_NORON	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_NORON   = 0x13;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_NVGAMCTRL	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_NVGAMCTRL= 0xE1;      \/\/ Negative voltage gamma control$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_OUTPUT_CTRL	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_OUTPUT_CTRL = 0x01;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_PAGEADDR	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_PAGEADDR            = 0x22;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_PAGEADDR	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_PAGEADDR    = 0x22;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_PAGEADDRESSINGMODE	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_PAGEADDRESSINGMODE  = 0x20;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_PASET	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_PASET   = 0x2B;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_PASET	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_PASET   = 0x75;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_PASET	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_PASET   = 0x75;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_PIXSET	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_PIXSET  = 0x3A;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_PNLDRV	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PNLDRV = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ILI9481
CMD_PORCTRL	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_PORCTRL  = 0xB2;      \/\/ Porch control$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_POWERMODE	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_POWERMODE      = 0xB0;   \/\/!< Power save mode$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_POWER_CTRL1	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_POWER_CTRL1 = 0x10;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_POWER_CTRL2	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_POWER_CTRL2 = 0x11;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_POWER_CTRL3	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_POWER_CTRL3 = 0x12;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_POWER_CTRL4	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_POWER_CTRL4 = 0x13;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_POWER_CTRL5	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_POWER_CTRL5 = 0x14;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_PRECHARGE	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_PRECHARGE      = 0xB1;   \/\/!< Phase 1 and 2 period adjustment$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_PRECHARGEA	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_PRECHARGEA     = 0x8A;   \/\/!< Set second pre-charge speed for color A$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_PRECHARGEB	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_PRECHARGEB     = 0x8B;   \/\/!< Set second pre-charge speed for color B$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_PRECHARGEC	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_PRECHARGEC     = 0x8C;   \/\/!< Set second pre-charge speed for color C$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_PRECHARGELEVEL	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_PRECHARGELEVEL = 0xBB;   \/\/!< Set pre-charge voltage$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_PTLON	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_PTLON   = 0x12;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_PVGAMCTRL	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_PVGAMCTRL= 0xE0;      \/\/ Positive voltage gamma control$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_PWCTR1	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_PWCTR1	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_PWCTR1	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    static constexpr uint8_t CMD_PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ILI9342
CMD_PWCTR1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_PWCTR1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_PWCTR1	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_PWCTR1	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_PWCTR2	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_PWCTR2	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_PWCTR2	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    static constexpr uint8_t CMD_PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v1::Panel_ILI9342
CMD_PWCTR2	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_PWCTR2	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_PWCTR2	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_PWCTR2	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_PWCTR3	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_PWCTR3	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_PWCTR3	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_PWCTR3	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_PWCTR3	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_PWCTR3	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_PWCTR4	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_PWCTR4	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_PWCTR4	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_PWCTR4	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_PWCTR4	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_PWCTR4	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_PWCTR5	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_PWCTR5	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_PWCTR5	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_PWCTR5	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_PWCTR5	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_PWCTR5	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_PWCTR6	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_PWCTR6  = 0xFC;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_PWCTRL1	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_PWCTRL1  = 0xD0;      \/\/ Power control 1$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_PWSET	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWSET  = 0xD0;$/;"	m	struct:lgfx::v1::Panel_ILI9481
CMD_PWSETN	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_PWSETN = 0xD2;$/;"	m	struct:lgfx::v1::Panel_ILI9481
CMD_RAMRD	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_RAMRD   = 0x2E;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_RAMRD	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_RAMRD   = 0x5D;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_RAMRD	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_RAMRD   = 0x5D;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_RAMWR	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_RAMWR = 0x22;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_RAMWR	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_RAMWR   = 0x2C;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_RAMWR	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_RAMWR   = 0x5C;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_RAM_FILL	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_RAM_FILL     = 0x50; \/\/ 1Byte 現在の描画色で選択範囲全塗り;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_RASET	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_RASET   = 0x2B;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_RASET	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_RASET        = 0x2B; \/\/ 5Byte Y方向の範囲選択 data[1~2]==YS  data[3~4]==YE$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_RASET	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_RASET        = 0x2B; \/\/ 3Byte Y方向の範囲選択 data[1]==YS  data[2]==YE$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_RASET	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_RASET   = 0x75;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_RASET	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_RASET   = 0x75;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_RDDID	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_RDDID   = 0x04;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_RDDST	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_RDDST   = 0x09;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_RDID1	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_RDID1   = 0xDA;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_RDID2	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_RDID2   = 0xDB;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_RDID3	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_RDID3   = 0xDC;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_RDID4	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_RDID4   = 0xDD;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_RDINDEX	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_RDINDEX = 0xD9; \/\/ ili9341$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_READMODIFYWRITE	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_READMODIFYWRITE     = 0xE0;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_READMODIFYWRITE_END	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_READMODIFYWRITE_END = 0xEE;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_READ_BUFCOUNT	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_READ_BUFCOUNT= 0x09; \/\/ 1Byte コマンドバッファの空き取得。回答は1Byte、受信可能なコマンド数が返される。数字が小さいほどバッファの余裕がない。;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_READ_ID	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_READ_ID      = 0x04; \/\/ 1Byte ID読出し  スレーブからの回答は4Byte ([0]=0x48 [1]=0x44 [2]=メジャーバージョン [3]=マイナーバージョン);$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_READ_ID	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_READ_ID      = 0x04; \/\/ 1Byte ID読出し  スレーブからの回答は4Byte (0x77 0x89 0x00 0x?? (最後の1バイトはファームウェアバージョン));$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_READ_RAW	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_READ_RAW     = 0x80;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_READ_RAW	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_READ_RAW     = 0x80;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_READ_RAW_16	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_READ_RAW_16  = 0x82; \/\/ 1Byte RGB565のピクセルデータを読出し;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_READ_RAW_16	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_READ_RAW_16  = 0x82; \/\/ 1Byte RGB565のピクセルデータを読出し;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_READ_RAW_24	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_READ_RAW_24  = 0x83; \/\/ 1Byte RGB888のピクセルデータを読出し;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_READ_RAW_24	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_READ_RAW_24  = 0x83; \/\/ 1Byte RGB888のピクセルデータを読出し;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_READ_RAW_8	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_READ_RAW_8   = 0x81; \/\/ 1Byte RGB332のピクセルデータを読出し;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_READ_RAW_8	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_READ_RAW_8   = 0x81; \/\/ 1Byte RGB332のピクセルデータを読出し;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_RESET	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_RESET        = 0xFF; \/\/ 4Byte リセット(再起動)         [0]=0xFF [1]=0x77 [2]=0x89 [3]=0xFF$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_ROTATE	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_ROTATE       = 0x36; \/\/ 2Byte 回転処理 [1]==回転方向 0:通常 1:右90度 2:180度 3:270度 4~7は0~3の上下反転;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SCREEN_ORIGIN	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_SCREEN_ORIGIN= 0x19; \/\/ 6Byte 表示起点座標 [1~2]=X座標 [3~4]=Y座標 [5]=チェックサム ( ~([0]+[1]+[2]+[3]+[4]) );$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_SCREEN_SCALING	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_SCREEN_SCALING=0x18; \/\/ 8Byte 表示倍率設定 [1]=横倍率 [2]=縦倍率 [3~4]=横論理解像度 [5~6]=縦論理解像度 [7]=チェックサム ( ~([0]+[1]+[2]+[3]+[4]+[5]+[6]) );$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_SEGREMAP	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SEGREMAP            = 0xA0;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SEGREMAP	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SEGREMAP    = 0xA0;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_SETC	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETC    = 0xB9;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETCLKDIV	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETCLKDIV   = 0xD5;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_SETCOLUMN	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_SETCOLUMN      = 0x15;   \/\/!< Set column address$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_SETCOM	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETCOM  = 0xB6;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETCOMPINS	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETCOMPINS          = 0xDA;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETCOMPINS	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETCOMPINS  = 0xDA;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_SETCONTRAST	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETCONTRAST         = 0x81;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETCONTRAST	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETCONTRAST = 0x81;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_SETCYC	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETCYC  = 0xB4;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETDISPLAYCLOCKDIV	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETDISPLAYCLOCKDIV  = 0xD5;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETDISPLAYFRAME	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETDISPLAYFRAME   = 0xC5;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETDISPLAYOFFSET	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETDISPLAYOFFSET    = 0xD3;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETDISPMODE	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETDISPMODE       = 0xB4;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETDISPSTARTLINE	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETDISPSTARTLINE    = 0xDC;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETEXTC	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    static constexpr uint8_t CMD_SETEXTC = 0xC8;$/;"	m	struct:lgfx::v1::Panel_ILI9342
CMD_SETEXTC	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETEXTC           = 0xB0;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETGAMMA	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETGAMMA          = 0xC8;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETGAMMA	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETGAMMA= 0xE0;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETHIGHCOLUMN	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETHIGHCOLUMN       = 0x10;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETLOWCOLUMN	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETLOWCOLUMN        = 0x00;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETMASTER	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_SETMASTER      = 0xAD;   \/\/!< Set master configuration$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_SETMULTIPLEX	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETMULTIPLEX        = 0xA8;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_SETMULTIPLEX	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_SETMULTIPLEX   = 0xA8;   \/\/!< Set multiplex ratio$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_SETOFFSET	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETOFFSET   = 0xD3;$/;"	m	struct:lgfx::v1::Panel_SSD1306
CMD_SETOSC	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETOSC  = 0xB0;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETPAGEADDR	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETPAGEADDR         = 0xB0;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_SETPANEL	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETPANEL= 0xCC;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETPANELRELATED	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETPANELRELATED   = 0xE9;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETPOWER	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETPOWER          = 0xD0;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETPRECHARGE	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETPRECHARGE        = 0xD9;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_SETPWR1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETPWR1 = 0xB1;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETPWRNORMAL	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETPWRNORMAL      = 0xD2;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETREMAP	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_SETREMAP       = 0xA0;   \/\/!< Set re-map & data format$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_SETRGB	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETRGB  = 0xB3;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETROW	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_SETROW         = 0x75;   \/\/!< Set row adress$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_SETSTARTLINE	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETSTARTLINE        = 0x40;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_SETSTBA	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETSTBA = 0xC0;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_SETVCOM	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SETVCOM           = 0xD1;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SETVCOMDETECT	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_SETVCOMDETECT       = 0xDB;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
CMD_SET_BYTESWAP	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_BYTESWAP = 0x3A; \/\/ 2Byte data[1] 色データのバイトスワップ転送の有無を指定。デフォルトは0 \/ 0:バイトスワップなし \/ 1:バイトスワップあり;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SET_COLOR	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_COLOR    = 0x50;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SET_COLOR_16	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_COLOR_16 = 0x52; \/\/ 3Byte 描画色をRGB565で指定;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SET_COLOR_24	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_COLOR_24 = 0x53; \/\/ 4Byte 描画色をRGB888で指定;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SET_COLOR_32	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_COLOR_32 = 0x54; \/\/ 5Byte 描画色をARGB8888で指定;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SET_COLOR_8	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_COLOR_8  = 0x51; \/\/ 2Byte 描画色をRGB332で指定;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SET_PANEL_DRIVING	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_SET_PANEL_DRIVING = 0xC0;$/;"	m	struct:lgfx::v1::Panel_HX8357B
CMD_SET_POWER	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_POWER    = 0x38; \/\/ 2Byte data[1] 0:低速ローパワー \/ 1:通常 \/ 2:高速ハイパワー;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SET_SLEEP	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_SET_SLEEP    = 0x39; \/\/ 2Byte data[1] 0:スリープ解除 \/ 1:スリープ開始;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_SLPIN	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_SLPIN   = 0x10;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_SLPIN	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_SLPIN   = 0xAE;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_SLPIN	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_SLPIN   = 0xAE;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_SLPOUT	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_SLPOUT  = 0x11;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_SLPOUT	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_SLPOUT  = 0xAF;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_SLPOUT	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_SLPOUT  = 0xAF;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_STARTLINE	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_STARTLINE = 0xA1;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_STARTLINE	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_STARTLINE      = 0xA1;   \/\/!< Set display start line$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_STARTLINE	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_STARTLINE = 0xA1;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_SWRESET	src/lgfx/v1/panel/Panel_LCD.hpp	/^    static constexpr uint8_t CMD_SWRESET = 0x01;$/;"	m	struct:lgfx::v1::Panel_LCD
CMD_SWRESET	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    static constexpr uint8_t CMD_SWRESET = 0x01;$/;"	m	struct:lgfx::v1::Panel_SSD1327
CMD_SWRESET	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    static constexpr uint8_t CMD_SWRESET = 0x01;$/;"	m	class:lgfx::v1::Panel_SSD1351
CMD_TEARLINE	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_TEARLINE= 0x44;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_TEON	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_TEON    = 0x35;$/;"	m	struct:lgfx::v1::Panel_HX8357D
CMD_UPDATE_BEGIN	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_UPDATE_BEGIN = 0xF0; \/\/ 4Byte ファームウェア更新開始   [0]=0xF0 [1]=0x77 [2]=0x89 [3]=0xF0$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_UPDATE_DATA	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_UPDATE_DATA  = 0xF1; \/\/ 4Byte ファームウェアデータ送信 [0]=0xF1 [1]=0x77 [2]=0x89 [3]=0xF1$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_UPDATE_END	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_UPDATE_END   = 0xF2; \/\/ 4Byte ファームウェア更新完了   [0]=0xF2 [1]=0x77 [2]=0x89 [3]=0xF2$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_VCOMH	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    static constexpr uint8_t CMD_VCOMH          = 0xBE;   \/\/!< Set Vcomh voltge$/;"	m	struct:lgfx::v1::Panel_SSD1331
CMD_VCOMS	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_VCOMS    = 0xBB;      \/\/ VCOMS setting$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_VDVSET	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_VDVSET   = 0xC4;      \/\/ VDV setting$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_VDVVRHEN	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_VDVVRHEN = 0xC2;      \/\/ VDV and VRH command enable$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_VERTADDRESSINGMODE	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    static constexpr uint8_t CMD_VERTADDRESSINGMODE  = 0x21;$/;"	m	struct:lgfx::v1::Panel_SH110x
CMD_VIDEO_TIMING_H	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_VIDEO_TIMING_H = 0xB1; \/\/ 10Byte 水平信号のビデオタイミングパラメータ設定$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_VIDEO_TIMING_V	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_VIDEO_TIMING_V = 0xB0; \/\/ 10Byte 垂直信号のビデオタイミングパラメータ設定$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_VMCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_VMCTR   = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ILI9488
CMD_VMCTR	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_VMCTR  = 0xD1;$/;"	m	struct:lgfx::v1::Panel_ILI9481
CMD_VMCTR	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    static constexpr uint8_t CMD_VMCTR   = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ST7796
CMD_VMCTR1	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_VMCTR1	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_VMCTR1	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    static constexpr uint8_t CMD_VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ILI9342
CMD_VMCTR1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_VMCTR1	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    static constexpr uint8_t CMD_VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v1::Panel_ST7735
CMD_VMCTR2	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    static constexpr uint8_t CMD_VMCTR2  = 0xC7;$/;"	m	struct:lgfx::v1::Panel_ILI9163
CMD_VMCTR2	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    static constexpr uint8_t CMD_VMCTR2  = 0xC7;$/;"	m	struct:lgfx::v1::Panel_ILI9341
CMD_VMCTR2	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    static constexpr uint8_t CMD_VMCTR2  = 0xC7;$/;"	m	struct:lgfx::v1::Panel_ILI9486
CMD_VRHS	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    static constexpr uint8_t CMD_VRHS     = 0xC3;      \/\/ VRH set$/;"	m	struct:lgfx::v1::Panel_ST7789
CMD_V_ADDR1	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_V_ADDR1 = 0x38;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_V_ADDR2	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    static constexpr uint8_t CMD_V_ADDR2 = 0x39;$/;"	m	struct:lgfx::v1::Panel_ILI9225
CMD_WRITE_RAW	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW    = 0x40;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_WRITE_RAW	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW    = 0x40;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RAW_16	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_16 = 0x42; \/\/ 不定長 RGB565   2Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_WRITE_RAW_16	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_16 = 0x42; \/\/ 不定長 RGB565   2Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RAW_24	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_24 = 0x43; \/\/ 不定長 RGB888   3Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_WRITE_RAW_24	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_24 = 0x43; \/\/ 不定長 RGB888   3Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RAW_32	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_32 = 0x44; \/\/ 不定長 ARGB8888 4Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_WRITE_RAW_32	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_32 = 0x44; \/\/ 不定長 ARGB8888 4Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RAW_8	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_8  = 0x41; \/\/ 不定長 RGB332   1Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_WRITE_RAW_8	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_8  = 0x41; \/\/ 不定長 RGB332   1Byteのピクセルデータを連続送信;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RAW_A	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_A  = 0x45; \/\/ 不定長 A8       1Byteのピクセルデータを連続送信(アルファチャネルのみ、描画色は最後に使用したものを再利用する);$/;"	m	struct:lgfx::v1::Panel_M5HDMI
CMD_WRITE_RAW_A	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RAW_A  = 0x45; \/\/ 不定長 A8       1Byteのピクセルデータを連続送信(アルファチャネルのみ、描画色は最後に使用したものを再利用する);$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RLE	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RLE    = 0x48;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RLE_16	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RLE_16 = 0x4A; \/\/ 不定長 RGB565   2Byteのピクセルデータを連続送信(RLE圧縮);$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RLE_24	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RLE_24 = 0x4B; \/\/ 不定長 RGB888   3Byteのピクセルデータを連続送信(RLE圧縮);$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RLE_32	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RLE_32 = 0x4C; \/\/ 不定長 ARGB8888 4Byteのピクセルデータを連続送信(RLE圧縮);$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RLE_8	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RLE_8  = 0x49; \/\/ 不定長 RGB332   1Byteのピクセルデータを連続送信(RLE圧縮);$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
CMD_WRITE_RLE_A	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t CMD_WRITE_RLE_A  = 0x4D; \/\/ 不定長 A8       1Byteのピクセルデータを連続送信(RLE圧縮 アルファチャネルのみ、描画色は最後に使用したものを再利用する);$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
COLMOD	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t COLMOD  = 0x3A; static constexpr uint8_t PIXSET = 0x3A;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
COMPONENT_ADD_INCLUDEDIRS	component.mk	/^COMPONENT_ADD_INCLUDEDIRS := src$/;"	m
COMPONENT_SRCDIRS	component.mk	/^COMPONENT_SRCDIRS := src $/;"	m
COPEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t COPEN:2;          \/*!< bit: 20..21  Capture On Pin x Enable            *\/$/;"	m	struct:__anon345::__anon347
COPEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t COPEN:2;          \/*!< bit: 20..21  Capture On Pin x Enable            *\/$/;"	m	struct:__anon131::__anon133
COPEN0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t COPEN0:1;         \/*!< bit:     20  Capture On Pin 0 Enable            *\/$/;"	m	struct:__anon345::__anon346
COPEN0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t COPEN0:1;         \/*!< bit:     20  Capture On Pin 0 Enable            *\/$/;"	m	struct:__anon131::__anon132
COPEN1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t COPEN1:1;         \/*!< bit:     21  Capture On Pin 1 Enable            *\/$/;"	m	struct:__anon345::__anon346
COPEN1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t COPEN1:1;         \/*!< bit:     21  Capture On Pin 1 Enable            *\/$/;"	m	struct:__anon131::__anon132
COUNT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t COUNT:16;         \/*!< bit:  0..15  Counter Value                      *\/$/;"	m	struct:__anon377::__anon378
COUNT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t COUNT:1;          \/*!< bit:      4  Counter                            *\/$/;"	m	struct:__anon374::__anon375
COUNT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t COUNT:32;         \/*!< bit:  0..31  Counter Value                      *\/$/;"	m	struct:__anon379::__anon380
COUNT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  COUNT:8;          \/*!< bit:  0.. 7  Counter Value                      *\/$/;"	m	struct:__anon381::__anon382
COUNT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_COUNT_Type      COUNT;       \/**< \\brief Offset: 0x14 (R\/W  8) COUNT8 Count *\/$/;"	m	struct:__anon395
COUNT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t COUNT:16;         \/*!< bit:  0..15  Counter Value                      *\/$/;"	m	struct:__anon163::__anon164
COUNT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t COUNT:1;          \/*!< bit:      4  Counter                            *\/$/;"	m	struct:__anon160::__anon161
COUNT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t COUNT:32;         \/*!< bit:  0..31  Counter Value                      *\/$/;"	m	struct:__anon165::__anon166
COUNT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  COUNT:8;          \/*!< bit:  0.. 7  Counter Value                      *\/$/;"	m	struct:__anon167::__anon168
COUNT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_COUNT_Type      COUNT;       \/**< \\brief Offset: 0x14 (R\/W  8) COUNT8 Count *\/$/;"	m	struct:__anon181
COUNT8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       TcCount8                  COUNT8;      \/**< \\brief Offset: 0x00 8-bit Counter Mode *\/$/;"	m	union:__anon396
COUNT8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       TcCount8                  COUNT8;      \/**< \\brief Offset: 0x00 8-bit Counter Mode *\/$/;"	m	union:__anon182
CP437_SWITCH	src/lgfx/v0/lgfx_common.hpp	/^    #undef CP437_SWITCH$/;"	d
CP437_SWITCH	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr attribute_t CP437_SWITCH = attribute_t::cp437_switch;$/;"	m	namespace:lgfx::v0::attribute
CP437_SWITCH	src/lgfx/v1/misc/enum.hpp	/^    #undef CP437_SWITCH$/;"	d
CP437_SWITCH	src/lgfx/v1/misc/enum.hpp	/^    static constexpr attribute_t CP437_SWITCH = attribute_t::cp437_switch;$/;"	m	namespace:lgfx::v1::attribute
CPHA	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CPHA:1;           \/*!< bit:     28  Clock Phase                        *\/$/;"	m	struct:__anon427::__anon428
CPHA	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CPHA:1;           \/*!< bit:     28  Clock Phase                        *\/$/;"	m	struct:__anon213::__anon214
CPOL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CPOL:1;           \/*!< bit:     29  Clock Polarity                     *\/$/;"	m	struct:__anon427::__anon428
CPOL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CPOL:1;           \/*!< bit:     29  Clock Polarity                     *\/$/;"	m	struct:__anon213::__anon214
CPUDIV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_CPUDIV_Type          CPUDIV;      \/**< \\brief Offset: 0x05 (R\/W  8) CPU Clock Division *\/$/;"	m	struct:__anon305
CPUDIV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_CPUDIV_Type          CPUDIV;      \/**< \\brief Offset: 0x05 (R\/W  8) CPU Clock Division *\/$/;"	m	struct:__anon91
CR0_DSS_16	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    static constexpr uint32_t CR0_DSS_16   = 0b1111U;$/;"	m	class:lgfx::v1::Bus_SPI
CR0_DSS_8	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    static constexpr uint32_t CR0_DSS_8    = 0b0111U;$/;"	m	class:lgfx::v1::Bus_SPI
CR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef CR_DATUM$/;"	d
CR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t CR_DATUM   = textdatum_t::middle_right;$/;"	m	namespace:lgfx::v0::textdatum
CR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef CR_DATUM$/;"	d
CR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t CR_DATUM   = textdatum_t::middle_right;$/;"	m	namespace:lgfx::v1::textdatum
CSCON	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t CSCON   = 0xF0; \/\/ Command Set Control$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
CTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO CCL_CTRL_Type             CTRL;        \/**< \\brief Offset: 0x0 (R\/W  8) Control *\/$/;"	m	struct:__anon312
CTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_CTRL_Type            CTRL;        \/**< \\brief Offset: 0x24 (R\/W 32) Control *\/$/;"	m	struct:__anon425
CTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO CCL_CTRL_Type             CTRL;        \/**< \\brief Offset: 0x0 (R\/W  8) Control *\/$/;"	m	struct:__anon98
CTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_CTRL_Type            CTRL;        \/**< \\brief Offset: 0x24 (R\/W 32) Control *\/$/;"	m	struct:__anon211
CTRLA	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_CTRLA_Type          CTRLA;       \/**< \\brief Offset: 0x000 (R\/W  8) Control *\/$/;"	m	struct:__anon344
CTRLA	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO GCLK_CTRLA_Type           CTRLA;       \/**< \\brief Offset: 0x00 (R\/W  8) Control *\/$/;"	m	struct:__anon284
CTRLA	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_CTRLA_Type     CTRLA;       \/**< \\brief Offset: 0x00 (R\/W 32) SPI Control A *\/$/;"	m	struct:__anon453
CTRLA	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_CTRLA_Type             CTRLA;       \/**< \\brief Offset: 0x00 (R\/W 32) Control A *\/$/;"	m	struct:__anon395
CTRLA	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_CTRLA_Type          CTRLA;       \/**< \\brief Offset: 0x000 (R\/W  8) Control *\/$/;"	m	struct:__anon130
CTRLA	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO GCLK_CTRLA_Type           CTRLA;       \/**< \\brief Offset: 0x00 (R\/W  8) Control *\/$/;"	m	struct:__anon70
CTRLA	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_CTRLA_Type     CTRLA;       \/**< \\brief Offset: 0x00 (R\/W 32) SPI Control A *\/$/;"	m	struct:__anon239
CTRLA	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_CTRLA_Type             CTRLA;       \/**< \\brief Offset: 0x00 (R\/W 32) Control A *\/$/;"	m	struct:__anon181
CTRLB	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CTRLB:1;          \/*!< bit:      2  CTRLB                              *\/$/;"	m	struct:__anon374::__anon375
CTRLB	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t CTRLB:1;          \/*!< bit:      2  CTRLB Synchronization Busy         *\/$/;"	m	struct:__anon443::__anon444
CTRLB	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_CTRLB_Type     CTRLB;       \/**< \\brief Offset: 0x04 (R\/W 32) SPI Control B *\/$/;"	m	struct:__anon453
CTRLB	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CTRLB:1;          \/*!< bit:      2  CTRLB                              *\/$/;"	m	struct:__anon160::__anon161
CTRLB	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t CTRLB:1;          \/*!< bit:      2  CTRLB Synchronization Busy         *\/$/;"	m	struct:__anon229::__anon230
CTRLB	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_CTRLB_Type     CTRLB;       \/**< \\brief Offset: 0x04 (R\/W 32) SPI Control B *\/$/;"	m	struct:__anon239
CTRLBCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_CTRLBCLR_Type          CTRLBCLR;    \/**< \\brief Offset: 0x04 (R\/W  8) Control B Clear *\/$/;"	m	struct:__anon395
CTRLBCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_CTRLBCLR_Type          CTRLBCLR;    \/**< \\brief Offset: 0x04 (R\/W  8) Control B Clear *\/$/;"	m	struct:__anon181
CTRLBSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_CTRLBSET_Type          CTRLBSET;    \/**< \\brief Offset: 0x05 (R\/W  8) Control B Set *\/$/;"	m	struct:__anon395
CTRLBSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_CTRLBSET_Type          CTRLBSET;    \/**< \\brief Offset: 0x05 (R\/W  8) Control B Set *\/$/;"	m	struct:__anon181
CTRLC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_CTRLC_Type     CTRLC;       \/**< \\brief Offset: 0x08 (R\/W 32) SPI Control C *\/$/;"	m	struct:__anon453
CTRLC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_CTRLC_Type     CTRLC;       \/**< \\brief Offset: 0x08 (R\/W 32) SPI Control C *\/$/;"	m	struct:__anon239
CYAN	src/LGFX_TFT_eSPI.hpp	/^    #undef CYAN$/;"	d
CYAN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int CYAN            = 0x07FF;      \/*   0, 255, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
C_BASELINE	src/lgfx/v0/lgfx_common.hpp	/^    #undef C_BASELINE$/;"	d
C_BASELINE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t C_BASELINE = textdatum_t::baseline_center;$/;"	m	namespace:lgfx::v0::textdatum
C_BASELINE	src/lgfx/v1/misc/enum.hpp	/^    #undef C_BASELINE$/;"	d
C_BASELINE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t C_BASELINE = textdatum_t::baseline_center;$/;"	m	namespace:lgfx::v1::textdatum
Ccl	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} Ccl;$/;"	t	typeref:struct:__anon312
Ccl	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} Ccl;$/;"	t	typeref:struct:__anon98
Channel	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       EvsysChannel              Channel[32]; \/**< \\brief Offset: 0x020 EvsysChannel groups [CHANNELS] *\/$/;"	m	struct:__anon344
Channel	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       EvsysChannel              Channel[32]; \/**< \\brief Offset: 0x020 EvsysChannel groups [CHANNELS] *\/$/;"	m	struct:__anon130
CheckAFSR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::CheckAFSR(LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_IT8951
ChipID	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      struct ChipID$/;"	s	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
Clip8	src/lgfx/utility/lgfx_tjpgd.c	/^static const uint8_t Clip8[1024] = {$/;"	v	file:
CommandCommon	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    struct CommandCommon {$/;"	s	struct:lgfx::v0::PanelIlitekCommon
CommandCommon	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    struct CommandCommon {$/;"	s	struct:lgfx::v0::Panel_SSD1351
DAC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DAC_:1;           \/*!< bit:      9  DAC APB Clock Enable               *\/$/;"	m	struct:__anon303::__anon304
DAC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DAC_:1;           \/*!< bit:      9  DAC APB Clock Enable               *\/$/;"	m	struct:__anon89::__anon90
DARKCYAN	src/LGFX_TFT_eSPI.hpp	/^    #undef DARKCYAN$/;"	d
DARKCYAN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int DARKCYAN        = 0x03EF;      \/*   0, 128, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
DARKGREEN	src/LGFX_TFT_eSPI.hpp	/^    #undef DARKGREEN$/;"	d
DARKGREEN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int DARKGREEN       = 0x03E0;      \/*   0, 128,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
DARKGREY	src/LGFX_TFT_eSPI.hpp	/^    #undef DARKGREY$/;"	d
DARKGREY	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int DARKGREY        = 0x7BEF;      \/* 128, 128, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
DATA	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DATA:32;          \/*!< bit:  0..31  Data Value                         *\/$/;"	m	struct:__anon449::__anon450
DATA	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_DATA_Type      DATA;        \/**< \\brief Offset: 0x28 (R\/W 32) SPI Data *\/$/;"	m	struct:__anon453
DATA	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DATA:32;          \/*!< bit:  0..31  Data Value                         *\/$/;"	m	struct:__anon235::__anon236
DATA	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_DATA_Type      DATA;        \/**< \\brief Offset: 0x28 (R\/W 32) SPI Data *\/$/;"	m	struct:__anon239
DATA32B	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DATA32B:1;        \/*!< bit:     24  Data 32 Bit                        *\/$/;"	m	struct:__anon431::__anon432
DATA32B	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DATA32B:1;        \/*!< bit:     24  Data 32 Bit                        *\/$/;"	m	struct:__anon217::__anon218
DBGCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_DBGCTRL_Type   DBGCTRL;     \/**< \\brief Offset: 0x30 (R\/W  8) SPI Debug Control *\/$/;"	m	struct:__anon453
DBGCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_DBGCTRL_Type           DBGCTRL;     \/**< \\brief Offset: 0x0F (R\/W  8) Debug Control *\/$/;"	m	struct:__anon395
DBGCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_DBGCTRL_Type   DBGCTRL;     \/**< \\brief Offset: 0x30 (R\/W  8) SPI Debug Control *\/$/;"	m	struct:__anon239
DBGCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_DBGCTRL_Type           DBGCTRL;     \/**< \\brief Offset: 0x0F (R\/W  8) Debug Control *\/$/;"	m	struct:__anon181
DBGPRINT	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^#define DBGPRINT(/;"	d	file:
DBGPRINT	src/lgfx/v1/platforms/rp2040/common.cpp	/^#define DBGPRINT(/;"	d	file:
DBGRUN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DBGRUN:1;         \/*!< bit:      0  Run During Debug                   *\/$/;"	m	struct:__anon372::__anon373
DBGRUN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DBGRUN:1;         \/*!< bit:      0  Run During Debug                   *\/$/;"	m	struct:__anon158::__anon159
DBGSTOP	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DBGSTOP:1;        \/*!< bit:      0  Debug Mode                         *\/$/;"	m	struct:__anon451::__anon452
DBGSTOP	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DBGSTOP:1;        \/*!< bit:      0  Debug Mode                         *\/$/;"	m	struct:__anon237::__anon238
DFUNCTR	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
DFUNCTR	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
DFUNCTR	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v0::Panel_ILI9342::CMD
DFUNCTR	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
DFUNCTR	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
DFUNCTR	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t DFUNCTR = 0xB6;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
DIPO	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DIPO:2;           \/*!< bit: 20..21  Data In Pinout                     *\/$/;"	m	struct:__anon427::__anon428
DIPO	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DIPO:2;           \/*!< bit: 20..21  Data In Pinout                     *\/$/;"	m	struct:__anon213::__anon214
DIR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DIR:32;           \/*!< bit:  0..31  Port Data Direction                *\/$/;"	m	struct:__anon397::__anon398
DIR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DIR:1;            \/*!< bit:      0  Counter Direction                  *\/$/;"	m	struct:__anon348::__anon349
DIR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DIR:1;            \/*!< bit:      0  Counter Direction                  *\/$/;"	m	struct:__anon350::__anon351
DIR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_DIR_Type             DIR;         \/**< \\brief Offset: 0x00 (R\/W 32) Data Direction *\/$/;"	m	struct:__anon425
DIR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DIR:32;           \/*!< bit:  0..31  Port Data Direction                *\/$/;"	m	struct:__anon183::__anon184
DIR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DIR:1;            \/*!< bit:      0  Counter Direction                  *\/$/;"	m	struct:__anon134::__anon135
DIR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DIR:1;            \/*!< bit:      0  Counter Direction                  *\/$/;"	m	struct:__anon136::__anon137
DIR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_DIR_Type             DIR;         \/**< \\brief Offset: 0x00 (R\/W 32) Data Direction *\/$/;"	m	struct:__anon211
DIRCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DIRCLR:32;        \/*!< bit:  0..31  Port Data Direction Clear          *\/$/;"	m	struct:__anon399::__anon400
DIRCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_DIRCLR_Type          DIRCLR;      \/**< \\brief Offset: 0x04 (R\/W 32) Data Direction Clear *\/$/;"	m	struct:__anon425
DIRCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DIRCLR:32;        \/*!< bit:  0..31  Port Data Direction Clear          *\/$/;"	m	struct:__anon185::__anon186
DIRCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_DIRCLR_Type          DIRCLR;      \/**< \\brief Offset: 0x04 (R\/W 32) Data Direction Clear *\/$/;"	m	struct:__anon211
DIRSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DIRSET:32;        \/*!< bit:  0..31  Port Data Direction Set            *\/$/;"	m	struct:__anon401::__anon402
DIRSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_DIRSET_Type          DIRSET;      \/**< \\brief Offset: 0x08 (R\/W 32) Data Direction Set *\/$/;"	m	struct:__anon425
DIRSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DIRSET:32;        \/*!< bit:  0..31  Port Data Direction Set            *\/$/;"	m	struct:__anon187::__anon188
DIRSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_DIRSET_Type          DIRSET;      \/**< \\brief Offset: 0x08 (R\/W 32) Data Direction Set *\/$/;"	m	struct:__anon211
DIRTGL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DIRTGL:32;        \/*!< bit:  0..31  Port Data Direction Toggle         *\/$/;"	m	struct:__anon403::__anon404
DIRTGL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_DIRTGL_Type          DIRTGL;      \/**< \\brief Offset: 0x0C (R\/W 32) Data Direction Toggle *\/$/;"	m	struct:__anon425
DIRTGL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DIRTGL:32;        \/*!< bit:  0..31  Port Data Direction Toggle         *\/$/;"	m	struct:__anon189::__anon190
DIRTGL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_DIRTGL_Type          DIRTGL;      \/**< \\brief Offset: 0x0C (R\/W 32) Data Direction Toggle *\/$/;"	m	struct:__anon211
DISPOFF	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t DISPOFF = 0x28;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
DISPOFF	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t DISPOFF = 0xA4;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
DISPON	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t DISPON  = 0x29;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
DISPON	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t DISPON  = 0xA5;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
DISSET5	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t DISSET5 = 0xB6;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
DIV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DIV:16;           \/*!< bit: 16..31  Division Factor                    *\/$/;"	m	struct:__anon280::__anon281
DIV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DIV:8;            \/*!< bit:  0.. 7  CPU Clock Division Factor          *\/$/;"	m	struct:__anon291::__anon292
DIV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DIV:8;            \/*!< bit:  0.. 7  Low-Power Clock Division Factor    *\/$/;"	m	struct:__anon293::__anon294
DIV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DIV:16;           \/*!< bit: 16..31  Division Factor                    *\/$/;"	m	struct:__anon66::__anon67
DIV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DIV:8;            \/*!< bit:  0.. 7  CPU Clock Division Factor          *\/$/;"	m	struct:__anon77::__anon78
DIV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DIV:8;            \/*!< bit:  0.. 7  Low-Power Clock Division Factor    *\/$/;"	m	struct:__anon79::__anon80
DIVSEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DIVSEL:1;         \/*!< bit:     12  Divide Selection                   *\/$/;"	m	struct:__anon280::__anon281
DIVSEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DIVSEL:1;         \/*!< bit:     12  Divide Selection                   *\/$/;"	m	struct:__anon66::__anon67
DMA1_Stream4_IRQHandler	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void DMA1_Stream4_IRQHandler(void)$/;"	f	namespace:lgfx::v1
DMAC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DMAC_:1;          \/*!< bit:      9  DMAC AHB Clock Mask                *\/$/;"	m	struct:__anon295::__anon296
DMAC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DMAC_:1;          \/*!< bit:      9  DMAC AHB Clock Mask                *\/$/;"	m	struct:__anon81::__anon82
DMA_OUTFIFO_EMPTY_CH0	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  #define DMA_OUTFIFO_EMPTY_CH0 /;"	d	file:
DMA_OUTFIFO_EMPTY_CH0	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  #define DMA_OUTFIFO_EMPTY_CH0 /;"	d	file:
DMA_OUTFIFO_EMPTY_CH0	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  #define DMA_OUTFIFO_EMPTY_CH0 /;"	d	file:
DMA_OUTFIFO_STATUS_CH0_REG	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  #define DMA_OUTFIFO_STATUS_CH0_REG /;"	d	file:
DMA_OUTFIFO_STATUS_CH0_REG	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  #define DMA_OUTFIFO_STATUS_CH0_REG /;"	d	file:
DMA_OUTFIFO_STATUS_CH0_REG	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  #define DMA_OUTFIFO_STATUS_CH0_REG /;"	d	file:
DMA_OUTLINK_START_CH0	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  #define DMA_OUTLINK_START_CH0 /;"	d	file:
DMA_OUTLINK_START_CH0	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  #define DMA_OUTLINK_START_CH0 /;"	d	file:
DMA_OUTLINK_START_CH0	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  #define DMA_OUTLINK_START_CH0 /;"	d	file:
DMA_OUT_LINK_CH0_REG	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  #define DMA_OUT_LINK_CH0_REG /;"	d	file:
DMA_OUT_LINK_CH0_REG	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  #define DMA_OUT_LINK_CH0_REG /;"	d	file:
DMA_OUT_LINK_CH0_REG	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  #define DMA_OUT_LINK_CH0_REG /;"	d	file:
DMA_OUT_PERI_SEL_CH0_REG	src/lgfx/v1/platforms/esp32/common.cpp	/^  #define DMA_OUT_PERI_SEL_CH0_REG /;"	d	file:
DOCA	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t DOCA    = 0xE8; \/\/ Display Output Ctrl Adjust $/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
DOPO	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DOPO:2;           \/*!< bit: 16..17  Data Out Pinout                    *\/$/;"	m	struct:__anon427::__anon428
DOPO	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DOPO:2;           \/*!< bit: 16..17  Data Out Pinout                    *\/$/;"	m	struct:__anon213::__anon214
DORD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DORD:1;           \/*!< bit:     30  Data Order                         *\/$/;"	m	struct:__anon427::__anon428
DORD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DORD:1;           \/*!< bit:     30  Data Order                         *\/$/;"	m	struct:__anon213::__anon214
DRE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  DRE:1;            \/*!< bit:      0  Data Register Empty Interrupt      *\/$/;"	m	struct:__anon439::__anon440
DRE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DRE:1;            \/*!< bit:      0  Data Register Empty Interrupt Disable *\/$/;"	m	struct:__anon435::__anon436
DRE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DRE:1;            \/*!< bit:      0  Data Register Empty Interrupt Enable *\/$/;"	m	struct:__anon437::__anon438
DRE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  DRE:1;            \/*!< bit:      0  Data Register Empty Interrupt      *\/$/;"	m	struct:__anon225::__anon226
DRE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DRE:1;            \/*!< bit:      0  Data Register Empty Interrupt Disable *\/$/;"	m	struct:__anon221::__anon222
DRE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DRE:1;            \/*!< bit:      0  Data Register Empty Interrupt Enable *\/$/;"	m	struct:__anon223::__anon224
DRVCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_DRVCTRL_Type           DRVCTRL;     \/**< \\brief Offset: 0x0D (R\/W  8) Control C *\/$/;"	m	struct:__anon395
DRVCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_DRVCTRL_Type           DRVCTRL;     \/**< \\brief Offset: 0x0D (R\/W  8) Control C *\/$/;"	m	struct:__anon181
DRVSTR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DRVSTR:1;         \/*!< bit:     22  Output Driver Strength Selection   *\/$/;"	m	struct:__anon417::__anon418
DRVSTR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  DRVSTR:1;         \/*!< bit:      6  Output Driver Strength Selection   *\/$/;"	m	struct:__anon423::__anon424
DRVSTR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DRVSTR:1;         \/*!< bit:     22  Output Driver Strength Selection   *\/$/;"	m	struct:__anon203::__anon204
DRVSTR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  DRVSTR:1;         \/*!< bit:      6  Output Driver Strength Selection   *\/$/;"	m	struct:__anon209::__anon210
DSU_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DSU_:1;           \/*!< bit:      1  DSU APB Clock Enable               *\/$/;"	m	struct:__anon299::__anon300
DSU_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t DSU_:1;           \/*!< bit:      4  DSU AHB Clock Mask                 *\/$/;"	m	struct:__anon295::__anon296
DSU_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DSU_:1;           \/*!< bit:      1  DSU APB Clock Enable               *\/$/;"	m	struct:__anon85::__anon86
DSU_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t DSU_:1;           \/*!< bit:      4  DSU AHB Clock Mask                 *\/$/;"	m	struct:__anon81::__anon82
DUMMY_DISPLAY	examples/Test/build_test/main/main.cpp	/^  #define DUMMY_DISPLAY$/;"	d	file:
DataWrapper	src/lgfx/v0/lgfx_common.hpp	/^  struct DataWrapper$/;"	s	namespace:lgfx
DataWrapper	src/lgfx/v1/misc/DataWrapper.hpp	/^  struct DataWrapper$/;"	s	namespace:lgfx::v1
DividedFrameBuffer	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    DividedFrameBuffer(void) : _block_array(nullptr), _line_size(0), _total_lines(0), _block_lines(0), _block_count(0) {}$/;"	f	class:lgfx::v1::DividedFrameBuffer
DividedFrameBuffer	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^  class DividedFrameBuffer$/;"	c	namespace:lgfx::v1
Dma	src/lgfx/v0/LGFX_Sprite.hpp	/^      Dma,$/;"	e	enum:lgfx::v0::LGFX_Sprite::AllocationSource
Dma	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    Dma,$/;"	e	enum:lgfx::v1::AllocationSource
E	src/lgfx/utility/result.hpp	/^               std::is_nothrow_copy_constructible<E>::value) -> E;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
E	src/lgfx/utility/result.hpp	/^               std::is_nothrow_move_constructible<E>::value) -> E;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
ECC_FORMAT_BITS	src/lgfx/utility/lgfx_qrcode.c	/^static const uint8_t ECC_FORMAT_BITS = (0x02 << 6) | (0x03 << 4) | (0x00 << 2) | (0x01 << 0);$/;"	v	file:
ECC_HIGH	src/lgfx/utility/lgfx_qrcode.h	/^#define ECC_HIGH /;"	d
ECC_LOW	src/lgfx/utility/lgfx_qrcode.h	/^#define ECC_LOW /;"	d
ECC_MEDIUM	src/lgfx/utility/lgfx_qrcode.h	/^#define ECC_MEDIUM /;"	d
ECC_QUARTILE	src/lgfx/utility/lgfx_qrcode.h	/^#define ECC_QUARTILE /;"	d
EDGESEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EDGESEL:1;        \/*!< bit:      7  Edge Selection                     *\/$/;"	m	struct:__anon310::__anon311
EDGESEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EDGESEL:1;        \/*!< bit:      7  Edge Selection                     *\/$/;"	m	struct:__anon96::__anon97
EDGSEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EDGSEL:2;         \/*!< bit: 10..11  Edge Detection Selection           *\/$/;"	m	struct:__anon331::__anon332
EDGSEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EDGSEL:2;         \/*!< bit: 10..11  Edge Detection Selection           *\/$/;"	m	struct:__anon117::__anon118
EIC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EIC_:1;           \/*!< bit:     10  EIC APB Clock Enable               *\/$/;"	m	struct:__anon297::__anon298
EIC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EIC_:1;           \/*!< bit:     10  EIC APB Clock Enable               *\/$/;"	m	struct:__anon83::__anon84
EMULATED_GPIO_MAX	src/lgfx/v1/platforms/sdl/common.hpp	/^  static constexpr size_t EMULATED_GPIO_MAX = 128;$/;"	m	namespace:lgfx::v1
ENABLE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  Enable                             *\/$/;"	m	struct:__anon345::__anon346
ENABLE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  Enable                             *\/$/;"	m	struct:__anon427::__anon428
ENABLE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  LUT Enable                         *\/$/;"	m	struct:__anon310::__anon311
ENABLE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  SERCOM Enable Synchronization Busy *\/$/;"	m	struct:__anon443::__anon444
ENABLE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  enable                             *\/$/;"	m	struct:__anon374::__anon375
ENABLE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  ENABLE:1;         \/*!< bit:      1  Enable                             *\/$/;"	m	struct:__anon306::__anon307
ENABLE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  Enable                             *\/$/;"	m	struct:__anon131::__anon132
ENABLE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  Enable                             *\/$/;"	m	struct:__anon213::__anon214
ENABLE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  LUT Enable                         *\/$/;"	m	struct:__anon96::__anon97
ENABLE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  SERCOM Enable Synchronization Busy *\/$/;"	m	struct:__anon229::__anon230
ENABLE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ENABLE:1;         \/*!< bit:      1  enable                             *\/$/;"	m	struct:__anon160::__anon161
ENABLE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  ENABLE:1;         \/*!< bit:      1  Enable                             *\/$/;"	m	struct:__anon92::__anon93
ERASE_DONE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    ERASE_DONE        = 0x09,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
ERR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  ERR:1;            \/*!< bit:      1  ERR Interrupt Flag                 *\/$/;"	m	struct:__anon361::__anon362
ERR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  ERR:1;            \/*!< bit:      1  ERR Interrupt Disable              *\/$/;"	m	struct:__anon355::__anon356
ERR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  ERR:1;            \/*!< bit:      1  ERR Interrupt Enable               *\/$/;"	m	struct:__anon358::__anon359
ERR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  ERR:1;            \/*!< bit:      1  ERR Interrupt Flag                 *\/$/;"	m	struct:__anon147::__anon148
ERR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  ERR:1;            \/*!< bit:      1  ERR Interrupt Disable              *\/$/;"	m	struct:__anon141::__anon142
ERR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  ERR:1;            \/*!< bit:      1  ERR Interrupt Enable               *\/$/;"	m	struct:__anon144::__anon145
ERROR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  ERROR:1;          \/*!< bit:      7  Combined Error Interrupt           *\/$/;"	m	struct:__anon439::__anon440
ERROR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  ERROR:1;          \/*!< bit:      7  Combined Error Interrupt Disable   *\/$/;"	m	struct:__anon435::__anon436
ERROR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  ERROR:1;          \/*!< bit:      7  Combined Error Interrupt Enable    *\/$/;"	m	struct:__anon437::__anon438
ERROR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  ERROR:1;          \/*!< bit:      7  Combined Error Interrupt           *\/$/;"	m	struct:__anon225::__anon226
ERROR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  ERROR:1;          \/*!< bit:      7  Combined Error Interrupt Disable   *\/$/;"	m	struct:__anon221::__anon222
ERROR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  ERROR:1;          \/*!< bit:      7  Combined Error Interrupt Enable    *\/$/;"	m	struct:__anon223::__anon224
ETMOD	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t ETMOD   = 0xB7;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
ETMOD	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t ETMOD   = 0xB7;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
EVACT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t EVACT:3;          \/*!< bit:  0.. 2  Event Action                       *\/$/;"	m	struct:__anon352::__anon353
EVACT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t EVACT:3;          \/*!< bit:  0.. 2  Event Action                       *\/$/;"	m	struct:__anon138::__anon139
EVACT0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EVACT0:2;         \/*!< bit:  5.. 6  PORT Event Action 0                *\/$/;"	m	struct:__anon419::__anon420
EVACT0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EVACT0:2;         \/*!< bit:  5.. 6  PORT Event Action 0                *\/$/;"	m	struct:__anon205::__anon206
EVACT1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EVACT1:2;         \/*!< bit: 13..14  PORT Event Action 1                *\/$/;"	m	struct:__anon419::__anon420
EVACT1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EVACT1:2;         \/*!< bit: 13..14  PORT Event Action 1                *\/$/;"	m	struct:__anon205::__anon206
EVACT2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EVACT2:2;         \/*!< bit: 21..22  PORT Event Action 2                *\/$/;"	m	struct:__anon419::__anon420
EVACT2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EVACT2:2;         \/*!< bit: 21..22  PORT Event Action 2                *\/$/;"	m	struct:__anon205::__anon206
EVACT3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EVACT3:2;         \/*!< bit: 29..30  PORT Event Action 3                *\/$/;"	m	struct:__anon419::__anon420
EVACT3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EVACT3:2;         \/*!< bit: 29..30  PORT Event Action 3                *\/$/;"	m	struct:__anon205::__anon206
EVCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_EVCTRL_Type          EVCTRL;      \/**< \\brief Offset: 0x2C (R\/W 32) Event Input Control *\/$/;"	m	struct:__anon425
EVCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_EVCTRL_Type            EVCTRL;      \/**< \\brief Offset: 0x06 (R\/W 16) Event Control *\/$/;"	m	struct:__anon395
EVCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_EVCTRL_Type          EVCTRL;      \/**< \\brief Offset: 0x2C (R\/W 32) Event Input Control *\/$/;"	m	struct:__anon211
EVCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_EVCTRL_Type            EVCTRL;      \/**< \\brief Offset: 0x06 (R\/W 16) Event Control *\/$/;"	m	struct:__anon181
EVD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  EVD:1;            \/*!< bit:      1  Channel Event Detected             *\/$/;"	m	struct:__anon337::__anon338
EVD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t EVD:1;            \/*!< bit:      9  Channel Event Detected             *\/$/;"	m	struct:__anon320::__anon321
EVD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  EVD:1;            \/*!< bit:      1  Channel Event Detected Interrupt Disable *\/$/;"	m	struct:__anon333::__anon334
EVD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  EVD:1;            \/*!< bit:      1  Channel Event Detected Interrupt Enable *\/$/;"	m	struct:__anon335::__anon336
EVD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  EVD:1;            \/*!< bit:      1  Channel Event Detected             *\/$/;"	m	struct:__anon123::__anon124
EVD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t EVD:1;            \/*!< bit:      9  Channel Event Detected             *\/$/;"	m	struct:__anon106::__anon107
EVD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  EVD:1;            \/*!< bit:      1  Channel Event Detected Interrupt Disable *\/$/;"	m	struct:__anon119::__anon120
EVD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  EVD:1;            \/*!< bit:      1  Channel Event Detected Interrupt Enable *\/$/;"	m	struct:__anon121::__anon122
EVGEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EVGEN:7;          \/*!< bit:  0.. 6  Event Generator Selection          *\/$/;"	m	struct:__anon331::__anon332
EVGEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EVGEN:7;          \/*!< bit:  0.. 6  Event Generator Selection          *\/$/;"	m	struct:__anon117::__anon118
EVSYS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define EVSYS /;"	d
EVSYS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define EVSYS /;"	d
EVSYS_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t EVSYS_:1;         \/*!< bit:      7  EVSYS APB Clock Enable             *\/$/;"	m	struct:__anon299::__anon300
EVSYS_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t EVSYS_:1;         \/*!< bit:      7  EVSYS APB Clock Enable             *\/$/;"	m	struct:__anon85::__anon86
EVSYS_BUSYCH_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_BUSYCH_Type;$/;"	t	typeref:union:__anon325
EVSYS_BUSYCH_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_BUSYCH_Type;$/;"	t	typeref:union:__anon111
EVSYS_CHANNEL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_CHANNEL_Type;$/;"	t	typeref:union:__anon331
EVSYS_CHANNEL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_CHANNEL_Type;$/;"	t	typeref:union:__anon117
EVSYS_CHINTENCLR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_CHINTENCLR_Type;$/;"	t	typeref:union:__anon333
EVSYS_CHINTENCLR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_CHINTENCLR_Type;$/;"	t	typeref:union:__anon119
EVSYS_CHINTENSET_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_CHINTENSET_Type;$/;"	t	typeref:union:__anon335
EVSYS_CHINTENSET_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_CHINTENSET_Type;$/;"	t	typeref:union:__anon121
EVSYS_CHINTFLAG_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_CHINTFLAG_Type;$/;"	t	typeref:union:__anon337
EVSYS_CHINTFLAG_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_CHINTFLAG_Type;$/;"	t	typeref:union:__anon123
EVSYS_CHSTATUS_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_CHSTATUS_Type;$/;"	t	typeref:union:__anon339
EVSYS_CHSTATUS_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_CHSTATUS_Type;$/;"	t	typeref:union:__anon125
EVSYS_CTRLA_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_CTRLA_Type;$/;"	t	typeref:union:__anon313
EVSYS_CTRLA_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_CTRLA_Type;$/;"	t	typeref:union:__anon99
EVSYS_INSTS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define EVSYS_INSTS /;"	d
EVSYS_INSTS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define EVSYS_INSTS /;"	d
EVSYS_INST_NUM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define EVSYS_INST_NUM /;"	d
EVSYS_INST_NUM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define EVSYS_INST_NUM /;"	d
EVSYS_INTPEND_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_INTPEND_Type;$/;"	t	typeref:union:__anon320
EVSYS_INTPEND_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_INTPEND_Type;$/;"	t	typeref:union:__anon106
EVSYS_INTSTATUS_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_INTSTATUS_Type;$/;"	t	typeref:union:__anon322
EVSYS_INTSTATUS_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_INTSTATUS_Type;$/;"	t	typeref:union:__anon108
EVSYS_PRICTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_PRICTRL_Type;$/;"	t	typeref:union:__anon318
EVSYS_PRICTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_PRICTRL_Type;$/;"	t	typeref:union:__anon104
EVSYS_READYUSR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_READYUSR_Type;$/;"	t	typeref:union:__anon328
EVSYS_READYUSR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_READYUSR_Type;$/;"	t	typeref:union:__anon114
EVSYS_SWEVT_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_SWEVT_Type;$/;"	t	typeref:union:__anon315
EVSYS_SWEVT_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_SWEVT_Type;$/;"	t	typeref:union:__anon101
EVSYS_USER_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EVSYS_USER_Type;$/;"	t	typeref:union:__anon341
EVSYS_USER_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EVSYS_USER_Type;$/;"	t	typeref:union:__anon127
EXTEND_PERIOD_COUNT_332	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr int32_t EXTEND_PERIOD_COUNT_332 = 2;$/;"	m	class:lgfx::v1::Bus_HUB75
EXTEND_PERIOD_COUNT_565	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr int32_t EXTEND_PERIOD_COUNT_565 = 5;$/;"	m	class:lgfx::v1::Bus_HUB75
EncodeRange	src/lgfx/v0/lgfx_fonts.hpp	/^  struct EncodeRange {$/;"	s	namespace:lgfx::v0
EncodeRange	src/lgfx/v1/lgfx_fonts.hpp	/^  struct EncodeRange {$/;"	s	namespace:lgfx::v1
Evsys	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} Evsys;$/;"	t	typeref:struct:__anon344
Evsys	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} Evsys;$/;"	t	typeref:struct:__anon130
EvsysChannel	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} EvsysChannel;$/;"	t	typeref:struct:__anon343
EvsysChannel	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} EvsysChannel;$/;"	t	typeref:struct:__anon129
FAST_PROGRAM	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    FAST_PROGRAM      = 0x17,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
FILTSEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t FILTSEL:2;        \/*!< bit:  4.. 5  Filter Selection                   *\/$/;"	m	struct:__anon310::__anon311
FILTSEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t FILTSEL:2;        \/*!< bit:  4.. 5  Filter Selection                   *\/$/;"	m	struct:__anon96::__anon97
FONT16_H_	src/lgfx/Fonts/Font16.h	/^#define FONT16_H_$/;"	d
FONT32RLE_H_	src/lgfx/Fonts/Font32rle.h	/^#define FONT32RLE_H_$/;"	d
FONT5X7_H	src/lgfx/Fonts/glcdfont.h	/^#define FONT5X7_H$/;"	d
FONT64RLE_H_	src/lgfx/Fonts/Font64rle.h	/^#define FONT64RLE_H_$/;"	d
FONT72RLE_H_	src/lgfx/Fonts/Font72rle.h	/^#define FONT72RLE_H_$/;"	d
FONT72RLE_H_	src/lgfx/Fonts/Font72x53rle.h	/^#define FONT72RLE_H_$/;"	d
FONT7SRLE_H_	src/lgfx/Fonts/Font7srle.h	/^#define FONT7SRLE_H_$/;"	d
FONT8x8_C64_H	src/lgfx/Fonts/Font8x8C64.h	/^#define FONT8x8_C64_H$/;"	d
FORM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t FORM:4;           \/*!< bit: 24..27  Frame Format                       *\/$/;"	m	struct:__anon427::__anon428
FORM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t FORM:4;           \/*!< bit: 24..27  Frame Format                       *\/$/;"	m	struct:__anon213::__anon214
FP_SCALE	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t FP_SCALE = 16;$/;"	m	namespace:lgfx
FP_SCALE	src/lgfx/v1/LGFXBase.cpp	/^  static constexpr uint8_t FP_SCALE = 16;$/;"	m	namespace:lgfx::v1	file:
FP_SCALE	src/lgfx/v1/misc/pixelcopy.hpp	/^    static constexpr uint32_t FP_SCALE = 16;$/;"	m	struct:lgfx::v1::pixelcopy_t
FRCTR2	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t FRCTR2   = 0xC6;      \/\/ FR Control 2$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
FREQM_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t FREQM_:1;         \/*!< bit:     11  FREQM APB Clock Enable             *\/$/;"	m	struct:__anon297::__anon298
FREQM_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t FREQM_:1;         \/*!< bit:     11  FREQM APB Clock Enable             *\/$/;"	m	struct:__anon83::__anon84
FRMCTR	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^      static constexpr uint8_t FRMCTR = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ILI9481::CMD
FRMCTR1	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
FRMCTR1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
FRMCTR1	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
FRMCTR1	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
FRMCTR1	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
FRMCTR1	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t FRMCTR1 = 0xB1;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
FRMCTR2	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
FRMCTR2	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
FRMCTR2	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
FRMCTR2	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
FRMCTR2	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
FRMCTR2	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t FRMCTR2 = 0xB2;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
FRMCTR3	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
FRMCTR3	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
FRMCTR3	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
FRMCTR3	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
FRMCTR3	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
FRMCTR3	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t FRMCTR3 = 0xB3;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
FT5x06_CIPHER_REG	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_CIPHER_REG  = 0xA3;$/;"	m	namespace:lgfx::v1	file:
FT5x06_INTMODE_REG	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_INTMODE_REG= 0xA4;$/;"	m	namespace:lgfx::v0	file:
FT5x06_INTMODE_REG	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_INTMODE_REG = 0xA4;$/;"	m	namespace:lgfx::v1	file:
FT5x06_MONITOR	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_MONITOR  = 0x01;$/;"	m	namespace:lgfx::v0	file:
FT5x06_MONITOR	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_MONITOR  = 0x01;$/;"	m	namespace:lgfx::v1	file:
FT5x06_PERIODACTIVE	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_PERIODACTIVE = 0x88;$/;"	m	namespace:lgfx::v1	file:
FT5x06_POWER_REG	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_POWER_REG  = 0x87;$/;"	m	namespace:lgfx::v0	file:
FT5x06_POWER_REG	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_POWER_REG   = 0xA5;$/;"	m	namespace:lgfx::v1	file:
FT5x06_SLEEP_IN	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_SLEEP_IN = 0x03;$/;"	m	namespace:lgfx::v0	file:
FT5x06_SLEEP_IN	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_SLEEP_IN = 0x03;$/;"	m	namespace:lgfx::v1	file:
FT5x06_VENDID_REG	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_VENDID_REG = 0xA8;$/;"	m	namespace:lgfx::v0	file:
FT5x06_VENDID_REG	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  static constexpr uint8_t FT5x06_VENDID_REG  = 0xA8;$/;"	m	namespace:lgfx::v1	file:
FileWrapper	src/lgfx/v0/platforms/esp32_common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v0::FileWrapper
FileWrapper	src/lgfx/v0/platforms/esp32_common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp = nullptr) : DataWrapper(), _fs(&fs), _fp(fp) { need_transaction = _check_need_transaction(); }$/;"	f	struct:lgfx::v0::FileWrapper
FileWrapper	src/lgfx/v0/platforms/esp32_common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v0
FileWrapper	src/lgfx/v0/platforms/samd51_common.hpp	/^    FileWrapper() : DataWrapper() { need_transaction = true; }$/;"	f	struct:lgfx::v0::FileWrapper
FileWrapper	src/lgfx/v0/platforms/samd51_common.hpp	/^    FileWrapper(fs::FS& fs) : DataWrapper(), _fp(nullptr) { setFS(fs); }$/;"	f	struct:lgfx::v0::FileWrapper
FileWrapper	src/lgfx/v0/platforms/samd51_common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp) : DataWrapper(), _fp(fp) { setFS(fs); }$/;"	f	struct:lgfx::v0::FileWrapper
FileWrapper	src/lgfx/v0/platforms/samd51_common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v0
FileWrapper	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    FileWrapper() : DataWrapper() { need_transaction = true; }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    FileWrapper(fs::FS& fs) : DataWrapper(), _fp(nullptr) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp) : DataWrapper(), _fp(fp) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/esp32/common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/esp32/common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp = nullptr) : DataWrapper(), _fs(&fs), _fp(fp) { need_transaction = _check_need_transaction(); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/esp32/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/esp8266/common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/esp8266/common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp = nullptr) : DataWrapper(), _fs(&fs), _fp(fp) { need_transaction = _check_need_transaction(); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/esp8266/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/framebuffer/common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/opencv/common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/opencv/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/rp2040/common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/rp2040/common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp = nullptr) : DataWrapper(), _fs(&fs), _fp(fp) { need_transaction = _check_need_transaction(); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/rp2040/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/samd21/common.hpp	/^    FileWrapper() : DataWrapper() { need_transaction = true; }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/samd21/common.hpp	/^    FileWrapper(fs::FS& fs) : DataWrapper(), _fp(nullptr) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/samd21/common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp) : DataWrapper(), _fp(fp) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/samd21/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/samd51/common.hpp	/^    FileWrapper() : DataWrapper() { need_transaction = true; }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/samd51/common.hpp	/^    FileWrapper(fs::FS& fs) : DataWrapper(), _fp(nullptr) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/samd51/common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp) : DataWrapper(), _fp(fp) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/samd51/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/sdl/common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/sdl/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/spresense/common.hpp	/^    FileWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/spresense/common.hpp	/^    FileWrapper(StorageClass& fs, File* fp = nullptr) : DataWrapper(), _fs(&fs), _fp(fp) {}$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/spresense/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FileWrapper	src/lgfx/v1/platforms/stm32/common.hpp	/^    FileWrapper() : DataWrapper() { need_transaction = true; }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/stm32/common.hpp	/^    FileWrapper(fs::FS& fs) : DataWrapper(), _fp(nullptr) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/stm32/common.hpp	/^    FileWrapper(fs::FS& fs, fs::File* fp) : DataWrapper(), _fp(fp) { setFS(fs); }$/;"	f	struct:lgfx::v1::FileWrapper
FileWrapper	src/lgfx/v1/platforms/stm32/common.hpp	/^  struct FileWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
FixedBMPfont	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr FixedBMPfont(const void *chartbl, const uint8_t *widthtbl, uint8_t width, uint8_t height, uint8_t baseline) : BaseFont(chartbl, widthtbl, width, height, baseline ) {}$/;"	f	struct:lgfx::v0::FixedBMPfont
FixedBMPfont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct FixedBMPfont : public BaseFont {$/;"	s	namespace:lgfx::v0
FixedBMPfont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr FixedBMPfont(const void *char_tbl, const uint8_t *width_tbl, uint8_t w, uint8_t h, uint8_t bl) : BaseFont(char_tbl, width_tbl, w, h, bl ) {}$/;"	f	struct:lgfx::v1::FixedBMPfont
FixedBMPfont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct FixedBMPfont : public BaseFont {$/;"	s	namespace:lgfx::v1
FlipBuffer	src/lgfx/v1/platforms/common.hpp	/^  class FlipBuffer$/;"	c	namespace:lgfx::v1
Font0	src/lgfx/v0/lgfx_fonts.cpp	/^  const GLCDfont Font0 = { font      , font0_info, 6, 8, 7 };$/;"	m	namespace:fonts::v0	file:
Font0	src/lgfx/v1/lgfx_fonts.cpp	/^    const GLCDfont Font0 = { font      , font0_info, 6, 8, 7 };$/;"	m	namespace:lgfx::v1::fonts	file:
Font2	src/lgfx/v0/lgfx_fonts.cpp	/^  const BMPfont  Font2 = { chrtbl_f16, widtbl_f16, 0, chr_hgt_f16, baseline_f16 };$/;"	m	namespace:fonts::v0	file:
Font2	src/lgfx/v1/lgfx_fonts.cpp	/^    const BMPfont  Font2 = { chrtbl_f16, widtbl_f16, 0, chr_hgt_f16, baseline_f16 };$/;"	m	namespace:lgfx::v1::fonts	file:
Font4	src/lgfx/v0/lgfx_fonts.cpp	/^  const RLEfont  Font4 = { chrtbl_f32, widtbl_f32, 0, chr_hgt_f32, baseline_f32 };$/;"	m	namespace:fonts::v0	file:
Font4	src/lgfx/v1/lgfx_fonts.cpp	/^    const RLEfont  Font4 = { chrtbl_f32, widtbl_f32, 0, chr_hgt_f32, baseline_f32 };$/;"	m	namespace:lgfx::v1::fonts	file:
Font6	src/lgfx/v0/lgfx_fonts.cpp	/^  const RLEfont  Font6 = { chrtbl_f64, widtbl_f64, 0, chr_hgt_f64, baseline_f64 };$/;"	m	namespace:fonts::v0	file:
Font6	src/lgfx/v1/lgfx_fonts.cpp	/^    const RLEfont  Font6 = { chrtbl_f64, widtbl_f64, 0, chr_hgt_f64, baseline_f64 };$/;"	m	namespace:lgfx::v1::fonts	file:
Font7	src/lgfx/v0/lgfx_fonts.cpp	/^  const RLEfont  Font7 = { chrtbl_f7s, widtbl_f7s, 0, chr_hgt_f7s, baseline_f7s };$/;"	m	namespace:fonts::v0	file:
Font7	src/lgfx/v1/lgfx_fonts.cpp	/^    const RLEfont  Font7 = { chrtbl_f7s, widtbl_f7s, 0, chr_hgt_f7s, baseline_f7s };$/;"	m	namespace:lgfx::v1::fonts	file:
Font8	src/lgfx/v0/lgfx_fonts.cpp	/^  const RLEfont  Font8 = { chrtbl_f72, widtbl_f72, 0, chr_hgt_f72, baseline_f72 };$/;"	m	namespace:fonts::v0	file:
Font8	src/lgfx/v1/lgfx_fonts.cpp	/^    const RLEfont  Font8 = { chrtbl_f72, widtbl_f72, 0, chr_hgt_f72, baseline_f72 };$/;"	m	namespace:lgfx::v1::fonts	file:
Font8x8C64	src/lgfx/v0/lgfx_fonts.cpp	/^  const GLCDfont Font8x8C64 = { font8x8_c64, font8x8c64_info, 8, 8, 7 };$/;"	m	namespace:fonts::v0	file:
Font8x8C64	src/lgfx/v1/lgfx_fonts.cpp	/^    const GLCDfont Font8x8C64 = { font8x8_c64, font8x8c64_info, 8, 8, 7 };$/;"	m	namespace:lgfx::v1::fonts	file:
FontLib24x48	src/lgfx/Fonts/Ascii24x48.h	/^PROGMEM const unsigned char FontLib24x48[] = {$/;"	v
FontLib8x16	src/lgfx/Fonts/Ascii8x16.h	/^PROGMEM const unsigned char FontLib8x16[] = {$/;"	v
FontMetrics	src/lgfx/v0/lgfx_fonts.hpp	/^  struct FontMetrics$/;"	s	namespace:lgfx::v0
FontMetrics	src/lgfx/v1/lgfx_fonts.hpp	/^  struct FontMetrics$/;"	s	namespace:lgfx::v1
FreqToClockDiv	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t FreqToClockDiv(uint32_t freq)$/;"	f	class:lgfx::v0::LGFX_SPI
FreqToClockDiv	src/lgfx/v0/platforms/esp32_common.cpp	/^  uint32_t FreqToClockDiv(uint32_t fapb, uint32_t hz)$/;"	f	namespace:lgfx::v0
FreqToClockDiv	src/lgfx/v1/platforms/esp32/common.cpp	/^  uint32_t FreqToClockDiv(uint32_t fapb, uint32_t hz)$/;"	f	namespace:lgfx::v1
FreqToClockDiv	src/lgfx/v1/platforms/rp2040/common.cpp	/^    uint32_t FreqToClockDiv(uint32_t hz)$/;"	f	namespace:lgfx::v1::spi
FreqToClockDiv	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  uint32_t Bus_SPI::FreqToClockDiv(uint32_t freq)$/;"	f	class:lgfx::v1::Bus_SPI
FreqToClockDiv	src/lgfx/v1/platforms/samd21/common.cpp	/^    static uint32_t FreqToClockDiv(uint32_t hz)$/;"	f	namespace:lgfx::v1::spi
FreqToClockDiv	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  uint32_t Bus_SPI::FreqToClockDiv(uint32_t freq)$/;"	f	class:lgfx::v1::Bus_SPI
FreqToClockDiv	src/lgfx/v1/platforms/samd51/common.cpp	/^    static uint32_t FreqToClockDiv(uint32_t hz)$/;"	f	namespace:lgfx::v1::spi
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return  g | g<<3; }$/;"	f	struct:lgfx::v0::rgb332_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return  g; }$/;"	f	struct:lgfx::v0::rgb565_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return  gh << 3 | gl; }$/;"	f	struct:lgfx::v0::swap565_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return g; }$/;"	f	struct:lgfx::v0::bgr666_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return g>>2; }$/;"	f	struct:lgfx::v0::argb8888_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return g>>2; }$/;"	f	struct:lgfx::v0::bgr888_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return g>>2; }$/;"	f	struct:lgfx::v0::bgra8888_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return g>>2; }$/;"	f	struct:lgfx::v0::grayscale_t
G6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G6() const { return g>>2; }$/;"	f	struct:lgfx::v0::rgb888_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6() const { return g >> 2; }$/;"	f	struct:lgfx::v1::bgr888_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return  (g3 << 3) + g3; }$/;"	f	struct:lgfx::v1::rgb332_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return  g6; }$/;"	f	struct:lgfx::v1::rgb565_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return (gh << 3) + gl; }$/;"	f	struct:lgfx::v1::swap565_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return g >> 2; }$/;"	f	struct:lgfx::v1::argb8888_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return g >> 2; }$/;"	f	struct:lgfx::v1::bgra8888_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return g >> 2; }$/;"	f	struct:lgfx::v1::grayscale_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return g >> 2; }$/;"	f	struct:lgfx::v1::rgb888_t
G6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G6(void) const { return g6; }$/;"	f	struct:lgfx::v1::bgr666_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return ((gh* 0x41) >> 1)|(gl << 2); }$/;"	f	struct:lgfx::v0::swap565_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return (g * 0x41) >> 4; } \/\/ (g << 2) | (g >> 4);$/;"	f	struct:lgfx::v0::rgb565_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return (g * 0x49) >> 1; } \/\/ (g<<5)|(g<<2)|(g>>1);$/;"	f	struct:lgfx::v0::rgb332_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return g; }$/;"	f	struct:lgfx::v0::argb8888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return g; }$/;"	f	struct:lgfx::v0::bgr888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return g; }$/;"	f	struct:lgfx::v0::bgra8888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return g; }$/;"	f	struct:lgfx::v0::grayscale_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return g; }$/;"	f	struct:lgfx::v0::rgb888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t G8() const { return g<<2; }$/;"	f	struct:lgfx::v0::bgr666_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8 >> 2; }$/;"	f	struct:lgfx::v0::rgb565_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8 >> 5; }$/;"	f	struct:lgfx::v0::rgb332_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v0::argb8888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v0::bgr888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v0::bgra8888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v0::grayscale_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v0::rgb888_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { g = g8>>2; }$/;"	f	struct:lgfx::v0::bgr666_t
G8	src/lgfx/v0/lgfx_common.hpp	/^    inline void G8(uint8_t g8) { gh = g8 >> 5; gl = g8 >> 2;}$/;"	f	struct:lgfx::v0::swap565_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8() const { return g; }$/;"	f	struct:lgfx::v1::bgr888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return  (((g3 << 3) + g3) << 2) + (g3 >> 1); }$/;"	f	struct:lgfx::v1::rgb332_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return (((gh << 3) + gl) << 2) + (gh >> 1); }$/;"	f	struct:lgfx::v1::swap565_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return (g6 << 2) + (g6 >> 4); }$/;"	f	struct:lgfx::v1::bgr666_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return (g6 << 2) + (g6 >> 4); }$/;"	f	struct:lgfx::v1::rgb565_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return g; }$/;"	f	struct:lgfx::v1::argb8888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return g; }$/;"	f	struct:lgfx::v1::bgra8888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return g; }$/;"	f	struct:lgfx::v1::grayscale_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t G8(void) const { return g; }$/;"	f	struct:lgfx::v1::rgb888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v1::argb8888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v1::bgr888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v1::bgra8888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v1::grayscale_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g = g8; }$/;"	f	struct:lgfx::v1::rgb888_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g3 = g8 >> 5; }$/;"	f	struct:lgfx::v1::rgb332_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g6 = g8 >> 2; }$/;"	f	struct:lgfx::v1::bgr666_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { g6 = g8 >> 2; }$/;"	f	struct:lgfx::v1::rgb565_t
G8	src/lgfx/v1/misc/colortype.hpp	/^    inline void G8(uint8_t g8) { gh = g8 >> 5; gl = g8 >> 2;}$/;"	f	struct:lgfx::v1::swap565_t
GAMMASET	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t GAMMASET= 0x26;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
GCLK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define GCLK /;"	d
GCLK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define GCLK /;"	d
GCLK_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GCLK_:1;          \/*!< bit:      7  GCLK APB Clock Enable              *\/$/;"	m	struct:__anon297::__anon298
GCLK_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GCLK_:1;          \/*!< bit:      7  GCLK APB Clock Enable              *\/$/;"	m	struct:__anon83::__anon84
GCLK_CTRLA_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} GCLK_CTRLA_Type;$/;"	t	typeref:union:__anon275
GCLK_CTRLA_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} GCLK_CTRLA_Type;$/;"	t	typeref:union:__anon61
GCLK_GENCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} GCLK_GENCTRL_Type;$/;"	t	typeref:union:__anon280
GCLK_GENCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} GCLK_GENCTRL_Type;$/;"	t	typeref:union:__anon66
GCLK_INSTS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define GCLK_INSTS /;"	d
GCLK_INSTS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define GCLK_INSTS /;"	d
GCLK_INST_NUM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define GCLK_INST_NUM /;"	d
GCLK_INST_NUM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define GCLK_INST_NUM /;"	d
GCLK_PCHCTRL_CHEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define GCLK_PCHCTRL_CHEN /;"	d
GCLK_PCHCTRL_CHEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef GCLK_PCHCTRL_CHEN$/;"	d
GCLK_PCHCTRL_CHEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define GCLK_PCHCTRL_CHEN /;"	d	file:
GCLK_PCHCTRL_CHEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef GCLK_PCHCTRL_CHEN$/;"	d	file:
GCLK_PCHCTRL_CHEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define GCLK_PCHCTRL_CHEN_Pos /;"	d
GCLK_PCHCTRL_CHEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef GCLK_PCHCTRL_CHEN_Pos$/;"	d
GCLK_PCHCTRL_CHEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define GCLK_PCHCTRL_CHEN_Pos /;"	d	file:
GCLK_PCHCTRL_CHEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef GCLK_PCHCTRL_CHEN_Pos$/;"	d	file:
GCLK_PCHCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} GCLK_PCHCTRL_Type;$/;"	t	typeref:union:__anon282
GCLK_PCHCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} GCLK_PCHCTRL_Type;$/;"	t	typeref:union:__anon68
GCLK_SYNCBUSY_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} GCLK_SYNCBUSY_Type;$/;"	t	typeref:union:__anon277
GCLK_SYNCBUSY_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} GCLK_SYNCBUSY_Type;$/;"	t	typeref:union:__anon63
GCTRL	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t GCTRL    = 0xB7;      \/\/ Gate control$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
GEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GEN:4;            \/*!< bit:  0.. 3  Generic Clock Generator            *\/$/;"	m	struct:__anon282::__anon283
GEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GEN:4;            \/*!< bit:  0.. 3  Generic Clock Generator            *\/$/;"	m	struct:__anon68::__anon69
GENCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL:12;       \/*!< bit:  2..13  Generic Clock Generator Control x Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon279
GENCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO GCLK_GENCTRL_Type         GENCTRL[12]; \/**< \\brief Offset: 0x20 (R\/W 32) Generic Clock Generator Control *\/$/;"	m	struct:__anon284
GENCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL:12;       \/*!< bit:  2..13  Generic Clock Generator Control x Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon65
GENCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO GCLK_GENCTRL_Type         GENCTRL[12]; \/**< \\brief Offset: 0x20 (R\/W 32) Generic Clock Generator Control *\/$/;"	m	struct:__anon70
GENCTRL0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL0:1;       \/*!< bit:      2  Generic Clock Generator Control 0 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL0:1;       \/*!< bit:      2  Generic Clock Generator Control 0 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL1:1;       \/*!< bit:      3  Generic Clock Generator Control 1 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL1:1;       \/*!< bit:      3  Generic Clock Generator Control 1 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL10	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL10:1;      \/*!< bit:     12  Generic Clock Generator Control 10 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL10	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL10:1;      \/*!< bit:     12  Generic Clock Generator Control 10 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL11	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL11:1;      \/*!< bit:     13  Generic Clock Generator Control 11 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL11	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL11:1;      \/*!< bit:     13  Generic Clock Generator Control 11 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL2:1;       \/*!< bit:      4  Generic Clock Generator Control 2 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL2:1;       \/*!< bit:      4  Generic Clock Generator Control 2 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL3:1;       \/*!< bit:      5  Generic Clock Generator Control 3 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL3:1;       \/*!< bit:      5  Generic Clock Generator Control 3 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL4:1;       \/*!< bit:      6  Generic Clock Generator Control 4 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL4:1;       \/*!< bit:      6  Generic Clock Generator Control 4 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL5:1;       \/*!< bit:      7  Generic Clock Generator Control 5 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL5:1;       \/*!< bit:      7  Generic Clock Generator Control 5 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL6:1;       \/*!< bit:      8  Generic Clock Generator Control 6 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL6:1;       \/*!< bit:      8  Generic Clock Generator Control 6 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL7	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL7:1;       \/*!< bit:      9  Generic Clock Generator Control 7 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL7	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL7:1;       \/*!< bit:      9  Generic Clock Generator Control 7 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL8:1;       \/*!< bit:     10  Generic Clock Generator Control 8 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL8:1;       \/*!< bit:     10  Generic Clock Generator Control 8 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENCTRL9	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL9:1;       \/*!< bit:     11  Generic Clock Generator Control 9 Synchronization Busy bits *\/$/;"	m	struct:__anon277::__anon278
GENCTRL9	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENCTRL9:1;       \/*!< bit:     11  Generic Clock Generator Control 9 Synchronization Busy bits *\/$/;"	m	struct:__anon63::__anon64
GENEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t GENEN:1;          \/*!< bit:      8  Generic Clock Generator Enable     *\/$/;"	m	struct:__anon280::__anon281
GENEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t GENEN:1;          \/*!< bit:      8  Generic Clock Generator Enable     *\/$/;"	m	struct:__anon66::__anon67
GFXfont	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr GFXfont ( uint8_t *bitmap$/;"	f	struct:lgfx::v0::GFXfont
GFXfont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct GFXfont : public lgfx::IFont$/;"	s	namespace:lgfx::v0
GFXfont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr GFXfont ( uint8_t *bitmap_$/;"	f	struct:lgfx::v1::GFXfont
GFXfont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct GFXfont : public lgfx::IFont$/;"	s	namespace:lgfx::v1
GFXglyph	src/lgfx/v0/lgfx_fonts.hpp	/^  struct GFXglyph { \/\/ Data stored PER GLYPH$/;"	s	namespace:lgfx::v0
GFXglyph	src/lgfx/v1/lgfx_fonts.hpp	/^  struct GFXglyph { \/\/ Data stored PER GLYPH$/;"	s	namespace:lgfx::v1
GLCDfont	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr GLCDfont(const void *chartbl, const uint8_t *widthtbl, uint8_t width, uint8_t height, uint8_t baseline) : BaseFont(chartbl, widthtbl, width, height, baseline ) {}$/;"	f	struct:lgfx::v0::GLCDfont
GLCDfont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct GLCDfont : public BaseFont {$/;"	s	namespace:lgfx::v0
GLCDfont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr GLCDfont(const void *char_tbl, const uint8_t *width_tbl, uint8_t w, uint8_t h, uint8_t bl) : BaseFont(char_tbl, width_tbl, w, h, bl ) {}$/;"	f	struct:lgfx::v1::GLCDfont
GLCDfont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct GLCDfont : public BaseFont {$/;"	s	namespace:lgfx::v1
GMCTR	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^      static constexpr uint8_t GMCTR  = 0xC8;$/;"	m	struct:lgfx::v0::Panel_ILI9481::CMD
GMCTRN1	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction (E1h)$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
GMCTRN1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction (E1h)$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
GMCTRN1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction (E1h)$/;"	m	struct:lgfx::v0::Panel_ILI9342::CMD
GMCTRN1	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
GMCTRN1	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
GMCTRN1	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t GMCTRN1 = 0xE1;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
GMCTRN1	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t GMCTRN1 = 0xE1; \/\/ Negative Gamma Correction$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
GMCTRP1	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction (E0h)$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
GMCTRP1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction (E0h)$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
GMCTRP1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction (E0h)$/;"	m	struct:lgfx::v0::Panel_ILI9342::CMD
GMCTRP1	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
GMCTRP1	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
GMCTRP1	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t GMCTRP1 = 0xE0;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
GMCTRP1	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t GMCTRP1 = 0xE0; \/\/ Positive Gamma Correction$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
GREEN	src/LGFX_TFT_eSPI.hpp	/^    #undef GREEN$/;"	d
GREEN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int GREEN           = 0x07E0;      \/*   0, 255,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
GREENYELLOW	src/LGFX_TFT_eSPI.hpp	/^    #undef GREENYELLOW$/;"	d
GREENYELLOW	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int GREENYELLOW     = 0xAFE5;      \/* 173, 255,  47 *\/$/;"	m	namespace:lgfx::ili9341_colors
GWFPGA_Inst_Def	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  enum GWFPGA_Inst_Def$/;"	g	namespace:lgfx::v1	file:
GWFPGA_StatusReg_Def	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  enum GWFPGA_StatusReg_Def$/;"	g	namespace:lgfx::v1	file:
Gclk	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} Gclk;$/;"	t	typeref:struct:__anon284
Gclk	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} Gclk;$/;"	t	typeref:struct:__anon70
Group	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       PortGroup                 Group[4];    \/**< \\brief Offset: 0x00 PortGroup groups [GROUPS] *\/$/;"	m	struct:__anon426
Group	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       PortGroup                 Group[4];    \/**< \\brief Offset: 0x00 PortGroup groups [GROUPS] *\/$/;"	m	struct:__anon212
HDMI_Trans	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      HDMI_Trans(const lgfx::Bus_I2C::config_t& i2c_config) : HDMI_Trans_config(i2c_config) {}$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
HDMI_Trans	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    class HDMI_Trans$/;"	c	struct:lgfx::v1::Panel_M5HDMI
HDMI_Trans_config	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      config_t HDMI_Trans_config;$/;"	m	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
HMATRIX_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HMATRIX_:1;       \/*!< bit:      5  HMATRIX AHB Clock Mask             *\/$/;"	m	struct:__anon295::__anon296
HMATRIX_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HMATRIX_:1;       \/*!< bit:      6  HMATRIX APB Clock Enable           *\/$/;"	m	struct:__anon299::__anon300
HMATRIX_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HMATRIX_:1;       \/*!< bit:      5  HMATRIX AHB Clock Mask             *\/$/;"	m	struct:__anon81::__anon82
HMATRIX_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HMATRIX_:1;       \/*!< bit:      6  HMATRIX APB Clock Enable           *\/$/;"	m	struct:__anon85::__anon86
HPB0_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HPB0_:1;          \/*!< bit:      0  HPB0 AHB Clock Mask                *\/$/;"	m	struct:__anon295::__anon296
HPB0_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HPB0_:1;          \/*!< bit:      0  HPB0 AHB Clock Mask                *\/$/;"	m	struct:__anon81::__anon82
HPB1_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HPB1_:1;          \/*!< bit:      1  HPB1 AHB Clock Mask                *\/$/;"	m	struct:__anon295::__anon296
HPB1_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HPB1_:1;          \/*!< bit:      1  HPB1 AHB Clock Mask                *\/$/;"	m	struct:__anon81::__anon82
HPB2_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HPB2_:1;          \/*!< bit:      2  HPB2 AHB Clock Mask                *\/$/;"	m	struct:__anon295::__anon296
HPB2_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HPB2_:1;          \/*!< bit:      2  HPB2 AHB Clock Mask                *\/$/;"	m	struct:__anon81::__anon82
HPB3_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HPB3_:1;          \/*!< bit:      3  HPB3 AHB Clock Mask                *\/$/;"	m	struct:__anon295::__anon296
HPB3_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HPB3_:1;          \/*!< bit:      3  HPB3 AHB Clock Mask                *\/$/;"	m	struct:__anon81::__anon82
HSDIV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  MCLK_HSDIV_Type           HSDIV;       \/**< \\brief Offset: 0x04 (R\/   8) HS Clock Division *\/$/;"	m	struct:__anon305
HSDIV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  MCLK_HSDIV_Type           HSDIV;       \/**< \\brief Offset: 0x04 (R\/   8) HS Clock Division *\/$/;"	m	struct:__anon91
HSRAM_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HSRAM_:1;         \/*!< bit:      7  HSRAM AHB Clock Mask               *\/$/;"	m	struct:__anon295::__anon296
HSRAM_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HSRAM_:1;         \/*!< bit:      7  HSRAM AHB Clock Mask               *\/$/;"	m	struct:__anon81::__anon82
HWSEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t HWSEL:1;          \/*!< bit:     31  Half-Word Select                   *\/$/;"	m	struct:__anon417::__anon418
HWSEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t HWSEL:1;          \/*!< bit:     31  Half-Word Select                   *\/$/;"	m	struct:__anon203::__anon204
HiAlphaTheshold	src/lgfx/v1/LGFXBase.cpp	/^  constexpr float HiAlphaTheshold = 1.0f - LoAlphaTheshold;$/;"	m	namespace:lgfx::v1	file:
HttpWrapper	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    struct HttpWrapper : public StreamWrapper$/;"	s	class:lgfx::v0::LGFX_FILESYSTEM_Support
HttpWrapper	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      HttpWrapper(void) : DataWrapper()$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
HttpWrapper	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    struct HttpWrapper : public DataWrapper$/;"	s	class:lgfx::v1::LGFX_FILESYSTEM_Support
HttpWrapper	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    struct HttpWrapper : public StreamWrapper$/;"	s	class:lgfx::v1::LGFX_FILESYSTEM_Support
I2C_10BIT_ADDR_MAX	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int I2C_10BIT_ADDR_MAX = 1023;$/;"	m	namespace:lgfx::v1::i2c	file:
I2C_7BIT_ADDR_MAX	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int I2C_7BIT_ADDR_MAX = 0x77;$/;"	m	namespace:lgfx::v1::i2c	file:
I2C_7BIT_ADDR_MIN	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int I2C_7BIT_ADDR_MIN = 0x08;$/;"	m	namespace:lgfx::v1::i2c	file:
I2C_ACK_ERR_INT_RAW_M	src/lgfx/v1/platforms/esp32/common.cpp	/^ #define I2C_ACK_ERR_INT_RAW_M /;"	d	file:
I2C_DEFAULT_FREQ	src/lgfx/v1/platforms/common.hpp	/^    static constexpr uint32_t I2C_DEFAULT_FREQ = 400000;$/;"	m	namespace:lgfx::v1::i2c
I2C_NUM_MAX	src/lgfx/v1/platforms/esp8266/common.cpp	/^    static constexpr int I2C_NUM_MAX = 2;$/;"	m	namespace:lgfx::v1::i2c	file:
I2C_PIN_INT	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  static constexpr int I2C_PIN_INT = 40;$/;"	m	class:LGFX
I2C_PIN_SCL	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  static constexpr int I2C_PIN_SCL = 39;$/;"	m	class:LGFX
I2C_PIN_SDA	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  static constexpr int I2C_PIN_SDA = 38;$/;"	m	class:LGFX
I2C_PORT_NUM	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  static constexpr int I2C_PORT_NUM = I2C_NUM_0;$/;"	m	class:LGFX
I2S_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t I2S_:1;           \/*!< bit:     10  I2S APB Clock Enable               *\/$/;"	m	struct:__anon303::__anon304
I2S_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t I2S_:1;           \/*!< bit:     10  I2S APB Clock Enable               *\/$/;"	m	struct:__anon89::__anon90
I2S_CLKA_ENA	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^#define I2S_CLKA_ENA /;"	d	file:
IBON	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t IBON:1;           \/*!< bit:      8  Immediate Buffer Overflow Notification *\/$/;"	m	struct:__anon427::__anon428
IBON	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t IBON:1;           \/*!< bit:      8  Immediate Buffer Overflow Notification *\/$/;"	m	struct:__anon213::__anon214
IBus	src/lgfx/v1/Bus.hpp	/^  struct IBus$/;"	s	namespace:lgfx::v1
ICM_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ICM_:1;           \/*!< bit:     11  ICM APB Clock Enable               *\/$/;"	m	struct:__anon301::__anon302
ICM_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ICM_:1;           \/*!< bit:     19  ICM AHB Clock Mask                 *\/$/;"	m	struct:__anon295::__anon296
ICM_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ICM_:1;           \/*!< bit:     11  ICM APB Clock Enable               *\/$/;"	m	struct:__anon87::__anon88
ICM_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ICM_:1;           \/*!< bit:     19  ICM AHB Clock Mask                 *\/$/;"	m	struct:__anon81::__anon82
ICSPACE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ICSPACE:6;        \/*!< bit:  0.. 5  Inter-Character Spacing            *\/$/;"	m	struct:__anon431::__anon432
ICSPACE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ICSPACE:6;        \/*!< bit:  0.. 5  Inter-Character Spacing            *\/$/;"	m	struct:__anon217::__anon218
ID	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t ID:4;             \/*!< bit:  0.. 3  Channel ID                         *\/$/;"	m	struct:__anon320::__anon321
ID	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t ID:4;             \/*!< bit:  0.. 3  Channel ID                         *\/$/;"	m	struct:__anon106::__anon107
IDC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t IDC:1;            \/*!< bit:      9  Improve Duty Cycle                 *\/$/;"	m	struct:__anon280::__anon281
IDC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t IDC:1;            \/*!< bit:      9  Improve Duty Cycle                 *\/$/;"	m	struct:__anon66::__anon67
IDMOFF	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t IDMOFF  = 0x38;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
IDMON	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t IDMON   = 0x39;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
IDXRD	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t IDXRD   = 0xDD; \/\/ ILI9163 only, indexed control register read$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
IDXRD	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t IDXRD   = 0xDD; \/\/ ILI9341 only, indexed control register read$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
IFCTR	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^      static constexpr uint8_t IFCTR  = 0xC6;$/;"	m	struct:lgfx::v0::Panel_ILI9481::CMD
IFont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct IFont$/;"	s	namespace:lgfx::v0
IFont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct IFont$/;"	s	namespace:lgfx::v1
ILI9341_BLACK	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_BLACK$/;"	d
ILI9341_BLACK	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_BLACK       = 0x0000;      \/*   0,   0,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_BLUE	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_BLUE$/;"	d
ILI9341_BLUE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_BLUE        = 0x001F;      \/*   0,   0, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_CYAN	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_CYAN$/;"	d
ILI9341_CYAN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_CYAN        = 0x07FF;      \/*   0, 255, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_DARKCYAN	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_DARKCYAN$/;"	d
ILI9341_DARKCYAN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_DARKCYAN    = 0x03EF;      \/*   0, 128, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_DARKGREEN	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_DARKGREEN$/;"	d
ILI9341_DARKGREEN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_DARKGREEN   = 0x03E0;      \/*   0, 128,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_DARKGREY	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_DARKGREY$/;"	d
ILI9341_DARKGREY	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_DARKGREY    = 0x7BEF;      \/* 128, 128, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_GREEN	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_GREEN$/;"	d
ILI9341_GREEN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_GREEN       = 0x07E0;      \/*   0, 255,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_GREENYELLOW	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_GREENYELLOW$/;"	d
ILI9341_GREENYELLOW	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_GREENYELLOW = 0xAFE5;      \/* 173, 255,  47 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_LIGHTGREY	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_LIGHTGREY$/;"	d
ILI9341_LIGHTGREY	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_LIGHTGREY   = 0xC618;      \/* 192, 192, 192 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_MAGENTA	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_MAGENTA$/;"	d
ILI9341_MAGENTA	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_MAGENTA     = 0xF81F;      \/* 255,   0, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_MAROON	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_MAROON$/;"	d
ILI9341_MAROON	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_MAROON      = 0x7800;      \/* 128,   0,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_NAVY	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_NAVY$/;"	d
ILI9341_NAVY	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_NAVY        = 0x000F;      \/*   0,   0, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_OLIVE	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_OLIVE$/;"	d
ILI9341_OLIVE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_OLIVE       = 0x7BE0;      \/* 128, 128,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_ORANGE	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_ORANGE$/;"	d
ILI9341_ORANGE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_ORANGE      = 0xFD20;      \/* 255, 165,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_PINK	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_PINK$/;"	d
ILI9341_PINK	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_PINK        = 0xF81F;$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_PURPLE	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_PURPLE$/;"	d
ILI9341_PURPLE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_PURPLE      = 0x780F;      \/* 128,   0, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_RED	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_RED$/;"	d
ILI9341_RED	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_RED         = 0xF800;      \/* 255,   0,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_WHITE	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_WHITE$/;"	d
ILI9341_WHITE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_WHITE       = 0xFFFF;      \/* 255, 255, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILI9341_YELLOW	src/LGFX_TFT_eSPI.hpp	/^    #undef ILI9341_YELLOW$/;"	d
ILI9341_YELLOW	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ILI9341_YELLOW      = 0xFFE0;      \/* 255, 255,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ILight	src/lgfx/v1/Light.hpp	/^  struct ILight$/;"	s	namespace:lgfx::v1
IN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t IN:32;            \/*!< bit:  0..31  PORT Data Input Value              *\/$/;"	m	struct:__anon413::__anon414
IN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  PORT_IN_Type              IN;          \/**< \\brief Offset: 0x20 (R\/  32) Data Input Value *\/$/;"	m	struct:__anon425
IN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t IN:32;            \/*!< bit:  0..31  PORT Data Input Value              *\/$/;"	m	struct:__anon199::__anon200
IN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  PORT_IN_Type              IN;          \/**< \\brief Offset: 0x20 (R\/  32) Data Input Value *\/$/;"	m	struct:__anon211
INCLUDE_FREERTOS_PATH	src/lgfx/v0/platforms/samd51_common.hpp	/^ #define  INCLUDE_FREERTOS_PATH /;"	d
INCLUDE_FREERTOS_PATH	src/lgfx/v0/platforms/samd51_common.hpp	/^ #undef   INCLUDE_FREERTOS_PATH$/;"	d
INCLUDE_FREERTOS_PATH	src/lgfx/v1/platforms/samd51/common.hpp	/^ #define  INCLUDE_FREERTOS_PATH /;"	d
INCLUDE_FREERTOS_PATH	src/lgfx/v1/platforms/samd51/common.hpp	/^ #undef   INCLUDE_FREERTOS_PATH$/;"	d
INCLUDE_TASK_PATH	src/lgfx/v0/platforms/samd51_common.hpp	/^ #define  INCLUDE_TASK_PATH /;"	d
INCLUDE_TASK_PATH	src/lgfx/v0/platforms/samd51_common.hpp	/^ #undef   INCLUDE_TASK_PATH$/;"	d
INCLUDE_TASK_PATH	src/lgfx/v1/platforms/samd51/common.hpp	/^ #define  INCLUDE_TASK_PATH /;"	d
INCLUDE_TASK_PATH	src/lgfx/v1/platforms/samd51/common.hpp	/^ #undef   INCLUDE_TASK_PATH$/;"	d
INEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t INEN:1;           \/*!< bit:     17  Input Enable                       *\/$/;"	m	struct:__anon417::__anon418
INEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  INEN:1;           \/*!< bit:      1  Input Enable                       *\/$/;"	m	struct:__anon423::__anon424
INEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t INEN:1;           \/*!< bit:     17  Input Enable                       *\/$/;"	m	struct:__anon203::__anon204
INEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  INEN:1;           \/*!< bit:      1  Input Enable                       *\/$/;"	m	struct:__anon209::__anon210
INSEL0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t INSEL0:4;         \/*!< bit:  8..11  Input Selection 0                  *\/$/;"	m	struct:__anon310::__anon311
INSEL0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t INSEL0:4;         \/*!< bit:  8..11  Input Selection 0                  *\/$/;"	m	struct:__anon96::__anon97
INSEL1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t INSEL1:4;         \/*!< bit: 12..15  Input Selection 1                  *\/$/;"	m	struct:__anon310::__anon311
INSEL1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t INSEL1:4;         \/*!< bit: 12..15  Input Selection 1                  *\/$/;"	m	struct:__anon96::__anon97
INSEL2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t INSEL2:4;         \/*!< bit: 16..19  Input Selection 2                  *\/$/;"	m	struct:__anon310::__anon311
INSEL2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t INSEL2:4;         \/*!< bit: 16..19  Input Selection 2                  *\/$/;"	m	struct:__anon96::__anon97
INTENCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_INTENCLR_Type        INTENCLR;    \/**< \\brief Offset: 0x01 (R\/W  8) Interrupt Enable Clear *\/$/;"	m	struct:__anon305
INTENCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_INTENCLR_Type  INTENCLR;    \/**< \\brief Offset: 0x14 (R\/W  8) SPI Interrupt Enable Clear *\/$/;"	m	struct:__anon453
INTENCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_INTENCLR_Type          INTENCLR;    \/**< \\brief Offset: 0x08 (R\/W  8) Interrupt Enable Clear *\/$/;"	m	struct:__anon395
INTENCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_INTENCLR_Type        INTENCLR;    \/**< \\brief Offset: 0x01 (R\/W  8) Interrupt Enable Clear *\/$/;"	m	struct:__anon91
INTENCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_INTENCLR_Type  INTENCLR;    \/**< \\brief Offset: 0x14 (R\/W  8) SPI Interrupt Enable Clear *\/$/;"	m	struct:__anon239
INTENCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_INTENCLR_Type          INTENCLR;    \/**< \\brief Offset: 0x08 (R\/W  8) Interrupt Enable Clear *\/$/;"	m	struct:__anon181
INTENSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_INTENSET_Type        INTENSET;    \/**< \\brief Offset: 0x02 (R\/W  8) Interrupt Enable Set *\/$/;"	m	struct:__anon305
INTENSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_INTENSET_Type  INTENSET;    \/**< \\brief Offset: 0x16 (R\/W  8) SPI Interrupt Enable Set *\/$/;"	m	struct:__anon453
INTENSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_INTENSET_Type          INTENSET;    \/**< \\brief Offset: 0x09 (R\/W  8) Interrupt Enable Set *\/$/;"	m	struct:__anon395
INTENSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_INTENSET_Type        INTENSET;    \/**< \\brief Offset: 0x02 (R\/W  8) Interrupt Enable Set *\/$/;"	m	struct:__anon91
INTENSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_INTENSET_Type  INTENSET;    \/**< \\brief Offset: 0x16 (R\/W  8) SPI Interrupt Enable Set *\/$/;"	m	struct:__anon239
INTENSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_INTENSET_Type          INTENSET;    \/**< \\brief Offset: 0x09 (R\/W  8) Interrupt Enable Set *\/$/;"	m	struct:__anon181
INTFLAG	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO MCLK_INTFLAG_Type         INTFLAG;     \/**< \\brief Offset: 0x03 (R\/W  8) Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon305
INTFLAG	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_INTFLAG_Type   INTFLAG;     \/**< \\brief Offset: 0x18 (R\/W  8) SPI Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon453
INTFLAG	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_INTFLAG_Type           INTFLAG;     \/**< \\brief Offset: 0x0A (R\/W  8) Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon395
INTFLAG	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO MCLK_INTFLAG_Type         INTFLAG;     \/**< \\brief Offset: 0x03 (R\/W  8) Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon91
INTFLAG	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_INTFLAG_Type   INTFLAG;     \/**< \\brief Offset: 0x18 (R\/W  8) SPI Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon239
INTFLAG	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_INTFLAG_Type           INTFLAG;     \/**< \\brief Offset: 0x0A (R\/W  8) Interrupt Flag Status and Clear *\/$/;"	m	struct:__anon181
INTPEND	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_INTPEND_Type        INTPEND;     \/**< \\brief Offset: 0x010 (R\/W 16) Channel Pending Interrupt *\/$/;"	m	struct:__anon344
INTPEND	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_INTPEND_Type        INTPEND;     \/**< \\brief Offset: 0x010 (R\/W 16) Channel Pending Interrupt *\/$/;"	m	struct:__anon130
INTSTATUS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  EVSYS_INTSTATUS_Type      INTSTATUS;   \/**< \\brief Offset: 0x014 (R\/  32) Interrupt Status *\/$/;"	m	struct:__anon344
INTSTATUS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  EVSYS_INTSTATUS_Type      INTSTATUS;   \/**< \\brief Offset: 0x014 (R\/  32) Interrupt Status *\/$/;"	m	struct:__anon130
INVCTR	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t INVCTR  = 0xB4;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
INVCTR	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t INVCTR  = 0xB4;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
INVCTR	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t INVCTR  = 0xB4;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
INVCTR	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t INVCTR  = 0xB4;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
INVCTR	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t INVCTR  = 0xB4;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
INVCTR	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t INVCTR  = 0xB4;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
INVEI	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t INVEI:1;          \/*!< bit:     20  Inverted Event Input Enable        *\/$/;"	m	struct:__anon310::__anon311
INVEI	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t INVEI:1;          \/*!< bit:     20  Inverted Event Input Enable        *\/$/;"	m	struct:__anon96::__anon97
INVEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  INVEN:2;          \/*!< bit:  0.. 1  Output Waveform Invert Enable x    *\/$/;"	m	struct:__anon369::__anon371
INVEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  INVEN:2;          \/*!< bit:  0.. 1  Output Waveform Invert Enable x    *\/$/;"	m	struct:__anon155::__anon157
INVEN0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  INVEN0:1;         \/*!< bit:      0  Output Waveform Invert Enable 0    *\/$/;"	m	struct:__anon369::__anon370
INVEN0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  INVEN0:1;         \/*!< bit:      0  Output Waveform Invert Enable 0    *\/$/;"	m	struct:__anon155::__anon156
INVEN1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  INVEN1:1;         \/*!< bit:      1  Output Waveform Invert Enable 1    *\/$/;"	m	struct:__anon369::__anon370
INVEN1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  INVEN1:1;         \/*!< bit:      1  Output Waveform Invert Enable 1    *\/$/;"	m	struct:__anon155::__anon156
INVOFF	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t INVOFF  = 0x20;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
INVOFF	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t INVOFF  = 0xA6;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
INVON	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t INVON   = 0x21;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
INVON	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t INVON   = 0xA7;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
IPanel	src/lgfx/v1/Panel.hpp	/^  struct IPanel$/;"	s	namespace:lgfx::v1
ISC_DISABLE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    ISC_DISABLE       = 0x3A,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
ISC_ENABLE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    ISC_ENABLE        = 0x15,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
ISC_ERASE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    ISC_ERASE         = 0x05,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
ISC_NOOP	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    ISC_NOOP          = 0x02,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
ISR_BEGIN	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  #define ISR_BEGIN(/;"	d	file:
ISR_END	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  #define ISR_END(/;"	d	file:
IT8951_2BPP	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_2BPP           = 0;$/;"	m	namespace:lgfx::v0	file:
IT8951_2BPP	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_2BPP           = 0;$/;"	m	namespace:lgfx::v1	file:
IT8951_3BPP	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_3BPP           = 1;$/;"	m	namespace:lgfx::v0	file:
IT8951_3BPP	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_3BPP           = 1;$/;"	m	namespace:lgfx::v1	file:
IT8951_4BPP	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_4BPP           = 2;$/;"	m	namespace:lgfx::v0	file:
IT8951_4BPP	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_4BPP           = 2;$/;"	m	namespace:lgfx::v1	file:
IT8951_8BPP	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_8BPP           = 3;$/;"	m	namespace:lgfx::v0	file:
IT8951_8BPP	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_8BPP           = 3;$/;"	m	namespace:lgfx::v1	file:
IT8951_BGVR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_BGVR       = (IT8951_DISPLAY_REG_BASE + 0x250); \/\/Bitmap (1bpp) image color table$/;"	m	namespace:lgfx::v0	file:
IT8951_BGVR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_BGVR       = (IT8951_DISPLAY_REG_BASE + 0x250); \/\/Bitmap (1bpp) image color table$/;"	m	namespace:lgfx::v1	file:
IT8951_DISPLAY_REG_BASE	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_DISPLAY_REG_BASE    = 0x1000; \/\/Register RW access$/;"	m	namespace:lgfx::v0	file:
IT8951_DISPLAY_REG_BASE	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_DISPLAY_REG_BASE    = 0x1000; \/\/Register RW access$/;"	m	namespace:lgfx::v1	file:
IT8951_I80CPCR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80CPCR             = (IT8951_SYS_REG_BASE + 0x04);$/;"	m	namespace:lgfx::v0	file:
IT8951_I80CPCR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80CPCR             = (IT8951_SYS_REG_BASE + 0x04);$/;"	m	namespace:lgfx::v1	file:
IT8951_I80_CMD_DPY_AREA	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_DPY_AREA     = 0x0034;$/;"	m	namespace:lgfx::v0	file:
IT8951_I80_CMD_DPY_AREA	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_DPY_AREA     = 0x0034;$/;"	m	namespace:lgfx::v1	file:
IT8951_I80_CMD_DPY_BUF_AREA	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_DPY_BUF_AREA = 0x0037;$/;"	m	namespace:lgfx::v0	file:
IT8951_I80_CMD_DPY_BUF_AREA	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_DPY_BUF_AREA = 0x0037;$/;"	m	namespace:lgfx::v1	file:
IT8951_I80_CMD_FILLRECT	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_FILLRECT     = 0x003A;$/;"	m	namespace:lgfx::v0	file:
IT8951_I80_CMD_FILLRECT	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_FILLRECT     = 0x003A;$/;"	m	namespace:lgfx::v1	file:
IT8951_I80_CMD_GET_DEV_INFO	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_GET_DEV_INFO = 0x0302;$/;"	m	namespace:lgfx::v0	file:
IT8951_I80_CMD_GET_DEV_INFO	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_GET_DEV_INFO = 0x0302;$/;"	m	namespace:lgfx::v1	file:
IT8951_I80_CMD_VCOM	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_VCOM         = 0x0039;$/;"	m	namespace:lgfx::v0	file:
IT8951_I80_CMD_VCOM	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_I80_CMD_VCOM         = 0x0039;$/;"	m	namespace:lgfx::v1	file:
IT8951_LDIMG_B_ENDIAN	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LDIMG_B_ENDIAN = 1;$/;"	m	namespace:lgfx::v0	file:
IT8951_LDIMG_B_ENDIAN	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LDIMG_B_ENDIAN = 1;$/;"	m	namespace:lgfx::v1	file:
IT8951_LISAR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LISAR               = (IT8951_MCSR_BASE_ADDR + 0x0008);$/;"	m	namespace:lgfx::v0	file:
IT8951_LISAR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LISAR               = (IT8951_MCSR_BASE_ADDR + 0x0008);$/;"	m	namespace:lgfx::v1	file:
IT8951_LUT01AF	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT01AF    = (IT8951_DISPLAY_REG_BASE + 0x0114); \/\/LUT0 and LUT1 Active Flag Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_LUT01AF	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT01AF    = (IT8951_DISPLAY_REG_BASE + 0x0114); \/\/LUT0 and LUT1 Active Flag Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_LUT0ABFRV	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0ABFRV  = (IT8951_DISPLAY_REG_BASE + 0x13C); \/\/LUT0 Alpha blend and Fill rectangle Value$/;"	m	namespace:lgfx::v0	file:
IT8951_LUT0ABFRV	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0ABFRV  = (IT8951_DISPLAY_REG_BASE + 0x13C); \/\/LUT0 Alpha blend and Fill rectangle Value$/;"	m	namespace:lgfx::v1	file:
IT8951_LUT0BADDR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0BADDR  = (IT8951_DISPLAY_REG_BASE + 0x0080); \/\/LUT0 Base Address Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_LUT0BADDR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0BADDR  = (IT8951_DISPLAY_REG_BASE + 0x0080); \/\/LUT0 Base Address Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_LUT0EWHR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0EWHR   = (IT8951_DISPLAY_REG_BASE + 0x0000); \/\/LUT0 Engine Width Height Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_LUT0EWHR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0EWHR   = (IT8951_DISPLAY_REG_BASE + 0x0000); \/\/LUT0 Engine Width Height Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_LUT0IMXY	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0IMXY   = (IT8951_DISPLAY_REG_BASE + 0x180); \/\/LUT0 Image buffer X\/Y offset Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_LUT0IMXY	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0IMXY   = (IT8951_DISPLAY_REG_BASE + 0x180); \/\/LUT0 Image buffer X\/Y offset Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_LUT0MFN	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0MFN    = (IT8951_DISPLAY_REG_BASE + 0x00C0); \/\/LUT0 Mode and Frame number Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_LUT0MFN	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0MFN    = (IT8951_DISPLAY_REG_BASE + 0x00C0); \/\/LUT0 Mode and Frame number Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_LUT0XYR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0XYR    = (IT8951_DISPLAY_REG_BASE + 0x0040); \/\/LUT0 XY Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_LUT0XYR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUT0XYR    = (IT8951_DISPLAY_REG_BASE + 0x0040); \/\/LUT0 XY Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_LUTAFSR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUTAFSR    = (IT8951_DISPLAY_REG_BASE + 0x224); \/\/LUT Status Reg (status of All LUT Engines)$/;"	m	namespace:lgfx::v0	file:
IT8951_LUTAFSR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_LUTAFSR    = (IT8951_DISPLAY_REG_BASE + 0x224); \/\/LUT Status Reg (status of All LUT Engines)$/;"	m	namespace:lgfx::v1	file:
IT8951_MCSR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_MCSR                = (IT8951_MCSR_BASE_ADDR + 0x0000);$/;"	m	namespace:lgfx::v0	file:
IT8951_MCSR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_MCSR                = (IT8951_MCSR_BASE_ADDR + 0x0000);$/;"	m	namespace:lgfx::v1	file:
IT8951_MCSR_BASE_ADDR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_MCSR_BASE_ADDR      = 0x0200;$/;"	m	namespace:lgfx::v0	file:
IT8951_MCSR_BASE_ADDR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_MCSR_BASE_ADDR      = 0x0200;$/;"	m	namespace:lgfx::v1	file:
IT8951_ROTATE_0	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_0    = 0;$/;"	m	namespace:lgfx::v0	file:
IT8951_ROTATE_0	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_0    = 0;$/;"	m	namespace:lgfx::v1	file:
IT8951_ROTATE_180	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_180  = 2;$/;"	m	namespace:lgfx::v0	file:
IT8951_ROTATE_180	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_180  = 2;$/;"	m	namespace:lgfx::v1	file:
IT8951_ROTATE_270	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_270  = 3;$/;"	m	namespace:lgfx::v0	file:
IT8951_ROTATE_270	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_270  = 3;$/;"	m	namespace:lgfx::v1	file:
IT8951_ROTATE_90	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_90   = 1;$/;"	m	namespace:lgfx::v0	file:
IT8951_ROTATE_90	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_ROTATE_90   = 1;$/;"	m	namespace:lgfx::v1	file:
IT8951_SYS_REG_BASE	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_SYS_REG_BASE        = 0x0000;$/;"	m	namespace:lgfx::v0	file:
IT8951_SYS_REG_BASE	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_SYS_REG_BASE        = 0x0000;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_LD_IMG	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_LD_IMG          = 0x0020;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_LD_IMG	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_LD_IMG          = 0x0020;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_LD_IMG_AREA	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_LD_IMG_AREA     = 0x0021;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_LD_IMG_AREA	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_LD_IMG_AREA     = 0x0021;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_LD_IMG_END	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_LD_IMG_END      = 0x0022;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_LD_IMG_END	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_LD_IMG_END      = 0x0022;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_MEM_BST_END	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_END     = 0x0015;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_MEM_BST_END	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_END     = 0x0015;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_MEM_BST_RD_S	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_RD_S    = 0x0013;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_MEM_BST_RD_S	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_RD_S    = 0x0013;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_MEM_BST_RD_T	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_RD_T    = 0x0012;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_MEM_BST_RD_T	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_RD_T    = 0x0012;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_MEM_BST_WR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_WR      = 0x0014;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_MEM_BST_WR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_MEM_BST_WR      = 0x0014;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_REG_RD	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_REG_RD          = 0x0010;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_REG_RD	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_REG_RD          = 0x0010;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_REG_WR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_REG_WR          = 0x0011;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_REG_WR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_REG_WR          = 0x0011;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_SLEEP	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_SLEEP           = 0x0003;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_SLEEP	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_SLEEP           = 0x0003;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_STANDBY	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_STANDBY         = 0x0002;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_STANDBY	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_STANDBY         = 0x0002;$/;"	m	namespace:lgfx::v1	file:
IT8951_TCON_SYS_RUN	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_SYS_RUN         = 0x0001;$/;"	m	namespace:lgfx::v0	file:
IT8951_TCON_SYS_RUN	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_TCON_SYS_RUN         = 0x0001;$/;"	m	namespace:lgfx::v1	file:
IT8951_UP0SR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_UP0SR      = (IT8951_DISPLAY_REG_BASE + 0x134); \/\/Update Parameter0 Setting Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_UP0SR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_UP0SR      = (IT8951_DISPLAY_REG_BASE + 0x134); \/\/Update Parameter0 Setting Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_UP1SR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_UP1SR      = (IT8951_DISPLAY_REG_BASE + 0x138); \/\/Update Parameter1 Setting Reg$/;"	m	namespace:lgfx::v0	file:
IT8951_UP1SR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_UP1SR      = (IT8951_DISPLAY_REG_BASE + 0x138); \/\/Update Parameter1 Setting Reg$/;"	m	namespace:lgfx::v1	file:
IT8951_UPBBADDR	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_UPBBADDR   = (IT8951_DISPLAY_REG_BASE + 0x17C); \/\/Update Buffer Base Address$/;"	m	namespace:lgfx::v0	file:
IT8951_UPBBADDR	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t IT8951_UPBBADDR   = (IT8951_DISPLAY_REG_BASE + 0x17C); \/\/Update Buffer Base Address$/;"	m	namespace:lgfx::v1	file:
ITouch	src/lgfx/v1/Touch.hpp	/^  struct ITouch$/;"	s	namespace:lgfx::v1
Ipsf	src/lgfx/utility/lgfx_tjpgd.c	/^static const uint16_t Ipsf[64] = {	\/* See also aa_idct.png *\/$/;"	v	file:
JDR_FMT1	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_FMT1,	\/* 6: Data format error (may be damaged data) *\/$/;"	e	enum:__anon551
JDR_FMT2	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_FMT2,	\/* 7: Right format but not supported *\/$/;"	e	enum:__anon551
JDR_FMT3	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_FMT3	\/* 8: Not supported JPEG standard *\/$/;"	e	enum:__anon551
JDR_INP	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_INP,	\/* 2: Device error or wrong termination of input stream *\/$/;"	e	enum:__anon551
JDR_INTR	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_INTR,	\/* 1: Interrupted by output function *\/	$/;"	e	enum:__anon551
JDR_MEM1	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_MEM1,	\/* 3: Insufficient memory pool for the image *\/$/;"	e	enum:__anon551
JDR_MEM2	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_MEM2,	\/* 4: Insufficient stream input buffer *\/$/;"	e	enum:__anon551
JDR_OK	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_OK = 0,	\/* 0: Succeeded *\/$/;"	e	enum:__anon551
JDR_PAR	src/lgfx/utility/lgfx_tjpgd.h	/^	JDR_PAR,	\/* 5: Parameter error *\/$/;"	e	enum:__anon551
JD_BAYER	src/lgfx/utility/lgfx_tjpgd.h	/^#define JD_BAYER	/;"	d
JD_FORMAT	src/lgfx/utility/lgfx_tjpgd.h	/^#define JD_FORMAT	/;"	d
JD_SZBUF	src/lgfx/utility/lgfx_tjpgd.h	/^#define	JD_SZBUF	/;"	d
JD_TBLCLIP	src/lgfx/utility/lgfx_tjpgd.h	/^#define JD_TBLCLIP	/;"	d
JD_USE_SCALE	src/lgfx/utility/lgfx_tjpgd.h	/^#define	JD_USE_SCALE	/;"	d
JPEG_DIV_2	src/lgfx/v0/lgfx_common.hpp	/^      JPEG_DIV_2,$/;"	e	enum:lgfx::v0::jpeg_div::jpeg_div_t
JPEG_DIV_2	src/lgfx/v1/misc/enum.hpp	/^      JPEG_DIV_2,$/;"	e	enum:lgfx::v1::jpeg_div::jpeg_div_t
JPEG_DIV_4	src/lgfx/v0/lgfx_common.hpp	/^      JPEG_DIV_4,$/;"	e	enum:lgfx::v0::jpeg_div::jpeg_div_t
JPEG_DIV_4	src/lgfx/v1/misc/enum.hpp	/^      JPEG_DIV_4,$/;"	e	enum:lgfx::v1::jpeg_div::jpeg_div_t
JPEG_DIV_8	src/lgfx/v0/lgfx_common.hpp	/^      JPEG_DIV_8,$/;"	e	enum:lgfx::v0::jpeg_div::jpeg_div_t
JPEG_DIV_8	src/lgfx/v1/misc/enum.hpp	/^      JPEG_DIV_8,$/;"	e	enum:lgfx::v1::jpeg_div::jpeg_div_t
JPEG_DIV_MAX	src/lgfx/v0/lgfx_common.hpp	/^      JPEG_DIV_MAX$/;"	e	enum:lgfx::v0::jpeg_div::jpeg_div_t
JPEG_DIV_MAX	src/lgfx/v1/misc/enum.hpp	/^      JPEG_DIV_MAX$/;"	e	enum:lgfx::v1::jpeg_div::jpeg_div_t
JPEG_DIV_NONE	src/lgfx/v0/lgfx_common.hpp	/^      JPEG_DIV_NONE,$/;"	e	enum:lgfx::v0::jpeg_div::jpeg_div_t
JPEG_DIV_NONE	src/lgfx/v1/misc/enum.hpp	/^      JPEG_DIV_NONE,$/;"	e	enum:lgfx::v1::jpeg_div::jpeg_div_t
JRECT	src/lgfx/utility/lgfx_tjpgd.h	/^} JRECT;$/;"	t	typeref:struct:__anon552
JRESULT	src/lgfx/utility/lgfx_tjpgd.h	/^} JRESULT;$/;"	t	typeref:enum:__anon551
JTAG_DUMMY_CLOCK	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::LOAD_FPGA::JTAG_DUMMY_CLOCK(uint32_t msec)$/;"	f	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
JTAG_EF_ERASE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    JTAG_EF_ERASE     = 0x75,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
JTAG_EF_PROGRAM	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    JTAG_EF_PROGRAM   = 0x71,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
JTAG_EF_READ	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    JTAG_EF_READ      = 0x73,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
JTAG_MoveTap	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::LOAD_FPGA::JTAG_MoveTap(TAP_TypeDef TAP_From, TAP_TypeDef TAP_To)$/;"	f	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
JTAG_ReadStatus	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  uint32_t Panel_M5HDMI::LOAD_FPGA::JTAG_ReadStatus()$/;"	f	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
JTAG_TapMove_Inner	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::LOAD_FPGA::JTAG_TapMove_Inner(bool tms_value, size_t clock_count)$/;"	f	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
JTAG_Write	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::LOAD_FPGA::JTAG_Write(uint_fast8_t din, bool tms, bool LSB, size_t len)$/;"	f	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
JTAG_WriteInst	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::LOAD_FPGA::JTAG_WriteInst(uint8_t inst)$/;"	f	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
LCMCTRL	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t LCMCTRL  = 0xC0;      \/\/ LCM control$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
LDB_WORD	src/lgfx/utility/lgfx_tjpgd.c	/^static inline uint16_t LDB_WORD(uint8_t* ptr) {$/;"	f	file:
LEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t LEN:8;            \/*!< bit:  0.. 7  Data Length                        *\/$/;"	m	struct:__anon445::__anon446
LEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t LEN:8;            \/*!< bit:  0.. 7  Data Length                        *\/$/;"	m	struct:__anon231::__anon232
LENEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t LENEN:1;          \/*!< bit:      8  Data Length Enable                 *\/$/;"	m	struct:__anon445::__anon446
LENEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t LENEN:1;          \/*!< bit:      8  Data Length Enable                 *\/$/;"	m	struct:__anon231::__anon232
LENERR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t LENERR:1;         \/*!< bit:     11  Transaction Length Error           *\/$/;"	m	struct:__anon441::__anon442
LENERR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t LENERR:1;         \/*!< bit:     11  Transaction Length Error           *\/$/;"	m	struct:__anon227::__anon228
LENGTH	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t LENGTH:1;         \/*!< bit:      4  LENGTH Synchronization Busy        *\/$/;"	m	struct:__anon443::__anon444
LENGTH	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_LENGTH_Type    LENGTH;      \/**< \\brief Offset: 0x22 (R\/W 16) SPI Length *\/$/;"	m	struct:__anon453
LENGTH	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t LENGTH:1;         \/*!< bit:      4  LENGTH Synchronization Busy        *\/$/;"	m	struct:__anon229::__anon230
LENGTH	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_LENGTH_Type    LENGTH;      \/**< \\brief Offset: 0x22 (R\/W 16) SPI Length *\/$/;"	m	struct:__anon239
LGFX	examples/Test/build_test/main/main.cpp	/^    LGFX(void)$/;"	f	class:LGFX
LGFX	examples/Test/build_test/main/main.cpp	/^  class LGFX : public lgfx::LGFX_Device$/;"	c	file:
LGFX	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:lgfx::v0::LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^  class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c	namespace:lgfx::v0
LGFX	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^  LGFX(void) : lgfx::LGFX_SPI<lgfx::LGFX_Config>()$/;"	f	class:LGFX
LGFX	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^class LGFX : public lgfx::LGFX_SPI<lgfx::LGFX_Config>$/;"	c
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^  class LGFX : public lgfx::LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_FrameBuffer.hpp	/^    LGFX(int width = 320, int height = 240)$/;"	f	class:lgfx::v1::LGFX
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_FrameBuffer.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_OpenCV.hpp	/^    LGFX(int width = 320, int height = 240)$/;"	f	class:lgfx::v1::LGFX
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_OpenCV.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^    LGFX(void) \/\/ コンストラクタ内で定義を行う$/;"	f	struct:lgfx::v1::LGFX
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^  struct LGFX : public LGFX_Device$/;"	s	namespace:lgfx::v1
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_sdl.hpp	/^    LGFX(int width = 320, int height = 240, uint_fast8_t scaling_x = 0, uint_fast8_t scaling_y = 0)$/;"	f	class:lgfx::v1::LGFX
LGFX	src/lgfx/v1_autodetect/LGFX_AutoDetect_sdl.hpp	/^  class LGFX : public LGFX_Device$/;"	c	namespace:lgfx::v1
LGFX	src/lgfx_user/LGFX_ESP32S2_DSO138_Parallel8.hpp	/^    LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_ESP32S2_DSO138_Parallel8.hpp	/^class LGFX : public lgfx::LGFX_Device {$/;"	c
LGFX	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_ESP32S3_wywy_ESP32HMI.h	/^    LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_ESP32S3_wywy_ESP32HMI.h	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_ESP32_sample.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_ESP32_sample.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_ESP8266_sample.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_ESP8266_sample.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_RP2040_096_Waveshare_sample.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_RP2040_096_Waveshare_sample.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_SAMD21_sample.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_SAMD21_sample.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_SAMD51_sample.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_SAMD51_sample.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFX	src/lgfx_user/LGFX_SPRESENSE_sample.hpp	/^  LGFX(void)$/;"	f	class:LGFX
LGFX	src/lgfx_user/LGFX_SPRESENSE_sample.hpp	/^class LGFX : public lgfx::LGFX_Device$/;"	c
LGFXBase	src/lgfx/v0/LGFXBase.hpp	/^    LGFXBase() {}$/;"	f	class:lgfx::v0::LGFXBase
LGFXBase	src/lgfx/v0/LGFXBase.hpp	/^  class LGFXBase$/;"	c	namespace:lgfx::v0
LGFXBase	src/lgfx/v1/LGFXBase.hpp	/^  class LGFXBase$/;"	c	namespace:lgfx::v1
LGFX_AUTODETECT	examples/Test/build_test/main/main.cpp	/^  #define LGFX_AUTODETECT$/;"	d	file:
LGFX_BASE_HPP_	src/lgfx/v0/LGFXBase.hpp	/^#define LGFX_BASE_HPP_$/;"	d
LGFX_Button	src/lgfx/v1/LGFX_Button.hpp	/^  class LGFX_Button$/;"	c	namespace:lgfx::v1
LGFX_COMMON_HPP_	src/lgfx/v0/lgfx_common.hpp	/^#define LGFX_COMMON_HPP_$/;"	d
LGFX_Config	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx::v0
LGFX_Config	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_Config	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^  struct LGFX_Config$/;"	s	namespace:lgfx
LGFX_DDUINO32_XS	src/lgfx/v0_init.hpp	/^  #define LGFX_DDUINO32_XS$/;"	d
LGFX_DDUINO32_XS	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_DDUINO32_XS$/;"	d
LGFX_DDUINO32_XS	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_DDUINO32_XS$/;"	d
LGFX_DEFAULT_BOARD	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_DEFAULT_BOARD /;"	d
LGFX_DEVICE_HPP_	src/lgfx/v0/LGFX_Device.hpp	/^#define LGFX_DEVICE_HPP_$/;"	d
LGFX_Device	src/lgfx/v0/LGFX_Device.hpp	/^  class LGFX_Device : public LovyanGFX$/;"	c	namespace:lgfx::v0
LGFX_Device	src/lgfx/v1/LGFXBase.cpp	/^  LGFX_Device::LGFX_Device(void)$/;"	f	class:lgfx::v1::LGFX_Device
LGFX_Device	src/lgfx/v1/LGFXBase.hpp	/^  class LGFX_Device : public LovyanGFX$/;"	c	namespace:lgfx::v1
LGFX_EFUSE_WORKAROUND	src/lgfx/v1/platforms/esp32/common.cpp	/^     #define LGFX_EFUSE_WORKAROUND$/;"	d	file:
LGFX_EFUSE_WORKAROUND	src/lgfx/v1/platforms/esp32/common.cpp	/^    #define LGFX_EFUSE_WORKAROUND$/;"	d	file:
LGFX_ENABLE_V0	src/lgfx/v0/lgfx_common.hpp	/^  #define LGFX_ENABLE_V0$/;"	d
LGFX_ENABLE_V0	src/lgfx/v0/lgfx_common.hpp	/^ #define LGFX_ENABLE_V0$/;"	d
LGFX_ESP32_COMMON_HPP_	src/lgfx/v0/platforms/esp32_common.hpp	/^#define LGFX_ESP32_COMMON_HPP_$/;"	d
LGFX_ESP32_S3_BOX	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  #define LGFX_ESP32_S3_BOX$/;"	d
LGFX_ESP32_S3_BOX	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_ESP32_S3_BOX$/;"	d
LGFX_ESP32_S3_BOX_LITE	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_ESP32_S3_BOX_LITE$/;"	d
LGFX_ESP32_SPI_DMA_CH	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^  #define LGFX_ESP32_SPI_DMA_CH /;"	d
LGFX_ESP32_SPI_DMA_CH	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^#define LGFX_ESP32_SPI_DMA_CH /;"	d
LGFX_ESP_WROVER_KIT	src/lgfx/v0_init.hpp	/^  #define LGFX_ESP_WROVER_KIT$/;"	d
LGFX_ESP_WROVER_KIT	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_ESP_WROVER_KIT$/;"	d
LGFX_ESP_WROVER_KIT	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_ESP_WROVER_KIT$/;"	d
LGFX_FEATHER_ESP32_S2_TFT	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^  #define LGFX_FEATHER_ESP32_S2_TFT$/;"	d
LGFX_FEATHER_ESP32_S2_TFT	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_FEATHER_ESP32_S2_TFT$/;"	d
LGFX_FEATHER_ESP32_S3_TFT	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  #define LGFX_FEATHER_ESP32_S3_TFT$/;"	d
LGFX_FEATHER_ESP32_S3_TFT	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_FEATHER_ESP32_S3_TFT$/;"	d
LGFX_FILESYSTEM_SUPPORT_HPP_	src/lgfx/v0/lgfx_filesystem_support.hpp	/^#define LGFX_FILESYSTEM_SUPPORT_HPP_$/;"	d
LGFX_FILESYSTEM_SUPPORT_HPP_	src/lgfx/v1/lgfx_filesystem_support.hpp	/^#define LGFX_FILESYSTEM_SUPPORT_HPP_$/;"	d
LGFX_FILESYSTEM_Support	src/lgfx/v0/lgfx_filesystem_support.hpp	/^  class LGFX_FILESYSTEM_Support : public Base$/;"	c	namespace:lgfx::v0
LGFX_FILESYSTEM_Support	src/lgfx/v1/lgfx_filesystem_support.hpp	/^  class LGFX_FILESYSTEM_Support : public Base$/;"	c	namespace:lgfx::v1
LGFX_FONTS_HPP_	src/lgfx/v0/lgfx_fonts.hpp	/^#define LGFX_FONTS_HPP_$/;"	d
LGFX_FONTS_HPP_	src/lgfx/v1/lgfx_fonts.hpp	/^#define LGFX_FONTS_HPP_$/;"	d
LGFX_FONT_JAPAN_H_	src/lgfx/Fonts/IPA/lgfx_font_japan.h	/^#define LGFX_FONT_JAPAN_H_$/;"	d
LGFX_FUNCTION_GENERATOR	src/lgfx/v1/LGFXBase.hpp	/^  #define LGFX_FUNCTION_GENERATOR(/;"	d
LGFX_FUNCTION_GENERATOR	src/lgfx/v1/LGFXBase.hpp	/^  #undef LGFX_FUNCTION_GENERATOR$/;"	d
LGFX_FUNCTION_GENERATOR	src/lgfx/v1/lgfx_filesystem_support.hpp	/^  #define LGFX_FUNCTION_GENERATOR(/;"	d
LGFX_FUNCTION_GENERATOR	src/lgfx/v1/lgfx_filesystem_support.hpp	/^  #undef LGFX_FUNCTION_GENERATOR$/;"	d
LGFX_FUNHOUSE	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^  #define LGFX_FUNHOUSE$/;"	d
LGFX_FUNHOUSE	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_FUNHOUSE$/;"	d
LGFX_HALLOWING_M0	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    #define LGFX_HALLOWING_M0$/;"	d
LGFX_HALLOWING_M4	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^  #define LGFX_HALLOWING_M4$/;"	d
LGFX_I2C	examples/Test/build_test/main/main.cpp	/^    LGFX_I2C(void)$/;"	f	class:LGFX_I2C
LGFX_I2C	examples/Test/build_test/main/main.cpp	/^  class LGFX_I2C : public lgfx::LGFX_Device$/;"	c	file:
LGFX_I2S_STD_ENABLED	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^ #define LGFX_I2S_STD_ENABLED$/;"	d	file:
LGFX_IDF_V5	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  #define LGFX_IDF_V5$/;"	d	file:
LGFX_IDF_V5	src/lgfx/v1/platforms/esp32/common.hpp	/^  #define LGFX_IDF_V5$/;"	d
LGFX_INLINE	src/lgfx/v1/LGFXBase.hpp	/^#define LGFX_INLINE /;"	d
LGFX_INLINE	src/lgfx/v1/LGFXBase.hpp	/^#undef LGFX_INLINE$/;"	d
LGFX_INLINE	src/lgfx/v1/LGFX_Sprite.hpp	/^#define LGFX_INLINE /;"	d
LGFX_INLINE	src/lgfx/v1/LGFX_Sprite.hpp	/^#undef LGFX_INLINE$/;"	d
LGFX_INLINE	src/lgfx/v1/misc/DataWrapper.hpp	/^ #define LGFX_INLINE /;"	d
LGFX_INLINE	src/lgfx/v1/misc/DataWrapper.hpp	/^#undef LGFX_INLINE$/;"	d
LGFX_INLINE	src/lgfx/v1/misc/colortype.hpp	/^ #define LGFX_INLINE /;"	d
LGFX_INLINE	src/lgfx/v1/misc/colortype.hpp	/^#define LGFX_INLINE /;"	d
LGFX_INLINE	src/lgfx/v1/misc/colortype.hpp	/^#undef LGFX_INLINE$/;"	d
LGFX_INLINE	src/lgfx/v1/misc/range.hpp	/^#define LGFX_INLINE /;"	d
LGFX_INLINE	src/lgfx/v1/misc/range.hpp	/^#undef LGFX_INLINE$/;"	d
LGFX_INLINE_T	src/lgfx/v1/LGFXBase.hpp	/^#define LGFX_INLINE_T /;"	d
LGFX_INLINE_T	src/lgfx/v1/LGFXBase.hpp	/^#undef LGFX_INLINE_T$/;"	d
LGFX_LOLIN_D32_PRO	src/lgfx/v0_init.hpp	/^  #define LGFX_LOLIN_D32_PRO$/;"	d
LGFX_LOLIN_D32_PRO	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_LOLIN_D32_PRO$/;"	d
LGFX_LOLIN_D32_PRO	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_LOLIN_D32_PRO$/;"	d
LGFX_M5PAPER	src/lgfx/v0_init.hpp	/^  #define LGFX_M5PAPER$/;"	d
LGFX_M5PAPER	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_M5PAPER$/;"	d
LGFX_M5PAPER	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_M5PAPER$/;"	d
LGFX_M5STACK	src/lgfx/v0_init.hpp	/^  #define LGFX_M5STACK$/;"	d
LGFX_M5STACK	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_M5STACK$/;"	d
LGFX_M5STACK	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_M5STACK$/;"	d
LGFX_M5STACK_CORE2	src/lgfx/v0_init.hpp	/^  #define LGFX_M5STACK_CORE2$/;"	d
LGFX_M5STACK_CORE2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_M5STACK_CORE2$/;"	d
LGFX_M5STACK_CORE2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_M5STACK_CORE2$/;"	d
LGFX_M5STACK_COREINK	src/lgfx/v0_init.hpp	/^  #define LGFX_M5STACK_COREINK$/;"	d
LGFX_M5STACK_COREINK	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_M5STACK_COREINK$/;"	d
LGFX_M5STACK_COREINK	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_M5STACK_COREINK$/;"	d
LGFX_M5STICK_C	src/lgfx/v0_init.hpp	/^  #define LGFX_M5STICK_C$/;"	d
LGFX_M5STICK_C	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_M5STICK_C$/;"	d
LGFX_M5STICK_C	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_M5STICK_C$/;"	d
LGFX_M5TOUGH	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_M5TOUGH$/;"	d
LGFX_M5TOUGH	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_M5TOUGH$/;"	d
LGFX_ODROID_GO	src/lgfx/v0_init.hpp	/^  #define LGFX_ODROID_GO$/;"	d
LGFX_ODROID_GO	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_ODROID_GO$/;"	d
LGFX_ODROID_GO	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_ODROID_GO$/;"	d
LGFX_PANEL_COMMON_HPP_	src/lgfx/v0/panel/PanelCommon.hpp	/^#define LGFX_PANEL_COMMON_HPP_$/;"	d
LGFX_PANEL_GDEW0154M09_HPP_	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^#define LGFX_PANEL_GDEW0154M09_HPP_$/;"	d
LGFX_PANEL_HX8357_HPP_	src/lgfx/v0/panel/Panel_HX8357.hpp	/^#define LGFX_PANEL_HX8357_HPP_$/;"	d
LGFX_PANEL_ILI9163_HPP_	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^#define LGFX_PANEL_ILI9163_HPP_$/;"	d
LGFX_PANEL_ILI9341_HPP_	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^#define LGFX_PANEL_ILI9341_HPP_$/;"	d
LGFX_PANEL_ILI9481_HPP_	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^#define LGFX_PANEL_ILI9481_HPP_$/;"	d
LGFX_PANEL_ILI9486_HPP_	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^#define LGFX_PANEL_ILI9486_HPP_$/;"	d
LGFX_PANEL_ILI9488_HPP_	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^#define LGFX_PANEL_ILI9488_HPP_$/;"	d
LGFX_PANEL_ILITEK_COMMON_HPP_	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^#define LGFX_PANEL_ILITEK_COMMON_HPP_$/;"	d
LGFX_PANEL_IT8951_HPP_	src/lgfx/v0/panel/Panel_IT8951.hpp	/^#define LGFX_PANEL_IT8951_HPP_$/;"	d
LGFX_PANEL_SSD1351_HPP_	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^#define LGFX_PANEL_SSD1351_HPP_$/;"	d
LGFX_PANEL_ST7735_HPP_	src/lgfx/v0/panel/Panel_ST7735.hpp	/^#define LGFX_PANEL_ST7735_HPP_$/;"	d
LGFX_PANEL_ST7789_HPP_	src/lgfx/v0/panel/Panel_ST7789.hpp	/^#define LGFX_PANEL_ST7789_HPP_$/;"	d
LGFX_PANEL_ST7796_HPP_	src/lgfx/v0/panel/Panel_ST7796.hpp	/^#define LGFX_PANEL_ST7796_HPP_$/;"	d
LGFX_PARALLEL	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    LGFX_PARALLEL() : LGFX_Device()$/;"	f	class:lgfx::v0::LGFX_PARALLEL
LGFX_PARALLEL	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  class LGFX_PARALLEL : public LGFX_Device$/;"	c	namespace:lgfx::v0
LGFX_PARALLEL_ESP32_HPP_	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^#define LGFX_PARALLEL_ESP32_HPP_$/;"	d
LGFX_PNGLE_NON_TRANS_COLOR	src/lgfx/utility/lgfx_pngle.c	/^#define LGFX_PNGLE_NON_TRANS_COLOR /;"	d	file:
LGFX_PNGLE_OUTBUF_LEN	src/lgfx/utility/lgfx_pngle.c	/^#define LGFX_PNGLE_OUTBUF_LEN /;"	d	file:
LGFX_PNGLE_READBUF_LEN	src/lgfx/utility/lgfx_pngle.c	/^#define LGFX_PNGLE_READBUF_LEN /;"	d	file:
LGFX_PRINTF_ENABLED	src/lgfx/v1/LGFXBase.hpp	/^#define LGFX_PRINTF_ENABLED$/;"	d
LGFX_PYBADGE	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^  #define LGFX_PYBADGE$/;"	d
LGFX_PYGAMER	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^  #define LGFX_PYGAMER$/;"	d
LGFX_QOI_READBUF_LEN	src/lgfx/utility/lgfx_qoi.c	/^#define LGFX_QOI_READBUF_LEN /;"	d	file:
LGFX_SAMD51_COMMON_HPP_	src/lgfx/v0/platforms/samd51_common.hpp	/^#define LGFX_SAMD51_COMMON_HPP_$/;"	d
LGFX_SDFAT_TYPE	src/lgfx/v1/LGFX_Sprite.hpp	/^   #define LGFX_SDFAT_TYPE /;"	d
LGFX_SDFAT_TYPE	src/lgfx/v1/LGFX_Sprite.hpp	/^  #undef LGFX_SDFAT_TYPE$/;"	d
LGFX_SDFAT_TYPE	src/lgfx/v1/lgfx_filesystem_support.hpp	/^   #define LGFX_SDFAT_TYPE /;"	d
LGFX_SDFAT_TYPE	src/lgfx/v1/lgfx_filesystem_support.hpp	/^  #undef LGFX_SDFAT_TYPE$/;"	d
LGFX_SDFAT_TYPE	src/lgfx/v1/misc/DataWrapper.hpp	/^   #define LGFX_SDFAT_TYPE /;"	d
LGFX_SDFAT_TYPE	src/lgfx/v1/misc/DataWrapper.hpp	/^ #undef LGFX_SDFAT_TYPE$/;"	d
LGFX_SEEED_XIAO_EXPANSION	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    #define LGFX_SEEED_XIAO_EXPANSION$/;"	d
LGFX_SPI	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    LGFX_SPI() : LGFX_Device()$/;"	f	class:lgfx::v0::LGFX_SPI
LGFX_SPI	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^  class LGFX_SPI : public LGFX_Device$/;"	c	namespace:lgfx::v0
LGFX_SPI	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    LGFX_SPI() : LGFX_Device()$/;"	f	class:lgfx::v0::LGFX_SPI
LGFX_SPI	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  class LGFX_SPI : public LGFX_Device$/;"	c	namespace:lgfx::v0
LGFX_SPI_DEFAULT	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^ #define LGFX_SPI_DEFAULT /;"	d
LGFX_SPI_ESP32_HPP_	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^#define LGFX_SPI_ESP32_HPP_$/;"	d
LGFX_SPI_SAMD51_HPP_	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define LGFX_SPI_SAMD51_HPP_$/;"	d
LGFX_SPRITE_HPP_	src/lgfx/v0/LGFX_Sprite.hpp	/^#define LGFX_SPRITE_HPP_$/;"	d
LGFX_Sprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    LGFX_Sprite()$/;"	f	class:lgfx::v0::LGFX_Sprite
LGFX_Sprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    LGFX_Sprite(LovyanGFX* parent)$/;"	f	class:lgfx::v0::LGFX_Sprite
LGFX_Sprite	src/lgfx/v0/LGFX_Sprite.hpp	/^  class LGFX_Sprite : public LovyanGFX$/;"	c	namespace:lgfx::v0
LGFX_Sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_Sprite()$/;"	f	class:lgfx::v1::LGFX_Sprite
LGFX_Sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_Sprite(LovyanGFX* parent)$/;"	f	class:lgfx::v1::LGFX_Sprite
LGFX_Sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^  class LGFX_Sprite : public LovyanGFX$/;"	c	namespace:lgfx::v1
LGFX_TFT_ESPI_HPP_	src/LGFX_TFT_eSPI.hpp	/^#define LGFX_TFT_ESPI_HPP_$/;"	d
LGFX_TOUCH_COMMON_HPP_	src/lgfx/v0/touch/TouchCommon.hpp	/^#define LGFX_TOUCH_COMMON_HPP_$/;"	d
LGFX_TOUCH_I2C_FT5x06_HPP_	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^#define LGFX_TOUCH_I2C_FT5x06_HPP_$/;"	d
LGFX_TOUCH_I2C_GT911_HPP_	src/lgfx/v0/touch/Touch_GT911.hpp	/^#define LGFX_TOUCH_I2C_GT911_HPP_$/;"	d
LGFX_TOUCH_STMPE610_HPP_	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^#define LGFX_TOUCH_STMPE610_HPP_$/;"	d
LGFX_TOUCH_XPT2046_HPP_	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^#define LGFX_TOUCH_XPT2046_HPP_$/;"	d
LGFX_TTGO_TS	src/lgfx/v0_init.hpp	/^  #define LGFX_TTGO_TS$/;"	d
LGFX_TTGO_TS	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_TTGO_TS$/;"	d
LGFX_TTGO_TS	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_TTGO_TS$/;"	d
LGFX_TTGO_TWATCH	src/lgfx/v0_init.hpp	/^  #define LGFX_TTGO_TWATCH$/;"	d
LGFX_TTGO_TWATCH	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  #define LGFX_TTGO_TWATCH$/;"	d
LGFX_TTGO_TWATCH	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  #define LGFX_TTGO_TWATCH$/;"	d
LGFX_URL_MAXLENGTH	src/lgfx/v1/lgfx_filesystem_support.hpp	/^#define LGFX_URL_MAXLENGTH /;"	d
LGFX_URL_MAXLENGTH	src/lgfx/v1/lgfx_filesystem_support.hpp	/^#undef LGFX_URL_MAXLENGTH$/;"	d
LGFX_USE_CACHE_WRITEBACK_ADDR	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^   #define LGFX_USE_CACHE_WRITEBACK_ADDR$/;"	d	file:
LGFX_USE_V1	examples/Test/build_test/main/main.cpp	/^  #define LGFX_USE_V1$/;"	d	file:
LGFX_USE_V1	examples_for_PC/CMake_FrameBuffer/LGFX_LINUX_FB.cpp	/^#define LGFX_USE_V1$/;"	d	file:
LGFX_USE_V1	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^#define LGFX_USE_V1$/;"	d	file:
LGFX_USE_V1	examples_for_PC/CMake_OpenCV/LGFXOpenCV.cpp	/^#define LGFX_USE_V1$/;"	d	file:
LGFX_USE_V1	examples_for_PC/CMake_OpenCV/user_code.cpp	/^#define LGFX_USE_V1$/;"	d	file:
LGFX_USE_V1	examples_for_PC/CMake_SDL/LGFX_SDL.cpp	/^#define LGFX_USE_V1$/;"	d	file:
LGFX_USE_V1	examples_for_PC/CMake_SDL/user_code.cpp	/^#define LGFX_USE_V1$/;"	d	file:
LGFX_USE_V1	src/lgfx/v1_autodetect/common.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_ESP32S2_DSO138_Parallel8.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_ESP32S3_wywy_ESP32HMI.h	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_ESP32_sample.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_ESP8266_sample.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_RP2040_096_Waveshare_sample.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_SAMD21_sample.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_SAMD51_sample.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/LGFX_SPRESENSE_sample.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/M5AtomDisplay.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/M5UnitLCD.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_USE_V1	src/lgfx_user/M5UnitOLED.hpp	/^#define LGFX_USE_V1$/;"	d
LGFX_VERSION_MAJOR	src/lgfx/v0/gitTagVersion.h	/^#define LGFX_VERSION_MAJOR /;"	d
LGFX_VERSION_MAJOR	src/lgfx/v1/gitTagVersion.h	/^#define LGFX_VERSION_MAJOR /;"	d
LGFX_VERSION_MINOR	src/lgfx/v0/gitTagVersion.h	/^#define LGFX_VERSION_MINOR /;"	d
LGFX_VERSION_MINOR	src/lgfx/v1/gitTagVersion.h	/^#define LGFX_VERSION_MINOR /;"	d
LGFX_VERSION_PATCH	src/lgfx/v0/gitTagVersion.h	/^#define LGFX_VERSION_PATCH /;"	d
LGFX_VERSION_PATCH	src/lgfx/v1/gitTagVersion.h	/^#define LGFX_VERSION_PATCH /;"	d
LGFX_WIO_TERMINAL	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^  #define LGFX_WIO_TERMINAL$/;"	d
LIBRARY_NAME	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  static constexpr char LIBRARY_NAME[] = "LovyanGFX";$/;"	m	namespace:lgfx::v1
LIBRARY_NAME	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^  static constexpr char LIBRARY_NAME[] = "LovyanGFX";$/;"	m	namespace:lgfx::v1
LIBRARY_NAME	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  static constexpr char LIBRARY_NAME[] = "LovyanGFX";$/;"	m	namespace:lgfx::v1
LIBRARY_NAME	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  static constexpr char LIBRARY_NAME[] = "LovyanGFX";$/;"	m	namespace:lgfx::v1
LIGHTGREY	src/LGFX_TFT_eSPI.hpp	/^    #undef LIGHTGREY$/;"	d
LIGHTGREY	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int LIGHTGREY       = 0xC618;      \/* 192, 192, 192 *\/$/;"	m	namespace:lgfx::ili9341_colors
LINECHANGE_PERIOD_COUNT	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr int32_t LINECHANGE_PERIOD_COUNT = 1;$/;"	m	class:lgfx::v1::Bus_HUB75
LOAD_FPGA	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  Panel_M5HDMI::LOAD_FPGA::LOAD_FPGA(uint_fast8_t _TCK_PIN, uint_fast8_t _TDI_PIN, uint_fast8_t _TDO_PIN, uint_fast8_t _TMS_PIN)$/;"	f	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
LOAD_FPGA	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    class LOAD_FPGA$/;"	c	struct:lgfx::v1::Panel_M5HDMI
LOCK_VERSION	src/lgfx/utility/lgfx_qrcode.h	/^#define LOCK_VERSION /;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_CONFIG_HPP_	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^#define LOVYANGFX_CONFIG_HPP_$/;"	d
LOVYANGFX_HPP_	src/LovyanGFX.hpp	/^#define LOVYANGFX_HPP_$/;"	d
LOVYANGFX_VERSION	src/lgfx/v0/gitTagVersion.h	/^#define LOVYANGFX_VERSION /;"	d
LOVYANGFX_VERSION	src/lgfx/v1/gitTagVersion.h	/^#define LOVYANGFX_VERSION /;"	d
LUPD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  LUPD:1;           \/*!< bit:      1  Lock Update                        *\/$/;"	m	struct:__anon348::__anon349
LUPD	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  LUPD:1;           \/*!< bit:      1  Lock Update                        *\/$/;"	m	struct:__anon350::__anon351
LUPD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  LUPD:1;           \/*!< bit:      1  Lock Update                        *\/$/;"	m	struct:__anon134::__anon135
LUPD	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  LUPD:1;           \/*!< bit:      1  Lock Update                        *\/$/;"	m	struct:__anon136::__anon137
LUTCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO CCL_LUTCTRL_Type          LUTCTRL[4];  \/**< \\brief Offset: 0x8 (R\/W 32) LUT Control x *\/$/;"	m	struct:__anon312
LUTCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO CCL_LUTCTRL_Type          LUTCTRL[4];  \/**< \\brief Offset: 0x8 (R\/W 32) LUT Control x *\/$/;"	m	struct:__anon98
LUTEI	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t LUTEI:1;          \/*!< bit:     21  LUT Event Input Enable             *\/$/;"	m	struct:__anon310::__anon311
LUTEI	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t LUTEI:1;          \/*!< bit:     21  LUT Event Input Enable             *\/$/;"	m	struct:__anon96::__anon97
LUTEO	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t LUTEO:1;          \/*!< bit:     22  LUT Event Output Enable            *\/$/;"	m	struct:__anon310::__anon311
LUTEO	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t LUTEO:1;          \/*!< bit:     22  LUT Event Output Enable            *\/$/;"	m	struct:__anon96::__anon97
L_BASELINE	src/lgfx/v0/lgfx_common.hpp	/^    #undef L_BASELINE$/;"	d
L_BASELINE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t L_BASELINE = textdatum_t::baseline_left;$/;"	m	namespace:lgfx::v0::textdatum
L_BASELINE	src/lgfx/v1/misc/enum.hpp	/^    #undef L_BASELINE$/;"	d
L_BASELINE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t L_BASELINE = textdatum_t::baseline_left;$/;"	m	namespace:lgfx::v1::textdatum
Light_M5StackCore2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Light_M5StackCore2 : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_M5StackCore2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Light_M5StackCore2 : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  struct Light_M5StackCoreS3 : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Light_M5StackCoreS3 : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_M5StickC	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Light_M5StickC : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_M5StickC	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Light_M5StickC : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_M5Tough	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Light_M5Tough : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_M5Tough	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Light_M5Tough : public lgfx::ILight$/;"	s	namespace:lgfx::v1
Light_PWM	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^  class Light_PWM : public ILight$/;"	c	namespace:lgfx::v1
Light_PWM	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^  class Light_PWM : public ILight$/;"	c	namespace:lgfx::v1
Light_TC	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^  struct Light_TC : public ILight$/;"	s	namespace:lgfx::v1
Light_TC	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^  struct Light_TC : public ILight$/;"	s	namespace:lgfx::v1
Light_TCC	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^  struct Light_TCC : public ILight$/;"	s	namespace:lgfx::v1
Light_TWatch	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Light_TWatch : public lgfx::Light_PWM$/;"	s	namespace:lgfx::v1
Light_TWatch	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Light_TWatch : public lgfx::Light_PWM$/;"	s	namespace:lgfx::v1
Light_WioTerminal	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^  struct Light_WioTerminal : public Light_TC$/;"	s	namespace:lgfx::v1
LoAlphaTheshold	src/lgfx/v1/LGFXBase.cpp	/^  constexpr float LoAlphaTheshold = 1.0f \/ 32.0f;$/;"	m	namespace:lgfx::v1	file:
LovyanGFX	src/lgfx/v0/LGFXBase.hpp	/^  class LovyanGFX : public$/;"	c	namespace:lgfx::v0
LovyanGFX	src/lgfx/v1/LGFXBase.hpp	/^  class LovyanGFX : public$/;"	c	namespace:lgfx::v1
M5ATOMDISPLAY_LOGICAL_HEIGHT	src/lgfx_user/M5AtomDisplay.hpp	/^#define M5ATOMDISPLAY_LOGICAL_HEIGHT /;"	d
M5ATOMDISPLAY_LOGICAL_WIDTH	src/lgfx_user/M5AtomDisplay.hpp	/^#define M5ATOMDISPLAY_LOGICAL_WIDTH /;"	d
M5ATOMDISPLAY_OUTPUT_HEIGHT	src/lgfx_user/M5AtomDisplay.hpp	/^#define M5ATOMDISPLAY_OUTPUT_HEIGHT /;"	d
M5ATOMDISPLAY_OUTPUT_WIDTH	src/lgfx_user/M5AtomDisplay.hpp	/^#define M5ATOMDISPLAY_OUTPUT_WIDTH /;"	d
M5ATOMDISPLAY_REFRESH_RATE	src/lgfx_user/M5AtomDisplay.hpp	/^#define M5ATOMDISPLAY_REFRESH_RATE /;"	d
M5ATOMDISPLAY_SCALE_H	src/lgfx_user/M5AtomDisplay.hpp	/^#define M5ATOMDISPLAY_SCALE_H /;"	d
M5ATOMDISPLAY_SCALE_W	src/lgfx_user/M5AtomDisplay.hpp	/^#define M5ATOMDISPLAY_SCALE_W /;"	d
M5AtomDisplay	src/lgfx_user/M5AtomDisplay.hpp	/^  M5AtomDisplay( uint16_t logical_width  = M5ATOMDISPLAY_LOGICAL_WIDTH$/;"	f	class:M5AtomDisplay
M5AtomDisplay	src/lgfx_user/M5AtomDisplay.hpp	/^class M5AtomDisplay : public lgfx::LGFX_Device$/;"	c
M5UNITLCD_ADDR	src/lgfx_user/M5UnitLCD.hpp	/^#define M5UNITLCD_ADDR /;"	d
M5UNITLCD_FREQ	src/lgfx_user/M5UnitLCD.hpp	/^#define M5UNITLCD_FREQ /;"	d
M5UNITLCD_SCL	src/lgfx_user/M5UnitLCD.hpp	/^  #define M5UNITLCD_SCL /;"	d
M5UNITLCD_SDA	src/lgfx_user/M5UnitLCD.hpp	/^  #define M5UNITLCD_SDA /;"	d
M5UNITOLED_ADDR	src/lgfx_user/M5UnitOLED.hpp	/^#define M5UNITOLED_ADDR /;"	d
M5UNITOLED_FREQ	src/lgfx_user/M5UnitOLED.hpp	/^#define M5UNITOLED_FREQ /;"	d
M5UNITOLED_SCL	src/lgfx_user/M5UnitOLED.hpp	/^  #define M5UNITOLED_SCL /;"	d
M5UNITOLED_SDA	src/lgfx_user/M5UnitOLED.hpp	/^  #define M5UNITOLED_SDA /;"	d
M5UnitLCD	src/lgfx_user/M5UnitLCD.hpp	/^  M5UnitLCD(uint8_t pin_sda = M5UNITLCD_SDA, uint8_t pin_scl = M5UNITLCD_SCL, uint32_t i2c_freq = M5UNITLCD_FREQ, int8_t i2c_port = -1, uint8_t i2c_addr = M5UNITLCD_ADDR)$/;"	f	class:M5UnitLCD
M5UnitLCD	src/lgfx_user/M5UnitLCD.hpp	/^class M5UnitLCD : public lgfx::LGFX_Device$/;"	c
M5UnitOLED	src/lgfx_user/M5UnitOLED.hpp	/^  M5UnitOLED(uint8_t pin_sda = M5UNITOLED_SDA, uint8_t pin_scl = M5UNITOLED_SCL, uint32_t i2c_freq = M5UNITOLED_FREQ, int8_t i2c_port = -1, uint8_t i2c_addr = M5UNITOLED_ADDR)$/;"	f	class:M5UnitOLED
M5UnitOLED	src/lgfx_user/M5UnitOLED.hpp	/^class M5UnitOLED : public lgfx::LGFX_Device$/;"	c
MADCTL	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t MADCTL  = 0x36;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
MADCTL	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t MADCTL  = 0xA0;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
MAD_BGR	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_BGR = 0x08$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_BGR	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_BGR = 0x08$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_HF	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_HF  = 0x02$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_HF	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_HF  = 0x02$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_MH	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_MH  = 0x04$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_MH	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_MH  = 0x04$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_ML	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_ML  = 0x10$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_ML	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_ML  = 0x10$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_MV	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_MV  = 0x20$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_MV	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_MV  = 0x20$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_MX	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_MX  = 0x40$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_MX	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_MX  = 0x40$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_MY	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    { MAD_MY  = 0x80$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_MY	src/lgfx/v1/panel/Panel_LCD.hpp	/^    { MAD_MY  = 0x80$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_RGB	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_RGB = 0x00$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_RGB	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_RGB = 0x00$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAD_VF	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , MAD_VF  = 0x01$/;"	e	enum:lgfx::v0::PanelIlitekCommon::mad_t
MAD_VF	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , MAD_VF  = 0x01$/;"	e	enum:lgfx::v1::Panel_LCD::mad_t
MAGENTA	src/LGFX_TFT_eSPI.hpp	/^    #undef MAGENTA$/;"	d
MAGENTA	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int MAGENTA         = 0xF81F;      \/* 255,   0, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
MAROON	src/LGFX_TFT_eSPI.hpp	/^    #undef MAROON$/;"	d
MAROON	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int MAROON          = 0x7800;      \/* 128,   0,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
MAX_KEY_DIGESTS	src/lgfx/v1/platforms/esp32/common.cpp	/^   #define MAX_KEY_DIGESTS /;"	d	file:
MAX_MEM_LEVEL	src/lgfx/utility/miniz.c	/^  #define MAX_MEM_LEVEL /;"	d	file:
MAX_WBITS	src/lgfx/utility/miniz.c	/^  #define MAX_WBITS /;"	d	file:
MC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  MC:2;             \/*!< bit:  4.. 5  MC Interrupt Flag x                *\/$/;"	m	struct:__anon361::__anon363
MC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  MC:2;             \/*!< bit:  4.. 5  MC Interrupt Disable x             *\/$/;"	m	struct:__anon355::__anon357
MC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  MC:2;             \/*!< bit:  4.. 5  MC Interrupt Enable x              *\/$/;"	m	struct:__anon358::__anon360
MC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  MC:2;             \/*!< bit:  4.. 5  MC Interrupt Flag x                *\/$/;"	m	struct:__anon147::__anon149
MC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  MC:2;             \/*!< bit:  4.. 5  MC Interrupt Disable x             *\/$/;"	m	struct:__anon141::__anon143
MC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  MC:2;             \/*!< bit:  4.. 5  MC Interrupt Enable x              *\/$/;"	m	struct:__anon144::__anon146
MC0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  MC0:1;            \/*!< bit:      4  MC Interrupt Flag 0                *\/$/;"	m	struct:__anon361::__anon362
MC0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  MC0:1;            \/*!< bit:      4  MC Interrupt Disable 0             *\/$/;"	m	struct:__anon355::__anon356
MC0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  MC0:1;            \/*!< bit:      4  MC Interrupt Enable 0              *\/$/;"	m	struct:__anon358::__anon359
MC0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  MC0:1;            \/*!< bit:      4  MC Interrupt Flag 0                *\/$/;"	m	struct:__anon147::__anon148
MC0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  MC0:1;            \/*!< bit:      4  MC Interrupt Disable 0             *\/$/;"	m	struct:__anon141::__anon142
MC0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  MC0:1;            \/*!< bit:      4  MC Interrupt Enable 0              *\/$/;"	m	struct:__anon144::__anon145
MC1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  MC1:1;            \/*!< bit:      5  MC Interrupt Flag 1                *\/$/;"	m	struct:__anon361::__anon362
MC1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  MC1:1;            \/*!< bit:      5  MC Interrupt Disable 1             *\/$/;"	m	struct:__anon355::__anon356
MC1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  MC1:1;            \/*!< bit:      5  MC Interrupt Enable 1              *\/$/;"	m	struct:__anon358::__anon359
MC1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  MC1:1;            \/*!< bit:      5  MC Interrupt Flag 1                *\/$/;"	m	struct:__anon147::__anon148
MC1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  MC1:1;            \/*!< bit:      5  MC Interrupt Disable 1             *\/$/;"	m	struct:__anon141::__anon142
MC1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  MC1:1;            \/*!< bit:      5  MC Interrupt Enable 1              *\/$/;"	m	struct:__anon144::__anon145
MCEO	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t MCEO:2;           \/*!< bit: 12..13  MC Event Output Enable x           *\/$/;"	m	struct:__anon352::__anon354
MCEO	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t MCEO:2;           \/*!< bit: 12..13  MC Event Output Enable x           *\/$/;"	m	struct:__anon138::__anon140
MCEO0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t MCEO0:1;          \/*!< bit:     12  MC Event Output Enable 0           *\/$/;"	m	struct:__anon352::__anon353
MCEO0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t MCEO0:1;          \/*!< bit:     12  MC Event Output Enable 0           *\/$/;"	m	struct:__anon138::__anon139
MCEO1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t MCEO1:1;          \/*!< bit:     13  MC Event Output Enable 1           *\/$/;"	m	struct:__anon352::__anon353
MCEO1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t MCEO1:1;          \/*!< bit:     13  MC Event Output Enable 1           *\/$/;"	m	struct:__anon138::__anon139
MCLK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define MCLK /;"	d
MCLK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define MCLK /;"	d
MCLK_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t MCLK_:1;          \/*!< bit:      2  MCLK APB Clock Enable              *\/$/;"	m	struct:__anon297::__anon298
MCLK_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t MCLK_:1;          \/*!< bit:      2  MCLK APB Clock Enable              *\/$/;"	m	struct:__anon83::__anon84
MCLK_AHBMASK_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_AHBMASK_Type;$/;"	t	typeref:union:__anon295
MCLK_AHBMASK_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_AHBMASK_Type;$/;"	t	typeref:union:__anon81
MCLK_APBAMASK_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_APBAMASK_Type;$/;"	t	typeref:union:__anon297
MCLK_APBAMASK_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_APBAMASK_Type;$/;"	t	typeref:union:__anon83
MCLK_APBBMASK_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_APBBMASK_Type;$/;"	t	typeref:union:__anon299
MCLK_APBBMASK_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_APBBMASK_Type;$/;"	t	typeref:union:__anon85
MCLK_APBCMASK_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_APBCMASK_Type;$/;"	t	typeref:union:__anon301
MCLK_APBCMASK_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_APBCMASK_Type;$/;"	t	typeref:union:__anon87
MCLK_APBDMASK_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_APBDMASK_Type;$/;"	t	typeref:union:__anon303
MCLK_APBDMASK_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_APBDMASK_Type;$/;"	t	typeref:union:__anon89
MCLK_CPUDIV_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_CPUDIV_Type;$/;"	t	typeref:union:__anon293
MCLK_CPUDIV_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_CPUDIV_Type;$/;"	t	typeref:union:__anon79
MCLK_HSDIV_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_HSDIV_Type;$/;"	t	typeref:union:__anon291
MCLK_HSDIV_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_HSDIV_Type;$/;"	t	typeref:union:__anon77
MCLK_INSTS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define MCLK_INSTS /;"	d
MCLK_INSTS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define MCLK_INSTS /;"	d
MCLK_INST_NUM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define MCLK_INST_NUM /;"	d
MCLK_INST_NUM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define MCLK_INST_NUM /;"	d
MCLK_INTENCLR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_INTENCLR_Type;$/;"	t	typeref:union:__anon285
MCLK_INTENCLR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_INTENCLR_Type;$/;"	t	typeref:union:__anon71
MCLK_INTENSET_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_INTENSET_Type;$/;"	t	typeref:union:__anon287
MCLK_INTENSET_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_INTENSET_Type;$/;"	t	typeref:union:__anon73
MCLK_INTFLAG_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} MCLK_INTFLAG_Type;$/;"	t	typeref:union:__anon289
MCLK_INTFLAG_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} MCLK_INTFLAG_Type;$/;"	t	typeref:union:__anon75
MCP23017_ADDR	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int MCP23017_ADDR = 0x20;$/;"	m	struct:lgfx::v1::Panel_ESPboy
MCP23017_ADDR	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int MCP23017_ADDR = 0x20;$/;"	m	struct:LGFX::Panel_ESPboy
MCP23017_GPIO_B	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int MCP23017_GPIO_B = 0x13;$/;"	m	struct:lgfx::v1::Panel_ESPboy
MCP23017_GPIO_B	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int MCP23017_GPIO_B = 0x13;$/;"	m	struct:LGFX::Panel_ESPboy
MCP23017_IODIR_B	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int MCP23017_IODIR_B = 0x01;$/;"	m	struct:lgfx::v1::Panel_ESPboy
MCP23017_IODIR_B	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int MCP23017_IODIR_B = 0x01;$/;"	m	struct:LGFX::Panel_ESPboy
MCP4725_ADDR	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int MCP4725_ADDR = 0x60;$/;"	m	struct:lgfx::v1::Panel_ESPboy
MCP4725_ADDR	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int MCP4725_ADDR = 0x60;$/;"	m	struct:LGFX::Panel_ESPboy
MC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef MC_DATUM$/;"	d
MC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t MC_DATUM   = textdatum_t::middle_center;$/;"	m	namespace:lgfx::v0::textdatum
MC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef MC_DATUM$/;"	d
MC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t MC_DATUM   = textdatum_t::middle_center;$/;"	m	namespace:lgfx::v1::textdatum
MEMBER_DETECTOR	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  #define MEMBER_DETECTOR(/;"	d
MEMBER_DETECTOR	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  #undef MEMBER_DETECTOR$/;"	d
MEMBER_DETECTOR	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^  #define MEMBER_DETECTOR(/;"	d
MEMBER_DETECTOR	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^  #undef MEMBER_DETECTOR$/;"	d
MEMBER_DETECTOR	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  #define MEMBER_DETECTOR(/;"	d
MEMBER_DETECTOR	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  #undef MEMBER_DETECTOR$/;"	d
MEMCPY_BEGIN	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  #define MEMCPY_BEGIN(/;"	d	file:
MEMCPY_END	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  #define MEMCPY_END(/;"	d	file:
MIN	src/lgfx/utility/lgfx_pngle.c	/^#define MIN(/;"	d	file:
MIN	src/lgfx/utility/lgfx_qoi.c	/^#define MIN(/;"	d	file:
MINIZ_HAS_64BIT_REGISTERS	src/lgfx/utility/miniz.c	/^#define MINIZ_HAS_64BIT_REGISTERS /;"	d	file:
MINIZ_HEADER_FILE_ONLY	src/lgfx/utility/miniz.h	/^#define MINIZ_HEADER_FILE_ONLY$/;"	d
MINIZ_HEADER_INCLUDED	src/lgfx/utility/miniz.c	/^#define MINIZ_HEADER_INCLUDED$/;"	d	file:
MINIZ_LITTLE_ENDIAN	src/lgfx/utility/miniz.c	/^#define MINIZ_LITTLE_ENDIAN /;"	d	file:
MINIZ_NO_ARCHIVE_APIS	src/lgfx/utility/miniz.c	/^#define MINIZ_NO_ARCHIVE_APIS$/;"	d	file:
MINIZ_NO_ARCHIVE_WRITING_APIS	src/lgfx/utility/miniz.c	/^#define MINIZ_NO_ARCHIVE_WRITING_APIS$/;"	d	file:
MINIZ_NO_STDIO	src/lgfx/utility/miniz.c	/^#define MINIZ_NO_STDIO$/;"	d	file:
MINIZ_NO_TIME	src/lgfx/utility/miniz.c	/^  #define MINIZ_NO_TIME$/;"	d	file:
MINIZ_NO_TIME	src/lgfx/utility/miniz.c	/^#define MINIZ_NO_TIME$/;"	d	file:
MINIZ_NO_ZLIB_APIS	src/lgfx/utility/miniz.c	/^#define MINIZ_NO_ZLIB_APIS$/;"	d	file:
MINIZ_USE_UNALIGNED_LOADS_AND_STORES	src/lgfx/utility/miniz.c	/^#define MINIZ_USE_UNALIGNED_LOADS_AND_STORES /;"	d	file:
MINIZ_X86_OR_X64_CPU	src/lgfx/utility/miniz.c	/^#define MINIZ_X86_OR_X64_CPU /;"	d	file:
ML_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef ML_DATUM$/;"	d
ML_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t ML_DATUM   = textdatum_t::middle_left;$/;"	m	namespace:lgfx::v0::textdatum
ML_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef ML_DATUM$/;"	d
ML_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t ML_DATUM   = textdatum_t::middle_left;$/;"	m	namespace:lgfx::v1::textdatum
MODE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t MODE:2;           \/*!< bit:  2.. 3  Timer Counter Mode                 *\/$/;"	m	struct:__anon345::__anon346
MODE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t MODE:3;           \/*!< bit:  2.. 4  Operating Mode                     *\/$/;"	m	struct:__anon427::__anon428
MODE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t MODE:2;           \/*!< bit:  2.. 3  Timer Counter Mode                 *\/$/;"	m	struct:__anon131::__anon132
MODE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t MODE:3;           \/*!< bit:  2.. 4  Operating Mode                     *\/$/;"	m	struct:__anon213::__anon214
MODE_ALPHANUMERIC	src/lgfx/utility/lgfx_qrcode.h	/^#define MODE_ALPHANUMERIC /;"	d
MODE_BYTE	src/lgfx/utility/lgfx_qrcode.h	/^#define MODE_BYTE /;"	d
MODE_NUMERIC	src/lgfx/utility/lgfx_qrcode.h	/^#define MODE_NUMERIC /;"	d
MR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef MR_DATUM$/;"	d
MR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t MR_DATUM   = textdatum_t::middle_right;$/;"	m	namespace:lgfx::v0::textdatum
MR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef MR_DATUM$/;"	d
MR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t MR_DATUM   = textdatum_t::middle_right;$/;"	m	namespace:lgfx::v1::textdatum
MSB_FIRST	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define MSB_FIRST /;"	d
MSB_FIRST	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef MSB_FIRST$/;"	d
MSB_FIRST	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define MSB_FIRST /;"	d	file:
MSB_FIRST	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef MSB_FIRST$/;"	d	file:
MSSEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t MSSEN:1;          \/*!< bit:     13  Master Slave Select Enable         *\/$/;"	m	struct:__anon429::__anon430
MSSEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t MSSEN:1;          \/*!< bit:     13  Master Slave Select Enable         *\/$/;"	m	struct:__anon215::__anon216
MZ_ADLER32_INIT	src/lgfx/utility/miniz.c	/^#define MZ_ADLER32_INIT /;"	d	file:
MZ_ASSERT	src/lgfx/utility/miniz.c	/^#define MZ_ASSERT(/;"	d	file:
MZ_BEST_COMPRESSION	src/lgfx/utility/miniz.c	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon520	file:
MZ_BEST_SPEED	src/lgfx/utility/miniz.c	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon520	file:
MZ_BLOCK	src/lgfx/utility/miniz.c	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon518	file:
MZ_BUF_ERROR	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_CLEAR_OBJ	src/lgfx/utility/miniz.c	/^#define MZ_CLEAR_OBJ(/;"	d	file:
MZ_CRC32_INIT	src/lgfx/utility/miniz.c	/^#define MZ_CRC32_INIT /;"	d	file:
MZ_DATA_ERROR	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_DEFAULT_COMPRESSION	src/lgfx/utility/miniz.c	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon520	file:
MZ_DEFAULT_LEVEL	src/lgfx/utility/miniz.c	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon520	file:
MZ_DEFAULT_STRATEGY	src/lgfx/utility/miniz.c	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon517	file:
MZ_DEFAULT_WINDOW_BITS	src/lgfx/utility/miniz.c	/^#define MZ_DEFAULT_WINDOW_BITS /;"	d	file:
MZ_DEFLATED	src/lgfx/utility/miniz.c	/^#define MZ_DEFLATED /;"	d	file:
MZ_DELETE_FILE	src/lgfx/utility/miniz.c	/^    #define MZ_DELETE_FILE /;"	d	file:
MZ_ERRNO	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_FALSE	src/lgfx/utility/miniz.c	/^#define MZ_FALSE /;"	d	file:
MZ_FCLOSE	src/lgfx/utility/miniz.c	/^    #define MZ_FCLOSE /;"	d	file:
MZ_FFLUSH	src/lgfx/utility/miniz.c	/^    #define MZ_FFLUSH /;"	d	file:
MZ_FILE	src/lgfx/utility/miniz.c	/^    #define MZ_FILE /;"	d	file:
MZ_FILE	src/lgfx/utility/miniz.c	/^  #define MZ_FILE /;"	d	file:
MZ_FILE_STAT	src/lgfx/utility/miniz.c	/^    #define MZ_FILE_STAT /;"	d	file:
MZ_FILE_STAT_STRUCT	src/lgfx/utility/miniz.c	/^    #define MZ_FILE_STAT_STRUCT /;"	d	file:
MZ_FILTERED	src/lgfx/utility/miniz.c	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon517	file:
MZ_FINISH	src/lgfx/utility/miniz.c	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon518	file:
MZ_FIXED	src/lgfx/utility/miniz.c	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon517	file:
MZ_FOPEN	src/lgfx/utility/miniz.c	/^    #define MZ_FOPEN /;"	d	file:
MZ_FOPEN	src/lgfx/utility/miniz.c	/^    #define MZ_FOPEN(/;"	d	file:
MZ_FORCEINLINE	src/lgfx/utility/miniz.c	/^  #define MZ_FORCEINLINE /;"	d	file:
MZ_FREAD	src/lgfx/utility/miniz.c	/^    #define MZ_FREAD /;"	d	file:
MZ_FREE	src/lgfx/utility/miniz.c	/^    #define MZ_FREE(/;"	d	file:
MZ_FREE	src/lgfx/utility/miniz.c	/^  #define MZ_FREE(/;"	d	file:
MZ_FREOPEN	src/lgfx/utility/miniz.c	/^    #define MZ_FREOPEN /;"	d	file:
MZ_FREOPEN	src/lgfx/utility/miniz.c	/^    #define MZ_FREOPEN(/;"	d	file:
MZ_FSEEK64	src/lgfx/utility/miniz.c	/^    #define MZ_FSEEK64 /;"	d	file:
MZ_FTELL64	src/lgfx/utility/miniz.c	/^    #define MZ_FTELL64 /;"	d	file:
MZ_FULL_FLUSH	src/lgfx/utility/miniz.c	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon518	file:
MZ_FWRITE	src/lgfx/utility/miniz.c	/^    #define MZ_FWRITE /;"	d	file:
MZ_HUFFMAN_ONLY	src/lgfx/utility/miniz.c	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon517	file:
MZ_MACRO_END	src/lgfx/utility/miniz.c	/^   #define MZ_MACRO_END /;"	d	file:
MZ_MALLOC	src/lgfx/utility/miniz.c	/^    #define MZ_MALLOC(/;"	d	file:
MZ_MALLOC	src/lgfx/utility/miniz.c	/^  #define MZ_MALLOC(/;"	d	file:
MZ_MAX	src/lgfx/utility/miniz.c	/^#define MZ_MAX(/;"	d	file:
MZ_MEM_ERROR	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_MIN	src/lgfx/utility/miniz.c	/^#define MZ_MIN(/;"	d	file:
MZ_NEED_DICT	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_NO_COMPRESSION	src/lgfx/utility/miniz.c	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon520	file:
MZ_NO_FLUSH	src/lgfx/utility/miniz.c	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon518	file:
MZ_OK	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_PARAM_ERROR	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_PARTIAL_FLUSH	src/lgfx/utility/miniz.c	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon518	file:
MZ_READ_LE16	src/lgfx/utility/miniz.c	/^  #define MZ_READ_LE16(/;"	d	file:
MZ_READ_LE32	src/lgfx/utility/miniz.c	/^  #define MZ_READ_LE32(/;"	d	file:
MZ_REALLOC	src/lgfx/utility/miniz.c	/^    #define MZ_REALLOC(/;"	d	file:
MZ_REALLOC	src/lgfx/utility/miniz.c	/^  #define MZ_REALLOC(/;"	d	file:
MZ_RLE	src/lgfx/utility/miniz.c	/^enum { MZ_DEFAULT_STRATEGY = 0, MZ_FILTERED = 1, MZ_HUFFMAN_ONLY = 2, MZ_RLE = 3, MZ_FIXED = 4 };$/;"	e	enum:__anon517	file:
MZ_STREAM_END	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_STREAM_ERROR	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_SWAP_UINT32	src/lgfx/utility/miniz.c	/^#define MZ_SWAP_UINT32(/;"	d	file:
MZ_SYNC_FLUSH	src/lgfx/utility/miniz.c	/^enum { MZ_NO_FLUSH = 0, MZ_PARTIAL_FLUSH = 1, MZ_SYNC_FLUSH = 2, MZ_FULL_FLUSH = 3, MZ_FINISH = 4, MZ_BLOCK = 5 };$/;"	e	enum:__anon518	file:
MZ_TOLOWER	src/lgfx/utility/miniz.c	/^#define MZ_TOLOWER(/;"	d	file:
MZ_TRUE	src/lgfx/utility/miniz.c	/^#define MZ_TRUE /;"	d	file:
MZ_UBER_COMPRESSION	src/lgfx/utility/miniz.c	/^enum { MZ_NO_COMPRESSION = 0, MZ_BEST_SPEED = 1, MZ_BEST_COMPRESSION = 9, MZ_UBER_COMPRESSION = 10, MZ_DEFAULT_LEVEL = 6, MZ_DEFAULT_COMPRESSION = -1 };$/;"	e	enum:__anon520	file:
MZ_VERNUM	src/lgfx/utility/miniz.c	/^#define MZ_VERNUM /;"	d	file:
MZ_VERSION	src/lgfx/utility/miniz.c	/^#define MZ_VERSION /;"	d	file:
MZ_VERSION_ERROR	src/lgfx/utility/miniz.c	/^enum { MZ_OK = 0, MZ_STREAM_END = 1, MZ_NEED_DICT = 2, MZ_ERRNO = -1, MZ_STREAM_ERROR = -2, MZ_DATA_ERROR = -3, MZ_MEM_ERROR = -4, MZ_BUF_ERROR = -5, MZ_VERSION_ERROR = -6, MZ_PARAM_ERROR = -10000 };$/;"	e	enum:__anon519	file:
MZ_VER_MAJOR	src/lgfx/utility/miniz.c	/^#define MZ_VER_MAJOR /;"	d	file:
MZ_VER_MINOR	src/lgfx/utility/miniz.c	/^#define MZ_VER_MINOR /;"	d	file:
MZ_VER_REVISION	src/lgfx/utility/miniz.c	/^#define MZ_VER_REVISION /;"	d	file:
MZ_VER_SUBREVISION	src/lgfx/utility/miniz.c	/^#define MZ_VER_SUBREVISION /;"	d	file:
MZ_WRITE_LE16	src/lgfx/utility/miniz.c	/^#define MZ_WRITE_LE16(/;"	d	file:
MZ_WRITE_LE32	src/lgfx/utility/miniz.c	/^#define MZ_WRITE_LE32(/;"	d	file:
MZ_ZIP_ARRAY_ELEMENT	src/lgfx/utility/miniz.c	/^#define MZ_ZIP_ARRAY_ELEMENT(/;"	d	file:
MZ_ZIP_ARRAY_SET_ELEMENT_SIZE	src/lgfx/utility/miniz.c	/^#define MZ_ZIP_ARRAY_SET_ELEMENT_SIZE(/;"	d	file:
MZ_ZIP_CDH_BIT_FLAG_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_COMMENT_LEN_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_COMPRESSED_SIZE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_CRC32_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_DISK_START_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_EXTERNAL_ATTR_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_EXTRA_LEN_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_FILENAME_LEN_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMPRESSED_SIZE_OFS = 20, MZ_ZIP_CDH_DECOMPRESSED_SIZE_OFS = 24, MZ_ZIP_CDH_FILENAME_LEN_OFS = 28, MZ_ZIP_CDH_EXTRA_LEN_OFS = 30,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_FILE_DATE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_FILE_TIME_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_INTERNAL_ATTR_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_LOCAL_HEADER_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_COMMENT_LEN_OFS = 32, MZ_ZIP_CDH_DISK_START_OFS = 34, MZ_ZIP_CDH_INTERNAL_ATTR_OFS = 36, MZ_ZIP_CDH_EXTERNAL_ATTR_OFS = 38, MZ_ZIP_CDH_LOCAL_HEADER_OFS = 42,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_METHOD_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_METHOD_OFS = 10, MZ_ZIP_CDH_FILE_TIME_OFS = 12, MZ_ZIP_CDH_FILE_DATE_OFS = 14, MZ_ZIP_CDH_CRC32_OFS = 16,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_SIG_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_VERSION_MADE_BY_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_CDH_VERSION_NEEDED_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_CDH_SIG_OFS = 0, MZ_ZIP_CDH_VERSION_MADE_BY_OFS = 4, MZ_ZIP_CDH_VERSION_NEEDED_OFS = 6, MZ_ZIP_CDH_BIT_FLAG_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_CENTRAL_DIR_HEADER_SIG	src/lgfx/utility/miniz.c	/^  MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06054b50, MZ_ZIP_CENTRAL_DIR_HEADER_SIG = 0x02014b50, MZ_ZIP_LOCAL_DIR_HEADER_SIG = 0x04034b50,$/;"	e	enum:__anon541	file:
MZ_ZIP_CENTRAL_DIR_HEADER_SIZE	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LOCAL_DIR_HEADER_SIZE = 30, MZ_ZIP_CENTRAL_DIR_HEADER_SIZE = 46, MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE = 22,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_CDIR_OFS_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_CDIR_SIZE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_COMMENT_SIZE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_CDIR_TOTAL_ENTRIES_OFS = 10, MZ_ZIP_ECDH_CDIR_SIZE_OFS = 12, MZ_ZIP_ECDH_CDIR_OFS_OFS = 16, MZ_ZIP_ECDH_COMMENT_SIZE_OFS = 20,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_NUM_THIS_DISK_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_ECDH_SIG_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_ECDH_SIG_OFS = 0, MZ_ZIP_ECDH_NUM_THIS_DISK_OFS = 4, MZ_ZIP_ECDH_NUM_DISK_CDIR_OFS = 6, MZ_ZIP_ECDH_CDIR_NUM_ENTRIES_ON_DISK_OFS = 8,$/;"	e	enum:__anon541	file:
MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG	src/lgfx/utility/miniz.c	/^  MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06054b50, MZ_ZIP_CENTRAL_DIR_HEADER_SIG = 0x02014b50, MZ_ZIP_LOCAL_DIR_HEADER_SIG = 0x04034b50,$/;"	e	enum:__anon541	file:
MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LOCAL_DIR_HEADER_SIZE = 30, MZ_ZIP_CENTRAL_DIR_HEADER_SIZE = 46, MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE = 22,$/;"	e	enum:__anon541	file:
MZ_ZIP_FLAG_CASE_SENSITIVE	src/lgfx/utility/miniz.c	/^  MZ_ZIP_FLAG_CASE_SENSITIVE                = 0x0100,$/;"	e	enum:__anon524	file:
MZ_ZIP_FLAG_COMPRESSED_DATA	src/lgfx/utility/miniz.c	/^  MZ_ZIP_FLAG_COMPRESSED_DATA               = 0x0400,$/;"	e	enum:__anon524	file:
MZ_ZIP_FLAG_DO_NOT_SORT_CENTRAL_DIRECTORY	src/lgfx/utility/miniz.c	/^  MZ_ZIP_FLAG_DO_NOT_SORT_CENTRAL_DIRECTORY = 0x0800$/;"	e	enum:__anon524	file:
MZ_ZIP_FLAG_IGNORE_PATH	src/lgfx/utility/miniz.c	/^  MZ_ZIP_FLAG_IGNORE_PATH                   = 0x0200,$/;"	e	enum:__anon524	file:
MZ_ZIP_LDH_BIT_FLAG_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_COMPRESSED_SIZE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_CRC32_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_EXTRA_LEN_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_FILENAME_LEN_OFS = 26, MZ_ZIP_LDH_EXTRA_LEN_OFS = 28,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_FILENAME_LEN_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_FILENAME_LEN_OFS = 26, MZ_ZIP_LDH_EXTRA_LEN_OFS = 28,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_FILE_DATE_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_FILE_DATE_OFS = 12, MZ_ZIP_LDH_CRC32_OFS = 14, MZ_ZIP_LDH_COMPRESSED_SIZE_OFS = 18, MZ_ZIP_LDH_DECOMPRESSED_SIZE_OFS = 22,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_FILE_TIME_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_METHOD_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_SIG_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon541	file:
MZ_ZIP_LDH_VERSION_NEEDED_OFS	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LDH_SIG_OFS = 0, MZ_ZIP_LDH_VERSION_NEEDED_OFS = 4, MZ_ZIP_LDH_BIT_FLAG_OFS = 6, MZ_ZIP_LDH_METHOD_OFS = 8, MZ_ZIP_LDH_FILE_TIME_OFS = 10,$/;"	e	enum:__anon541	file:
MZ_ZIP_LOCAL_DIR_HEADER_SIG	src/lgfx/utility/miniz.c	/^  MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIG = 0x06054b50, MZ_ZIP_CENTRAL_DIR_HEADER_SIG = 0x02014b50, MZ_ZIP_LOCAL_DIR_HEADER_SIG = 0x04034b50,$/;"	e	enum:__anon541	file:
MZ_ZIP_LOCAL_DIR_HEADER_SIZE	src/lgfx/utility/miniz.c	/^  MZ_ZIP_LOCAL_DIR_HEADER_SIZE = 30, MZ_ZIP_CENTRAL_DIR_HEADER_SIZE = 46, MZ_ZIP_END_OF_CENTRAL_DIR_HEADER_SIZE = 22,$/;"	e	enum:__anon541	file:
MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE	src/lgfx/utility/miniz.c	/^  MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE = 260,$/;"	e	enum:__anon521	file:
MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE	src/lgfx/utility/miniz.c	/^  MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE = 256$/;"	e	enum:__anon521	file:
MZ_ZIP_MAX_IO_BUF_SIZE	src/lgfx/utility/miniz.c	/^  MZ_ZIP_MAX_IO_BUF_SIZE = 64*1024,$/;"	e	enum:__anon521	file:
MZ_ZIP_MODE_INVALID	src/lgfx/utility/miniz.c	/^  MZ_ZIP_MODE_INVALID = 0,$/;"	e	enum:__anon523	file:
MZ_ZIP_MODE_READING	src/lgfx/utility/miniz.c	/^  MZ_ZIP_MODE_READING = 1,$/;"	e	enum:__anon523	file:
MZ_ZIP_MODE_WRITING	src/lgfx/utility/miniz.c	/^  MZ_ZIP_MODE_WRITING = 2,$/;"	e	enum:__anon523	file:
MZ_ZIP_MODE_WRITING_HAS_BEEN_FINALIZED	src/lgfx/utility/miniz.c	/^  MZ_ZIP_MODE_WRITING_HAS_BEEN_FINALIZED = 3$/;"	e	enum:__anon523	file:
Mclk	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} Mclk;$/;"	t	typeref:struct:__anon305
Mclk	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} Mclk;$/;"	t	typeref:struct:__anon91
NAVY	src/LGFX_TFT_eSPI.hpp	/^    #undef NAVY$/;"	d
NAVY	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int NAVY            = 0x000F;      \/*   0,   0, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
NON_TRANSP	src/lgfx/v1/misc/pixelcopy.hpp	/^    static constexpr uint32_t NON_TRANSP = 1 << 24;$/;"	m	struct:lgfx::v1::pixelcopy_t
NOP	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t NOP     = 0x00;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
NOP	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t NOP     = 0x00;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
NORON	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t NORON   = 0x13;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
NTSC	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^        NTSC,    \/\/ black = 7.5IRE$/;"	e	enum:lgfx::v1::Panel_CVBS::config_detail_t::signal_type_t
NTSC_J	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^        NTSC_J,  \/\/ black = 0IRE (for Japan)$/;"	e	enum:lgfx::v1::Panel_CVBS::config_detail_t::signal_type_t
NUM_ERROR_CORRECTION_BLOCKS	src/lgfx/utility/lgfx_qrcode.c	/^static const int8_t NUM_ERROR_CORRECTION_BLOCKS[4] = {$/;"	v	file:
NUM_ERROR_CORRECTION_BLOCKS	src/lgfx/utility/lgfx_qrcode.c	/^static const uint8_t NUM_ERROR_CORRECTION_BLOCKS[4][40] = {$/;"	v	file:
NUM_ERROR_CORRECTION_CODEWORDS	src/lgfx/utility/lgfx_qrcode.c	/^static const int16_t NUM_ERROR_CORRECTION_CODEWORDS[4] = {$/;"	v	file:
NUM_ERROR_CORRECTION_CODEWORDS	src/lgfx/utility/lgfx_qrcode.c	/^static const uint16_t NUM_ERROR_CORRECTION_CODEWORDS[4][40] = {$/;"	v	file:
NUM_RAW_DATA_MODULES	src/lgfx/utility/lgfx_qrcode.c	/^static const uint16_t NUM_RAW_DATA_MODULES = 567;$/;"	v	file:
NUM_RAW_DATA_MODULES	src/lgfx/utility/lgfx_qrcode.c	/^static const uint16_t NUM_RAW_DATA_MODULES[40] = {$/;"	v	file:
NVGAMCTRL	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t NVGAMCTRL= 0xE1;      \/\/ Negative voltage gamma control$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
NVMCTRL_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_:1;       \/*!< bit:      2  NVMCTRL APB Clock Enable           *\/$/;"	m	struct:__anon299::__anon300
NVMCTRL_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_:1;       \/*!< bit:      6  NVMCTRL AHB Clock Mask             *\/$/;"	m	struct:__anon295::__anon296
NVMCTRL_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_:1;       \/*!< bit:      2  NVMCTRL APB Clock Enable           *\/$/;"	m	struct:__anon85::__anon86
NVMCTRL_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_:1;       \/*!< bit:      6  NVMCTRL AHB Clock Mask             *\/$/;"	m	struct:__anon81::__anon82
NVMCTRL_CACHE_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_CACHE_:1; \/*!< bit:     23  NVMCTRL_CACHE AHB Clock Mask       *\/$/;"	m	struct:__anon295::__anon296
NVMCTRL_CACHE_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_CACHE_:1; \/*!< bit:     23  NVMCTRL_CACHE AHB Clock Mask       *\/$/;"	m	struct:__anon81::__anon82
NVMCTRL_SMEEPROM_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_SMEEPROM_:1; \/*!< bit:     22  NVMCTRL_SMEEPROM AHB Clock Mask    *\/$/;"	m	struct:__anon295::__anon296
NVMCTRL_SMEEPROM_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t NVMCTRL_SMEEPROM_:1; \/*!< bit:     22  NVMCTRL_SMEEPROM AHB Clock Mask    *\/$/;"	m	struct:__anon81::__anon82
Normal	src/lgfx/v0/LGFX_Sprite.hpp	/^      Normal,$/;"	e	enum:lgfx::v0::LGFX_Sprite::AllocationSource
Normal	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    Normal,$/;"	e	enum:lgfx::v1::AllocationSource
OE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OE:1;             \/*!< bit:     11  Output Enable                      *\/$/;"	m	struct:__anon280::__anon281
OE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OE:1;             \/*!< bit:     11  Output Enable                      *\/$/;"	m	struct:__anon66::__anon67
OLIVE	src/LGFX_TFT_eSPI.hpp	/^    #undef OLIVE$/;"	d
OLIVE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int OLIVE           = 0x7BE0;      \/* 128, 128,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ONDEMAND	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ONDEMAND:1;       \/*!< bit:      7  Clock On Demand                    *\/$/;"	m	struct:__anon345::__anon346
ONDEMAND	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t ONDEMAND:1;       \/*!< bit:     15  Generic Clock On Demand            *\/$/;"	m	struct:__anon331::__anon332
ONDEMAND	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ONDEMAND:1;       \/*!< bit:      7  Clock On Demand                    *\/$/;"	m	struct:__anon131::__anon132
ONDEMAND	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t ONDEMAND:1;       \/*!< bit:     15  Generic Clock On Demand            *\/$/;"	m	struct:__anon117::__anon118
ONESHOT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  ONESHOT:1;        \/*!< bit:      2  One-Shot on Counter                *\/$/;"	m	struct:__anon348::__anon349
ONESHOT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  ONESHOT:1;        \/*!< bit:      2  One-Shot on Counter                *\/$/;"	m	struct:__anon350::__anon351
ONESHOT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  ONESHOT:1;        \/*!< bit:      2  One-Shot on Counter                *\/$/;"	m	struct:__anon134::__anon135
ONESHOT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  ONESHOT:1;        \/*!< bit:      2  One-Shot on Counter                *\/$/;"	m	struct:__anon136::__anon137
OOV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OOV:1;            \/*!< bit:     10  Output Off Value                   *\/$/;"	m	struct:__anon280::__anon281
OOV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OOV:1;            \/*!< bit:     10  Output Off Value                   *\/$/;"	m	struct:__anon66::__anon67
ORANGE	src/LGFX_TFT_eSPI.hpp	/^    #undef ORANGE$/;"	d
ORANGE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int ORANGE          = 0xFD20;      \/* 255, 165,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
OSC32KCTRL_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OSC32KCTRL_:1;    \/*!< bit:      5  OSC32KCTRL APB Clock Enable        *\/$/;"	m	struct:__anon297::__anon298
OSC32KCTRL_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OSC32KCTRL_:1;    \/*!< bit:      5  OSC32KCTRL APB Clock Enable        *\/$/;"	m	struct:__anon83::__anon84
OSCCTRL_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OSCCTRL_:1;       \/*!< bit:      4  OSCCTRL APB Clock Enable           *\/$/;"	m	struct:__anon297::__anon298
OSCCTRL_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OSCCTRL_:1;       \/*!< bit:      4  OSCCTRL APB Clock Enable           *\/$/;"	m	struct:__anon83::__anon84
OUT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OUT:32;           \/*!< bit:  0..31  PORT Data Output Value             *\/$/;"	m	struct:__anon405::__anon406
OUT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_OUT_Type             OUT;         \/**< \\brief Offset: 0x10 (R\/W 32) Data Output Value *\/$/;"	m	struct:__anon425
OUT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OUT:32;           \/*!< bit:  0..31  PORT Data Output Value             *\/$/;"	m	struct:__anon191::__anon192
OUT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_OUT_Type             OUT;         \/**< \\brief Offset: 0x10 (R\/W 32) Data Output Value *\/$/;"	m	struct:__anon211
OUTCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OUTCLR:32;        \/*!< bit:  0..31  PORT Data Output Value Clear       *\/$/;"	m	struct:__anon407::__anon408
OUTCLR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_OUTCLR_Type          OUTCLR;      \/**< \\brief Offset: 0x14 (R\/W 32) Data Output Value Clear *\/$/;"	m	struct:__anon425
OUTCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OUTCLR:32;        \/*!< bit:  0..31  PORT Data Output Value Clear       *\/$/;"	m	struct:__anon193::__anon194
OUTCLR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_OUTCLR_Type          OUTCLR;      \/**< \\brief Offset: 0x14 (R\/W 32) Data Output Value Clear *\/$/;"	m	struct:__anon211
OUTSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OUTSET:32;        \/*!< bit:  0..31  PORT Data Output Value Set         *\/$/;"	m	struct:__anon409::__anon410
OUTSET	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_OUTSET_Type          OUTSET;      \/**< \\brief Offset: 0x18 (R\/W 32) Data Output Value Set *\/$/;"	m	struct:__anon425
OUTSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OUTSET:32;        \/*!< bit:  0..31  PORT Data Output Value Set         *\/$/;"	m	struct:__anon195::__anon196
OUTSET	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_OUTSET_Type          OUTSET;      \/**< \\brief Offset: 0x18 (R\/W 32) Data Output Value Set *\/$/;"	m	struct:__anon211
OUTTGL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t OUTTGL:32;        \/*!< bit:  0..31  PORT Data Output Value Toggle      *\/$/;"	m	struct:__anon411::__anon412
OUTTGL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_OUTTGL_Type          OUTTGL;      \/**< \\brief Offset: 0x1C (R\/W 32) Data Output Value Toggle *\/$/;"	m	struct:__anon425
OUTTGL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t OUTTGL:32;        \/*!< bit:  0..31  PORT Data Output Value Toggle      *\/$/;"	m	struct:__anon197::__anon198
OUTTGL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_OUTTGL_Type          OUTTGL;      \/**< \\brief Offset: 0x1C (R\/W 32) Data Output Value Toggle *\/$/;"	m	struct:__anon211
OVF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  OVF:1;            \/*!< bit:      0  OVF Interrupt Flag                 *\/$/;"	m	struct:__anon361::__anon362
OVF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  OVF:1;            \/*!< bit:      0  OVF Interrupt Disable              *\/$/;"	m	struct:__anon355::__anon356
OVF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  OVF:1;            \/*!< bit:      0  OVF Interrupt Enable               *\/$/;"	m	struct:__anon358::__anon359
OVF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  OVF:1;            \/*!< bit:      0  OVF Interrupt Flag                 *\/$/;"	m	struct:__anon147::__anon148
OVF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  OVF:1;            \/*!< bit:      0  OVF Interrupt Disable              *\/$/;"	m	struct:__anon141::__anon142
OVF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  OVF:1;            \/*!< bit:      0  OVF Interrupt Enable               *\/$/;"	m	struct:__anon144::__anon145
OVFEO	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t OVFEO:1;          \/*!< bit:      8  Event Output Enable                *\/$/;"	m	struct:__anon352::__anon353
OVFEO	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t OVFEO:1;          \/*!< bit:      8  Event Output Enable                *\/$/;"	m	struct:__anon138::__anon139
OVR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  OVR:1;            \/*!< bit:      0  Channel Overrun                    *\/$/;"	m	struct:__anon337::__anon338
OVR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t OVR:1;            \/*!< bit:      8  Channel Overrun                    *\/$/;"	m	struct:__anon320::__anon321
OVR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  OVR:1;            \/*!< bit:      0  Channel Overrun Interrupt Disable  *\/$/;"	m	struct:__anon333::__anon334
OVR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  OVR:1;            \/*!< bit:      0  Channel Overrun Interrupt Enable   *\/$/;"	m	struct:__anon335::__anon336
OVR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  OVR:1;            \/*!< bit:      0  Channel Overrun                    *\/$/;"	m	struct:__anon123::__anon124
OVR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t OVR:1;            \/*!< bit:      8  Channel Overrun                    *\/$/;"	m	struct:__anon106::__anon107
OVR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  OVR:1;            \/*!< bit:      0  Channel Overrun Interrupt Disable  *\/$/;"	m	struct:__anon119::__anon120
OVR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  OVR:1;            \/*!< bit:      0  Channel Overrun Interrupt Enable   *\/$/;"	m	struct:__anon121::__anon122
PAC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PAC_:1;           \/*!< bit:      0  PAC APB Clock Enable               *\/$/;"	m	struct:__anon297::__anon298
PAC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PAC_:1;           \/*!< bit:     12  PAC AHB Clock Mask                 *\/$/;"	m	struct:__anon295::__anon296
PAC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PAC_:1;           \/*!< bit:      0  PAC APB Clock Enable               *\/$/;"	m	struct:__anon83::__anon84
PAC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PAC_:1;           \/*!< bit:     12  PAC AHB Clock Mask                 *\/$/;"	m	struct:__anon81::__anon82
PAL	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^        PAL,$/;"	e	enum:lgfx::v1::Panel_CVBS::config_detail_t::signal_type_t
PAL_M	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^        PAL_M,$/;"	e	enum:lgfx::v1::Panel_CVBS::config_detail_t::signal_type_t
PAL_N	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^        PAL_N,$/;"	e	enum:lgfx::v1::Panel_CVBS::config_detail_t::signal_type_t
PASET	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t RASET   = 0x2B; static constexpr uint8_t PASET = 0x2B;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
PASET	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t RASET   = 0x75; static constexpr uint8_t PASET = 0x75;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
PATH	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PATH:2;           \/*!< bit:  8.. 9  Path Selection                     *\/$/;"	m	struct:__anon331::__anon332
PATH	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PATH:2;           \/*!< bit:  8.. 9  Path Selection                     *\/$/;"	m	struct:__anon117::__anon118
PCC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PCC_:1;           \/*!< bit:     11  PCC APB Clock Enable               *\/$/;"	m	struct:__anon303::__anon304
PCC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PCC_:1;           \/*!< bit:     11  PCC APB Clock Enable               *\/$/;"	m	struct:__anon89::__anon90
PCHCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO GCLK_PCHCTRL_Type         PCHCTRL[48]; \/**< \\brief Offset: 0x80 (R\/W 32) Peripheral Clock Control *\/$/;"	m	struct:__anon284
PCHCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO GCLK_PCHCTRL_Type         PCHCTRL[48]; \/**< \\brief Offset: 0x80 (R\/W 32) Peripheral Clock Control *\/$/;"	m	struct:__anon70
PDEC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PDEC_:1;          \/*!< bit:      7  PDEC APB Clock Enable              *\/$/;"	m	struct:__anon301::__anon302
PDEC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PDEC_:1;          \/*!< bit:      7  PDEC APB Clock Enable              *\/$/;"	m	struct:__anon87::__anon88
PENALTY_N1	src/lgfx/utility/lgfx_qrcode.c	/^#define PENALTY_N1 /;"	d	file:
PENALTY_N2	src/lgfx/utility/lgfx_qrcode.c	/^#define PENALTY_N2 /;"	d	file:
PENALTY_N3	src/lgfx/utility/lgfx_qrcode.c	/^#define PENALTY_N3 /;"	d	file:
PENALTY_N4	src/lgfx/utility/lgfx_qrcode.c	/^#define PENALTY_N4 /;"	d	file:
PER	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PER:1;            \/*!< bit:      5  Period                             *\/$/;"	m	struct:__anon374::__anon375
PER	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PER:8;            \/*!< bit:  0.. 7  Period Value                       *\/$/;"	m	struct:__anon383::__anon384
PER	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_PER_Type        PER;         \/**< \\brief Offset: 0x1B (R\/W  8) COUNT8 Period *\/$/;"	m	struct:__anon395
PER	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PER:1;            \/*!< bit:      5  Period                             *\/$/;"	m	struct:__anon160::__anon161
PER	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PER:8;            \/*!< bit:  0.. 7  Period Value                       *\/$/;"	m	struct:__anon169::__anon170
PER	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_PER_Type        PER;         \/**< \\brief Offset: 0x1B (R\/W  8) COUNT8 Period *\/$/;"	m	struct:__anon181
PERBUF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PERBUF:8;         \/*!< bit:  0.. 7  Period Buffer Value                *\/$/;"	m	struct:__anon391::__anon392
PERBUF	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_PERBUF_Type     PERBUF;      \/**< \\brief Offset: 0x2F (R\/W  8) COUNT8 Period Buffer *\/$/;"	m	struct:__anon395
PERBUF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PERBUF:8;         \/*!< bit:  0.. 7  Period Buffer Value                *\/$/;"	m	struct:__anon177::__anon178
PERBUF	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_COUNT8_PERBUF_Type     PERBUF;      \/**< \\brief Offset: 0x2F (R\/W  8) COUNT8 Period Buffer *\/$/;"	m	struct:__anon181
PERBUFV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PERBUFV:1;        \/*!< bit:      3  Synchronization Busy Status        *\/$/;"	m	struct:__anon364::__anon365
PERBUFV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PERBUFV:1;        \/*!< bit:      3  Synchronization Busy Status        *\/$/;"	m	struct:__anon150::__anon151
PID0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PID0:5;           \/*!< bit:  0.. 4  PORT Event Pin Identifier 0        *\/$/;"	m	struct:__anon419::__anon420
PID0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PID0:5;           \/*!< bit:  0.. 4  PORT Event Pin Identifier 0        *\/$/;"	m	struct:__anon205::__anon206
PID1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PID1:5;           \/*!< bit:  8..12  PORT Event Pin Identifier 1        *\/$/;"	m	struct:__anon419::__anon420
PID1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PID1:5;           \/*!< bit:  8..12  PORT Event Pin Identifier 1        *\/$/;"	m	struct:__anon205::__anon206
PID2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PID2:5;           \/*!< bit: 16..20  PORT Event Pin Identifier 2        *\/$/;"	m	struct:__anon419::__anon420
PID2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PID2:5;           \/*!< bit: 16..20  PORT Event Pin Identifier 2        *\/$/;"	m	struct:__anon205::__anon206
PID3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PID3:5;           \/*!< bit: 24..28  PORT Event Pin Identifier 3        *\/$/;"	m	struct:__anon419::__anon420
PID3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PID3:5;           \/*!< bit: 24..28  PORT Event Pin Identifier 3        *\/$/;"	m	struct:__anon205::__anon206
PINCFG	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_PINCFG_Type          PINCFG[32];  \/**< \\brief Offset: 0x40 (R\/W  8) Pin Configuration *\/$/;"	m	struct:__anon425
PINCFG	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_PINCFG_Type          PINCFG[32];  \/**< \\brief Offset: 0x40 (R\/W  8) Pin Configuration *\/$/;"	m	struct:__anon211
PINK	src/LGFX_TFT_eSPI.hpp	/^    #undef PINK$/;"	d
PINK	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int PINK            = 0xF81F;$/;"	m	namespace:lgfx::ili9341_colors
PINMASK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PINMASK:16;       \/*!< bit:  0..15  Pin Mask for Multiple Pin Configuration *\/$/;"	m	struct:__anon417::__anon418
PINMASK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PINMASK:16;       \/*!< bit:  0..15  Pin Mask for Multiple Pin Configuration *\/$/;"	m	struct:__anon203::__anon204
PIN_MASK	src/lgfx/v1/platforms/samd21/common.hpp	/^    static constexpr int PIN_MASK = (1 << PORT_SHIFT) - 1;$/;"	m	namespace:lgfx::v1::samd21
PIN_MASK	src/lgfx/v1/platforms/samd51/common.hpp	/^    static constexpr int PIN_MASK = (1 << PORT_SHIFT) - 1;$/;"	m	namespace:lgfx::v1::samd51
PIXSET	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t COLMOD  = 0x3A; static constexpr uint8_t PIXSET = 0x3A;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
PLOADEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PLOADEN:1;        \/*!< bit:      6  Data Preload Enable                *\/$/;"	m	struct:__anon429::__anon430
PLOADEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PLOADEN:1;        \/*!< bit:      6  Data Preload Enable                *\/$/;"	m	struct:__anon215::__anon216
PMUX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PMUX:4;           \/*!< bit: 24..27  Peripheral Multiplexing            *\/$/;"	m	struct:__anon417::__anon418
PMUX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO PORT_PMUX_Type            PMUX[16];    \/**< \\brief Offset: 0x30 (R\/W  8) Peripheral Multiplexing *\/$/;"	m	struct:__anon425
PMUX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PMUX:4;           \/*!< bit: 24..27  Peripheral Multiplexing            *\/$/;"	m	struct:__anon203::__anon204
PMUX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO PORT_PMUX_Type            PMUX[16];    \/**< \\brief Offset: 0x30 (R\/W  8) Peripheral Multiplexing *\/$/;"	m	struct:__anon211
PMUXE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PMUXE:4;          \/*!< bit:  0.. 3  Peripheral Multiplexing for Even-Numbered Pin *\/$/;"	m	struct:__anon421::__anon422
PMUXE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PMUXE:4;          \/*!< bit:  0.. 3  Peripheral Multiplexing for Even-Numbered Pin *\/$/;"	m	struct:__anon207::__anon208
PMUXEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PMUXEN:1;         \/*!< bit:     16  Peripheral Multiplexer Enable      *\/$/;"	m	struct:__anon417::__anon418
PMUXEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PMUXEN:1;         \/*!< bit:      0  Peripheral Multiplexer Enable      *\/$/;"	m	struct:__anon423::__anon424
PMUXEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PMUXEN:1;         \/*!< bit:     16  Peripheral Multiplexer Enable      *\/$/;"	m	struct:__anon203::__anon204
PMUXEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PMUXEN:1;         \/*!< bit:      0  Peripheral Multiplexer Enable      *\/$/;"	m	struct:__anon209::__anon210
PMUXO	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PMUXO:4;          \/*!< bit:  4.. 7  Peripheral Multiplexing for Odd-Numbered Pin *\/$/;"	m	struct:__anon421::__anon422
PMUXO	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PMUXO:4;          \/*!< bit:  4.. 7  Peripheral Multiplexing for Odd-Numbered Pin *\/$/;"	m	struct:__anon207::__anon208
PM_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PM_:1;            \/*!< bit:      1  PM APB Clock Enable                *\/$/;"	m	struct:__anon297::__anon298
PM_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PM_:1;            \/*!< bit:      1  PM APB Clock Enable                *\/$/;"	m	struct:__anon83::__anon84
PNGLE_CHUNK_IDAT	src/lgfx/utility/lgfx_pngle.c	/^  PNGLE_CHUNK_IDAT = 0x49444154UL, \/\/ IDAT$/;"	e	enum:__anon545	file:
PNGLE_CHUNK_IEND	src/lgfx/utility/lgfx_pngle.c	/^  PNGLE_CHUNK_IEND = 0x49454e44UL, \/\/ IEND$/;"	e	enum:__anon545	file:
PNGLE_CHUNK_PLTE	src/lgfx/utility/lgfx_pngle.c	/^  PNGLE_CHUNK_PLTE = 0x504c5445UL, \/\/ PLTE$/;"	e	enum:__anon545	file:
PNGLE_CHUNK_tRNS	src/lgfx/utility/lgfx_pngle.c	/^  PNGLE_CHUNK_tRNS = 0x74524e53UL, \/\/ tRNS$/;"	e	enum:__anon545	file:
PNGLE_ERROR	src/lgfx/utility/lgfx_pngle.c	/^#define PNGLE_ERROR(/;"	d	file:
PNGLE_MALLOC	src/lgfx/utility/lgfx_pngle.c	/^#define PNGLE_MALLOC(/;"	d	file:
PNGLE_STATE_ERROR	src/lgfx/utility/lgfx_pngle.c	/^  PNGLE_STATE_ERROR = -2,$/;"	e	enum:__anon544	file:
PNGLE_STATE_OK	src/lgfx/utility/lgfx_pngle.c	/^  PNGLE_STATE_OK = 0,$/;"	e	enum:__anon544	file:
PNLDRV	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^      static constexpr uint8_t PNLDRV = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ILI9481::CMD
PORCTRL	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t PORCTRL  = 0xB2;      \/\/ Porch control$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
PORT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define PORT /;"	d
PORT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define PORT /;"	d
PORTEI0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PORTEI0:1;        \/*!< bit:      7  PORT Event Input Enable 0          *\/$/;"	m	struct:__anon419::__anon420
PORTEI0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PORTEI0:1;        \/*!< bit:      7  PORT Event Input Enable 0          *\/$/;"	m	struct:__anon205::__anon206
PORTEI1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PORTEI1:1;        \/*!< bit:     15  PORT Event Input Enable 1          *\/$/;"	m	struct:__anon419::__anon420
PORTEI1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PORTEI1:1;        \/*!< bit:     15  PORT Event Input Enable 1          *\/$/;"	m	struct:__anon205::__anon206
PORTEI2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PORTEI2:1;        \/*!< bit:     23  PORT Event Input Enable 2          *\/$/;"	m	struct:__anon419::__anon420
PORTEI2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PORTEI2:1;        \/*!< bit:     23  PORT Event Input Enable 2          *\/$/;"	m	struct:__anon205::__anon206
PORTEI3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PORTEI3:1;        \/*!< bit:     31  PORT Event Input Enable 3          *\/$/;"	m	struct:__anon419::__anon420
PORTEI3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PORTEI3:1;        \/*!< bit:     31  PORT Event Input Enable 3          *\/$/;"	m	struct:__anon205::__anon206
PORT_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PORT_:1;          \/*!< bit:      4  PORT APB Clock Enable              *\/$/;"	m	struct:__anon299::__anon300
PORT_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PORT_:1;          \/*!< bit:      4  PORT APB Clock Enable              *\/$/;"	m	struct:__anon85::__anon86
PORT_A	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_A =  0 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_A	src/lgfx/v1/platforms/samd21/common.hpp	/^      PORT_A =  0 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::samd21::pin_port
PORT_A	src/lgfx/v1/platforms/samd51/common.hpp	/^      PORT_A =  0 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::samd51::pin_port
PORT_A	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_A =  0 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_B	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_B =  1 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_B	src/lgfx/v1/platforms/samd21/common.hpp	/^      PORT_B =  1 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::samd21::pin_port
PORT_B	src/lgfx/v1/platforms/samd51/common.hpp	/^      PORT_B =  1 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::samd51::pin_port
PORT_B	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_B =  1 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_C	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_C =  2 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_C	src/lgfx/v1/platforms/samd51/common.hpp	/^      PORT_C =  2 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::samd51::pin_port
PORT_C	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_C =  2 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_CTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_CTRL_Type;$/;"	t	typeref:union:__anon415
PORT_CTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_CTRL_Type;$/;"	t	typeref:union:__anon201
PORT_D	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_D =  3 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_D	src/lgfx/v1/platforms/samd51/common.hpp	/^      PORT_D =  3 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::samd51::pin_port
PORT_D	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_D =  3 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_DIRCLR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_DIRCLR_Type;$/;"	t	typeref:union:__anon399
PORT_DIRCLR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_DIRCLR_Type;$/;"	t	typeref:union:__anon185
PORT_DIRSET_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_DIRSET_Type;$/;"	t	typeref:union:__anon401
PORT_DIRSET_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_DIRSET_Type;$/;"	t	typeref:union:__anon187
PORT_DIRTGL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_DIRTGL_Type;$/;"	t	typeref:union:__anon403
PORT_DIRTGL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_DIRTGL_Type;$/;"	t	typeref:union:__anon189
PORT_DIR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_DIR_Type;$/;"	t	typeref:union:__anon397
PORT_DIR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_DIR_Type;$/;"	t	typeref:union:__anon183
PORT_E	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_E =  4 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_E	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_E =  4 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_EVCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_EVCTRL_Type;$/;"	t	typeref:union:__anon419
PORT_EVCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_EVCTRL_Type;$/;"	t	typeref:union:__anon205
PORT_F	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_F =  5 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_F	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_F =  5 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_G	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_G =  6 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_G	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_G =  6 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_H	src/lgfx/v0/platforms/samd51_common.hpp	/^      PORT_H =  7 << PORT_SHIFT,$/;"	e	enum:lgfx::v0::samd51::pin_port
PORT_H	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_H =  7 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_I	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_I =  8 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_INSTS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define PORT_INSTS /;"	d
PORT_INSTS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define PORT_INSTS /;"	d
PORT_INST_NUM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define PORT_INST_NUM /;"	d
PORT_INST_NUM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define PORT_INST_NUM /;"	d
PORT_IN_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_IN_Type;$/;"	t	typeref:union:__anon413
PORT_IN_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_IN_Type;$/;"	t	typeref:union:__anon199
PORT_J	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_J =  9 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_K	src/lgfx/v1/platforms/stm32/common.hpp	/^      PORT_K = 10 << PORT_SHIFT,$/;"	e	enum:lgfx::v1::stm32::pin_port
PORT_OUTCLR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_OUTCLR_Type;$/;"	t	typeref:union:__anon407
PORT_OUTCLR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_OUTCLR_Type;$/;"	t	typeref:union:__anon193
PORT_OUTSET_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_OUTSET_Type;$/;"	t	typeref:union:__anon409
PORT_OUTSET_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_OUTSET_Type;$/;"	t	typeref:union:__anon195
PORT_OUTTGL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_OUTTGL_Type;$/;"	t	typeref:union:__anon411
PORT_OUTTGL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_OUTTGL_Type;$/;"	t	typeref:union:__anon197
PORT_OUT_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_OUT_Type;$/;"	t	typeref:union:__anon405
PORT_OUT_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_OUT_Type;$/;"	t	typeref:union:__anon191
PORT_PINCFG_DRVSTR	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_DRVSTR /;"	d
PORT_PINCFG_DRVSTR	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_DRVSTR$/;"	d
PORT_PINCFG_DRVSTR	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_DRVSTR /;"	d	file:
PORT_PINCFG_DRVSTR	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_DRVSTR$/;"	d	file:
PORT_PINCFG_DRVSTR_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_DRVSTR_Pos /;"	d
PORT_PINCFG_DRVSTR_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_DRVSTR_Pos$/;"	d
PORT_PINCFG_DRVSTR_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_DRVSTR_Pos /;"	d	file:
PORT_PINCFG_DRVSTR_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_DRVSTR_Pos$/;"	d	file:
PORT_PINCFG_INEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_INEN /;"	d
PORT_PINCFG_INEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_INEN$/;"	d
PORT_PINCFG_INEN	src/lgfx/v0/platforms/samd51_common.cpp	/^#define PORT_PINCFG_INEN /;"	d	file:
PORT_PINCFG_INEN	src/lgfx/v0/platforms/samd51_common.cpp	/^#undef PORT_PINCFG_INEN$/;"	d	file:
PORT_PINCFG_INEN	src/lgfx/v0/platforms/samd51_common.hpp	/^ #define PORT_PINCFG_INEN /;"	d
PORT_PINCFG_INEN	src/lgfx/v0/platforms/samd51_common.hpp	/^ #undef PORT_PINCFG_INEN$/;"	d
PORT_PINCFG_INEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_INEN /;"	d	file:
PORT_PINCFG_INEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_INEN$/;"	d	file:
PORT_PINCFG_INEN	src/lgfx/v1/platforms/samd51/common.cpp	/^#define PORT_PINCFG_INEN /;"	d	file:
PORT_PINCFG_INEN	src/lgfx/v1/platforms/samd51/common.cpp	/^#undef PORT_PINCFG_INEN$/;"	d	file:
PORT_PINCFG_INEN	src/lgfx/v1/platforms/samd51/common.hpp	/^ #define PORT_PINCFG_INEN /;"	d
PORT_PINCFG_INEN	src/lgfx/v1/platforms/samd51/common.hpp	/^ #undef PORT_PINCFG_INEN$/;"	d
PORT_PINCFG_INEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_INEN_Pos /;"	d
PORT_PINCFG_INEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_INEN_Pos$/;"	d
PORT_PINCFG_INEN_Pos	src/lgfx/v0/platforms/samd51_common.cpp	/^#define PORT_PINCFG_INEN_Pos /;"	d	file:
PORT_PINCFG_INEN_Pos	src/lgfx/v0/platforms/samd51_common.cpp	/^#undef PORT_PINCFG_INEN_Pos$/;"	d	file:
PORT_PINCFG_INEN_Pos	src/lgfx/v0/platforms/samd51_common.hpp	/^ #define PORT_PINCFG_INEN_Pos /;"	d
PORT_PINCFG_INEN_Pos	src/lgfx/v0/platforms/samd51_common.hpp	/^ #undef PORT_PINCFG_INEN_Pos$/;"	d
PORT_PINCFG_INEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_INEN_Pos /;"	d	file:
PORT_PINCFG_INEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_INEN_Pos$/;"	d	file:
PORT_PINCFG_INEN_Pos	src/lgfx/v1/platforms/samd51/common.cpp	/^#define PORT_PINCFG_INEN_Pos /;"	d	file:
PORT_PINCFG_INEN_Pos	src/lgfx/v1/platforms/samd51/common.cpp	/^#undef PORT_PINCFG_INEN_Pos$/;"	d	file:
PORT_PINCFG_INEN_Pos	src/lgfx/v1/platforms/samd51/common.hpp	/^ #define PORT_PINCFG_INEN_Pos /;"	d
PORT_PINCFG_INEN_Pos	src/lgfx/v1/platforms/samd51/common.hpp	/^ #undef PORT_PINCFG_INEN_Pos$/;"	d
PORT_PINCFG_MASK	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_MASK /;"	d
PORT_PINCFG_MASK	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_MASK$/;"	d
PORT_PINCFG_MASK	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_MASK /;"	d	file:
PORT_PINCFG_MASK	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_MASK$/;"	d	file:
PORT_PINCFG_PMUXEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_PMUXEN /;"	d
PORT_PINCFG_PMUXEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_PMUXEN$/;"	d
PORT_PINCFG_PMUXEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_PMUXEN /;"	d	file:
PORT_PINCFG_PMUXEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_PMUXEN$/;"	d	file:
PORT_PINCFG_PMUXEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_PMUXEN_Pos /;"	d
PORT_PINCFG_PMUXEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_PMUXEN_Pos$/;"	d
PORT_PINCFG_PMUXEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_PMUXEN_Pos /;"	d	file:
PORT_PINCFG_PMUXEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_PMUXEN_Pos$/;"	d	file:
PORT_PINCFG_PULLEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_PULLEN /;"	d
PORT_PINCFG_PULLEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_PULLEN$/;"	d
PORT_PINCFG_PULLEN	src/lgfx/v0/platforms/samd51_common.cpp	/^#define PORT_PINCFG_PULLEN /;"	d	file:
PORT_PINCFG_PULLEN	src/lgfx/v0/platforms/samd51_common.cpp	/^#undef PORT_PINCFG_PULLEN$/;"	d	file:
PORT_PINCFG_PULLEN	src/lgfx/v0/platforms/samd51_common.hpp	/^ #define PORT_PINCFG_PULLEN /;"	d
PORT_PINCFG_PULLEN	src/lgfx/v0/platforms/samd51_common.hpp	/^ #undef PORT_PINCFG_PULLEN$/;"	d
PORT_PINCFG_PULLEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_PULLEN /;"	d	file:
PORT_PINCFG_PULLEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_PULLEN$/;"	d	file:
PORT_PINCFG_PULLEN	src/lgfx/v1/platforms/samd51/common.cpp	/^#define PORT_PINCFG_PULLEN /;"	d	file:
PORT_PINCFG_PULLEN	src/lgfx/v1/platforms/samd51/common.cpp	/^#undef PORT_PINCFG_PULLEN$/;"	d	file:
PORT_PINCFG_PULLEN	src/lgfx/v1/platforms/samd51/common.hpp	/^ #define PORT_PINCFG_PULLEN /;"	d
PORT_PINCFG_PULLEN	src/lgfx/v1/platforms/samd51/common.hpp	/^ #undef PORT_PINCFG_PULLEN$/;"	d
PORT_PINCFG_PULLEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define PORT_PINCFG_PULLEN_Pos /;"	d
PORT_PINCFG_PULLEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef PORT_PINCFG_PULLEN_Pos$/;"	d
PORT_PINCFG_PULLEN_Pos	src/lgfx/v0/platforms/samd51_common.cpp	/^#define PORT_PINCFG_PULLEN_Pos /;"	d	file:
PORT_PINCFG_PULLEN_Pos	src/lgfx/v0/platforms/samd51_common.cpp	/^#undef PORT_PINCFG_PULLEN_Pos$/;"	d	file:
PORT_PINCFG_PULLEN_Pos	src/lgfx/v0/platforms/samd51_common.hpp	/^ #define PORT_PINCFG_PULLEN_Pos /;"	d
PORT_PINCFG_PULLEN_Pos	src/lgfx/v0/platforms/samd51_common.hpp	/^ #undef PORT_PINCFG_PULLEN_Pos$/;"	d
PORT_PINCFG_PULLEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define PORT_PINCFG_PULLEN_Pos /;"	d	file:
PORT_PINCFG_PULLEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef PORT_PINCFG_PULLEN_Pos$/;"	d	file:
PORT_PINCFG_PULLEN_Pos	src/lgfx/v1/platforms/samd51/common.cpp	/^#define PORT_PINCFG_PULLEN_Pos /;"	d	file:
PORT_PINCFG_PULLEN_Pos	src/lgfx/v1/platforms/samd51/common.cpp	/^#undef PORT_PINCFG_PULLEN_Pos$/;"	d	file:
PORT_PINCFG_PULLEN_Pos	src/lgfx/v1/platforms/samd51/common.hpp	/^ #define PORT_PINCFG_PULLEN_Pos /;"	d
PORT_PINCFG_PULLEN_Pos	src/lgfx/v1/platforms/samd51/common.hpp	/^ #undef PORT_PINCFG_PULLEN_Pos$/;"	d
PORT_PINCFG_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_PINCFG_Type;$/;"	t	typeref:union:__anon423
PORT_PINCFG_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_PINCFG_Type;$/;"	t	typeref:union:__anon209
PORT_PMUX_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_PMUX_Type;$/;"	t	typeref:union:__anon421
PORT_PMUX_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_PMUX_Type;$/;"	t	typeref:union:__anon207
PORT_SHIFT	src/lgfx/v0/platforms/samd51_common.hpp	/^    static constexpr int PORT_SHIFT = 8;$/;"	m	namespace:lgfx::v0::samd51
PORT_SHIFT	src/lgfx/v1/platforms/samd21/common.hpp	/^    static constexpr int PORT_SHIFT = 5;$/;"	m	namespace:lgfx::v1::samd21
PORT_SHIFT	src/lgfx/v1/platforms/samd51/common.hpp	/^    static constexpr int PORT_SHIFT = 5;$/;"	m	namespace:lgfx::v1::samd51
PORT_SHIFT	src/lgfx/v1/platforms/stm32/common.hpp	/^    static constexpr int PORT_SHIFT = 4;$/;"	m	namespace:lgfx::v1::stm32
PORT_WRCONFIG_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PORT_WRCONFIG_Type;$/;"	t	typeref:union:__anon417
PORT_WRCONFIG_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PORT_WRCONFIG_Type;$/;"	t	typeref:union:__anon203
PRESCALER	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PRESCALER:3;      \/*!< bit:  8..10  Prescaler                          *\/$/;"	m	struct:__anon345::__anon346
PRESCALER	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PRESCALER:3;      \/*!< bit:  8..10  Prescaler                          *\/$/;"	m	struct:__anon131::__anon132
PRESCALE_ERROR	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint32_t PRESCALE_ERROR = UINT32_MAX;$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
PRESCSYNC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PRESCSYNC:2;      \/*!< bit:  4.. 5  Prescaler and Counter Synchronization *\/$/;"	m	struct:__anon345::__anon346
PRESCSYNC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PRESCSYNC:2;      \/*!< bit:  4.. 5  Prescaler and Counter Synchronization *\/$/;"	m	struct:__anon131::__anon132
PRI	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PRI:4;            \/*!< bit:  0.. 3  Channel Priority Number            *\/$/;"	m	struct:__anon318::__anon319
PRI	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PRI:4;            \/*!< bit:  0.. 3  Channel Priority Number            *\/$/;"	m	struct:__anon104::__anon105
PRICTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_PRICTRL_Type        PRICTRL;     \/**< \\brief Offset: 0x008 (R\/W  8) Priority Control *\/$/;"	m	struct:__anon344
PRICTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_PRICTRL_Type        PRICTRL;     \/**< \\brief Offset: 0x008 (R\/W  8) Priority Control *\/$/;"	m	struct:__anon130
PROGMEM	src/lgfx/Fonts/Custom/DejaVu12.h	/^const GFXfont DejaVu12 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu12.h	/^const GFXglyph DejaVu12Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu12.h	/^const uint8_t DejaVu12Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu18.h	/^const GFXfont DejaVu18 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu18.h	/^const GFXglyph DejaVu18Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu18.h	/^const uint8_t DejaVu18Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu24.h	/^const GFXfont DejaVu24 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu24.h	/^const GFXglyph DejaVu24Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu24.h	/^const uint8_t DejaVu24Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu40.h	/^const GFXfont DejaVu40 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu40.h	/^const GFXglyph DejaVu40Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu40.h	/^const uint8_t DejaVu40Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu56.h	/^const GFXfont DejaVu56 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu56.h	/^const GFXglyph DejaVu56Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu56.h	/^const uint8_t DejaVu56Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu72.h	/^const GFXfont DejaVu72 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu72.h	/^const GFXglyph DejaVu72Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu72.h	/^const uint8_t DejaVu72Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu9.h	/^const GFXfont DejaVu9 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu9.h	/^const GFXglyph DejaVu9Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/DejaVu9.h	/^const uint8_t DejaVu9Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Orbitron_Light_24.h	/^const GFXfont Orbitron_Light_24 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Orbitron_Light_24.h	/^const GFXglyph Orbitron_Light_24Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Orbitron_Light_24.h	/^const uint8_t Orbitron_Light_24Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Orbitron_Light_32.h	/^const GFXfont Orbitron_Light_32 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Orbitron_Light_32.h	/^const GFXglyph Orbitron_Light_32Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Orbitron_Light_32.h	/^const uint8_t Orbitron_Light_32Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Roboto_Thin_24.h	/^const GFXfont Roboto_Thin_24 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Roboto_Thin_24.h	/^const GFXglyph Roboto_Thin_24Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Roboto_Thin_24.h	/^const uint8_t Roboto_Thin_24Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Satisfy_24.h	/^const GFXfont Satisfy_24 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Satisfy_24.h	/^const GFXglyph Satisfy_24Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Satisfy_24.h	/^const uint8_t Satisfy_24Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Yellowtail_32.h	/^const GFXfont Yellowtail_32 PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Yellowtail_32.h	/^const GFXglyph Yellowtail_32Glyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Custom/Yellowtail_32.h	/^const uint8_t Yellowtail_32Bitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/Font8x8C64.h	/^const uint8_t font8x8_c64 [] PROGMEM =$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono12pt7b.h	/^const GFXfont FreeMono12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono12pt7b.h	/^const GFXglyph FreeMono12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono12pt7b.h	/^const uint8_t FreeMono12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono18pt7b.h	/^const GFXfont FreeMono18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono18pt7b.h	/^const GFXglyph FreeMono18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono18pt7b.h	/^const uint8_t FreeMono18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono24pt7b.h	/^const GFXfont FreeMono24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono24pt7b.h	/^const GFXglyph FreeMono24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono24pt7b.h	/^const uint8_t FreeMono24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono9pt7b.h	/^const GFXfont FreeMono9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono9pt7b.h	/^const GFXglyph FreeMono9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMono9pt7b.h	/^const uint8_t FreeMono9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold12pt7b.h	/^const GFXfont FreeMonoBold12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold12pt7b.h	/^const GFXglyph FreeMonoBold12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold12pt7b.h	/^const uint8_t FreeMonoBold12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold18pt7b.h	/^const GFXfont FreeMonoBold18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold18pt7b.h	/^const GFXglyph FreeMonoBold18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold18pt7b.h	/^const uint8_t FreeMonoBold18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold24pt7b.h	/^const GFXfont FreeMonoBold24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold24pt7b.h	/^const GFXglyph FreeMonoBold24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold24pt7b.h	/^const uint8_t FreeMonoBold24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold9pt7b.h	/^const GFXfont FreeMonoBold9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold9pt7b.h	/^const GFXglyph FreeMonoBold9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBold9pt7b.h	/^const uint8_t FreeMonoBold9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique12pt7b.h	/^const GFXfont FreeMonoBoldOblique12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique12pt7b.h	/^const GFXglyph FreeMonoBoldOblique12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique12pt7b.h	/^const uint8_t FreeMonoBoldOblique12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique18pt7b.h	/^const GFXfont FreeMonoBoldOblique18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique18pt7b.h	/^const GFXglyph FreeMonoBoldOblique18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique18pt7b.h	/^const uint8_t FreeMonoBoldOblique18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique24pt7b.h	/^const GFXfont FreeMonoBoldOblique24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique24pt7b.h	/^const GFXglyph FreeMonoBoldOblique24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique24pt7b.h	/^const uint8_t FreeMonoBoldOblique24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique9pt7b.h	/^const GFXfont FreeMonoBoldOblique9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique9pt7b.h	/^const GFXglyph FreeMonoBoldOblique9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoBoldOblique9pt7b.h	/^const uint8_t FreeMonoBoldOblique9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique12pt7b.h	/^const GFXfont FreeMonoOblique12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique12pt7b.h	/^const GFXglyph FreeMonoOblique12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique12pt7b.h	/^const uint8_t FreeMonoOblique12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique18pt7b.h	/^const GFXfont FreeMonoOblique18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique18pt7b.h	/^const GFXglyph FreeMonoOblique18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique18pt7b.h	/^const uint8_t FreeMonoOblique18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique24pt7b.h	/^const GFXfont FreeMonoOblique24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique24pt7b.h	/^const GFXglyph FreeMonoOblique24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique24pt7b.h	/^const uint8_t FreeMonoOblique24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique9pt7b.h	/^const GFXfont FreeMonoOblique9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique9pt7b.h	/^const GFXglyph FreeMonoOblique9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeMonoOblique9pt7b.h	/^const uint8_t FreeMonoOblique9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans12pt7b.h	/^const GFXfont FreeSans12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans12pt7b.h	/^const GFXglyph FreeSans12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans12pt7b.h	/^const uint8_t FreeSans12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans18pt7b.h	/^const GFXfont FreeSans18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans18pt7b.h	/^const GFXglyph FreeSans18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans18pt7b.h	/^const uint8_t FreeSans18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans24pt7b.h	/^const GFXfont FreeSans24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans24pt7b.h	/^const GFXglyph FreeSans24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans24pt7b.h	/^const uint8_t FreeSans24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans9pt7b.h	/^const GFXfont FreeSans9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans9pt7b.h	/^const GFXglyph FreeSans9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSans9pt7b.h	/^const uint8_t FreeSans9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold12pt7b.h	/^const GFXfont FreeSansBold12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold12pt7b.h	/^const GFXglyph FreeSansBold12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold12pt7b.h	/^const uint8_t FreeSansBold12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold18pt7b.h	/^const GFXfont FreeSansBold18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold18pt7b.h	/^const GFXglyph FreeSansBold18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold18pt7b.h	/^const uint8_t FreeSansBold18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold24pt7b.h	/^const GFXfont FreeSansBold24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold24pt7b.h	/^const GFXglyph FreeSansBold24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold24pt7b.h	/^const uint8_t FreeSansBold24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold9pt7b.h	/^const GFXfont FreeSansBold9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold9pt7b.h	/^const GFXglyph FreeSansBold9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBold9pt7b.h	/^const uint8_t FreeSansBold9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique12pt7b.h	/^const GFXfont FreeSansBoldOblique12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique12pt7b.h	/^const GFXglyph FreeSansBoldOblique12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique12pt7b.h	/^const uint8_t FreeSansBoldOblique12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique18pt7b.h	/^const GFXfont FreeSansBoldOblique18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique18pt7b.h	/^const GFXglyph FreeSansBoldOblique18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique18pt7b.h	/^const uint8_t FreeSansBoldOblique18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique24pt7b.h	/^const GFXfont FreeSansBoldOblique24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique24pt7b.h	/^const GFXglyph FreeSansBoldOblique24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique24pt7b.h	/^const uint8_t FreeSansBoldOblique24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique9pt7b.h	/^const GFXfont FreeSansBoldOblique9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique9pt7b.h	/^const GFXglyph FreeSansBoldOblique9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansBoldOblique9pt7b.h	/^const uint8_t FreeSansBoldOblique9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique12pt7b.h	/^const GFXfont FreeSansOblique12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique12pt7b.h	/^const GFXglyph FreeSansOblique12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique12pt7b.h	/^const uint8_t FreeSansOblique12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique18pt7b.h	/^const GFXfont FreeSansOblique18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique18pt7b.h	/^const GFXglyph FreeSansOblique18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique18pt7b.h	/^const uint8_t FreeSansOblique18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique24pt7b.h	/^const GFXfont FreeSansOblique24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique24pt7b.h	/^const GFXglyph FreeSansOblique24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique24pt7b.h	/^const uint8_t FreeSansOblique24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique9pt7b.h	/^const GFXfont FreeSansOblique9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique9pt7b.h	/^const GFXglyph FreeSansOblique9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSansOblique9pt7b.h	/^const uint8_t FreeSansOblique9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif12pt7b.h	/^const GFXfont FreeSerif12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif12pt7b.h	/^const GFXglyph FreeSerif12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif12pt7b.h	/^const uint8_t FreeSerif12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif18pt7b.h	/^const GFXfont FreeSerif18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif18pt7b.h	/^const GFXglyph FreeSerif18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif18pt7b.h	/^const uint8_t FreeSerif18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif24pt7b.h	/^const GFXfont FreeSerif24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif24pt7b.h	/^const GFXglyph FreeSerif24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif24pt7b.h	/^const uint8_t FreeSerif24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif9pt7b.h	/^const GFXfont FreeSerif9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif9pt7b.h	/^const GFXglyph FreeSerif9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerif9pt7b.h	/^const uint8_t FreeSerif9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold12pt7b.h	/^const GFXfont FreeSerifBold12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold12pt7b.h	/^const GFXglyph FreeSerifBold12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold12pt7b.h	/^const uint8_t FreeSerifBold12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold18pt7b.h	/^const GFXfont FreeSerifBold18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold18pt7b.h	/^const GFXglyph FreeSerifBold18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold18pt7b.h	/^const uint8_t FreeSerifBold18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold24pt7b.h	/^const GFXfont FreeSerifBold24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold24pt7b.h	/^const GFXglyph FreeSerifBold24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold24pt7b.h	/^const uint8_t FreeSerifBold24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold9pt7b.h	/^const GFXfont FreeSerifBold9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold9pt7b.h	/^const GFXglyph FreeSerifBold9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBold9pt7b.h	/^const uint8_t FreeSerifBold9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic12pt7b.h	/^const GFXfont FreeSerifBoldItalic12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic12pt7b.h	/^const GFXglyph FreeSerifBoldItalic12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic12pt7b.h	/^const uint8_t FreeSerifBoldItalic12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic18pt7b.h	/^const GFXfont FreeSerifBoldItalic18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic18pt7b.h	/^const GFXglyph FreeSerifBoldItalic18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic18pt7b.h	/^const uint8_t FreeSerifBoldItalic18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic24pt7b.h	/^const GFXfont FreeSerifBoldItalic24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic24pt7b.h	/^const GFXglyph FreeSerifBoldItalic24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic24pt7b.h	/^const uint8_t FreeSerifBoldItalic24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic9pt7b.h	/^const GFXfont FreeSerifBoldItalic9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic9pt7b.h	/^const GFXglyph FreeSerifBoldItalic9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifBoldItalic9pt7b.h	/^const uint8_t FreeSerifBoldItalic9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic12pt7b.h	/^const GFXfont FreeSerifItalic12pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic12pt7b.h	/^const GFXglyph FreeSerifItalic12pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic12pt7b.h	/^const uint8_t FreeSerifItalic12pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic18pt7b.h	/^const GFXfont FreeSerifItalic18pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic18pt7b.h	/^const GFXglyph FreeSerifItalic18pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic18pt7b.h	/^const uint8_t FreeSerifItalic18pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic24pt7b.h	/^const GFXfont FreeSerifItalic24pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic24pt7b.h	/^const GFXglyph FreeSerifItalic24pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic24pt7b.h	/^const uint8_t FreeSerifItalic24pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic9pt7b.h	/^const GFXfont FreeSerifItalic9pt7b PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic9pt7b.h	/^const GFXglyph FreeSerifItalic9pt7bGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/FreeSerifItalic9pt7b.h	/^const uint8_t FreeSerifItalic9pt7bBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/TomThumb.h	/^const GFXfont TomThumb PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/TomThumb.h	/^const GFXglyph TomThumbGlyphs[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/GFXFF/TomThumb.h	/^const uint8_t TomThumbBitmaps[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^#define PROGMEM$/;"	d	file:
PROGMEM	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^#define PROGMEM$/;"	d	file:
PROGMEM	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^#define PROGMEM$/;"	d	file:
PROGMEM	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^#define PROGMEM$/;"	d	file:
PROGMEM	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^#define PROGMEM$/;"	d	file:
PROGMEM	src/lgfx/Fonts/glcdfont.h	/^static const unsigned char font[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/utility/lgfx_pngle.c	/^static const uint8_t interlace_div_y[9] PROGMEM = { 8, 8, 8, 4, 4, 2, 2, 1, 1 };$/;"	v	file:
PROGMEM	src/lgfx/utility/lgfx_pngle.c	/^static const uint8_t interlace_off_y[9] PROGMEM = { 0, 0, 4, 0, 2, 0, 1, 0, 0 };$/;"	v	file:
PROGMEM	src/lgfx/utility/lgfx_pngle.c	/^static const uint8_t png_header[] PROGMEM = { 0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52 };$/;"	v	file:
PROGMEM	src/lgfx/utility/pgmspace.h	/^#define PROGMEM$/;"	d
PROGMEM	src/lgfx/v0/lgfx_fonts.cpp	/^#define PROGMEM$/;"	d	file:
PROGMEM	src/lgfx/v1/touch/gslx680/Touch_GSL1680E_800x480_FW.hpp	/^static constexpr const gsl_fw_data GSL1680E_800x480_FW[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/v1/touch/gslx680/Touch_GSL1680F_480x272_FW.hpp	/^static constexpr const gsl_fw_data GSL1680F_480x272_FW[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/v1/touch/gslx680/Touch_GSL1680F_800x480_FW.hpp	/^static constexpr const gsl_fw_data GSL1680F_800x480_FW[] PROGMEM = {$/;"	v
PROGMEM	src/lgfx/v1/touch/gslx680/Touch_GSLx680_320x320_FW.hpp	/^static constexpr const gsl_fw_data GSLx680_320x320_FW[] PROGMEM = {$/;"	v
PTLON	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t PTLON   = 0x12;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
PUKCC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PUKCC_:1;         \/*!< bit:     20  PUKCC AHB Clock Mask               *\/$/;"	m	struct:__anon295::__anon296
PUKCC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PUKCC_:1;         \/*!< bit:     20  PUKCC AHB Clock Mask               *\/$/;"	m	struct:__anon81::__anon82
PULLEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t PULLEN:1;         \/*!< bit:     18  Pull Enable                        *\/$/;"	m	struct:__anon417::__anon418
PULLEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  PULLEN:1;         \/*!< bit:      2  Pull Enable                        *\/$/;"	m	struct:__anon423::__anon424
PULLEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t PULLEN:1;         \/*!< bit:     18  Pull Enable                        *\/$/;"	m	struct:__anon203::__anon204
PULLEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  PULLEN:1;         \/*!< bit:      2  Pull Enable                        *\/$/;"	m	struct:__anon209::__anon210
PURPLE	src/LGFX_TFT_eSPI.hpp	/^    #undef PURPLE$/;"	d
PURPLE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int PURPLE          = 0x780F;      \/* 128,   0, 128 *\/$/;"	m	namespace:lgfx::ili9341_colors
PVGAMCTRL	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t PVGAMCTRL= 0xE0;      \/\/ Positive voltage gamma control$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
PWCTR1	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
PWCTR1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
PWCTR1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ILI9342::CMD
PWCTR1	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
PWCTR1	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
PWCTR1	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
PWCTR1	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t PWCTR1  = 0xC0;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
PWCTR2	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
PWCTR2	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
PWCTR2	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v0::Panel_ILI9342::CMD
PWCTR2	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
PWCTR2	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
PWCTR2	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
PWCTR2	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t PWCTR2  = 0xC1;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
PWCTR3	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
PWCTR3	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
PWCTR3	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
PWCTR3	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
PWCTR3	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
PWCTR3	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t PWCTR3  = 0xC2;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
PWCTR4	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
PWCTR4	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
PWCTR4	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
PWCTR4	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
PWCTR4	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
PWCTR4	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t PWCTR4  = 0xC3;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
PWCTR5	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
PWCTR5	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
PWCTR5	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
PWCTR5	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
PWCTR5	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
PWCTR5	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t PWCTR5  = 0xC4;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
PWCTR6	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t PWCTR6  = 0xFC;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
PWCTRL1	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t PWCTRL1  = 0xD0;      \/\/ Power control 1$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
PWSET	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^      static constexpr uint8_t PWSET  = 0xD0;$/;"	m	struct:lgfx::v0::Panel_ILI9481::CMD
PWSETN	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^      static constexpr uint8_t PWSETN = 0xD2;$/;"	m	struct:lgfx::v0::Panel_ILI9481::CMD
PanelCommon	src/lgfx/v0/panel/PanelCommon.hpp	/^  struct PanelCommon$/;"	s	namespace:lgfx::v0
PanelIlitekCommon	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    PanelIlitekCommon() {$/;"	f	struct:lgfx::v0::PanelIlitekCommon
PanelIlitekCommon	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^  struct PanelIlitekCommon : public PanelCommon$/;"	s	namespace:lgfx::v0
Panel_1bitOLED	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^  struct Panel_1bitOLED : public Panel_HasBuffer$/;"	s	namespace:lgfx::v1
Panel_CVBS	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  Panel_CVBS::Panel_CVBS()$/;"	f	class:lgfx::v1::Panel_CVBS
Panel_CVBS	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^  struct Panel_CVBS : public Panel_FrameBufferBase$/;"	s	namespace:lgfx::v1
Panel_DDUINO32_XS	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^    Panel_DDUINO32_XS() : Panel_ST7789() {$/;"	f	struct:lgfx::Panel_DDUINO32_XS
Panel_DDUINO32_XS	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^  struct Panel_DDUINO32_XS : public Panel_ST7789$/;"	s	namespace:lgfx
Panel_Device	src/lgfx/v1/panel/Panel_Device.cpp	/^  Panel_Device::Panel_Device(void)$/;"	f	class:lgfx::v1::Panel_Device
Panel_Device	src/lgfx/v1/panel/Panel_Device.hpp	/^  struct Panel_Device : public IPanel$/;"	s	namespace:lgfx::v1
Panel_ESPboy	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^  struct Panel_ESPboy : public lgfx::Panel_ST7735S$/;"	s	namespace:lgfx::v1
Panel_ESPboy	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^  struct Panel_ESPboy : public lgfx::Panel_ST7735S$/;"	s	class:LGFX
Panel_F746DISCO	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^    Panel_F746DISCO(void) : Panel_ILI9341()$/;"	f	struct:lgfx::v1::Panel_F746DISCO
Panel_F746DISCO	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^  struct Panel_F746DISCO : public Panel_ILI9341$/;"	s	namespace:lgfx::v1
Panel_FlexibleFrameBuffer	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^  struct Panel_FlexibleFrameBuffer : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_FrameBufferBase	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^  struct Panel_FrameBufferBase : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_GC9107	src/lgfx/v1/panel/Panel_GC9A01.hpp	/^    Panel_GC9107(void)$/;"	f	struct:lgfx::v1::Panel_GC9107
Panel_GC9107	src/lgfx/v1/panel/Panel_GC9A01.hpp	/^  struct Panel_GC9107  : public Panel_GC9xxx$/;"	s	namespace:lgfx::v1
Panel_GC9A01	src/lgfx/v1/panel/Panel_GC9A01.hpp	/^    Panel_GC9A01(void)$/;"	f	struct:lgfx::v1::Panel_GC9A01
Panel_GC9A01	src/lgfx/v1/panel/Panel_GC9A01.hpp	/^  struct Panel_GC9A01  : public Panel_GC9xxx$/;"	s	namespace:lgfx::v1
Panel_GC9xxx	src/lgfx/v1/panel/Panel_GC9A01.hpp	/^  struct Panel_GC9xxx  : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_GDEW0154M09	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    Panel_GDEW0154M09()$/;"	f	struct:lgfx::v0::Panel_GDEW0154M09
Panel_GDEW0154M09	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^  struct Panel_GDEW0154M09 : public PanelCommon$/;"	s	namespace:lgfx::v0
Panel_GDEW0154M09	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  Panel_GDEW0154M09::Panel_GDEW0154M09(void)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
Panel_GDEW0154M09	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^  struct Panel_GDEW0154M09 : public Panel_HasBuffer$/;"	s	namespace:lgfx::v1
Panel_HUB75	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    Panel_HUB75(void)$/;"	f	struct:lgfx::v1::Panel_HUB75
Panel_HUB75	src/lgfx/v1/panel/Panel_HUB75.hpp	/^  struct Panel_HUB75 : public Panel_FlexibleFrameBuffer$/;"	s	namespace:lgfx::v1
Panel_HUB75_Multi	src/lgfx/v1/panel/Panel_HUB75.hpp	/^  struct Panel_HUB75_Multi : public Panel_HUB75$/;"	s	namespace:lgfx::v1
Panel_HX8357	src/lgfx/v0/panel/Panel_HX8357.hpp	/^    Panel_HX8357(void)$/;"	f	struct:lgfx::v0::Panel_HX8357
Panel_HX8357	src/lgfx/v0/panel/Panel_HX8357.hpp	/^  struct Panel_HX8357 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_HX8357B	src/lgfx/v0/panel/Panel_HX8357.hpp	/^  struct Panel_HX8357B : public Panel_HX8357$/;"	s	namespace:lgfx::v0
Panel_HX8357B	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^  struct Panel_HX8357B : public Panel_ILI948x$/;"	s	namespace:lgfx::v1
Panel_HX8357D	src/lgfx/v0/panel/Panel_HX8357.hpp	/^  struct Panel_HX8357D : public Panel_HX8357$/;"	s	namespace:lgfx::v0
Panel_HX8357D	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^  struct Panel_HX8357D : public Panel_ILI948x$/;"	s	namespace:lgfx::v1
Panel_HasBuffer	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  Panel_HasBuffer::Panel_HasBuffer(void) : Panel_Device()$/;"	f	class:lgfx::v1::Panel_HasBuffer
Panel_HasBuffer	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^  struct Panel_HasBuffer : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_ILI9163	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^    Panel_ILI9163(void)$/;"	f	struct:lgfx::v0::Panel_ILI9163
Panel_ILI9163	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^  struct Panel_ILI9163 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ILI9163	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^    Panel_ILI9163(void)$/;"	f	struct:lgfx::v1::Panel_ILI9163
Panel_ILI9163	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^  struct Panel_ILI9163 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_ILI9225	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    Panel_ILI9225(void)$/;"	f	struct:lgfx::v1::Panel_ILI9225
Panel_ILI9225	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^  struct Panel_ILI9225 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_ILI9341	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^    Panel_ILI9341(void)$/;"	f	struct:lgfx::v0::Panel_ILI9341
Panel_ILI9341	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^  struct Panel_ILI9341 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ILI9341	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^    Panel_ILI9341(void)$/;"	f	struct:lgfx::v1::Panel_ILI9341
Panel_ILI9341	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^  struct Panel_ILI9341 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_ILI9342	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^    Panel_ILI9342(void) {$/;"	f	struct:lgfx::v0::Panel_ILI9342
Panel_ILI9342	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^  struct Panel_ILI9342 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ILI9342	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^    Panel_ILI9342(void)$/;"	f	struct:lgfx::v1::Panel_ILI9342
Panel_ILI9342	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^  struct Panel_ILI9342 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_ILI9481	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^    Panel_ILI9481(void)$/;"	f	struct:lgfx::v0::Panel_ILI9481
Panel_ILI9481	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^  struct Panel_ILI9481 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ILI9481	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^  struct Panel_ILI9481 : public Panel_ILI948x$/;"	s	namespace:lgfx::v1
Panel_ILI9486	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^    Panel_ILI9486(void)$/;"	f	struct:lgfx::v0::Panel_ILI9486
Panel_ILI9486	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^  struct Panel_ILI9486 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ILI9486	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^  struct Panel_ILI9486 : public Panel_ILI948x$/;"	s	namespace:lgfx::v1
Panel_ILI9486L	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^  struct Panel_ILI9486L : public Panel_ILI9486$/;"	s	namespace:lgfx::v0
Panel_ILI9488	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^    Panel_ILI9488(void)$/;"	f	struct:lgfx::v0::Panel_ILI9488
Panel_ILI9488	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^  struct Panel_ILI9488 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ILI9488	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^  struct Panel_ILI9488 : public Panel_ILI948x$/;"	s	namespace:lgfx::v1
Panel_ILI948x	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^    Panel_ILI948x(void)$/;"	f	struct:lgfx::v1::Panel_ILI948x
Panel_ILI948x	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^  struct Panel_ILI948x : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_IT8951	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    Panel_IT8951()$/;"	f	struct:lgfx::v0::Panel_IT8951
Panel_IT8951	src/lgfx/v0/panel/Panel_IT8951.hpp	/^  struct Panel_IT8951 : public PanelCommon$/;"	s	namespace:lgfx::v0
Panel_IT8951	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  Panel_IT8951::Panel_IT8951(void)$/;"	f	class:lgfx::v1::Panel_IT8951
Panel_IT8951	src/lgfx/v1/panel/Panel_IT8951.hpp	/^  struct Panel_IT8951 : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_LCD	src/lgfx/v1/panel/Panel_LCD.hpp	/^  struct Panel_LCD : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_LoLinD32	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^    Panel_LoLinD32(void) {$/;"	f	struct:lgfx::Panel_LoLinD32
Panel_LoLinD32	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^  struct Panel_LoLinD32 : public Panel_ST7735S$/;"	s	namespace:lgfx
Panel_M5HDMI	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    Panel_M5HDMI(void)$/;"	f	struct:lgfx::v1::Panel_M5HDMI
Panel_M5HDMI	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^  struct Panel_M5HDMI : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_M5Stack	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    Panel_M5Stack(void)$/;"	f	struct:lgfx::v0::Panel_M5Stack
Panel_M5Stack	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^  struct Panel_M5Stack : public Panel_ILI9342$/;"	s	namespace:lgfx::v0
Panel_M5Stack	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^    Panel_M5Stack(void) {$/;"	f	struct:lgfx::Panel_M5Stack
Panel_M5Stack	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^  struct Panel_M5Stack : public Panel_ILI9342$/;"	s	namespace:lgfx
Panel_M5Stack	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    Panel_M5Stack(void)$/;"	f	struct:lgfx::v1::Panel_M5Stack
Panel_M5Stack	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Panel_M5Stack : public lgfx::Panel_ILI9342$/;"	s	namespace:lgfx::v1
Panel_M5Stack	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    Panel_M5Stack(void)$/;"	f	struct:lgfx::v1::Panel_M5Stack
Panel_M5Stack	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Panel_M5Stack : public lgfx::Panel_ILI9342$/;"	s	namespace:lgfx::v1
Panel_M5StackCore2	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    Panel_M5StackCore2(void) {$/;"	f	struct:lgfx::v0::Panel_M5StackCore2
Panel_M5StackCore2	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^  struct Panel_M5StackCore2 : public Panel_ILI9342$/;"	s	namespace:lgfx::v0
Panel_M5StackCore2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    Panel_M5StackCore2(void)$/;"	f	struct:lgfx::v1::Panel_M5StackCore2
Panel_M5StackCore2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Panel_M5StackCore2 : public lgfx::Panel_ILI9342$/;"	s	namespace:lgfx::v1
Panel_M5StackCore2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    Panel_M5StackCore2(void)$/;"	f	struct:lgfx::v1::Panel_M5StackCore2
Panel_M5StackCore2	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Panel_M5StackCore2 : public lgfx::Panel_ILI9342$/;"	s	namespace:lgfx::v1
Panel_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    Panel_M5StackCoreS3(void)$/;"	f	struct:lgfx::v1::Panel_M5StackCoreS3
Panel_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  struct Panel_M5StackCoreS3 : public lgfx::Panel_ILI9342$/;"	s	namespace:lgfx::v1
Panel_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    Panel_M5StackCoreS3(void)$/;"	f	struct:lgfx::v1::Panel_M5StackCoreS3
Panel_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Panel_M5StackCoreS3 : public lgfx::Panel_ILI9342$/;"	s	namespace:lgfx::v1
Panel_M5StickC	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    Panel_M5StickC() {$/;"	f	struct:lgfx::v0::Panel_M5StickC
Panel_M5StickC	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^  struct Panel_M5StickC : public Panel_ST7735S$/;"	s	namespace:lgfx::v0
Panel_M5StickC	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^    Panel_M5StickC() {$/;"	f	struct:lgfx::Panel_M5StickC
Panel_M5StickC	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^  struct Panel_M5StickC : public Panel_ST7735S$/;"	s	namespace:lgfx
Panel_M5StickC	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    Panel_M5StickC(void)$/;"	f	struct:lgfx::v1::Panel_M5StickC
Panel_M5StickC	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Panel_M5StickC : public lgfx::Panel_ST7735S$/;"	s	namespace:lgfx::v1
Panel_M5StickC	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    Panel_M5StickC(void)$/;"	f	struct:lgfx::v1::Panel_M5StickC
Panel_M5StickC	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Panel_M5StickC : public lgfx::Panel_ST7735S$/;"	s	namespace:lgfx::v1
Panel_M5StickCPlus	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    Panel_M5StickCPlus() {$/;"	f	struct:lgfx::v0::Panel_M5StickCPlus
Panel_M5StickCPlus	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^  struct Panel_M5StickCPlus: public Panel_ST7789$/;"	s	namespace:lgfx::v0
Panel_M5StickCPlus	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^    Panel_M5StickCPlus() {$/;"	f	struct:lgfx::Panel_M5StickCPlus
Panel_M5StickCPlus	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^  struct Panel_M5StickCPlus: public Panel_ST7789$/;"	s	namespace:lgfx
Panel_M5StickCPlus	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    Panel_M5StickCPlus(void)$/;"	f	struct:lgfx::v1::Panel_M5StickCPlus
Panel_M5StickCPlus	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Panel_M5StickCPlus : public lgfx::Panel_ST7789$/;"	s	namespace:lgfx::v1
Panel_M5StickCPlus	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    Panel_M5StickCPlus(void)$/;"	f	struct:lgfx::v1::Panel_M5StickCPlus
Panel_M5StickCPlus	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Panel_M5StickCPlus : public lgfx::Panel_ST7789$/;"	s	namespace:lgfx::v1
Panel_M5UnitLCD	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    Panel_M5UnitLCD(void)$/;"	f	struct:lgfx::v1::Panel_M5UnitLCD
Panel_M5UnitLCD	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^  struct Panel_M5UnitLCD : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_NT35510	src/lgfx/v1/panel/Panel_NT35510.hpp	/^    Panel_NT35510(void)$/;"	f	struct:lgfx::v1::Panel_NT35510
Panel_NT35510	src/lgfx/v1/panel/Panel_NT35510.hpp	/^  struct Panel_NT35510 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_NULL	src/lgfx/v1/panel/Panel_Device.hpp	/^  struct Panel_NULL : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_ODROID_GO	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^    Panel_ODROID_GO(void) {$/;"	f	struct:lgfx::Panel_ODROID_GO
Panel_ODROID_GO	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^  struct Panel_ODROID_GO : public Panel_ILI9341$/;"	s	namespace:lgfx
Panel_OpenCV	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  Panel_OpenCV::Panel_OpenCV(void) : Panel_Device(), _img(nullptr), _window_name( "" )$/;"	f	class:lgfx::v1::Panel_OpenCV
Panel_OpenCV	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^  struct Panel_OpenCV : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_R61529	src/lgfx/v1/panel/Panel_R61529.hpp	/^    Panel_R61529(void)$/;"	f	struct:lgfx::v1::Panel_R61529
Panel_R61529	src/lgfx/v1/panel/Panel_R61529.hpp	/^  struct Panel_R61529  : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_RA8875	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    Panel_RA8875(void)$/;"	f	struct:lgfx::v1::Panel_RA8875
Panel_RA8875	src/lgfx/v1/panel/Panel_RA8875.hpp	/^  struct Panel_RA8875 : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_RGB	src/lgfx/v1/platforms/esp32s3/Panel_RGB.cpp	/^  Panel_RGB::Panel_RGB(void)$/;"	f	class:lgfx::v1::Panel_RGB
Panel_RGB	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^  struct Panel_RGB : public Panel_FrameBufferBase$/;"	s	namespace:lgfx::v1
Panel_RM68120	src/lgfx/v1/panel/Panel_RM68120.hpp	/^    Panel_RM68120(void)$/;"	f	struct:lgfx::v1::Panel_RM68120
Panel_RM68120	src/lgfx/v1/panel/Panel_RM68120.hpp	/^  struct Panel_RM68120  : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_S6D04K1	src/lgfx/v1/panel/Panel_S6D04K1.hpp	/^    Panel_S6D04K1(void)$/;"	f	struct:lgfx::v1::Panel_S6D04K1
Panel_S6D04K1	src/lgfx/v1/panel/Panel_S6D04K1.hpp	/^  struct Panel_S6D04K1 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_SH110x	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    Panel_SH110x(void)$/;"	f	struct:lgfx::v1::Panel_SH110x
Panel_SH110x	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^  struct Panel_SH110x : public Panel_1bitOLED$/;"	s	namespace:lgfx::v1
Panel_SSD1306	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    Panel_SSD1306(void)$/;"	f	struct:lgfx::v1::Panel_SSD1306
Panel_SSD1306	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^  struct Panel_SSD1306 : public Panel_1bitOLED$/;"	s	namespace:lgfx::v1
Panel_SSD1327	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    Panel_SSD1327(void) : Panel_HasBuffer()$/;"	f	struct:lgfx::v1::Panel_SSD1327
Panel_SSD1327	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^  struct Panel_SSD1327 : public Panel_HasBuffer$/;"	s	namespace:lgfx::v1
Panel_SSD1331	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    Panel_SSD1331(void) : Panel_SSD1351()$/;"	f	struct:lgfx::v1::Panel_SSD1331
Panel_SSD1331	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^  struct Panel_SSD1331 : public Panel_SSD1351$/;"	s	namespace:lgfx::v1
Panel_SSD1351	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    Panel_SSD1351()$/;"	f	struct:lgfx::v0::Panel_SSD1351
Panel_SSD1351	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^  struct Panel_SSD1351 : public PanelCommon$/;"	s	namespace:lgfx::v0
Panel_SSD1351	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    Panel_SSD1351(void) : Panel_LCD()$/;"	f	class:lgfx::v1::Panel_SSD1351
Panel_SSD1351	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^  class Panel_SSD1351 : public Panel_LCD$/;"	c	namespace:lgfx::v1
Panel_SSD1963	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    Panel_SSD1963(void)$/;"	f	namespace:lgfx::v1
Panel_SSD1963	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^  struct Panel_SSD1963 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_ST7735	src/lgfx/v0/panel/Panel_ST7735.hpp	/^    Panel_ST7735(void)$/;"	f	struct:lgfx::v0::Panel_ST7735
Panel_ST7735	src/lgfx/v0/panel/Panel_ST7735.hpp	/^  struct Panel_ST7735 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ST7735	src/lgfx/v1/panel/Panel_ST7735.hpp	/^    Panel_ST7735(void)$/;"	f	struct:lgfx::v1::Panel_ST7735
Panel_ST7735	src/lgfx/v1/panel/Panel_ST7735.hpp	/^  struct Panel_ST7735 : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_ST7735S	src/lgfx/v0/panel/Panel_ST7735.hpp	/^  struct Panel_ST7735S : public Panel_ST7735$/;"	s	namespace:lgfx::v0
Panel_ST7735S	src/lgfx/v1/panel/Panel_ST7735.hpp	/^  struct Panel_ST7735S : public Panel_ST7735$/;"	s	namespace:lgfx::v1
Panel_ST7789	src/lgfx/v0/panel/Panel_ST7789.hpp	/^    Panel_ST7789(void)$/;"	f	struct:lgfx::v0::Panel_ST7789
Panel_ST7789	src/lgfx/v0/panel/Panel_ST7789.hpp	/^  struct Panel_ST7789  : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ST7789	src/lgfx/v1/panel/Panel_ST7789.hpp	/^    Panel_ST7789(void)$/;"	f	struct:lgfx::v1::Panel_ST7789
Panel_ST7789	src/lgfx/v1/panel/Panel_ST7789.hpp	/^  struct Panel_ST7789  : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_ST7796	src/lgfx/v0/panel/Panel_ST7796.hpp	/^    Panel_ST7796(void)$/;"	f	struct:lgfx::v0::Panel_ST7796
Panel_ST7796	src/lgfx/v0/panel/Panel_ST7796.hpp	/^  struct Panel_ST7796 : public PanelIlitekCommon$/;"	s	namespace:lgfx::v0
Panel_ST7796	src/lgfx/v1/panel/Panel_ST7796.hpp	/^    Panel_ST7796(void)$/;"	f	struct:lgfx::v1::Panel_ST7796
Panel_ST7796	src/lgfx/v1/panel/Panel_ST7796.hpp	/^  struct Panel_ST7796  : public Panel_LCD$/;"	s	namespace:lgfx::v1
Panel_Sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    Panel_Sprite(void) { _start_count = INT32_MAX; }$/;"	f	struct:lgfx::v1::Panel_Sprite
Panel_Sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^  struct Panel_Sprite : public IPanel$/;"	s	namespace:lgfx::v1
Panel_TTGO_TS	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^    Panel_TTGO_TS(void) {$/;"	f	struct:lgfx::Panel_TTGO_TS
Panel_TTGO_TS	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^  struct Panel_TTGO_TS : public Panel_ST7735S$/;"	s	namespace:lgfx
Panel_TTGO_TWatch	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^    Panel_TTGO_TWatch() : Panel_ST7789() {$/;"	f	struct:lgfx::Panel_TTGO_TWatch
Panel_TTGO_TWatch	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^  struct Panel_TTGO_TWatch : public Panel_ST7789$/;"	s	namespace:lgfx
Panel_TTGO_TWristband	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^    Panel_TTGO_TWristband() {$/;"	f	struct:LGFX::Panel_TTGO_TWristband
Panel_TTGO_TWristband	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^  struct Panel_TTGO_TWristband : public lgfx::Panel_ST7735S$/;"	s	class:LGFX
Panel_WioTerminal	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    Panel_WioTerminal(void)$/;"	f	struct:lgfx::Panel_WioTerminal
Panel_WioTerminal	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^  struct Panel_WioTerminal : public Panel_ILI9341$/;"	s	namespace:lgfx
Panel_default	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^    Panel_default(void) {$/;"	f	struct:LGFX::Panel_default
Panel_default	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^  struct Panel_default : public lgfx::Panel_ILI9341$/;"	s	class:LGFX
Panel_fb	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  Panel_fb::Panel_fb(void) : Panel_Device(), _fbp(nullptr)$/;"	f	class:lgfx::v1::Panel_fb
Panel_fb	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^  struct Panel_fb : public Panel_Device$/;"	s	namespace:lgfx::v1
Panel_sdl	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  Panel_sdl::Panel_sdl(void) : Panel_Device()$/;"	f	class:lgfx::v1::Panel_sdl
Panel_sdl	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^  struct Panel_sdl : public Panel_Device$/;"	s	namespace:lgfx::v1
PointerWrapper	src/lgfx/v0/lgfx_common.hpp	/^  struct PointerWrapper : public DataWrapper$/;"	s	namespace:lgfx
PointerWrapper	src/lgfx/v1/misc/DataWrapper.hpp	/^  struct PointerWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
Port	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} Port;$/;"	t	typeref:struct:__anon426
Port	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} Port;$/;"	t	typeref:struct:__anon212
PortGroup	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} PortGroup;$/;"	t	typeref:struct:__anon425
PortGroup	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} PortGroup;$/;"	t	typeref:struct:__anon211
Preallocated	src/lgfx/v0/LGFX_Sprite.hpp	/^      Preallocated,$/;"	e	enum:lgfx::v0::LGFX_Sprite::AllocationSource
Preallocated	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    Preallocated,$/;"	e	enum:lgfx::v1::AllocationSource
Psram	src/lgfx/v0/LGFX_Sprite.hpp	/^      Psram,$/;"	e	enum:lgfx::v0::LGFX_Sprite::AllocationSource
Psram	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    Psram,$/;"	e	enum:lgfx::v1::AllocationSource
QOI_COLOR_HASH	src/lgfx/utility/lgfx_qoi.c	/^static inline uint8_t QOI_COLOR_HASH( const qoi_rgba_t *c )$/;"	f	file:
QOI_DEBUG	src/lgfx/utility/lgfx_qoi.c	/^#define QOI_DEBUG$/;"	d	file:
QOI_ERROR	src/lgfx/utility/lgfx_qoi.c	/^#define QOI_ERROR(/;"	d	file:
QOI_HEADER_SIZE	src/lgfx/utility/lgfx_qoi.c	/^#define QOI_HEADER_SIZE /;"	d	file:
QOI_LINEAR	src/lgfx/utility/lgfx_qoi.c	/^#define QOI_LINEAR /;"	d	file:
QOI_MASK_2	src/lgfx/utility/lgfx_qoi.c	/^  QOI_MASK_2    = 0xc0  \/* 11000000 *\/$/;"	e	enum:__anon550	file:
QOI_OP_DIFF	src/lgfx/utility/lgfx_qoi.c	/^  QOI_OP_DIFF   = 0x40, \/* 01xxxxxx *\/$/;"	e	enum:__anon550	file:
QOI_OP_INDEX	src/lgfx/utility/lgfx_qoi.c	/^  QOI_OP_INDEX  = 0x00, \/* 00xxxxxx *\/$/;"	e	enum:__anon550	file:
QOI_OP_LUMA	src/lgfx/utility/lgfx_qoi.c	/^  QOI_OP_LUMA   = 0x80, \/* 10xxxxxx *\/$/;"	e	enum:__anon550	file:
QOI_OP_RGB	src/lgfx/utility/lgfx_qoi.c	/^  QOI_OP_RGB    = 0xfe, \/* 11111110 *\/$/;"	e	enum:__anon550	file:
QOI_OP_RGBA	src/lgfx/utility/lgfx_qoi.c	/^  QOI_OP_RGBA   = 0xff, \/* 11111111 *\/$/;"	e	enum:__anon550	file:
QOI_OP_RUN	src/lgfx/utility/lgfx_qoi.c	/^  QOI_OP_RUN    = 0xc0, \/* 11xxxxxx *\/$/;"	e	enum:__anon550	file:
QOI_PIXELS_MAX	src/lgfx/utility/lgfx_qoi.c	/^#define QOI_PIXELS_MAX /;"	d	file:
QOI_SRGB	src/lgfx/utility/lgfx_qoi.c	/^#define QOI_SRGB /;"	d	file:
QRCode	src/lgfx/utility/lgfx_qrcode.h	/^typedef struct QRCode {$/;"	s
QRCode	src/lgfx/utility/lgfx_qrcode.h	/^} QRCode;$/;"	t	typeref:struct:QRCode
QSPI_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t QSPI_:1;          \/*!< bit:     13  QSPI AHB Clock Mask                *\/$/;"	m	struct:__anon295::__anon296
QSPI_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t QSPI_:1;          \/*!< bit:     13  QSPI APB Clock Enable              *\/$/;"	m	struct:__anon301::__anon302
QSPI_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t QSPI_:1;          \/*!< bit:     13  QSPI AHB Clock Mask                *\/$/;"	m	struct:__anon81::__anon82
QSPI_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t QSPI_:1;          \/*!< bit:     13  QSPI APB Clock Enable              *\/$/;"	m	struct:__anon87::__anon88
QSPI_2X_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t QSPI_2X_:1;       \/*!< bit:     21  QSPI_2X AHB Clock Mask             *\/$/;"	m	struct:__anon295::__anon296
QSPI_2X_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t QSPI_2X_:1;       \/*!< bit:     21  QSPI_2X AHB Clock Mask             *\/$/;"	m	struct:__anon81::__anon82
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return  r | r<<3; }$/;"	f	struct:lgfx::v0::rgb332_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return ( r * 0x21) >> 4; }$/;"	f	struct:lgfx::v0::swap565_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return (r * 0x21) >> 4; }$/;"	f	struct:lgfx::v0::rgb565_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return r; }$/;"	f	struct:lgfx::v0::bgr666_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return r>>2; }$/;"	f	struct:lgfx::v0::argb8888_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return r>>2; }$/;"	f	struct:lgfx::v0::bgr888_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return r>>2; }$/;"	f	struct:lgfx::v0::bgra8888_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return r>>2; }$/;"	f	struct:lgfx::v0::grayscale_t
R6	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R6() const { return r>>2; }$/;"	f	struct:lgfx::v0::rgb888_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6() const { return r >> 2; }$/;"	f	struct:lgfx::v1::bgr888_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return  (r3 << 3) + r3; }$/;"	f	struct:lgfx::v1::rgb332_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return (r5 << 1) + (r5 >> 4); }$/;"	f	struct:lgfx::v1::rgb565_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return (r5 << 1) + (r5 >> 4); }$/;"	f	struct:lgfx::v1::swap565_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return r >> 2; }$/;"	f	struct:lgfx::v1::argb8888_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return r >> 2; }$/;"	f	struct:lgfx::v1::bgra8888_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return r >> 2; }$/;"	f	struct:lgfx::v1::grayscale_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return r >> 2; }$/;"	f	struct:lgfx::v1::rgb888_t
R6	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R6(void) const { return r6; }$/;"	f	struct:lgfx::v1::bgr666_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return ( r * 0x21) >> 2; }$/;"	f	struct:lgfx::v0::swap565_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return (r * 0x21) >> 2; } \/\/ (r << 3) | (r >> 2);$/;"	f	struct:lgfx::v0::rgb565_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return (r * 0x49) >> 1; } \/\/ (r<<5)|(r<<2)|(r>>1);$/;"	f	struct:lgfx::v0::rgb332_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return r; }$/;"	f	struct:lgfx::v0::argb8888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return r; }$/;"	f	struct:lgfx::v0::bgr888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return r; }$/;"	f	struct:lgfx::v0::bgra8888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return r; }$/;"	f	struct:lgfx::v0::grayscale_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return r; }$/;"	f	struct:lgfx::v0::rgb888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline constexpr uint8_t R8() const { return r<<2; }$/;"	f	struct:lgfx::v0::bgr666_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8 >> 3; }$/;"	f	struct:lgfx::v0::rgb565_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8 >> 3; }$/;"	f	struct:lgfx::v0::swap565_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8 >> 5; }$/;"	f	struct:lgfx::v0::rgb332_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v0::argb8888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v0::bgr888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v0::bgra8888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v0::grayscale_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v0::rgb888_t
R8	src/lgfx/v0/lgfx_common.hpp	/^    inline void R8(uint8_t r8) { r = r8>>2; }$/;"	f	struct:lgfx::v0::bgr666_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8() const { return r; }$/;"	f	struct:lgfx::v1::bgr888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return  (((r3 << 3) + r3) << 2) + (r3 >> 1); }$/;"	f	struct:lgfx::v1::rgb332_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return (r5 << 3) + (r5 >> 2); }$/;"	f	struct:lgfx::v1::rgb565_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return (r5 << 3) + (r5 >> 2); }$/;"	f	struct:lgfx::v1::swap565_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return (r6 << 2) + (r6 >> 4); }$/;"	f	struct:lgfx::v1::bgr666_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return r; }$/;"	f	struct:lgfx::v1::argb8888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return r; }$/;"	f	struct:lgfx::v1::bgra8888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return r; }$/;"	f	struct:lgfx::v1::grayscale_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint8_t R8(void) const { return r; }$/;"	f	struct:lgfx::v1::rgb888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v1::argb8888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v1::bgr888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v1::bgra8888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v1::grayscale_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r = r8; }$/;"	f	struct:lgfx::v1::rgb888_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r3 = r8 >> 5; }$/;"	f	struct:lgfx::v1::rgb332_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r5 = r8 >> 3; }$/;"	f	struct:lgfx::v1::rgb565_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r5 = r8 >> 3; }$/;"	f	struct:lgfx::v1::swap565_t
R8	src/lgfx/v1/misc/colortype.hpp	/^    inline void R8(uint8_t r8) { r6 = r8 >> 2; }$/;"	f	struct:lgfx::v1::bgr666_t
RAMECC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RAMECC_:1;        \/*!< bit:     16  RAMECC APB Clock Enable            *\/$/;"	m	struct:__anon299::__anon300
RAMECC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RAMECC_:1;        \/*!< bit:     16  RAMECC APB Clock Enable            *\/$/;"	m	struct:__anon85::__anon86
RAMRD	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t RAMRD   = 0x2E;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
RAMRD	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t RAMRD   = 0x5D;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
RAMWR	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t RAMWR   = 0x2C;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
RAMWR	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t RAMWR   = 0x5C;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
RASET	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t RASET   = 0x2B; static constexpr uint8_t PASET = 0x2B;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
RASET	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t RASET   = 0x75; static constexpr uint8_t PASET = 0x75;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
RDDID	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t RDDID   = 0x04;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
RDDST	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t RDDST   = 0x09;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
RDID1	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t RDID1   = 0xDA;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
RDID2	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t RDID2   = 0xDB;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
RDID3	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t RDID3   = 0xDC;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
RDID4	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t RDID4   = 0xDD;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
RDINDEX	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t RDINDEX = 0xD9; \/\/ ili9341$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
RDINDEX	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t RDINDEX = 0xD9; \/\/ ili9341$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
RDYUSR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  RDYUSR:1;         \/*!< bit:      0  Ready User                         *\/$/;"	m	struct:__anon339::__anon340
RDYUSR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  RDYUSR:1;         \/*!< bit:      0  Ready User                         *\/$/;"	m	struct:__anon125::__anon126
READY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t READY:1;          \/*!< bit:     14  Ready                              *\/$/;"	m	struct:__anon320::__anon321
READY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t READY:1;          \/*!< bit:     14  Ready                              *\/$/;"	m	struct:__anon106::__anon107
READYUSR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR:12;      \/*!< bit:  0..11  Ready User for Channel x           *\/$/;"	m	struct:__anon328::__anon330
READYUSR	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  EVSYS_READYUSR_Type       READYUSR;    \/**< \\brief Offset: 0x01C (R\/  32) Ready Users *\/$/;"	m	struct:__anon344
READYUSR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR:12;      \/*!< bit:  0..11  Ready User for Channel x           *\/$/;"	m	struct:__anon114::__anon116
READYUSR	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  EVSYS_READYUSR_Type       READYUSR;    \/**< \\brief Offset: 0x01C (R\/  32) Ready Users *\/$/;"	m	struct:__anon130
READYUSR0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR0:1;      \/*!< bit:      0  Ready User for Channel 0           *\/$/;"	m	struct:__anon328::__anon329
READYUSR0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR0:1;      \/*!< bit:      0  Ready User for Channel 0           *\/$/;"	m	struct:__anon114::__anon115
READYUSR1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR1:1;      \/*!< bit:      1  Ready User for Channel 1           *\/$/;"	m	struct:__anon328::__anon329
READYUSR1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR1:1;      \/*!< bit:      1  Ready User for Channel 1           *\/$/;"	m	struct:__anon114::__anon115
READYUSR10	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR10:1;     \/*!< bit:     10  Ready User for Channel 10          *\/$/;"	m	struct:__anon328::__anon329
READYUSR10	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR10:1;     \/*!< bit:     10  Ready User for Channel 10          *\/$/;"	m	struct:__anon114::__anon115
READYUSR11	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR11:1;     \/*!< bit:     11  Ready User for Channel 11          *\/$/;"	m	struct:__anon328::__anon329
READYUSR11	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR11:1;     \/*!< bit:     11  Ready User for Channel 11          *\/$/;"	m	struct:__anon114::__anon115
READYUSR2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR2:1;      \/*!< bit:      2  Ready User for Channel 2           *\/$/;"	m	struct:__anon328::__anon329
READYUSR2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR2:1;      \/*!< bit:      2  Ready User for Channel 2           *\/$/;"	m	struct:__anon114::__anon115
READYUSR3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR3:1;      \/*!< bit:      3  Ready User for Channel 3           *\/$/;"	m	struct:__anon328::__anon329
READYUSR3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR3:1;      \/*!< bit:      3  Ready User for Channel 3           *\/$/;"	m	struct:__anon114::__anon115
READYUSR4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR4:1;      \/*!< bit:      4  Ready User for Channel 4           *\/$/;"	m	struct:__anon328::__anon329
READYUSR4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR4:1;      \/*!< bit:      4  Ready User for Channel 4           *\/$/;"	m	struct:__anon114::__anon115
READYUSR5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR5:1;      \/*!< bit:      5  Ready User for Channel 5           *\/$/;"	m	struct:__anon328::__anon329
READYUSR5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR5:1;      \/*!< bit:      5  Ready User for Channel 5           *\/$/;"	m	struct:__anon114::__anon115
READYUSR6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR6:1;      \/*!< bit:      6  Ready User for Channel 6           *\/$/;"	m	struct:__anon328::__anon329
READYUSR6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR6:1;      \/*!< bit:      6  Ready User for Channel 6           *\/$/;"	m	struct:__anon114::__anon115
READYUSR7	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR7:1;      \/*!< bit:      7  Ready User for Channel 7           *\/$/;"	m	struct:__anon328::__anon329
READYUSR7	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR7:1;      \/*!< bit:      7  Ready User for Channel 7           *\/$/;"	m	struct:__anon114::__anon115
READYUSR8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR8:1;      \/*!< bit:      8  Ready User for Channel 8           *\/$/;"	m	struct:__anon328::__anon329
READYUSR8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR8:1;      \/*!< bit:      8  Ready User for Channel 8           *\/$/;"	m	struct:__anon114::__anon115
READYUSR9	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t READYUSR9:1;      \/*!< bit:      9  Ready User for Channel 9           *\/$/;"	m	struct:__anon328::__anon329
READYUSR9	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t READYUSR9:1;      \/*!< bit:      9  Ready User for Channel 9           *\/$/;"	m	struct:__anon114::__anon115
READ_ID_CODE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    READ_ID_CODE      = 0x11,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
RED	src/LGFX_TFT_eSPI.hpp	/^    #undef RED$/;"	d
RED	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int RED             = 0xF800;      \/* 255,   0,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
REG_SPI_BASE	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^ #define REG_SPI_BASE(/;"	d	file:
REG_SPI_BASE	src/lgfx/v1/platforms/esp32/common.cpp	/^ #define REG_SPI_BASE(/;"	d	file:
REG_SPI_BASE	src/lgfx/v1/platforms/esp32/common.hpp	/^#define REG_SPI_BASE(/;"	d
REPROGRAM	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    REPROGRAM         = 0x3C,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
RESULT_CPP14_CONSTEXPR	src/lgfx/utility/result.hpp	/^# define RESULT_CPP14_CONSTEXPR /;"	d
RESULT_CPP14_CONSTEXPR	src/lgfx/utility/result.hpp	/^# define RESULT_CPP14_CONSTEXPR$/;"	d
RESULT_CPP14_CONSTEXPR	src/lgfx/utility/result.hpp	/^#undef RESULT_CPP14_CONSTEXPR$/;"	d
RESULT_CPP17_INLINE	src/lgfx/utility/result.hpp	/^# define RESULT_CPP17_INLINE /;"	d
RESULT_CPP17_INLINE	src/lgfx/utility/result.hpp	/^# define RESULT_CPP17_INLINE$/;"	d
RESULT_CPP17_INLINE	src/lgfx/utility/result.hpp	/^#undef RESULT_CPP17_INLINE$/;"	d
RESULT_INLINE_VISIBILITY	src/lgfx/utility/result.hpp	/^# define RESULT_INLINE_VISIBILITY /;"	d
RESULT_INLINE_VISIBILITY	src/lgfx/utility/result.hpp	/^# define RESULT_INLINE_VISIBILITY$/;"	d
RESULT_INLINE_VISIBILITY	src/lgfx/utility/result.hpp	/^#undef RESULT_INLINE_VISIBILITY$/;"	d
RESULT_NAMESPACE_INTERNAL	src/lgfx/utility/result.hpp	/^# define RESULT_NAMESPACE_INTERNAL /;"	d
RESULT_NAMESPACE_INTERNAL	src/lgfx/utility/result.hpp	/^#undef RESULT_NAMESPACE_INTERNAL$/;"	d
RESULT_NAMESPACE_INTERNAL	src/lgfx/utility/result.hpp	/^namespace RESULT_NAMESPACE_INTERNAL {$/;"	n
RESULT_NODISCARD	src/lgfx/utility/result.hpp	/^# define RESULT_NODISCARD$/;"	d
RESULT_NODISCARD	src/lgfx/utility/result.hpp	/^#undef RESULT_NODISCARD$/;"	d
RESULT_NS_IMPL	src/lgfx/utility/result.hpp	/^#define RESULT_NS_IMPL /;"	d
RESULT_NS_IMPL	src/lgfx/utility/result.hpp	/^#undef RESULT_NS_IMPL$/;"	d
RESULT_RESULT_HPP	src/lgfx/utility/result.hpp	/^#define RESULT_RESULT_HPP$/;"	d
RESULT_WARN_UNUSED	src/lgfx/utility/result.hpp	/^# define RESULT_WARN_UNUSED$/;"	d
RESULT_WARN_UNUSED	src/lgfx/utility/result.hpp	/^#undef RESULT_WARN_UNUSED$/;"	d
RGB444_12bit	src/lgfx/v1/panel/Panel_LCD.hpp	/^    { RGB444_12bit = 0x33$/;"	e	enum:lgfx::v1::Panel_LCD::colmod_t
RGB565_2BYTE	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    { RGB565_2BYTE = 0x55$/;"	e	enum:lgfx::v0::PanelIlitekCommon::colmod_t
RGB565_2BYTE	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , RGB565_2BYTE = 0x55$/;"	e	enum:lgfx::v1::Panel_LCD::colmod_t
RGB666_3BYTE	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    , RGB666_3BYTE = 0x66$/;"	e	enum:lgfx::v0::PanelIlitekCommon::colmod_t
RGB888	src/lgfx/v1/misc/colortype.hpp	/^    inline constexpr uint32_t RGB888(void) const { return (r<<16)+(g<<8)+b; }$/;"	f	struct:lgfx::v1::bgr888_t
RGB888_3BYTE	src/lgfx/v1/panel/Panel_LCD.hpp	/^    , RGB888_3BYTE = 0x66$/;"	e	enum:lgfx::v1::Panel_LCD::colmod_t
RLEfont	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr RLEfont(const void *chartbl, const uint8_t *widthtbl, uint8_t width, uint8_t height, uint8_t baseline) : BMPfont(chartbl, widthtbl, width, height, baseline ) {}$/;"	f	struct:lgfx::v0::RLEfont
RLEfont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct RLEfont : public BMPfont {$/;"	s	namespace:lgfx::v0
RLEfont	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr RLEfont(const void *char_tbl, const uint8_t *width_tbl, uint8_t w, uint8_t h, uint8_t bl) : BMPfont(char_tbl, width_tbl, w, h, bl ) {}$/;"	f	struct:lgfx::v1::RLEfont
RLEfont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct RLEfont : public BMPfont {$/;"	s	namespace:lgfx::v1
RREN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  RREN:1;           \/*!< bit:      7  Round-Robin Scheduling Enable      *\/$/;"	m	struct:__anon318::__anon319
RREN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  RREN:1;           \/*!< bit:      7  Round-Robin Scheduling Enable      *\/$/;"	m	struct:__anon104::__anon105
RSTC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RSTC_:1;          \/*!< bit:      3  RSTC APB Clock Enable              *\/$/;"	m	struct:__anon297::__anon298
RSTC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RSTC_:1;          \/*!< bit:      3  RSTC APB Clock Enable              *\/$/;"	m	struct:__anon83::__anon84
RTC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RTC_:1;           \/*!< bit:      9  RTC APB Clock Enable               *\/$/;"	m	struct:__anon297::__anon298
RTC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RTC_:1;           \/*!< bit:      9  RTC APB Clock Enable               *\/$/;"	m	struct:__anon83::__anon84
RUNSTDBY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:      6  Run during Standby                 *\/$/;"	m	struct:__anon345::__anon346
RUNSTDBY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:      7  Run during Standby                 *\/$/;"	m	struct:__anon427::__anon428
RUNSTDBY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:     13  Run in Standby                     *\/$/;"	m	struct:__anon280::__anon281
RUNSTDBY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:     14  Run in standby                     *\/$/;"	m	struct:__anon331::__anon332
RUNSTDBY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  RUNSTDBY:1;       \/*!< bit:      6  Run in Standby                     *\/$/;"	m	struct:__anon306::__anon307
RUNSTDBY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:      6  Run during Standby                 *\/$/;"	m	struct:__anon131::__anon132
RUNSTDBY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:      7  Run during Standby                 *\/$/;"	m	struct:__anon213::__anon214
RUNSTDBY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:     13  Run in Standby                     *\/$/;"	m	struct:__anon66::__anon67
RUNSTDBY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RUNSTDBY:1;       \/*!< bit:     14  Run in standby                     *\/$/;"	m	struct:__anon117::__anon118
RUNSTDBY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  RUNSTDBY:1;       \/*!< bit:      6  Run in Standby                     *\/$/;"	m	struct:__anon92::__anon93
RXC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  RXC:1;            \/*!< bit:      2  Receive Complete Interrupt         *\/$/;"	m	struct:__anon439::__anon440
RXC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  RXC:1;            \/*!< bit:      2  Receive Complete Interrupt Disable *\/$/;"	m	struct:__anon435::__anon436
RXC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  RXC:1;            \/*!< bit:      2  Receive Complete Interrupt Enable  *\/$/;"	m	struct:__anon437::__anon438
RXC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  RXC:1;            \/*!< bit:      2  Receive Complete Interrupt         *\/$/;"	m	struct:__anon225::__anon226
RXC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  RXC:1;            \/*!< bit:      2  Receive Complete Interrupt Disable *\/$/;"	m	struct:__anon221::__anon222
RXC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  RXC:1;            \/*!< bit:      2  Receive Complete Interrupt Enable  *\/$/;"	m	struct:__anon223::__anon224
RXEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t RXEN:1;           \/*!< bit:     17  Receiver Enable                    *\/$/;"	m	struct:__anon429::__anon430
RXEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t RXEN:1;           \/*!< bit:     17  Receiver Enable                    *\/$/;"	m	struct:__anon215::__anon216
R_BASELINE	src/lgfx/v0/lgfx_common.hpp	/^    #undef R_BASELINE$/;"	d
R_BASELINE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t R_BASELINE = textdatum_t::baseline_right;$/;"	m	namespace:lgfx::v0::textdatum
R_BASELINE	src/lgfx/v1/misc/enum.hpp	/^    #undef R_BASELINE$/;"	d
R_BASELINE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t R_BASELINE = textdatum_t::baseline_right;$/;"	m	namespace:lgfx::v1::textdatum
ReadRawLine	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::ReadRawLine(LGFX_Device* gfx, int32_t raw_x, int32_t raw_y, int32_t len, uint16_t* buf)$/;"	f	class:lgfx::v0::Panel_IT8951
ReadWords	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::ReadWords(LGFX_Device* gfx, uint16_t *buf, uint32_t length)$/;"	f	class:lgfx::v0::Panel_IT8951
Reserved1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x1];$/;"	m	struct:__anon305
Reserved1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x1];$/;"	m	struct:__anon395
Reserved1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x20];$/;"	m	struct:__anon425
Reserved1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x3];$/;"	m	struct:__anon284
Reserved1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x3];$/;"	m	struct:__anon312
Reserved1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x3];$/;"	m	struct:__anon344
Reserved1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x7];$/;"	m	struct:__anon453
Reserved1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x1];$/;"	m	struct:__anon181
Reserved1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x1];$/;"	m	struct:__anon91
Reserved1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x20];$/;"	m	struct:__anon211
Reserved1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x3];$/;"	m	struct:__anon130
Reserved1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x3];$/;"	m	struct:__anon70
Reserved1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x3];$/;"	m	struct:__anon98
Reserved1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved1[0x7];$/;"	m	struct:__anon239
Reserved2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x18];$/;"	m	struct:__anon284
Reserved2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x1];$/;"	m	struct:__anon453
Reserved2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x2];$/;"	m	struct:__anon312
Reserved2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x6];$/;"	m	struct:__anon395
Reserved2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x7];$/;"	m	struct:__anon344
Reserved2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0xA];$/;"	m	struct:__anon305
Reserved2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x18];$/;"	m	struct:__anon70
Reserved2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x1];$/;"	m	struct:__anon239
Reserved2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x2];$/;"	m	struct:__anon98
Reserved2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x6];$/;"	m	struct:__anon181
Reserved2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0x7];$/;"	m	struct:__anon130
Reserved2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved2[0xA];$/;"	m	struct:__anon91
Reserved3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x11];$/;"	m	struct:__anon395
Reserved3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x1];$/;"	m	struct:__anon453
Reserved3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x2];$/;"	m	struct:__anon344
Reserved3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x30];$/;"	m	struct:__anon284
Reserved3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x11];$/;"	m	struct:__anon181
Reserved3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x1];$/;"	m	struct:__anon239
Reserved3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x2];$/;"	m	struct:__anon130
Reserved3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved3[0x30];$/;"	m	struct:__anon70
Reserved4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved4[0x1];$/;"	m	struct:__anon453
Reserved4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved4[0x1];$/;"	m	struct:__anon239
Reserved5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved5[0x2];$/;"	m	struct:__anon453
Reserved5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved5[0x2];$/;"	m	struct:__anon239
Reserved6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved6[0x4];$/;"	m	struct:__anon453
Reserved6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       RoReg8                    Reserved6[0x4];$/;"	m	struct:__anon239
RoReg8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^typedef uint8_t RoReg8;$/;"	t
RoReg8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^typedef uint8_t RoReg8;$/;"	t
RunTimeFont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct RunTimeFont : public IFont {$/;"	s	namespace:lgfx::v0
RunTimeFont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct RunTimeFont : public IFont$/;"	s	namespace:lgfx::v1
SAFE_I2S_FIFO_RD_REG	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  #define SAFE_I2S_FIFO_RD_REG(/;"	d
SAFE_I2S_FIFO_RD_REG	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  #define SAFE_I2S_FIFO_RD_REG(/;"	d	file:
SAFE_I2S_FIFO_WR_REG	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  #define SAFE_I2S_FIFO_WR_REG(/;"	d
SAFE_I2S_FIFO_WR_REG	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  #define SAFE_I2S_FIFO_WR_REG(/;"	d	file:
SAMD51_ARDUINO_COMPAT_HPP__	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SAMD51_ARDUINO_COMPAT_HPP__$/;"	d
SAMD51_ARDUINO_COMPAT_HPP__	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SAMD51_ARDUINO_COMPAT_HPP__$/;"	d
SAMPLING	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SAMPLING:32;      \/*!< bit:  0..31  Input Sampling Mode                *\/$/;"	m	struct:__anon415::__anon416
SAMPLING	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SAMPLING:32;      \/*!< bit:  0..31  Input Sampling Mode                *\/$/;"	m	struct:__anon201::__anon202
SCREEN_X	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^#define SCREEN_X /;"	d	file:
SCREEN_Y	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^#define SCREEN_Y /;"	d	file:
SDHC0_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SDHC0_:1;         \/*!< bit:     15  SDHC0 AHB Clock Mask               *\/$/;"	m	struct:__anon295::__anon296
SDHC0_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SDHC0_:1;         \/*!< bit:     15  SDHC0 AHB Clock Mask               *\/$/;"	m	struct:__anon81::__anon82
SDHC1_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SDHC1_:1;         \/*!< bit:     16  SDHC1 AHB Clock Mask               *\/$/;"	m	struct:__anon295::__anon296
SDHC1_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SDHC1_:1;         \/*!< bit:     16  SDHC1 AHB Clock Mask               *\/$/;"	m	struct:__anon81::__anon82
SEQCTRL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO CCL_SEQCTRL_Type          SEQCTRL[2];  \/**< \\brief Offset: 0x4 (R\/W  8) SEQ Control x *\/$/;"	m	struct:__anon312
SEQCTRL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO CCL_SEQCTRL_Type          SEQCTRL[2];  \/**< \\brief Offset: 0x4 (R\/W  8) SEQ Control x *\/$/;"	m	struct:__anon98
SEQSEL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  SEQSEL:4;         \/*!< bit:  0.. 3  Sequential Selection               *\/$/;"	m	struct:__anon308::__anon309
SEQSEL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  SEQSEL:4;         \/*!< bit:  0.. 3  Sequential Selection               *\/$/;"	m	struct:__anon94::__anon95
SERCOM0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM0 /;"	d
SERCOM0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM0 /;"	d
SERCOM0_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM0_:1;       \/*!< bit:     12  SERCOM0 APB Clock Enable           *\/$/;"	m	struct:__anon297::__anon298
SERCOM0_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM0_:1;       \/*!< bit:     12  SERCOM0 APB Clock Enable           *\/$/;"	m	struct:__anon83::__anon84
SERCOM0_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM0_3_IRQn /;"	d
SERCOM0_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM0_3_IRQn /;"	d
SERCOM0_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM0_DMAC_ID_RX /;"	d
SERCOM0_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM0_DMAC_ID_RX /;"	d
SERCOM0_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM0_DMAC_ID_TX /;"	d
SERCOM0_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM0_DMAC_ID_TX /;"	d
SERCOM0_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM0_GCLK_ID_CORE /;"	d
SERCOM0_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM0_GCLK_ID_CORE /;"	d
SERCOM0_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM0_GCLK_ID_SLOW /;"	d
SERCOM0_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM0_GCLK_ID_SLOW /;"	d
SERCOM1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM1 /;"	d
SERCOM1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM1 /;"	d
SERCOM1_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM1_:1;       \/*!< bit:     13  SERCOM1 APB Clock Enable           *\/$/;"	m	struct:__anon297::__anon298
SERCOM1_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM1_:1;       \/*!< bit:     13  SERCOM1 APB Clock Enable           *\/$/;"	m	struct:__anon83::__anon84
SERCOM1_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM1_3_IRQn /;"	d
SERCOM1_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM1_3_IRQn /;"	d
SERCOM1_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM1_DMAC_ID_RX /;"	d
SERCOM1_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM1_DMAC_ID_RX /;"	d
SERCOM1_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM1_DMAC_ID_TX /;"	d
SERCOM1_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM1_DMAC_ID_TX /;"	d
SERCOM1_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM1_GCLK_ID_CORE /;"	d
SERCOM1_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM1_GCLK_ID_CORE /;"	d
SERCOM1_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM1_GCLK_ID_SLOW /;"	d
SERCOM1_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM1_GCLK_ID_SLOW /;"	d
SERCOM2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM2 /;"	d
SERCOM2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM2 /;"	d
SERCOM2_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM2_:1;       \/*!< bit:      9  SERCOM2 APB Clock Enable           *\/$/;"	m	struct:__anon299::__anon300
SERCOM2_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM2_:1;       \/*!< bit:      9  SERCOM2 APB Clock Enable           *\/$/;"	m	struct:__anon85::__anon86
SERCOM2_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM2_3_IRQn /;"	d
SERCOM2_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM2_3_IRQn /;"	d
SERCOM2_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM2_DMAC_ID_RX /;"	d
SERCOM2_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM2_DMAC_ID_RX /;"	d
SERCOM2_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM2_DMAC_ID_TX /;"	d
SERCOM2_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM2_DMAC_ID_TX /;"	d
SERCOM2_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM2_GCLK_ID_CORE /;"	d
SERCOM2_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM2_GCLK_ID_CORE /;"	d
SERCOM2_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM2_GCLK_ID_SLOW /;"	d
SERCOM2_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM2_GCLK_ID_SLOW /;"	d
SERCOM3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM3 /;"	d
SERCOM3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM3 /;"	d
SERCOM3_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM3_:1;       \/*!< bit:     10  SERCOM3 APB Clock Enable           *\/$/;"	m	struct:__anon299::__anon300
SERCOM3_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM3_:1;       \/*!< bit:     10  SERCOM3 APB Clock Enable           *\/$/;"	m	struct:__anon85::__anon86
SERCOM3_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM3_3_IRQn /;"	d
SERCOM3_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM3_3_IRQn /;"	d
SERCOM3_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM3_DMAC_ID_RX /;"	d
SERCOM3_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM3_DMAC_ID_RX /;"	d
SERCOM3_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM3_DMAC_ID_TX /;"	d
SERCOM3_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM3_DMAC_ID_TX /;"	d
SERCOM3_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM3_GCLK_ID_CORE /;"	d
SERCOM3_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM3_GCLK_ID_CORE /;"	d
SERCOM3_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM3_GCLK_ID_SLOW /;"	d
SERCOM3_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM3_GCLK_ID_SLOW /;"	d
SERCOM4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM4 /;"	d
SERCOM4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM4 /;"	d
SERCOM4_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM4_:1;       \/*!< bit:      0  SERCOM4 APB Clock Enable           *\/$/;"	m	struct:__anon303::__anon304
SERCOM4_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM4_:1;       \/*!< bit:      0  SERCOM4 APB Clock Enable           *\/$/;"	m	struct:__anon89::__anon90
SERCOM4_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM4_3_IRQn /;"	d
SERCOM4_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM4_3_IRQn /;"	d
SERCOM4_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM4_DMAC_ID_RX /;"	d
SERCOM4_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM4_DMAC_ID_RX /;"	d
SERCOM4_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM4_DMAC_ID_TX /;"	d
SERCOM4_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM4_DMAC_ID_TX /;"	d
SERCOM4_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM4_GCLK_ID_CORE /;"	d
SERCOM4_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM4_GCLK_ID_CORE /;"	d
SERCOM4_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM4_GCLK_ID_SLOW /;"	d
SERCOM4_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM4_GCLK_ID_SLOW /;"	d
SERCOM5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM5 /;"	d
SERCOM5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM5 /;"	d
SERCOM5_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM5_:1;       \/*!< bit:      1  SERCOM5 APB Clock Enable           *\/$/;"	m	struct:__anon303::__anon304
SERCOM5_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM5_:1;       \/*!< bit:      1  SERCOM5 APB Clock Enable           *\/$/;"	m	struct:__anon89::__anon90
SERCOM5_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM5_3_IRQn /;"	d
SERCOM5_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM5_3_IRQn /;"	d
SERCOM5_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM5_DMAC_ID_RX /;"	d
SERCOM5_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM5_DMAC_ID_RX /;"	d
SERCOM5_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM5_DMAC_ID_TX /;"	d
SERCOM5_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM5_DMAC_ID_TX /;"	d
SERCOM5_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM5_GCLK_ID_CORE /;"	d
SERCOM5_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM5_GCLK_ID_CORE /;"	d
SERCOM5_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM5_GCLK_ID_SLOW /;"	d
SERCOM5_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM5_GCLK_ID_SLOW /;"	d
SERCOM6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM6 /;"	d
SERCOM6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM6 /;"	d
SERCOM6_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM6_:1;       \/*!< bit:      2  SERCOM6 APB Clock Enable           *\/$/;"	m	struct:__anon303::__anon304
SERCOM6_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM6_:1;       \/*!< bit:      2  SERCOM6 APB Clock Enable           *\/$/;"	m	struct:__anon89::__anon90
SERCOM6_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM6_3_IRQn /;"	d
SERCOM6_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM6_3_IRQn /;"	d
SERCOM6_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM6_DMAC_ID_RX /;"	d
SERCOM6_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM6_DMAC_ID_RX /;"	d
SERCOM6_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM6_DMAC_ID_TX /;"	d
SERCOM6_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM6_DMAC_ID_TX /;"	d
SERCOM6_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM6_GCLK_ID_CORE /;"	d
SERCOM6_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM6_GCLK_ID_CORE /;"	d
SERCOM6_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM6_GCLK_ID_SLOW /;"	d
SERCOM6_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM6_GCLK_ID_SLOW /;"	d
SERCOM7	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM7 /;"	d
SERCOM7	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM7 /;"	d
SERCOM7_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SERCOM7_:1;       \/*!< bit:      3  SERCOM7 APB Clock Enable           *\/$/;"	m	struct:__anon303::__anon304
SERCOM7_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SERCOM7_:1;       \/*!< bit:      3  SERCOM7 APB Clock Enable           *\/$/;"	m	struct:__anon89::__anon90
SERCOM7_3_IRQn	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM7_3_IRQn /;"	d
SERCOM7_3_IRQn	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM7_3_IRQn /;"	d
SERCOM7_DMAC_ID_RX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM7_DMAC_ID_RX /;"	d
SERCOM7_DMAC_ID_RX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM7_DMAC_ID_RX /;"	d
SERCOM7_DMAC_ID_TX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM7_DMAC_ID_TX /;"	d
SERCOM7_DMAC_ID_TX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM7_DMAC_ID_TX /;"	d
SERCOM7_GCLK_ID_CORE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM7_GCLK_ID_CORE /;"	d
SERCOM7_GCLK_ID_CORE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM7_GCLK_ID_CORE /;"	d
SERCOM7_GCLK_ID_SLOW	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM7_GCLK_ID_SLOW /;"	d
SERCOM7_GCLK_ID_SLOW	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM7_GCLK_ID_SLOW /;"	d
SERCOM_INSTS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM_INSTS /;"	d
SERCOM_INSTS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM_INSTS /;"	d
SERCOM_INST_NUM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define SERCOM_INST_NUM /;"	d
SERCOM_INST_NUM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define SERCOM_INST_NUM /;"	d
SERCOM_RX_PAD_2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^static constexpr SercomSpiTXPad SERCOM_RX_PAD_2 = 2;$/;"	v
SERCOM_RX_PAD_2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^static constexpr SercomSpiTXPad SERCOM_RX_PAD_2 = 2;$/;"	v
SERCOM_SPI_ADDR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_ADDR_Type;$/;"	t	typeref:union:__anon447
SERCOM_SPI_ADDR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_ADDR_Type;$/;"	t	typeref:union:__anon233
SERCOM_SPI_BAUD_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_BAUD_Type;$/;"	t	typeref:union:__anon433
SERCOM_SPI_BAUD_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_BAUD_Type;$/;"	t	typeref:union:__anon219
SERCOM_SPI_CTRLA_DIPO	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DIPO(/;"	d
SERCOM_SPI_CTRLA_DIPO	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DIPO$/;"	d
SERCOM_SPI_CTRLA_DIPO	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DIPO(/;"	d	file:
SERCOM_SPI_CTRLA_DIPO	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DIPO$/;"	d	file:
SERCOM_SPI_CTRLA_DIPO_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DIPO_Msk /;"	d
SERCOM_SPI_CTRLA_DIPO_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DIPO_Msk$/;"	d
SERCOM_SPI_CTRLA_DIPO_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DIPO_Msk /;"	d	file:
SERCOM_SPI_CTRLA_DIPO_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DIPO_Msk$/;"	d	file:
SERCOM_SPI_CTRLA_DIPO_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DIPO_Pos /;"	d
SERCOM_SPI_CTRLA_DIPO_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DIPO_Pos$/;"	d
SERCOM_SPI_CTRLA_DIPO_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DIPO_Pos /;"	d	file:
SERCOM_SPI_CTRLA_DIPO_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DIPO_Pos$/;"	d	file:
SERCOM_SPI_CTRLA_DOPO	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DOPO(/;"	d
SERCOM_SPI_CTRLA_DOPO	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DOPO$/;"	d
SERCOM_SPI_CTRLA_DOPO	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DOPO(/;"	d	file:
SERCOM_SPI_CTRLA_DOPO	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DOPO$/;"	d	file:
SERCOM_SPI_CTRLA_DOPO_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DOPO_Msk /;"	d
SERCOM_SPI_CTRLA_DOPO_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DOPO_Msk$/;"	d
SERCOM_SPI_CTRLA_DOPO_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DOPO_Msk /;"	d	file:
SERCOM_SPI_CTRLA_DOPO_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DOPO_Msk$/;"	d	file:
SERCOM_SPI_CTRLA_DOPO_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DOPO_Pos /;"	d
SERCOM_SPI_CTRLA_DOPO_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DOPO_Pos$/;"	d
SERCOM_SPI_CTRLA_DOPO_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DOPO_Pos /;"	d	file:
SERCOM_SPI_CTRLA_DOPO_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DOPO_Pos$/;"	d	file:
SERCOM_SPI_CTRLA_DORD	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DORD /;"	d
SERCOM_SPI_CTRLA_DORD	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DORD$/;"	d
SERCOM_SPI_CTRLA_DORD	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DORD /;"	d	file:
SERCOM_SPI_CTRLA_DORD	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DORD$/;"	d	file:
SERCOM_SPI_CTRLA_DORD_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_DORD_Pos /;"	d
SERCOM_SPI_CTRLA_DORD_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_DORD_Pos$/;"	d
SERCOM_SPI_CTRLA_DORD_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_DORD_Pos /;"	d	file:
SERCOM_SPI_CTRLA_DORD_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_DORD_Pos$/;"	d	file:
SERCOM_SPI_CTRLA_MODE	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_MODE(/;"	d
SERCOM_SPI_CTRLA_MODE	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_MODE$/;"	d
SERCOM_SPI_CTRLA_MODE	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_MODE(/;"	d	file:
SERCOM_SPI_CTRLA_MODE	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_MODE$/;"	d	file:
SERCOM_SPI_CTRLA_MODE_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_MODE_Msk /;"	d
SERCOM_SPI_CTRLA_MODE_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_MODE_Msk$/;"	d
SERCOM_SPI_CTRLA_MODE_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_MODE_Msk /;"	d	file:
SERCOM_SPI_CTRLA_MODE_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_MODE_Msk$/;"	d	file:
SERCOM_SPI_CTRLA_MODE_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLA_MODE_Pos /;"	d
SERCOM_SPI_CTRLA_MODE_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLA_MODE_Pos$/;"	d
SERCOM_SPI_CTRLA_MODE_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLA_MODE_Pos /;"	d	file:
SERCOM_SPI_CTRLA_MODE_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLA_MODE_Pos$/;"	d	file:
SERCOM_SPI_CTRLA_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_CTRLA_Type;$/;"	t	typeref:union:__anon427
SERCOM_SPI_CTRLA_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_CTRLA_Type;$/;"	t	typeref:union:__anon213
SERCOM_SPI_CTRLB_CHSIZE	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLB_CHSIZE(/;"	d
SERCOM_SPI_CTRLB_CHSIZE	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLB_CHSIZE$/;"	d
SERCOM_SPI_CTRLB_CHSIZE	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLB_CHSIZE(/;"	d	file:
SERCOM_SPI_CTRLB_CHSIZE	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLB_CHSIZE$/;"	d	file:
SERCOM_SPI_CTRLB_CHSIZE_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLB_CHSIZE_Msk /;"	d
SERCOM_SPI_CTRLB_CHSIZE_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLB_CHSIZE_Msk$/;"	d
SERCOM_SPI_CTRLB_CHSIZE_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLB_CHSIZE_Msk /;"	d	file:
SERCOM_SPI_CTRLB_CHSIZE_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLB_CHSIZE_Msk$/;"	d	file:
SERCOM_SPI_CTRLB_CHSIZE_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLB_CHSIZE_Pos /;"	d
SERCOM_SPI_CTRLB_CHSIZE_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLB_CHSIZE_Pos$/;"	d
SERCOM_SPI_CTRLB_CHSIZE_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLB_CHSIZE_Pos /;"	d	file:
SERCOM_SPI_CTRLB_CHSIZE_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLB_CHSIZE_Pos$/;"	d	file:
SERCOM_SPI_CTRLB_RXEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLB_RXEN /;"	d
SERCOM_SPI_CTRLB_RXEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLB_RXEN$/;"	d
SERCOM_SPI_CTRLB_RXEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLB_RXEN /;"	d	file:
SERCOM_SPI_CTRLB_RXEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLB_RXEN$/;"	d	file:
SERCOM_SPI_CTRLB_RXEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_CTRLB_RXEN_Pos /;"	d
SERCOM_SPI_CTRLB_RXEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_CTRLB_RXEN_Pos$/;"	d
SERCOM_SPI_CTRLB_RXEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_CTRLB_RXEN_Pos /;"	d	file:
SERCOM_SPI_CTRLB_RXEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_CTRLB_RXEN_Pos$/;"	d	file:
SERCOM_SPI_CTRLB_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_CTRLB_Type;$/;"	t	typeref:union:__anon429
SERCOM_SPI_CTRLB_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_CTRLB_Type;$/;"	t	typeref:union:__anon215
SERCOM_SPI_CTRLC_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_CTRLC_Type;$/;"	t	typeref:union:__anon431
SERCOM_SPI_CTRLC_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_CTRLC_Type;$/;"	t	typeref:union:__anon217
SERCOM_SPI_DATA_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_DATA_Type;$/;"	t	typeref:union:__anon449
SERCOM_SPI_DATA_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_DATA_Type;$/;"	t	typeref:union:__anon235
SERCOM_SPI_DBGCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_DBGCTRL_Type;$/;"	t	typeref:union:__anon451
SERCOM_SPI_DBGCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_DBGCTRL_Type;$/;"	t	typeref:union:__anon237
SERCOM_SPI_INTENCLR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_INTENCLR_Type;$/;"	t	typeref:union:__anon435
SERCOM_SPI_INTENCLR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_INTENCLR_Type;$/;"	t	typeref:union:__anon221
SERCOM_SPI_INTENSET_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_INTENSET_Type;$/;"	t	typeref:union:__anon437
SERCOM_SPI_INTENSET_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_INTENSET_Type;$/;"	t	typeref:union:__anon223
SERCOM_SPI_INTFLAG_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_INTFLAG_Type;$/;"	t	typeref:union:__anon439
SERCOM_SPI_INTFLAG_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_INTFLAG_Type;$/;"	t	typeref:union:__anon225
SERCOM_SPI_LENGTH_LEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_LENGTH_LEN(/;"	d
SERCOM_SPI_LENGTH_LEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_LENGTH_LEN$/;"	d
SERCOM_SPI_LENGTH_LEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_LENGTH_LEN(/;"	d	file:
SERCOM_SPI_LENGTH_LEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_LENGTH_LEN$/;"	d	file:
SERCOM_SPI_LENGTH_LENEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_LENGTH_LENEN /;"	d
SERCOM_SPI_LENGTH_LENEN	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_LENGTH_LENEN$/;"	d
SERCOM_SPI_LENGTH_LENEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_LENGTH_LENEN /;"	d	file:
SERCOM_SPI_LENGTH_LENEN	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_LENGTH_LENEN$/;"	d	file:
SERCOM_SPI_LENGTH_LENEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_LENGTH_LENEN_Pos /;"	d
SERCOM_SPI_LENGTH_LENEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_LENGTH_LENEN_Pos$/;"	d
SERCOM_SPI_LENGTH_LENEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_LENGTH_LENEN_Pos /;"	d	file:
SERCOM_SPI_LENGTH_LENEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_LENGTH_LENEN_Pos$/;"	d	file:
SERCOM_SPI_LENGTH_LEN_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_LENGTH_LEN_Msk /;"	d
SERCOM_SPI_LENGTH_LEN_Msk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_LENGTH_LEN_Msk$/;"	d
SERCOM_SPI_LENGTH_LEN_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_LENGTH_LEN_Msk /;"	d	file:
SERCOM_SPI_LENGTH_LEN_Msk	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_LENGTH_LEN_Msk$/;"	d	file:
SERCOM_SPI_LENGTH_LEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SERCOM_SPI_LENGTH_LEN_Pos /;"	d
SERCOM_SPI_LENGTH_LEN_Pos	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SERCOM_SPI_LENGTH_LEN_Pos$/;"	d
SERCOM_SPI_LENGTH_LEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SERCOM_SPI_LENGTH_LEN_Pos /;"	d	file:
SERCOM_SPI_LENGTH_LEN_Pos	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SERCOM_SPI_LENGTH_LEN_Pos$/;"	d	file:
SERCOM_SPI_LENGTH_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_LENGTH_Type;$/;"	t	typeref:union:__anon445
SERCOM_SPI_LENGTH_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_LENGTH_Type;$/;"	t	typeref:union:__anon231
SERCOM_SPI_STATUS_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_STATUS_Type;$/;"	t	typeref:union:__anon441
SERCOM_SPI_STATUS_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_STATUS_Type;$/;"	t	typeref:union:__anon227
SERCOM_SPI_SYNCBUSY_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SERCOM_SPI_SYNCBUSY_Type;$/;"	t	typeref:union:__anon443
SERCOM_SPI_SYNCBUSY_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SERCOM_SPI_SYNCBUSY_Type;$/;"	t	typeref:union:__anon229
SETC	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETC   = 0xB9;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETCOM	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETCOM = 0xB6;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETCYC	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETCYC = 0xB4;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETDISPLAYFRAME	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETDISPLAYFRAME   = 0xC5;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SETDISPMODE	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETDISPMODE       = 0xB4;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SETGAMMA	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETGAMMA          = 0xC8;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SETGAMMA	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETGAMMA= 0xE0;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETOSC	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETOSC = 0xB0;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETPANEL	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETPANEL= 0xCC;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETPANELRELATED	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETPANELRELATED   = 0xE9;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SETPOWER	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETPOWER          = 0xD0;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SETPWR1	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETPWR1= 0xB1;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETPWRNORMAL	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETPWRNORMAL      = 0xD2;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SETRGB	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETRGB = 0xB3;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETSTBA	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETSTBA= 0xC0;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
SETVCOM	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SETVCOM           = 0xD1;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SET_PANEL_DRIVING	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t SET_PANEL_DRIVING = 0xC0;$/;"	m	struct:lgfx::v0::Panel_HX8357B::CMD
SLAVE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  SLAVE:1;          \/*!< bit:      1  Slave Status Flag                  *\/$/;"	m	struct:__anon364::__anon365
SLAVE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  SLAVE:1;          \/*!< bit:      1  Slave Status Flag                  *\/$/;"	m	struct:__anon150::__anon151
SLPIN	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t SLPIN   = 0x10;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
SLPIN	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t SLPIN   = 0xAE;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
SLPOUT	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t SLPOUT  = 0x11;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
SLPOUT	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t SLPOUT  = 0xAF;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
SPI	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^       SercomSpi                 SPI;         \/**< \\brief Offset: 0x00 SPI Mode *\/$/;"	m	union:__anon454
SPI	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^       SercomSpi                 SPI;         \/**< \\brief Offset: 0x00 SPI Mode *\/$/;"	m	union:__anon240
SPI_CHAR_SIZE_8_BITS	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define SPI_CHAR_SIZE_8_BITS /;"	d
SPI_CHAR_SIZE_8_BITS	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef SPI_CHAR_SIZE_8_BITS$/;"	d
SPI_CHAR_SIZE_8_BITS	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define SPI_CHAR_SIZE_8_BITS /;"	d	file:
SPI_CHAR_SIZE_8_BITS	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #undef SPI_CHAR_SIZE_8_BITS$/;"	d	file:
SPI_EXECUTE	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    static constexpr uint32_t SPI_EXECUTE = SPI_USR | SPI_UPDATE;$/;"	m	class:lgfx::v1::Bus_SPI
SPI_EXECUTE	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr uint32_t SPI_EXECUTE = SPI_USR | SPI_UPDATE;$/;"	m	namespace:lgfx::v1::spi	file:
SPI_MISO_DLEN_REG	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    #define SPI_MISO_DLEN_REG(/;"	d
SPI_MISO_DLEN_REG	src/lgfx/v1/platforms/esp32/common.cpp	/^    #define SPI_MISO_DLEN_REG(/;"	d	file:
SPI_MOSI_DLEN_REG	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    #define SPI_MOSI_DLEN_REG(/;"	d
SPI_MOSI_DLEN_REG	src/lgfx/v1/platforms/esp32/common.cpp	/^    #define SPI_MOSI_DLEN_REG(/;"	d	file:
SPI_PAD_3_SCK_1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^static constexpr SercomSpiTXPad SPI_PAD_3_SCK_1 = 2;$/;"	v
SPI_PAD_3_SCK_1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^static constexpr SercomSpiTXPad SPI_PAD_3_SCK_1 = 2;$/;"	v
SPI_PIN_REG	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^ #define SPI_PIN_REG /;"	d
SPI_PIN_REG	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^ #define SPI_PIN_REG /;"	d	file:
SRC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SRC:4;            \/*!< bit:  0.. 3  Source Select                      *\/$/;"	m	struct:__anon280::__anon281
SRC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SRC:4;            \/*!< bit:  0.. 3  Source Select                      *\/$/;"	m	struct:__anon66::__anon67
SSDE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SSDE:1;           \/*!< bit:      9  Slave Select Low Detect Enable     *\/$/;"	m	struct:__anon429::__anon430
SSDE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SSDE:1;           \/*!< bit:      9  Slave Select Low Detect Enable     *\/$/;"	m	struct:__anon215::__anon216
SSL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  SSL:1;            \/*!< bit:      3  Slave Select Low Interrupt Flag    *\/$/;"	m	struct:__anon439::__anon440
SSL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  SSL:1;            \/*!< bit:      3  Slave Select Low Interrupt Disable *\/$/;"	m	struct:__anon435::__anon436
SSL	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  SSL:1;            \/*!< bit:      3  Slave Select Low Interrupt Enable  *\/$/;"	m	struct:__anon437::__anon438
SSL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  SSL:1;            \/*!< bit:      3  Slave Select Low Interrupt Flag    *\/$/;"	m	struct:__anon225::__anon226
SSL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  SSL:1;            \/*!< bit:      3  Slave Select Low Interrupt Disable *\/$/;"	m	struct:__anon221::__anon222
SSL	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  SSL:1;            \/*!< bit:      3  Slave Select Low Interrupt Enable  *\/$/;"	m	struct:__anon223::__anon224
STARTLINE	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t STARTLINE = 0xA1;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
STATUS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t STATUS:1;         \/*!< bit:      3  STATUS                             *\/$/;"	m	struct:__anon374::__anon375
STATUS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_STATUS_Type    STATUS;      \/**< \\brief Offset: 0x1A (R\/W 16) SPI Status *\/$/;"	m	struct:__anon453
STATUS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_STATUS_Type            STATUS;      \/**< \\brief Offset: 0x0B (R\/W  8) Status *\/$/;"	m	struct:__anon395
STATUS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t STATUS:1;         \/*!< bit:      3  STATUS                             *\/$/;"	m	struct:__anon160::__anon161
STATUS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO SERCOM_SPI_STATUS_Type    STATUS;      \/**< \\brief Offset: 0x1A (R\/W 16) SPI Status *\/$/;"	m	struct:__anon239
STATUS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_STATUS_Type            STATUS;      \/**< \\brief Offset: 0x0B (R\/W  8) Status *\/$/;"	m	struct:__anon181
STATUS_BAD_COMMAND	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_BAD_COMMAND          = (1<<1),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_BYPASS	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_BYPASS               = (1<<11),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_CODE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_CODE       = 0x41,$/;"	e	enum:lgfx::v1::GWFPGA_Inst_Def	file:
STATUS_CRC_ERROR	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_CRC_ERROR            = (1<<0),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_DONE_FINAL	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_DONE_FINAL           = (1<<13),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_FLASH_LOCK	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_FLASH_LOCK           = (1<<17)$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_GOWIN_VLD	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_GOWIN_VLD            = (1<<12),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_ID_VERIFY_FAILED	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_ID_VERIFY_FAILED     = (1<<2),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_MEMORY_ERASE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_MEMORY_ERASE         = (1<<5),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_NON_JTAG_CNF_ACTIVE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_NON_JTAG_CNF_ACTIVE  = (1<<10),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_POR	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_POR                  = (1<<16),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_PREAMBLE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_PREAMBLE             = (1<<6),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_PRG_SPIFLASH_DIRECT	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_PRG_SPIFLASH_DIRECT  = (1<<8),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_READY	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_READY                = (1<<15),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_SECURITY_FINAL	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_SECURITY_FINAL       = (1<<14),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_SYSTEM_EDIT_MODE	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_SYSTEM_EDIT_MODE     = (1<<7),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STATUS_TIMEOUT	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^    STATUS_TIMEOUT              = (1<<3),$/;"	e	enum:lgfx::v1::GWFPGA_StatusReg_Def	file:
STMPE_ADC_CTRL1	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL1 = 0x20;$/;"	v	file:
STMPE_ADC_CTRL1	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL1 = 0x20;$/;"	v	file:
STMPE_ADC_CTRL1_10BIT	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL1_10BIT = 0x00;$/;"	v	file:
STMPE_ADC_CTRL1_10BIT	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL1_10BIT = 0x00;$/;"	v	file:
STMPE_ADC_CTRL1_12BIT	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL1_12BIT = 0x08;$/;"	v	file:
STMPE_ADC_CTRL1_12BIT	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL1_12BIT = 0x08;$/;"	v	file:
STMPE_ADC_CTRL2	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2 = 0x21;$/;"	v	file:
STMPE_ADC_CTRL2	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2 = 0x21;$/;"	v	file:
STMPE_ADC_CTRL2_1_625MHZ	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2_1_625MHZ = 0x00;$/;"	v	file:
STMPE_ADC_CTRL2_1_625MHZ	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2_1_625MHZ = 0x00;$/;"	v	file:
STMPE_ADC_CTRL2_3_25MHZ	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2_3_25MHZ = 0x01;$/;"	v	file:
STMPE_ADC_CTRL2_3_25MHZ	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2_3_25MHZ = 0x01;$/;"	v	file:
STMPE_ADC_CTRL2_6_5MHZ	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2_6_5MHZ = 0x02;$/;"	v	file:
STMPE_ADC_CTRL2_6_5MHZ	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADC_CTRL2_6_5MHZ = 0x02;$/;"	v	file:
STMPE_ADDR	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADDR = 0x41;$/;"	v	file:
STMPE_ADDR	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_ADDR = 0x41;$/;"	v	file:
STMPE_FIFO_SIZE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_SIZE = 0x4C;$/;"	v	file:
STMPE_FIFO_SIZE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_SIZE = 0x4C;$/;"	v	file:
STMPE_FIFO_STA	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA = 0x4B;$/;"	v	file:
STMPE_FIFO_STA	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA = 0x4B;$/;"	v	file:
STMPE_FIFO_STA_EMPTY	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_EMPTY = 0x20;$/;"	v	file:
STMPE_FIFO_STA_EMPTY	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_EMPTY = 0x20;$/;"	v	file:
STMPE_FIFO_STA_FULL	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_FULL = 0x40;$/;"	v	file:
STMPE_FIFO_STA_FULL	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_FULL = 0x40;$/;"	v	file:
STMPE_FIFO_STA_OFLOW	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_OFLOW = 0x80;$/;"	v	file:
STMPE_FIFO_STA_OFLOW	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_OFLOW = 0x80;$/;"	v	file:
STMPE_FIFO_STA_RESET	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_RESET = 0x01;$/;"	v	file:
STMPE_FIFO_STA_RESET	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_RESET = 0x01;$/;"	v	file:
STMPE_FIFO_STA_THTRIG	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_THTRIG = 0x10;$/;"	v	file:
STMPE_FIFO_STA_THTRIG	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_STA_THTRIG = 0x10;$/;"	v	file:
STMPE_FIFO_TH	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_TH = 0x4A;$/;"	v	file:
STMPE_FIFO_TH	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_FIFO_TH = 0x4A;$/;"	v	file:
STMPE_GPIO_ALT_FUNCT	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_ALT_FUNCT = 0x17;$/;"	v	file:
STMPE_GPIO_ALT_FUNCT	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_ALT_FUNCT = 0x17;$/;"	v	file:
STMPE_GPIO_CLR_PIN	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_CLR_PIN = 0x11;$/;"	v	file:
STMPE_GPIO_CLR_PIN	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_CLR_PIN = 0x11;$/;"	v	file:
STMPE_GPIO_DIR	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_DIR = 0x13;$/;"	v	file:
STMPE_GPIO_DIR	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_DIR = 0x13;$/;"	v	file:
STMPE_GPIO_SET_PIN	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_SET_PIN = 0x10;$/;"	v	file:
STMPE_GPIO_SET_PIN	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_GPIO_SET_PIN = 0x10;$/;"	v	file:
STMPE_INT_CTRL	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL = 0x09;$/;"	v	file:
STMPE_INT_CTRL	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL = 0x09;$/;"	v	file:
STMPE_INT_CTRL_DISABLE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_DISABLE = 0x00;$/;"	v	file:
STMPE_INT_CTRL_DISABLE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_DISABLE = 0x00;$/;"	v	file:
STMPE_INT_CTRL_EDGE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_EDGE = 0x02;$/;"	v	file:
STMPE_INT_CTRL_EDGE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_EDGE = 0x02;$/;"	v	file:
STMPE_INT_CTRL_ENABLE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_ENABLE = 0x01;$/;"	v	file:
STMPE_INT_CTRL_ENABLE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_ENABLE = 0x01;$/;"	v	file:
STMPE_INT_CTRL_LEVEL	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_LEVEL = 0x00;$/;"	v	file:
STMPE_INT_CTRL_LEVEL	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_LEVEL = 0x00;$/;"	v	file:
STMPE_INT_CTRL_POL_HIGH	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_POL_HIGH = 0x04;$/;"	v	file:
STMPE_INT_CTRL_POL_HIGH	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_POL_HIGH = 0x04;$/;"	v	file:
STMPE_INT_CTRL_POL_LOW	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_POL_LOW = 0x00;$/;"	v	file:
STMPE_INT_CTRL_POL_LOW	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_CTRL_POL_LOW = 0x00;$/;"	v	file:
STMPE_INT_EN	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN = 0x0A;$/;"	v	file:
STMPE_INT_EN	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN = 0x0A;$/;"	v	file:
STMPE_INT_EN_ADC	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_ADC = 0x40;$/;"	v	file:
STMPE_INT_EN_ADC	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_ADC = 0x40;$/;"	v	file:
STMPE_INT_EN_FIFOEMPTY	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOEMPTY = 0x10;$/;"	v	file:
STMPE_INT_EN_FIFOEMPTY	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOEMPTY = 0x10;$/;"	v	file:
STMPE_INT_EN_FIFOFULL	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOFULL = 0x08;$/;"	v	file:
STMPE_INT_EN_FIFOFULL	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOFULL = 0x08;$/;"	v	file:
STMPE_INT_EN_FIFOOF	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOOF = 0x04;$/;"	v	file:
STMPE_INT_EN_FIFOOF	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOOF = 0x04;$/;"	v	file:
STMPE_INT_EN_FIFOTH	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOTH = 0x02;$/;"	v	file:
STMPE_INT_EN_FIFOTH	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_FIFOTH = 0x02;$/;"	v	file:
STMPE_INT_EN_GPIO	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_GPIO = 0x80;$/;"	v	file:
STMPE_INT_EN_GPIO	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_GPIO = 0x80;$/;"	v	file:
STMPE_INT_EN_TOUCHDET	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_TOUCHDET = 0x01;$/;"	v	file:
STMPE_INT_EN_TOUCHDET	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_EN_TOUCHDET = 0x01;$/;"	v	file:
STMPE_INT_STA	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_STA = 0x0B;$/;"	v	file:
STMPE_INT_STA	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_STA = 0x0B;$/;"	v	file:
STMPE_INT_STA_TOUCHDET	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_STA_TOUCHDET = 0x01;$/;"	v	file:
STMPE_INT_STA_TOUCHDET	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_INT_STA_TOUCHDET = 0x01;$/;"	v	file:
STMPE_SYS_CTRL1	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_SYS_CTRL1 = 0x03;$/;"	v	file:
STMPE_SYS_CTRL1	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_SYS_CTRL1 = 0x03;$/;"	v	file:
STMPE_SYS_CTRL1_RESET	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_SYS_CTRL1_RESET = 0x02;$/;"	v	file:
STMPE_SYS_CTRL1_RESET	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_SYS_CTRL1_RESET = 0x02;$/;"	v	file:
STMPE_SYS_CTRL2	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_SYS_CTRL2 = 0x04;$/;"	v	file:
STMPE_SYS_CTRL2	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_SYS_CTRL2 = 0x04;$/;"	v	file:
STMPE_TSC_CFG	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG = 0x41;$/;"	v	file:
STMPE_TSC_CFG	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG = 0x41;$/;"	v	file:
STMPE_TSC_CFG_1SAMPLE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_1SAMPLE = 0x00;$/;"	v	file:
STMPE_TSC_CFG_1SAMPLE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_1SAMPLE = 0x00;$/;"	v	file:
STMPE_TSC_CFG_2SAMPLE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_2SAMPLE = 0x40;$/;"	v	file:
STMPE_TSC_CFG_2SAMPLE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_2SAMPLE = 0x40;$/;"	v	file:
STMPE_TSC_CFG_4SAMPLE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_4SAMPLE = 0x80;$/;"	v	file:
STMPE_TSC_CFG_4SAMPLE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_4SAMPLE = 0x80;$/;"	v	file:
STMPE_TSC_CFG_8SAMPLE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_8SAMPLE = 0xC0;$/;"	v	file:
STMPE_TSC_CFG_8SAMPLE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_8SAMPLE = 0xC0;$/;"	v	file:
STMPE_TSC_CFG_DELAY_100US	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_100US = 0x10;$/;"	v	file:
STMPE_TSC_CFG_DELAY_100US	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_100US = 0x10;$/;"	v	file:
STMPE_TSC_CFG_DELAY_10MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_10MS = 0x30;$/;"	v	file:
STMPE_TSC_CFG_DELAY_10MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_10MS = 0x30;$/;"	v	file:
STMPE_TSC_CFG_DELAY_10US	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_10US = 0x00;$/;"	v	file:
STMPE_TSC_CFG_DELAY_10US	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_10US = 0x00;$/;"	v	file:
STMPE_TSC_CFG_DELAY_1MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_1MS = 0x20;$/;"	v	file:
STMPE_TSC_CFG_DELAY_1MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_1MS = 0x20;$/;"	v	file:
STMPE_TSC_CFG_DELAY_500US	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_500US = 0x18;$/;"	v	file:
STMPE_TSC_CFG_DELAY_500US	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_500US = 0x18;$/;"	v	file:
STMPE_TSC_CFG_DELAY_50MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_50MS = 0x38;$/;"	v	file:
STMPE_TSC_CFG_DELAY_50MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_50MS = 0x38;$/;"	v	file:
STMPE_TSC_CFG_DELAY_50US	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_50US = 0x08;$/;"	v	file:
STMPE_TSC_CFG_DELAY_50US	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_50US = 0x08;$/;"	v	file:
STMPE_TSC_CFG_DELAY_5MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_5MS = 0x28;$/;"	v	file:
STMPE_TSC_CFG_DELAY_5MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_DELAY_5MS = 0x28;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_100MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_100MS = 0x07;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_100MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_100MS = 0x07;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_100US	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_100US = 0x01;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_100US	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_100US = 0x01;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_10MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_10MS = 0x05;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_10MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_10MS = 0x05;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_10US	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_10US = 0x00;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_10US	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_10US = 0x00;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_1MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_1MS = 0x03;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_1MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_1MS = 0x03;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_500US	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_500US = 0x02;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_500US	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_500US = 0x02;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_50MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_50MS = 0x06;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_50MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_50MS = 0x06;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_5MS	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_5MS = 0x04;$/;"	v	file:
STMPE_TSC_CFG_SETTLE_5MS	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CFG_SETTLE_5MS = 0x04;$/;"	v	file:
STMPE_TSC_CTRL	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL = 0x40;$/;"	v	file:
STMPE_TSC_CTRL	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL = 0x40;$/;"	v	file:
STMPE_TSC_CTRL_EN	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL_EN = 0x01;$/;"	v	file:
STMPE_TSC_CTRL_EN	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL_EN = 0x01;$/;"	v	file:
STMPE_TSC_CTRL_XY	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL_XY = 0x02;$/;"	v	file:
STMPE_TSC_CTRL_XY	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL_XY = 0x02;$/;"	v	file:
STMPE_TSC_CTRL_XYZ	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL_XYZ = 0x00;$/;"	v	file:
STMPE_TSC_CTRL_XYZ	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_CTRL_XYZ = 0x00;$/;"	v	file:
STMPE_TSC_DATA_X	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_DATA_X = 0x4D;$/;"	v	file:
STMPE_TSC_DATA_X	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_DATA_X = 0x4D;$/;"	v	file:
STMPE_TSC_DATA_Y	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_DATA_Y = 0x4F;$/;"	v	file:
STMPE_TSC_DATA_Y	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_DATA_Y = 0x4F;$/;"	v	file:
STMPE_TSC_FRACTION_Z	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_FRACTION_Z = 0x56;$/;"	v	file:
STMPE_TSC_FRACTION_Z	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_FRACTION_Z = 0x56;$/;"	v	file:
STMPE_TSC_I_DRIVE	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_I_DRIVE = 0x58;$/;"	v	file:
STMPE_TSC_I_DRIVE	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_I_DRIVE = 0x58;$/;"	v	file:
STMPE_TSC_I_DRIVE_20MA	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_I_DRIVE_20MA = 0x00;$/;"	v	file:
STMPE_TSC_I_DRIVE_20MA	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_I_DRIVE_20MA = 0x00;$/;"	v	file:
STMPE_TSC_I_DRIVE_50MA	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_I_DRIVE_50MA = 0x01;$/;"	v	file:
STMPE_TSC_I_DRIVE_50MA	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^static constexpr uint8_t STMPE_TSC_I_DRIVE_50MA = 0x01;$/;"	v	file:
STOP	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  STOP:1;           \/*!< bit:      0  Stop Status Flag                   *\/$/;"	m	struct:__anon364::__anon365
STOP	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  STOP:1;           \/*!< bit:      0  Stop Status Flag                   *\/$/;"	m	struct:__anon150::__anon151
SUPC_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SUPC_:1;          \/*!< bit:      6  SUPC APB Clock Enable              *\/$/;"	m	struct:__anon297::__anon298
SUPC_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SUPC_:1;          \/*!< bit:      6  SUPC APB Clock Enable              *\/$/;"	m	struct:__anon83::__anon84
SWEVT	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __O  EVSYS_SWEVT_Type          SWEVT;       \/**< \\brief Offset: 0x004 ( \/W 32) Software Event *\/$/;"	m	struct:__anon344
SWEVT	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __O  EVSYS_SWEVT_Type          SWEVT;       \/**< \\brief Offset: 0x004 ( \/W 32) Software Event *\/$/;"	m	struct:__anon130
SWRESET	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    static constexpr uint8_t SWRESET = 0x01;$/;"	m	struct:lgfx::v0::PanelIlitekCommon::CommandCommon
SWRESET	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    static constexpr uint_fast8_t SWRESET = 0x01;$/;"	m	struct:lgfx::v0::Panel_SSD1351::CommandCommon
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon345::__anon346
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon427::__anon428
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset Synchroniation Busy bit *\/$/;"	m	struct:__anon277::__anon278
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset Synchronization Busy *\/$/;"	m	struct:__anon443::__anon444
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  swrst                              *\/$/;"	m	struct:__anon374::__anon375
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon275::__anon276
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon306::__anon307
SWRST	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon313::__anon314
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon131::__anon132
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon213::__anon214
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset Synchroniation Busy bit *\/$/;"	m	struct:__anon63::__anon64
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  Software Reset Synchronization Busy *\/$/;"	m	struct:__anon229::__anon230
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t SWRST:1;          \/*!< bit:      0  swrst                              *\/$/;"	m	struct:__anon160::__anon161
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon61::__anon62
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon92::__anon93
SWRST	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  SWRST:1;          \/*!< bit:      0  Software Reset                     *\/$/;"	m	struct:__anon99::__anon100
SYNCBUSY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  GCLK_SYNCBUSY_Type        SYNCBUSY;    \/**< \\brief Offset: 0x04 (R\/  32) Synchronization Busy *\/$/;"	m	struct:__anon284
SYNCBUSY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  SERCOM_SPI_SYNCBUSY_Type  SYNCBUSY;    \/**< \\brief Offset: 0x1C (R\/  32) SPI Synchronization Busy *\/$/;"	m	struct:__anon453
SYNCBUSY	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __I  TC_SYNCBUSY_Type          SYNCBUSY;    \/**< \\brief Offset: 0x10 (R\/  32) Synchronization Status *\/$/;"	m	struct:__anon395
SYNCBUSY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  GCLK_SYNCBUSY_Type        SYNCBUSY;    \/**< \\brief Offset: 0x04 (R\/  32) Synchronization Busy *\/$/;"	m	struct:__anon70
SYNCBUSY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  SERCOM_SPI_SYNCBUSY_Type  SYNCBUSY;    \/**< \\brief Offset: 0x1C (R\/  32) SPI Synchronization Busy *\/$/;"	m	struct:__anon239
SYNCBUSY	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __I  TC_SYNCBUSY_Type          SYNCBUSY;    \/**< \\brief Offset: 0x10 (R\/  32) Synchronization Status *\/$/;"	m	struct:__anon181
SYNC_LEVEL	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    static constexpr uint8_t SYNC_LEVEL = 0;$/;"	m	struct:lgfx::v1::internal_t	file:
ScanLineToY	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static inline size_t IRAM_ATTR ScanLineToY(size_t scanline, bool odd)$/;"	f	namespace:lgfx::v1
SdFatWrapper	src/lgfx/v1/misc/DataWrapper.hpp	/^    SdFatWrapper() : DataWrapper()$/;"	f	struct:lgfx::v1::SdFatWrapper
SdFatWrapper	src/lgfx/v1/misc/DataWrapper.hpp	/^    SdFatWrapper(LGFX_SDFAT_TYPE &fs, FsFile* fp = nullptr) : DataWrapper(), _fs(&fs), _fp(fp) { need_transaction = true; }$/;"	f	struct:lgfx::v1::SdFatWrapper
SdFatWrapper	src/lgfx/v1/misc/DataWrapper.hpp	/^  struct SdFatWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
Sercom	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} Sercom;$/;"	t	typeref:union:__anon454
Sercom	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} Sercom;$/;"	t	typeref:union:__anon240
SercomDataOrder	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^typedef uint8_t SercomDataOrder;$/;"	t
SercomDataOrder	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  typedef uint8_t SercomDataOrder;$/;"	t	file:
SercomRXPad	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^typedef uint32_t SercomRXPad;$/;"	t
SercomRXPad	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^typedef uint32_t SercomRXPad;$/;"	t
SercomSpi	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} SercomSpi;$/;"	t	typeref:struct:__anon453
SercomSpi	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} SercomSpi;$/;"	t	typeref:struct:__anon239
SercomSpiTXPad	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^typedef uint32_t SercomSpiTXPad;$/;"	t
SercomSpiTXPad	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^typedef uint32_t SercomSpiTXPad;$/;"	t
SetArea	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::SetArea(LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::Panel_IT8951
SetTargetMemoryAddr	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::SetTargetMemoryAddr(LGFX_Device* gfx, uint32_t tar_addr)$/;"	f	class:lgfx::v0::Panel_IT8951
SimpleBuffer	src/lgfx/v1/platforms/common.hpp	/^  class SimpleBuffer$/;"	c	namespace:lgfx::v1
SpriteBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^      SpriteBuffer(SpriteBuffer&& rhs) : _buffer(nullptr)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
SpriteBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^      SpriteBuffer(const SpriteBuffer& rhs) : _buffer(nullptr)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
SpriteBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^      SpriteBuffer(size_t length, AllocationSource source = AllocationSource::Dma) : _length(0), _source(source), _buffer(nullptr)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
SpriteBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^      SpriteBuffer(uint8_t* buffer, size_t length) : _length(length), _source(AllocationSource::Preallocated), _buffer(buffer)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
SpriteBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^      SpriteBuffer(void) : _length(0), _source(Dma), _buffer(nullptr) {}$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
SpriteBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^    class SpriteBuffer$/;"	c	class:lgfx::v0::LGFX_Sprite
SpriteBuffer	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  SpriteBuffer::SpriteBuffer(SpriteBuffer&& rhs) : _buffer(nullptr)$/;"	f	class:lgfx::v1::SpriteBuffer
SpriteBuffer	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  SpriteBuffer::SpriteBuffer(const SpriteBuffer& rhs) : _buffer(nullptr)$/;"	f	class:lgfx::v1::SpriteBuffer
SpriteBuffer	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  SpriteBuffer::SpriteBuffer(size_t length, AllocationSource source) : _buffer(nullptr), _length(0), _source(source)$/;"	f	class:lgfx::v1::SpriteBuffer
SpriteBuffer	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    SpriteBuffer(uint8_t* buffer, size_t length) : _buffer(buffer), _length(length), _source(AllocationSource::Preallocated)$/;"	f	class:lgfx::v1::SpriteBuffer
SpriteBuffer	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    SpriteBuffer(void) : _buffer(nullptr), _length(0), _source(Dma) {}$/;"	f	class:lgfx::v1::SpriteBuffer
SpriteBuffer	src/lgfx/v1/misc/SpriteBuffer.hpp	/^  class SpriteBuffer$/;"	c	namespace:lgfx::v1
StreamWrapper	src/lgfx/v0/platforms/esp32_common.hpp	/^  struct StreamWrapper : public DataWrapper$/;"	s	namespace:lgfx::v0
StreamWrapper	src/lgfx/v0/platforms/samd51_common.hpp	/^  struct StreamWrapper : public DataWrapper$/;"	s	namespace:lgfx::v0
StreamWrapper	src/lgfx/v1/misc/DataWrapper.hpp	/^  struct StreamWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
StreamWrapper	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  struct StreamWrapper : public DataWrapper$/;"	s	namespace:lgfx::v1
TAG	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^#define TAG /;"	d	file:
TAG	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static constexpr const char *TAG = "Panel_CVBS";$/;"	m	namespace:lgfx::v1	file:
TAL_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TAL_:1;           \/*!< bit:     15  TAL APB Clock Enable               *\/$/;"	m	struct:__anon299::__anon300
TAL_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TAL_:1;           \/*!< bit:     15  TAL APB Clock Enable               *\/$/;"	m	struct:__anon85::__anon86
TAP_DRCAPTURE	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_DRCAPTURE,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_DREXIT1	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_DREXIT1,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_DREXIT2	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_DREXIT2,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_DRPAUSE	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_DRPAUSE,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_DRSELECT	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_DRSELECT,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_DRSHIFT	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_DRSHIFT,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_DRUPDATE	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_DRUPDATE,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IDLE	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IDLE,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IRCAPTURE	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IRCAPTURE,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IREXIT1	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IREXIT1,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IREXIT2	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IREXIT2,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IRPAUSE	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IRPAUSE,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IRSELECT	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IRSELECT,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IRSHIFT	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IRSHIFT,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_IRUPDATE	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_IRUPDATE,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_RESET	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_RESET,$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TAP_TypeDef	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      enum TAP_TypeDef$/;"	g	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
TAP_UNKNOWN	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        TAP_UNKNOWN$/;"	e	enum:lgfx::v1::Panel_M5HDMI::LOAD_FPGA::TAP_TypeDef
TC0	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC0 /;"	d
TC0	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC0 /;"	d
TC0_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC0_:1;           \/*!< bit:     14  TC0 APB Clock Enable               *\/$/;"	m	struct:__anon297::__anon298
TC0_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC0_:1;           \/*!< bit:     14  TC0 APB Clock Enable               *\/$/;"	m	struct:__anon83::__anon84
TC1	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC1 /;"	d
TC1	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC1 /;"	d
TC1_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC1_:1;           \/*!< bit:     15  TC1 APB Clock Enable               *\/$/;"	m	struct:__anon297::__anon298
TC1_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC1_:1;           \/*!< bit:     15  TC1 APB Clock Enable               *\/$/;"	m	struct:__anon83::__anon84
TC2	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC2 /;"	d
TC2	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC2 /;"	d
TC2_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC2_:1;           \/*!< bit:     13  TC2 APB Clock Enable               *\/$/;"	m	struct:__anon299::__anon300
TC2_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC2_:1;           \/*!< bit:     13  TC2 APB Clock Enable               *\/$/;"	m	struct:__anon85::__anon86
TC3	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC3 /;"	d
TC3	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC3 /;"	d
TC3_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC3_:1;           \/*!< bit:     14  TC3 APB Clock Enable               *\/$/;"	m	struct:__anon299::__anon300
TC3_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC3_:1;           \/*!< bit:     14  TC3 APB Clock Enable               *\/$/;"	m	struct:__anon85::__anon86
TC4	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC4 /;"	d
TC4	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC4 /;"	d
TC4_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC4_:1;           \/*!< bit:      5  TC4 APB Clock Enable               *\/$/;"	m	struct:__anon301::__anon302
TC4_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC4_:1;           \/*!< bit:      5  TC4 APB Clock Enable               *\/$/;"	m	struct:__anon87::__anon88
TC5	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC5 /;"	d
TC5	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC5 /;"	d
TC5_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC5_:1;           \/*!< bit:      6  TC5 APB Clock Enable               *\/$/;"	m	struct:__anon301::__anon302
TC5_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC5_:1;           \/*!< bit:      6  TC5 APB Clock Enable               *\/$/;"	m	struct:__anon87::__anon88
TC6	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC6 /;"	d
TC6	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC6 /;"	d
TC6_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC6_:1;           \/*!< bit:      5  TC6 APB Clock Enable               *\/$/;"	m	struct:__anon303::__anon304
TC6_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC6_:1;           \/*!< bit:      5  TC6 APB Clock Enable               *\/$/;"	m	struct:__anon89::__anon90
TC7	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC7 /;"	d
TC7	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC7 /;"	d
TC7_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TC7_:1;           \/*!< bit:      6  TC7 APB Clock Enable               *\/$/;"	m	struct:__anon303::__anon304
TC7_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TC7_:1;           \/*!< bit:      6  TC7 APB Clock Enable               *\/$/;"	m	struct:__anon89::__anon90
TCC0_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TCC0_:1;          \/*!< bit:     11  TCC0 APB Clock Enable              *\/$/;"	m	struct:__anon299::__anon300
TCC0_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TCC0_:1;          \/*!< bit:     11  TCC0 APB Clock Enable              *\/$/;"	m	struct:__anon85::__anon86
TCC1_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TCC1_:1;          \/*!< bit:     12  TCC1 APB Clock Enable              *\/$/;"	m	struct:__anon299::__anon300
TCC1_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TCC1_:1;          \/*!< bit:     12  TCC1 APB Clock Enable              *\/$/;"	m	struct:__anon85::__anon86
TCC2_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TCC2_:1;          \/*!< bit:      3  TCC2 APB Clock Enable              *\/$/;"	m	struct:__anon301::__anon302
TCC2_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TCC2_:1;          \/*!< bit:      3  TCC2 APB Clock Enable              *\/$/;"	m	struct:__anon87::__anon88
TCC3_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TCC3_:1;          \/*!< bit:      4  TCC3 APB Clock Enable              *\/$/;"	m	struct:__anon301::__anon302
TCC3_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TCC3_:1;          \/*!< bit:      4  TCC3 APB Clock Enable              *\/$/;"	m	struct:__anon87::__anon88
TCC4_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TCC4_:1;          \/*!< bit:      4  TCC4 APB Clock Enable              *\/$/;"	m	struct:__anon303::__anon304
TCC4_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TCC4_:1;          \/*!< bit:      4  TCC4 APB Clock Enable              *\/$/;"	m	struct:__anon89::__anon90
TCEI	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t TCEI:1;           \/*!< bit:      5  TC Event Enable                    *\/$/;"	m	struct:__anon352::__anon353
TCEI	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t TCEI:1;           \/*!< bit:      5  TC Event Enable                    *\/$/;"	m	struct:__anon138::__anon139
TCINV	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t TCINV:1;          \/*!< bit:      4  TC Event Input Polarity            *\/$/;"	m	struct:__anon352::__anon353
TCINV	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t TCINV:1;          \/*!< bit:      4  TC Event Input Polarity            *\/$/;"	m	struct:__anon138::__anon139
TCK_MASK	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint32_t TCK_MASK;$/;"	m	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
TC_COUNT16_CC_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT16_CC_Type;$/;"	t	typeref:union:__anon385
TC_COUNT16_CC_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT16_CC_Type;$/;"	t	typeref:union:__anon171
TC_COUNT16_COUNT_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT16_COUNT_Type;$/;"	t	typeref:union:__anon377
TC_COUNT16_COUNT_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT16_COUNT_Type;$/;"	t	typeref:union:__anon163
TC_COUNT32_CC_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT32_CC_Type;$/;"	t	typeref:union:__anon387
TC_COUNT32_CC_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT32_CC_Type;$/;"	t	typeref:union:__anon173
TC_COUNT32_COUNT_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT32_COUNT_Type;$/;"	t	typeref:union:__anon379
TC_COUNT32_COUNT_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT32_COUNT_Type;$/;"	t	typeref:union:__anon165
TC_COUNT8_CCBUF_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT8_CCBUF_Type;$/;"	t	typeref:union:__anon393
TC_COUNT8_CCBUF_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT8_CCBUF_Type;$/;"	t	typeref:union:__anon179
TC_COUNT8_CC_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT8_CC_Type;$/;"	t	typeref:union:__anon389
TC_COUNT8_CC_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT8_CC_Type;$/;"	t	typeref:union:__anon175
TC_COUNT8_COUNT_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT8_COUNT_Type;$/;"	t	typeref:union:__anon381
TC_COUNT8_COUNT_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT8_COUNT_Type;$/;"	t	typeref:union:__anon167
TC_COUNT8_PERBUF_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT8_PERBUF_Type;$/;"	t	typeref:union:__anon391
TC_COUNT8_PERBUF_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT8_PERBUF_Type;$/;"	t	typeref:union:__anon177
TC_COUNT8_PER_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_COUNT8_PER_Type;$/;"	t	typeref:union:__anon383
TC_COUNT8_PER_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_COUNT8_PER_Type;$/;"	t	typeref:union:__anon169
TC_CTRLA_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_CTRLA_Type;$/;"	t	typeref:union:__anon345
TC_CTRLA_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_CTRLA_Type;$/;"	t	typeref:union:__anon131
TC_CTRLBCLR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_CTRLBCLR_Type;$/;"	t	typeref:union:__anon348
TC_CTRLBCLR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_CTRLBCLR_Type;$/;"	t	typeref:union:__anon134
TC_CTRLBSET_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_CTRLBSET_Type;$/;"	t	typeref:union:__anon350
TC_CTRLBSET_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_CTRLBSET_Type;$/;"	t	typeref:union:__anon136
TC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef TC_DATUM$/;"	d
TC_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t TC_DATUM   = textdatum_t::top_center;$/;"	m	namespace:lgfx::v0::textdatum
TC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef TC_DATUM$/;"	d
TC_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t TC_DATUM   = textdatum_t::top_center;$/;"	m	namespace:lgfx::v1::textdatum
TC_DBGCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_DBGCTRL_Type;$/;"	t	typeref:union:__anon372
TC_DBGCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_DBGCTRL_Type;$/;"	t	typeref:union:__anon158
TC_DRVCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_DRVCTRL_Type;$/;"	t	typeref:union:__anon369
TC_DRVCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_DRVCTRL_Type;$/;"	t	typeref:union:__anon155
TC_EVCTRL_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_EVCTRL_Type;$/;"	t	typeref:union:__anon352
TC_EVCTRL_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_EVCTRL_Type;$/;"	t	typeref:union:__anon138
TC_INSTS	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC_INSTS /;"	d
TC_INSTS	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC_INSTS /;"	d
TC_INST_NUM	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define TC_INST_NUM /;"	d
TC_INST_NUM	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define TC_INST_NUM /;"	d
TC_INTENCLR_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_INTENCLR_Type;$/;"	t	typeref:union:__anon355
TC_INTENCLR_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_INTENCLR_Type;$/;"	t	typeref:union:__anon141
TC_INTENSET_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_INTENSET_Type;$/;"	t	typeref:union:__anon358
TC_INTENSET_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_INTENSET_Type;$/;"	t	typeref:union:__anon144
TC_INTFLAG_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_INTFLAG_Type;$/;"	t	typeref:union:__anon361
TC_INTFLAG_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_INTFLAG_Type;$/;"	t	typeref:union:__anon147
TC_STATUS_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_STATUS_Type;$/;"	t	typeref:union:__anon364
TC_STATUS_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_STATUS_Type;$/;"	t	typeref:union:__anon150
TC_SYNCBUSY_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_SYNCBUSY_Type;$/;"	t	typeref:union:__anon374
TC_SYNCBUSY_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_SYNCBUSY_Type;$/;"	t	typeref:union:__anon160
TC_WAVE_Type	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TC_WAVE_Type;$/;"	t	typeref:union:__anon367
TC_WAVE_Type	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TC_WAVE_Type;$/;"	t	typeref:union:__anon153
TDEFL_COMPUTE_ADLER32	src/lgfx/utility/miniz.c	/^  TDEFL_COMPUTE_ADLER32               = 0x02000,$/;"	e	enum:__anon530	file:
TDEFL_DEFAULT_MAX_PROBES	src/lgfx/utility/miniz.c	/^  TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon529	file:
TDEFL_FILTER_MATCHES	src/lgfx/utility/miniz.c	/^  TDEFL_FILTER_MATCHES                = 0x20000,$/;"	e	enum:__anon530	file:
TDEFL_FINISH	src/lgfx/utility/miniz.c	/^  TDEFL_FINISH = 4$/;"	e	enum:__anon535	file:
TDEFL_FORCE_ALL_RAW_BLOCKS	src/lgfx/utility/miniz.c	/^  TDEFL_FORCE_ALL_RAW_BLOCKS          = 0x80000$/;"	e	enum:__anon530	file:
TDEFL_FORCE_ALL_STATIC_BLOCKS	src/lgfx/utility/miniz.c	/^  TDEFL_FORCE_ALL_STATIC_BLOCKS       = 0x40000,$/;"	e	enum:__anon530	file:
TDEFL_FULL_FLUSH	src/lgfx/utility/miniz.c	/^  TDEFL_FULL_FLUSH = 3,$/;"	e	enum:__anon535	file:
TDEFL_GREEDY_PARSING_FLAG	src/lgfx/utility/miniz.c	/^  TDEFL_GREEDY_PARSING_FLAG           = 0x04000,$/;"	e	enum:__anon530	file:
TDEFL_HUFFMAN_ONLY	src/lgfx/utility/miniz.c	/^  TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon529	file:
TDEFL_LESS_MEMORY	src/lgfx/utility/miniz.c	/^#define TDEFL_LESS_MEMORY /;"	d	file:
TDEFL_LEVEL1_HASH_SIZE_MASK	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon532	file:
TDEFL_LEVEL1_HASH_SIZE_MASK	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon533	file:
TDEFL_LZ_CODE_BUF_SIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon532	file:
TDEFL_LZ_CODE_BUF_SIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon533	file:
TDEFL_LZ_DICT_SIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_LZ_DICT_SIZE_MASK	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_LZ_HASH_BITS	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon532	file:
TDEFL_LZ_HASH_BITS	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon533	file:
TDEFL_LZ_HASH_SHIFT	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon532	file:
TDEFL_LZ_HASH_SHIFT	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon533	file:
TDEFL_LZ_HASH_SIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon532	file:
TDEFL_LZ_HASH_SIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon533	file:
TDEFL_MAX_HUFF_SYMBOLS	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon532	file:
TDEFL_MAX_HUFF_SYMBOLS	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon533	file:
TDEFL_MAX_HUFF_SYMBOLS_0	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_MAX_HUFF_SYMBOLS_1	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_MAX_HUFF_SYMBOLS_2	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_MAX_HUFF_TABLES	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_MAX_MATCH_LEN	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_MAX_PROBES_MASK	src/lgfx/utility/miniz.c	/^  TDEFL_HUFFMAN_ONLY = 0, TDEFL_DEFAULT_MAX_PROBES = 128, TDEFL_MAX_PROBES_MASK = 0xFFF$/;"	e	enum:__anon529	file:
TDEFL_MAX_SUPPORTED_HUFF_CODESIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_SUPPORTED_HUFF_CODESIZE = 32 };$/;"	e	enum:__anon539	file:
TDEFL_MIN_MATCH_LEN	src/lgfx/utility/miniz.c	/^enum { TDEFL_MAX_HUFF_TABLES = 3, TDEFL_MAX_HUFF_SYMBOLS_0 = 288, TDEFL_MAX_HUFF_SYMBOLS_1 = 32, TDEFL_MAX_HUFF_SYMBOLS_2 = 19, TDEFL_LZ_DICT_SIZE = 4096, TDEFL_LZ_DICT_SIZE_MASK = TDEFL_LZ_DICT_SIZE - 1, TDEFL_MIN_MATCH_LEN = 3, TDEFL_MAX_MATCH_LEN = 258 };$/;"	e	enum:__anon531	file:
TDEFL_NONDETERMINISTIC_PARSING_FLAG	src/lgfx/utility/miniz.c	/^  TDEFL_NONDETERMINISTIC_PARSING_FLAG = 0x08000,$/;"	e	enum:__anon530	file:
TDEFL_NO_FLUSH	src/lgfx/utility/miniz.c	/^  TDEFL_NO_FLUSH = 0,$/;"	e	enum:__anon535	file:
TDEFL_OUT_BUF_SIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 24 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 12, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon532	file:
TDEFL_OUT_BUF_SIZE	src/lgfx/utility/miniz.c	/^enum { TDEFL_LZ_CODE_BUF_SIZE = 64 * 1024, TDEFL_OUT_BUF_SIZE = (TDEFL_LZ_CODE_BUF_SIZE * 13 ) \/ 10, TDEFL_MAX_HUFF_SYMBOLS = 288, TDEFL_LZ_HASH_BITS = 15, TDEFL_LEVEL1_HASH_SIZE_MASK = 4095, TDEFL_LZ_HASH_SHIFT = (TDEFL_LZ_HASH_BITS + 2) \/ 3, TDEFL_LZ_HASH_SIZE = 1 << TDEFL_LZ_HASH_BITS };$/;"	e	enum:__anon533	file:
TDEFL_PROBE	src/lgfx/utility/miniz.c	/^      #define TDEFL_PROBE /;"	d	file:
TDEFL_PUT_BITS	src/lgfx/utility/miniz.c	/^#define TDEFL_PUT_BITS(/;"	d	file:
TDEFL_PUT_BITS_FAST	src/lgfx/utility/miniz.c	/^#define TDEFL_PUT_BITS_FAST(/;"	d	file:
TDEFL_PUT_BITS_FAST	src/lgfx/utility/miniz.c	/^#undef TDEFL_PUT_BITS_FAST$/;"	d	file:
TDEFL_READ_UNALIGNED_WORD	src/lgfx/utility/miniz.c	/^#define TDEFL_READ_UNALIGNED_WORD(/;"	d	file:
TDEFL_RLE_MATCHES	src/lgfx/utility/miniz.c	/^  TDEFL_RLE_MATCHES                   = 0x10000,$/;"	e	enum:__anon530	file:
TDEFL_RLE_PREV_CODE_SIZE	src/lgfx/utility/miniz.c	/^#define TDEFL_RLE_PREV_CODE_SIZE(/;"	d	file:
TDEFL_RLE_ZERO_CODE_SIZE	src/lgfx/utility/miniz.c	/^#define TDEFL_RLE_ZERO_CODE_SIZE(/;"	d	file:
TDEFL_STATUS_BAD_PARAM	src/lgfx/utility/miniz.c	/^  TDEFL_STATUS_BAD_PARAM = -2,$/;"	e	enum:__anon534	file:
TDEFL_STATUS_DONE	src/lgfx/utility/miniz.c	/^  TDEFL_STATUS_DONE = 1,$/;"	e	enum:__anon534	file:
TDEFL_STATUS_OKAY	src/lgfx/utility/miniz.c	/^  TDEFL_STATUS_OKAY = 0,$/;"	e	enum:__anon534	file:
TDEFL_STATUS_PUT_BUF_FAILED	src/lgfx/utility/miniz.c	/^  TDEFL_STATUS_PUT_BUF_FAILED = -1,$/;"	e	enum:__anon534	file:
TDEFL_SYNC_FLUSH	src/lgfx/utility/miniz.c	/^  TDEFL_SYNC_FLUSH = 2,$/;"	e	enum:__anon535	file:
TDEFL_WRITE_ZLIB_HEADER	src/lgfx/utility/miniz.c	/^  TDEFL_WRITE_ZLIB_HEADER             = 0x01000,$/;"	e	enum:__anon530	file:
TDI_MASK	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint32_t TDI_MASK;$/;"	m	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
TDO_PIN	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint8_t TDO_PIN;$/;"	m	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
TEARLINE	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t TEARLINE=0x44;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
TEON	src/lgfx/v0/panel/Panel_HX8357.hpp	/^      static constexpr uint8_t TEON   = 0x35;$/;"	m	struct:lgfx::v0::Panel_HX8357D::CMD
TFT_BLACK	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_BLACK$/;"	d
TFT_BLACK	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_BLACK       = 0x0000;      \/*   0,   0,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_BLACK	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_BLACK$/;"	d
TFT_BLACK	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_BLACK       = 0x0000;      \/*   0,   0,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_BLUE	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_BLUE$/;"	d
TFT_BLUE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_BLUE        = 0x001F;      \/*   0,   0, 255 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_BLUE	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_BLUE$/;"	d
TFT_BLUE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_BLUE        = 0x001F;      \/*   0,   0, 255 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_BROWN	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_BROWN$/;"	d
TFT_BROWN	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_BROWN       = 0x9A60;      \/* 150,  75,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_BROWN	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_BROWN$/;"	d
TFT_BROWN	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_BROWN       = 0x9A60;      \/* 150,  75,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_CYAN	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_CYAN$/;"	d
TFT_CYAN	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_CYAN        = 0x07FF;      \/*   0, 255, 255 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_CYAN	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_CYAN$/;"	d
TFT_CYAN	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_CYAN        = 0x07FF;      \/*   0, 255, 255 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_DARKCYAN	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_DARKCYAN$/;"	d
TFT_DARKCYAN	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_DARKCYAN    = 0x03EF;      \/*   0, 128, 128 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_DARKCYAN	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_DARKCYAN$/;"	d
TFT_DARKCYAN	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_DARKCYAN    = 0x03EF;      \/*   0, 128, 128 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_DARKGRAY	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_DARKGRAY    = 0x7BEF;      \/* 128, 128, 128 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_DARKGRAY	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_DARKGRAY    = 0x7BEF;      \/* 128, 128, 128 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_DARKGREEN	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_DARKGREEN$/;"	d
TFT_DARKGREEN	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_DARKGREEN   = 0x03E0;      \/*   0, 128,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_DARKGREEN	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_DARKGREEN$/;"	d
TFT_DARKGREEN	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_DARKGREEN   = 0x03E0;      \/*   0, 128,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_DARKGREY	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_DARKGREY$/;"	d
TFT_DARKGREY	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_DARKGREY    = 0x7BEF;      \/* 128, 128, 128 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_DARKGREY	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_DARKGREY$/;"	d
TFT_DARKGREY	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_DARKGREY    = 0x7BEF;      \/* 128, 128, 128 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_DISPOFF	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int TFT_DISPOFF = 0x28;$/;"	m	namespace:lgfx::tft_command
TFT_DISPON	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int TFT_DISPON  = 0x29;$/;"	m	namespace:lgfx::tft_command
TFT_ESPI_FONT2_DOLLAR	src/lgfx/Fonts/Font16.h	/^#define TFT_ESPI_FONT2_DOLLAR$/;"	d
TFT_ESPI_GRAVE_IS_DEGREE	src/lgfx/Fonts/Font16.h	/^#define TFT_ESPI_GRAVE_IS_DEGREE$/;"	d
TFT_GOLD	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_GOLD$/;"	d
TFT_GOLD	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_GOLD        = 0xFEA0;      \/* 255, 215,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_GOLD	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_GOLD$/;"	d
TFT_GOLD	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_GOLD        = 0xFEA0;      \/* 255, 215,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_GREEN	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_GREEN$/;"	d
TFT_GREEN	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_GREEN       = 0x07E0;      \/*   0, 255,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_GREEN	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_GREEN$/;"	d
TFT_GREEN	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_GREEN       = 0x07E0;      \/*   0, 255,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_GREENYELLOW	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_GREENYELLOW$/;"	d
TFT_GREENYELLOW	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_GREENYELLOW = 0xB7E0;      \/* 180, 255,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_GREENYELLOW	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_GREENYELLOW$/;"	d
TFT_GREENYELLOW	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_GREENYELLOW = 0xB7E0;      \/* 180, 255,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_LIGHTGRAY	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_LIGHTGRAY   = 0xD69A;      \/* 211, 211, 211 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_LIGHTGRAY	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_LIGHTGRAY   = 0xD69A;      \/* 211, 211, 211 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_LIGHTGREY	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_LIGHTGREY$/;"	d
TFT_LIGHTGREY	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_LIGHTGREY   = 0xD69A;      \/* 211, 211, 211 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_LIGHTGREY	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_LIGHTGREY$/;"	d
TFT_LIGHTGREY	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_LIGHTGREY   = 0xD69A;      \/* 211, 211, 211 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_MAGENTA	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_MAGENTA$/;"	d
TFT_MAGENTA	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_MAGENTA     = 0xF81F;      \/* 255,   0, 255 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_MAGENTA	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_MAGENTA$/;"	d
TFT_MAGENTA	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_MAGENTA     = 0xF81F;      \/* 255,   0, 255 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_MAROON	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_MAROON$/;"	d
TFT_MAROON	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_MAROON      = 0x7800;      \/* 128,   0,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_MAROON	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_MAROON$/;"	d
TFT_MAROON	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_MAROON      = 0x7800;      \/* 128,   0,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_NAVY	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_NAVY$/;"	d
TFT_NAVY	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_NAVY        = 0x000F;      \/*   0,   0, 128 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_NAVY	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_NAVY$/;"	d
TFT_NAVY	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_NAVY        = 0x000F;      \/*   0,   0, 128 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_OLIVE	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_OLIVE$/;"	d
TFT_OLIVE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_OLIVE       = 0x7BE0;      \/* 128, 128,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_OLIVE	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_OLIVE$/;"	d
TFT_OLIVE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_OLIVE       = 0x7BE0;      \/* 128, 128,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_ORANGE	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_ORANGE$/;"	d
TFT_ORANGE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_ORANGE      = 0xFDA0;      \/* 255, 180,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_ORANGE	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_ORANGE$/;"	d
TFT_ORANGE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_ORANGE      = 0xFDA0;      \/* 255, 180,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_PINK	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_PINK$/;"	d
TFT_PINK	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_PINK        = 0xFE19;      \/* 255, 192, 203 *\/ \/\/Lighter pink, was 0xFC9F$/;"	m	namespace:lgfx::v0::colors
TFT_PINK	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_PINK$/;"	d
TFT_PINK	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_PINK        = 0xFE19;      \/* 255, 192, 203 *\/ \/\/Lighter pink, was 0xFC9F$/;"	m	namespace:lgfx::v1::colors
TFT_PURPLE	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_PURPLE$/;"	d
TFT_PURPLE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_PURPLE      = 0x780F;      \/* 128,   0, 128 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_PURPLE	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_PURPLE$/;"	d
TFT_PURPLE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_PURPLE      = 0x780F;      \/* 128,   0, 128 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_RED	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_RED$/;"	d
TFT_RED	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_RED         = 0xF800;      \/* 255,   0,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_RED	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_RED$/;"	d
TFT_RED	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_RED         = 0xF800;      \/* 255,   0,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_SILVER	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_SILVER$/;"	d
TFT_SILVER	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_SILVER      = 0xC618;      \/* 192, 192, 192 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_SILVER	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_SILVER$/;"	d
TFT_SILVER	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_SILVER      = 0xC618;      \/* 192, 192, 192 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_SKYBLUE	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_SKYBLUE$/;"	d
TFT_SKYBLUE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_SKYBLUE     = 0x867D;      \/* 135, 206, 235 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_SKYBLUE	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_SKYBLUE$/;"	d
TFT_SKYBLUE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_SKYBLUE     = 0x867D;      \/* 135, 206, 235 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_SLPIN	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int TFT_SLPIN   = 0x10;$/;"	m	namespace:lgfx::tft_command
TFT_SLPOUT	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int TFT_SLPOUT  = 0x11;$/;"	m	namespace:lgfx::tft_command
TFT_TRANSPARENT	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_TRANSPARENT$/;"	d
TFT_TRANSPARENT	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_TRANSPARENT = 0x0120;$/;"	m	namespace:lgfx::v0::colors
TFT_TRANSPARENT	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_TRANSPARENT$/;"	d
TFT_TRANSPARENT	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_TRANSPARENT = 0x0120;$/;"	m	namespace:lgfx::v1::colors
TFT_VIOLET	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_VIOLET$/;"	d
TFT_VIOLET	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_VIOLET      = 0x915C;      \/* 180,  46, 226 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_VIOLET	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_VIOLET$/;"	d
TFT_VIOLET	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_VIOLET      = 0x915C;      \/* 180,  46, 226 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_WHITE	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_WHITE$/;"	d
TFT_WHITE	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_WHITE       = 0xFFFF;      \/* 255, 255, 255 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_WHITE	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_WHITE$/;"	d
TFT_WHITE	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_WHITE       = 0xFFFF;      \/* 255, 255, 255 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_YELLOW	src/lgfx/v0/lgfx_common.hpp	/^    #undef TFT_YELLOW$/;"	d
TFT_YELLOW	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr int TFT_YELLOW      = 0xFFE0;      \/* 255, 255,   0 *\/$/;"	m	namespace:lgfx::v0::colors
TFT_YELLOW	src/lgfx/v1/misc/enum.hpp	/^    #undef TFT_YELLOW$/;"	d
TFT_YELLOW	src/lgfx/v1/misc/enum.hpp	/^    static constexpr int TFT_YELLOW      = 0xFFE0;      \/* 255, 255,   0 *\/$/;"	m	namespace:lgfx::v1::colors
TFT_eSprite	src/LGFX_TFT_eSPI.hpp	/^  TFT_eSprite() : LGFX_Sprite() { _psram = true; }$/;"	f	class:TFT_eSprite
TFT_eSprite	src/LGFX_TFT_eSPI.hpp	/^  TFT_eSprite(LovyanGFX* parent) : LGFX_Sprite(parent) { _psram = true; }$/;"	f	class:TFT_eSprite
TFT_eSprite	src/LGFX_TFT_eSPI.hpp	/^class TFT_eSprite : public LGFX_Sprite {$/;"	c
TINFL_BITBUF_SIZE	src/lgfx/utility/miniz.c	/^  #define TINFL_BITBUF_SIZE /;"	d	file:
TINFL_CR_BEGIN	src/lgfx/utility/miniz.c	/^#define TINFL_CR_BEGIN /;"	d	file:
TINFL_CR_FINISH	src/lgfx/utility/miniz.c	/^#define TINFL_CR_FINISH /;"	d	file:
TINFL_CR_RETURN	src/lgfx/utility/miniz.c	/^#define TINFL_CR_RETURN(/;"	d	file:
TINFL_CR_RETURN_FOREVER	src/lgfx/utility/miniz.c	/^#define TINFL_CR_RETURN_FOREVER(/;"	d	file:
TINFL_DECOMPRESS_MEM_TO_MEM_FAILED	src/lgfx/utility/miniz.c	/^#define TINFL_DECOMPRESS_MEM_TO_MEM_FAILED /;"	d	file:
TINFL_FAST_LOOKUP_BITS	src/lgfx/utility/miniz.c	/^  TINFL_FAST_LOOKUP_BITS = 10, TINFL_FAST_LOOKUP_SIZE = 1 << TINFL_FAST_LOOKUP_BITS$/;"	e	enum:__anon527	file:
TINFL_FAST_LOOKUP_SIZE	src/lgfx/utility/miniz.c	/^  TINFL_FAST_LOOKUP_BITS = 10, TINFL_FAST_LOOKUP_SIZE = 1 << TINFL_FAST_LOOKUP_BITS$/;"	e	enum:__anon527	file:
TINFL_FLAG_COMPUTE_ADLER32	src/lgfx/utility/miniz.c	/^  TINFL_FLAG_COMPUTE_ADLER32 = 8$/;"	e	enum:__anon525	file:
TINFL_FLAG_HAS_MORE_INPUT	src/lgfx/utility/miniz.c	/^  TINFL_FLAG_HAS_MORE_INPUT = 2,$/;"	e	enum:__anon525	file:
TINFL_FLAG_PARSE_ZLIB_HEADER	src/lgfx/utility/miniz.c	/^  TINFL_FLAG_PARSE_ZLIB_HEADER = 1,$/;"	e	enum:__anon525	file:
TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF	src/lgfx/utility/miniz.c	/^  TINFL_FLAG_USING_NON_WRAPPING_OUTPUT_BUF = 4,$/;"	e	enum:__anon525	file:
TINFL_GET_BITS	src/lgfx/utility/miniz.c	/^#define TINFL_GET_BITS(/;"	d	file:
TINFL_GET_BYTE	src/lgfx/utility/miniz.c	/^#define TINFL_GET_BYTE(/;"	d	file:
TINFL_HUFF_BITBUF_FILL	src/lgfx/utility/miniz.c	/^#define TINFL_HUFF_BITBUF_FILL(/;"	d	file:
TINFL_HUFF_DECODE	src/lgfx/utility/miniz.c	/^#define TINFL_HUFF_DECODE(/;"	d	file:
TINFL_LZ_DICT_SIZE	src/lgfx/utility/miniz.c	/^#define TINFL_LZ_DICT_SIZE /;"	d	file:
TINFL_MAX_HUFF_SYMBOLS_0	src/lgfx/utility/miniz.c	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon527	file:
TINFL_MAX_HUFF_SYMBOLS_1	src/lgfx/utility/miniz.c	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon527	file:
TINFL_MAX_HUFF_SYMBOLS_2	src/lgfx/utility/miniz.c	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon527	file:
TINFL_MAX_HUFF_TABLES	src/lgfx/utility/miniz.c	/^  TINFL_MAX_HUFF_TABLES = 3, TINFL_MAX_HUFF_SYMBOLS_0 = 288, TINFL_MAX_HUFF_SYMBOLS_1 = 32, TINFL_MAX_HUFF_SYMBOLS_2 = 19,$/;"	e	enum:__anon527	file:
TINFL_MEMCPY	src/lgfx/utility/miniz.c	/^#define TINFL_MEMCPY(/;"	d	file:
TINFL_MEMSET	src/lgfx/utility/miniz.c	/^#define TINFL_MEMSET(/;"	d	file:
TINFL_NEED_BITS	src/lgfx/utility/miniz.c	/^#define TINFL_NEED_BITS(/;"	d	file:
TINFL_SKIP_BITS	src/lgfx/utility/miniz.c	/^#define TINFL_SKIP_BITS(/;"	d	file:
TINFL_STATUS_ADLER32_MISMATCH	src/lgfx/utility/miniz.c	/^  TINFL_STATUS_ADLER32_MISMATCH = -2,$/;"	e	enum:__anon526	file:
TINFL_STATUS_BAD_PARAM	src/lgfx/utility/miniz.c	/^  TINFL_STATUS_BAD_PARAM = -3,$/;"	e	enum:__anon526	file:
TINFL_STATUS_DONE	src/lgfx/utility/miniz.c	/^  TINFL_STATUS_DONE = 0,$/;"	e	enum:__anon526	file:
TINFL_STATUS_FAILED	src/lgfx/utility/miniz.c	/^  TINFL_STATUS_FAILED = -1,$/;"	e	enum:__anon526	file:
TINFL_STATUS_HAS_MORE_OUTPUT	src/lgfx/utility/miniz.c	/^  TINFL_STATUS_HAS_MORE_OUTPUT = 2$/;"	e	enum:__anon526	file:
TINFL_STATUS_NEEDS_MORE_INPUT	src/lgfx/utility/miniz.c	/^  TINFL_STATUS_NEEDS_MORE_INPUT = 1,$/;"	e	enum:__anon526	file:
TINFL_USE_64BIT_BITBUF	src/lgfx/utility/miniz.c	/^  #define TINFL_USE_64BIT_BITBUF /;"	d	file:
TL_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef TL_DATUM$/;"	d
TL_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t TL_DATUM   = textdatum_t::top_left;$/;"	m	namespace:lgfx::v0::textdatum
TL_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef TL_DATUM$/;"	d
TL_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t TL_DATUM   = textdatum_t::top_left;$/;"	m	namespace:lgfx::v1::textdatum
TMS_MASK	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint32_t TMS_MASK;$/;"	m	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
TOMTHUMB_USE_EXTENDED	src/lgfx/Fonts/GFXFF/TomThumb.h	/^#define TOMTHUMB_USE_EXTENDED /;"	d
TOTAL_PERIOD_COUNT_332	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const int32_t TOTAL_PERIOD_COUNT_332 = TRANSFER_PERIOD_COUNT_332 + EXTEND_PERIOD_COUNT_332 + LINECHANGE_PERIOD_COUNT;$/;"	m	class:lgfx::v1::Bus_HUB75
TOTAL_PERIOD_COUNT_565	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const int32_t TOTAL_PERIOD_COUNT_565 = TRANSFER_PERIOD_COUNT_565 + EXTEND_PERIOD_COUNT_565 + LINECHANGE_PERIOD_COUNT;$/;"	m	class:lgfx::v1::Bus_HUB75
TRANSFER_PERIOD_COUNT_332	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr int32_t TRANSFER_PERIOD_COUNT_332 = 5;$/;"	m	class:lgfx::v1::Bus_HUB75
TRANSFER_PERIOD_COUNT_565	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr int32_t TRANSFER_PERIOD_COUNT_565 = 8;$/;"	m	class:lgfx::v1::Bus_HUB75
TRNG_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TRNG_:1;          \/*!< bit:     10  TRNG APB Clock Enable              *\/$/;"	m	struct:__anon301::__anon302
TRNG_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TRNG_:1;          \/*!< bit:     10  TRNG APB Clock Enable              *\/$/;"	m	struct:__anon87::__anon88
TRUTH	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t TRUTH:8;          \/*!< bit: 24..31  Truth Value                        *\/$/;"	m	struct:__anon310::__anon311
TRUTH	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t TRUTH:8;          \/*!< bit: 24..31  Truth Value                        *\/$/;"	m	struct:__anon96::__anon97
TR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    #undef TR_DATUM$/;"	d
TR_DATUM	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr textdatum_t TR_DATUM   = textdatum_t::top_right;$/;"	m	namespace:lgfx::v0::textdatum
TR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    #undef TR_DATUM$/;"	d
TR_DATUM	src/lgfx/v1/misc/enum.hpp	/^    static constexpr textdatum_t TR_DATUM   = textdatum_t::top_right;$/;"	m	namespace:lgfx::v1::textdatum
TXC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  TXC:1;            \/*!< bit:      1  Transmit Complete Interrupt        *\/$/;"	m	struct:__anon439::__anon440
TXC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  TXC:1;            \/*!< bit:      1  Transmit Complete Interrupt Disable *\/$/;"	m	struct:__anon435::__anon436
TXC	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  TXC:1;            \/*!< bit:      1  Transmit Complete Interrupt Enable *\/$/;"	m	struct:__anon437::__anon438
TXC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  TXC:1;            \/*!< bit:      1  Transmit Complete Interrupt        *\/$/;"	m	struct:__anon225::__anon226
TXC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  TXC:1;            \/*!< bit:      1  Transmit Complete Interrupt Disable *\/$/;"	m	struct:__anon221::__anon222
TXC	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  TXC:1;            \/*!< bit:      1  Transmit Complete Interrupt Enable *\/$/;"	m	struct:__anon223::__anon224
TYPECHECK	src/lgfx/v0/lgfx_common.hpp	/^#define TYPECHECK(/;"	d
TYPECHECK	src/lgfx/v0/lgfx_common.hpp	/^#undef TYPECHECK$/;"	d
TYPECHECK	src/lgfx/v1/misc/colortype.hpp	/^#define TYPECHECK(/;"	d
TYPECHECK	src/lgfx/v1/misc/colortype.hpp	/^#undef TYPECHECK$/;"	d
Tc	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} Tc;$/;"	t	typeref:union:__anon396
Tc	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} Tc;$/;"	t	typeref:union:__anon182
TcCount8	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^} TcCount8;$/;"	t	typeref:struct:__anon395
TcCount8	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^} TcCount8;$/;"	t	typeref:struct:__anon181
TextStyle	src/lgfx/v0/lgfx_common.hpp	/^  struct TextStyle$/;"	s	namespace:lgfx
TextStyle	src/lgfx/v1/lgfx_fonts.hpp	/^  struct TextStyle$/;"	s	namespace:lgfx::v1
TouchCommon	src/lgfx/v0/touch/TouchCommon.hpp	/^    TouchCommon()$/;"	f	struct:lgfx::v0::TouchCommon
TouchCommon	src/lgfx/v0/touch/TouchCommon.hpp	/^  struct TouchCommon$/;"	s	namespace:lgfx::v0
Touch_FT5x06	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^    Touch_FT5x06(void) {$/;"	f	struct:lgfx::v0::Touch_FT5x06
Touch_FT5x06	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^  struct Touch_FT5x06 : public TouchCommon$/;"	s	namespace:lgfx::v0
Touch_FT5x06	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^    Touch_FT5x06(void)$/;"	f	struct:lgfx::v1::Touch_FT5x06
Touch_FT5x06	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^  struct Touch_FT5x06 : public ITouch$/;"	s	namespace:lgfx::v1
Touch_GSL1680E_800x480	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^  Touch_GSL1680E_800x480::Touch_GSL1680E_800x480(void)$/;"	f	class:lgfx::v1::Touch_GSL1680E_800x480
Touch_GSL1680E_800x480	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^  struct Touch_GSL1680E_800x480 : public Touch_GSLx680$/;"	s	namespace:lgfx::v1
Touch_GSL1680F_480x272	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^  Touch_GSL1680F_480x272::Touch_GSL1680F_480x272(void)$/;"	f	class:lgfx::v1::Touch_GSL1680F_480x272
Touch_GSL1680F_480x272	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^  struct Touch_GSL1680F_480x272 : public Touch_GSLx680$/;"	s	namespace:lgfx::v1
Touch_GSL1680F_800x480	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^  Touch_GSL1680F_800x480::Touch_GSL1680F_800x480(void)$/;"	f	class:lgfx::v1::Touch_GSL1680F_800x480
Touch_GSL1680F_800x480	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^  struct Touch_GSL1680F_800x480 : public Touch_GSLx680$/;"	s	namespace:lgfx::v1
Touch_GSLx680	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^  struct Touch_GSLx680 : public ITouch$/;"	s	namespace:lgfx::v1
Touch_GSLx680_320x320	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^  Touch_GSLx680_320x320::Touch_GSLx680_320x320(void)$/;"	f	class:lgfx::v1::Touch_GSLx680_320x320
Touch_GSLx680_320x320	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^  struct Touch_GSLx680_320x320 : public Touch_GSLx680$/;"	s	namespace:lgfx::v1
Touch_GT911	src/lgfx/v0/touch/Touch_GT911.hpp	/^    Touch_GT911(void) {$/;"	f	struct:lgfx::v0::Touch_GT911
Touch_GT911	src/lgfx/v0/touch/Touch_GT911.hpp	/^  struct Touch_GT911 : public TouchCommon$/;"	s	namespace:lgfx::v0
Touch_GT911	src/lgfx/v1/touch/Touch_GT911.hpp	/^    Touch_GT911(void)$/;"	f	struct:lgfx::v1::Touch_GT911
Touch_GT911	src/lgfx/v1/touch/Touch_GT911.hpp	/^  struct Touch_GT911 : public ITouch$/;"	s	namespace:lgfx::v1
Touch_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    Touch_M5StackCoreS3(void)$/;"	f	struct:lgfx::v1::Touch_M5StackCoreS3
Touch_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  struct Touch_M5StackCoreS3 : public lgfx::Touch_FT5x06$/;"	s	namespace:lgfx::v1
Touch_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    Touch_M5StackCoreS3(void)$/;"	f	struct:lgfx::v1::Touch_M5StackCoreS3
Touch_M5StackCoreS3	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Touch_M5StackCoreS3 : public lgfx::Touch_FT5x06$/;"	s	namespace:lgfx::v1
Touch_M5Tough	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    Touch_M5Tough(void)$/;"	f	struct:lgfx::v1::Touch_M5Tough
Touch_M5Tough	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  struct Touch_M5Tough : public lgfx::ITouch$/;"	s	namespace:lgfx::v1
Touch_M5Tough	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    Touch_M5Tough(void)$/;"	f	struct:lgfx::v1::Touch_M5Tough
Touch_M5Tough	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  struct Touch_M5Tough : public lgfx::ITouch$/;"	s	namespace:lgfx::v1
Touch_NS2009	src/lgfx/v1/touch/Touch_NS2009.hpp	/^    Touch_NS2009(void)$/;"	f	struct:lgfx::v1::Touch_NS2009
Touch_NS2009	src/lgfx/v1/touch/Touch_NS2009.hpp	/^  struct Touch_NS2009 : public ITouch$/;"	s	namespace:lgfx::v1
Touch_STMPE610	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^    Touch_STMPE610() {$/;"	f	struct:lgfx::v0::Touch_STMPE610
Touch_STMPE610	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^  struct Touch_STMPE610 : public TouchCommon$/;"	s	namespace:lgfx::v0
Touch_STMPE610	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    Touch_STMPE610(void)$/;"	f	struct:lgfx::v1::Touch_STMPE610
Touch_STMPE610	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^  struct Touch_STMPE610 : public ITouch$/;"	s	namespace:lgfx::v1
Touch_TT21xxx	src/lgfx/v1/touch/Touch_TT21xxx.hpp	/^    Touch_TT21xxx(void)$/;"	f	struct:lgfx::v1::Touch_TT21xxx
Touch_TT21xxx	src/lgfx/v1/touch/Touch_TT21xxx.hpp	/^  struct Touch_TT21xxx : public ITouch$/;"	s	namespace:lgfx::v1
Touch_XPT2046	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^    Touch_XPT2046() {$/;"	f	struct:lgfx::v0::Touch_XPT2046
Touch_XPT2046	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^  struct Touch_XPT2046 : public TouchCommon$/;"	s	namespace:lgfx::v0
Touch_XPT2046	src/lgfx/v1/touch/Touch_XPT2046.hpp	/^    Touch_XPT2046(void)$/;"	f	struct:lgfx::v1::Touch_XPT2046
Touch_XPT2046	src/lgfx/v1/touch/Touch_XPT2046.hpp	/^  struct Touch_XPT2046 : public ITouch$/;"	s	namespace:lgfx::v1
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^#define U8G2_USE_LARGE_FONTS$/;"	d	file:
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^#define U8G2_USE_LARGE_FONTS$/;"	d	file:
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_cn.h	/^#define U8G2_USE_LARGE_FONTS$/;"	d
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^#define U8G2_USE_LARGE_FONTS$/;"	d	file:
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_ja.h	/^#define U8G2_USE_LARGE_FONTS$/;"	d
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^#define U8G2_USE_LARGE_FONTS$/;"	d	file:
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_kr.h	/^#define U8G2_USE_LARGE_FONTS$/;"	d
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^#define U8G2_USE_LARGE_FONTS$/;"	d	file:
U8G2_USE_LARGE_FONTS	src/lgfx/Fonts/efont/lgfx_efont_tw.h	/^#define U8G2_USE_LARGE_FONTS$/;"	d
U8g2font	src/lgfx/v0/lgfx_fonts.hpp	/^    constexpr U8g2font(const uint8_t *u8g2_font) : _font(u8g2_font) {}$/;"	f	struct:lgfx::v0::U8g2font
U8g2font	src/lgfx/v0/lgfx_fonts.hpp	/^  struct U8g2font : public lgfx::IFont$/;"	s	namespace:lgfx::v0
U8g2font	src/lgfx/v1/lgfx_fonts.hpp	/^    constexpr U8g2font(const uint8_t *u8g2_font) : _font(u8g2_font) {}$/;"	f	struct:lgfx::v1::U8g2font
U8g2font	src/lgfx/v1/lgfx_fonts.hpp	/^  struct U8g2font : public lgfx::IFont$/;"	s	namespace:lgfx::v1
UPDATE_MODE_A2	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_A2      = 7,  \/\/   Medium    290ms        Anti-aliased text in menus \/ touch and screen input $/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_A2	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_A2      = 7,  \/\/   Medium    290ms        Anti-aliased text in menus \/ touch and screen input $/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_DU	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_DU      = 1,  \/\/   Low       260ms        Monochrome menu, text input, and touch screen input $/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_DU	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_DU      = 1,  \/\/   Low       260ms        Monochrome menu, text input, and touch screen input $/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_DU4	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_DU4     = 6,  \/\/ * Medium    120ms        Fast page flipping at reduced contrast$/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_DU4	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_DU4     = 6,  \/\/ * Medium    120ms        Fast page flipping at reduced contrast$/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GC16	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GC16    = 2,  \/\/ * Very Low  450ms        High quality images$/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GC16	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GC16    = 2,  \/\/ * Very Low  450ms        High quality images$/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GL16	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GL16    = 3,  \/\/ * Medium    450ms        Text with white background $/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GL16	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GL16    = 3,  \/\/ * Medium    450ms        Text with white background $/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GLD16	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GLD16   = 5,  \/\/   Low       450ms        Text and graphics with white background $/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GLD16	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GLD16   = 5,  \/\/   Low       450ms        Text and graphics with white background $/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GLR16	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GLR16   = 4,  \/\/   Low       450ms        Text with white background$/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_GLR16	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_GLR16   = 4,  \/\/   Low       450ms        Text with white background$/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_INIT	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_INIT    = 0,  \/\/ * N\/A       2000ms       Display initialization, $/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_INIT	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_INIT    = 0,  \/\/ * N\/A       2000ms       Display initialization, $/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_NONE	src/lgfx/v0/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_NONE    = 8$/;"	e	enum:lgfx::v0::Panel_IT8951::epd_update_mode_t
UPDATE_MODE_NONE	src/lgfx/v1/panel/Panel_IT8951.hpp	/^      UPDATE_MODE_NONE    = 8$/;"	e	enum:lgfx::v1::Panel_IT8951::epd_update_mode_t
UPDATE_RESULT_BROKEN	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t UPDATE_RESULT_BROKEN = 0x01;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
UPDATE_RESULT_BUSY	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t UPDATE_RESULT_BUSY   = 0xFF;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
UPDATE_RESULT_ERROR	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t UPDATE_RESULT_ERROR  = 0x00;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
UPDATE_RESULT_OK	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    static constexpr uint8_t UPDATE_RESULT_OK     = 0xF1;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
USB_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t USB_:1;           \/*!< bit:      0  USB APB Clock Enable               *\/$/;"	m	struct:__anon299::__anon300
USB_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t USB_:1;           \/*!< bit:     10  USB AHB Clock Mask                 *\/$/;"	m	struct:__anon295::__anon296
USB_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t USB_:1;           \/*!< bit:      0  USB APB Clock Enable               *\/$/;"	m	struct:__anon85::__anon86
USB_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t USB_:1;           \/*!< bit:     10  USB AHB Clock Mask                 *\/$/;"	m	struct:__anon81::__anon82
USER	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO EVSYS_USER_Type           USER[67];    \/**< \\brief Offset: 0x120 (R\/W 32) User Multiplexer n *\/$/;"	m	struct:__anon344
USER	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO EVSYS_USER_Type           USER[67];    \/**< \\brief Offset: 0x120 (R\/W 32) User Multiplexer n *\/$/;"	m	struct:__anon130
USE_ESP_EFUSE_GET_PKG_VER	src/lgfx/v1/platforms/esp32/common.cpp	/^  #define USE_ESP_EFUSE_GET_PKG_VER$/;"	d	file:
USE_TWOWIRE_SETPINS	src/lgfx/v1/platforms/esp32/common.cpp	/^     #define USE_TWOWIRE_SETPINS$/;"	d	file:
USE_TWOWIRE_SETPINS	src/lgfx/v1/platforms/esp32/common.cpp	/^   #define USE_TWOWIRE_SETPINS$/;"	d	file:
USE_XFER_16	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^#define USE_XFER_16$/;"	d	file:
UTF8_SWITCH	src/lgfx/v0/lgfx_common.hpp	/^    #undef UTF8_SWITCH$/;"	d
UTF8_SWITCH	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr attribute_t UTF8_SWITCH  = attribute_t::utf8_switch;$/;"	m	namespace:lgfx::v0::attribute
UTF8_SWITCH	src/lgfx/v1/misc/enum.hpp	/^    #undef UTF8_SWITCH$/;"	d
UTF8_SWITCH	src/lgfx/v1/misc/enum.hpp	/^    static constexpr attribute_t UTF8_SWITCH  = attribute_t::utf8_switch;$/;"	m	namespace:lgfx::v1::attribute
UpdateRawArea	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::UpdateRawArea(LGFX_Device* gfx, epd_update_mode_t mode)$/;"	f	class:lgfx::v0::Panel_IT8951
VCOMS	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t VCOMS    = 0xBB;      \/\/ VCOMS setting$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
VDVSET	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t VDVSET   = 0xC4;      \/\/ VDV setting$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
VDVVRHEN	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t VDVVRHEN = 0xC2;      \/\/ VDV and VRH command enable$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
VLWfont	src/lgfx/v0/lgfx_fonts.hpp	/^  struct VLWfont : public RunTimeFont$/;"	s	namespace:lgfx::v0
VLWfont	src/lgfx/v1/lgfx_fonts.hpp	/^  struct VLWfont : public RunTimeFont$/;"	s	namespace:lgfx::v1
VMCTR	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^      static constexpr uint8_t VMCTR  = 0xD1;$/;"	m	struct:lgfx::v0::Panel_ILI9481::CMD
VMCTR	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^      static constexpr uint8_t VMCTR   = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ILI9488::CMD
VMCTR	src/lgfx/v0/panel/Panel_ST7796.hpp	/^      static constexpr uint8_t VMCTR   = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ST7796::CMD
VMCTR1	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
VMCTR1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
VMCTR1	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ILI9342::CMD
VMCTR1	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
VMCTR1	src/lgfx/v0/panel/Panel_ST7735.hpp	/^      static constexpr uint8_t VMCTR1  = 0xC5;$/;"	m	struct:lgfx::v0::Panel_ST7735::CMD
VMCTR2	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^      static constexpr uint8_t VMCTR2  = 0xC7;$/;"	m	struct:lgfx::v0::Panel_ILI9163::CMD
VMCTR2	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^      static constexpr uint8_t VMCTR2  = 0xC7;$/;"	m	struct:lgfx::v0::Panel_ILI9341::CMD
VMCTR2	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^      static constexpr uint8_t VMCTR2  = 0xC7;$/;"	m	struct:lgfx::v0::Panel_ILI9486::CMD
VRHS	src/lgfx/v0/panel/Panel_ST7789.hpp	/^      static constexpr uint8_t VRHS     = 0xC3;      \/\/ VRH set$/;"	m	struct:lgfx::v0::Panel_ST7789::CMD
WAIT_CLOCK_STRETCH	src/lgfx/v1/platforms/esp8266/common.cpp	/^      bool WAIT_CLOCK_STRETCH(uint32_t msec = 5000)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
WAVE	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __IO TC_WAVE_Type              WAVE;        \/**< \\brief Offset: 0x0C (R\/W  8) Waveform Generation Control *\/$/;"	m	struct:__anon395
WAVE	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __IO TC_WAVE_Type              WAVE;        \/**< \\brief Offset: 0x0C (R\/W  8) Waveform Generation Control *\/$/;"	m	struct:__anon181
WAVEGEN	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  WAVEGEN:2;        \/*!< bit:  0.. 1  Waveform Generation Mode           *\/$/;"	m	struct:__anon367::__anon368
WAVEGEN	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  WAVEGEN:2;        \/*!< bit:  0.. 1  Waveform Generation Mode           *\/$/;"	m	struct:__anon153::__anon154
WDT_	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t WDT_:1;           \/*!< bit:      8  WDT APB Clock Enable               *\/$/;"	m	struct:__anon297::__anon298
WDT_	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t WDT_:1;           \/*!< bit:      8  WDT APB Clock Enable               *\/$/;"	m	struct:__anon83::__anon84
WHITE	src/LGFX_TFT_eSPI.hpp	/^    #undef WHITE$/;"	d
WHITE	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int WHITE           = 0xFFFF;      \/* 255, 255, 255 *\/$/;"	m	namespace:lgfx::ili9341_colors
WHITE_LEVEL	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t WHITE_LEVEL;$/;"	m	struct:lgfx::v1::internal_t	file:
WIRE_MASTER_ACT_READ	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr uint8_t WIRE_MASTER_ACT_READ = 0x02;$/;"	m	namespace:lgfx::v1::i2c	file:
WIRE_MASTER_ACT_REPEAT_START	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr uint8_t WIRE_MASTER_ACT_REPEAT_START = 0x01;$/;"	m	namespace:lgfx::v1::i2c	file:
WIRE_MASTER_ACT_STOP	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr uint8_t WIRE_MASTER_ACT_STOP = 0x03;$/;"	m	namespace:lgfx::v1::i2c	file:
WIRE_RISE_TIME_NANOSECONDS	src/lgfx/v1/platforms/samd21/common.cpp	/^#define WIRE_RISE_TIME_NANOSECONDS /;"	d	file:
WRCONFIG	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  __O  PORT_WRCONFIG_Type        WRCONFIG;    \/**< \\brief Offset: 0x28 ( \/W 32) Write Configuration *\/$/;"	m	struct:__anon425
WRCONFIG	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  __O  PORT_WRCONFIG_Type        WRCONFIG;    \/**< \\brief Offset: 0x28 ( \/W 32) Write Configuration *\/$/;"	m	struct:__anon211
WRPINCFG	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t WRPINCFG:1;       \/*!< bit:     30  Write PINCFG                       *\/$/;"	m	struct:__anon417::__anon418
WRPINCFG	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t WRPINCFG:1;       \/*!< bit:     30  Write PINCFG                       *\/$/;"	m	struct:__anon203::__anon204
WRPMUX	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t WRPMUX:1;         \/*!< bit:     28  Write PMUX                         *\/$/;"	m	struct:__anon417::__anon418
WRPMUX	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t WRPMUX:1;         \/*!< bit:     28  Write PMUX                         *\/$/;"	m	struct:__anon203::__anon204
WRTLOCK	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t WRTLOCK:1;        \/*!< bit:      7  Write Lock                         *\/$/;"	m	struct:__anon282::__anon283
WRTLOCK	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t WRTLOCK:1;        \/*!< bit:      7  Write Lock                         *\/$/;"	m	struct:__anon68::__anon69
WaitBusy	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::WaitBusy(LGFX_Device* gfx, uint32_t timeout)$/;"	f	class:lgfx::v0::Panel_IT8951
WriteArgs	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::WriteArgs(LGFX_Device* gfx, uint16_t cmd, uint16_t *args, int32_t length)$/;"	f	class:lgfx::v0::Panel_IT8951
WriteCommand	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::WriteCommand(LGFX_Device* gfx, uint16_t cmd)$/;"	f	class:lgfx::v0::Panel_IT8951
WriteReg	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::WriteReg(LGFX_Device* gfx, uint16_t addr, uint16_t data)$/;"	f	class:lgfx::v0::Panel_IT8951
WriteWord	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::WriteWord(LGFX_Device* gfx, uint16_t data)$/;"	f	class:lgfx::v0::Panel_IT8951
YELLOW	src/LGFX_TFT_eSPI.hpp	/^    #undef YELLOW$/;"	d
YELLOW	src/LGFX_TFT_eSPI.hpp	/^    static constexpr int YELLOW          = 0xFFE0;      \/* 255, 255,   0 *\/$/;"	m	namespace:lgfx::ili9341_colors
ZLIB_VERNUM	src/lgfx/utility/miniz.c	/^  #define ZLIB_VERNUM /;"	d	file:
ZLIB_VERSION	src/lgfx/utility/miniz.c	/^  #define ZLIB_VERSION /;"	d	file:
ZLIB_VER_MAJOR	src/lgfx/utility/miniz.c	/^  #define ZLIB_VER_MAJOR /;"	d	file:
ZLIB_VER_MINOR	src/lgfx/utility/miniz.c	/^  #define ZLIB_VER_MINOR /;"	d	file:
ZLIB_VER_REVISION	src/lgfx/utility/miniz.c	/^  #define ZLIB_VER_REVISION /;"	d	file:
ZLIB_VER_SUBREVISION	src/lgfx/utility/miniz.c	/^  #define ZLIB_VER_SUBREVISION /;"	d	file:
Z_BEST_COMPRESSION	src/lgfx/utility/miniz.c	/^  #define Z_BEST_COMPRESSION /;"	d	file:
Z_BEST_SPEED	src/lgfx/utility/miniz.c	/^  #define Z_BEST_SPEED /;"	d	file:
Z_BLOCK	src/lgfx/utility/miniz.c	/^  #define Z_BLOCK /;"	d	file:
Z_BUF_ERROR	src/lgfx/utility/miniz.c	/^  #define Z_BUF_ERROR /;"	d	file:
Z_DATA_ERROR	src/lgfx/utility/miniz.c	/^  #define Z_DATA_ERROR /;"	d	file:
Z_DEFAULT_COMPRESSION	src/lgfx/utility/miniz.c	/^  #define Z_DEFAULT_COMPRESSION /;"	d	file:
Z_DEFAULT_STRATEGY	src/lgfx/utility/miniz.c	/^  #define Z_DEFAULT_STRATEGY /;"	d	file:
Z_DEFAULT_WINDOW_BITS	src/lgfx/utility/miniz.c	/^  #define Z_DEFAULT_WINDOW_BITS /;"	d	file:
Z_DEFLATED	src/lgfx/utility/miniz.c	/^  #define Z_DEFLATED /;"	d	file:
Z_ERRNO	src/lgfx/utility/miniz.c	/^  #define Z_ERRNO /;"	d	file:
Z_FILTERED	src/lgfx/utility/miniz.c	/^  #define Z_FILTERED /;"	d	file:
Z_FINISH	src/lgfx/utility/miniz.c	/^  #define Z_FINISH /;"	d	file:
Z_FIXED	src/lgfx/utility/miniz.c	/^  #define Z_FIXED /;"	d	file:
Z_FULL_FLUSH	src/lgfx/utility/miniz.c	/^  #define Z_FULL_FLUSH /;"	d	file:
Z_HUFFMAN_ONLY	src/lgfx/utility/miniz.c	/^  #define Z_HUFFMAN_ONLY /;"	d	file:
Z_MEM_ERROR	src/lgfx/utility/miniz.c	/^  #define Z_MEM_ERROR /;"	d	file:
Z_NEED_DICT	src/lgfx/utility/miniz.c	/^  #define Z_NEED_DICT /;"	d	file:
Z_NO_COMPRESSION	src/lgfx/utility/miniz.c	/^  #define Z_NO_COMPRESSION /;"	d	file:
Z_NO_FLUSH	src/lgfx/utility/miniz.c	/^  #define Z_NO_FLUSH /;"	d	file:
Z_NULL	src/lgfx/utility/miniz.c	/^  #define Z_NULL /;"	d	file:
Z_OK	src/lgfx/utility/miniz.c	/^  #define Z_OK /;"	d	file:
Z_PARAM_ERROR	src/lgfx/utility/miniz.c	/^  #define Z_PARAM_ERROR /;"	d	file:
Z_PARTIAL_FLUSH	src/lgfx/utility/miniz.c	/^  #define Z_PARTIAL_FLUSH /;"	d	file:
Z_RLE	src/lgfx/utility/miniz.c	/^  #define Z_RLE /;"	d	file:
Z_STREAM_END	src/lgfx/utility/miniz.c	/^  #define Z_STREAM_END /;"	d	file:
Z_STREAM_ERROR	src/lgfx/utility/miniz.c	/^  #define Z_STREAM_ERROR /;"	d	file:
Z_SYNC_FLUSH	src/lgfx/utility/miniz.c	/^  #define Z_SYNC_FLUSH /;"	d	file:
Z_VERSION_ERROR	src/lgfx/utility/miniz.c	/^  #define Z_VERSION_ERROR /;"	d	file:
Zig	src/lgfx/utility/lgfx_tjpgd.c	/^static const uint8_t Zig[64] = {	\/* Zigzag-order to raster-order conversion table *\/$/;"	v	file:
_GFXFONT_H_	src/lgfx/v0/lgfx_fonts.hpp	/^#define _GFXFONT_H_$/;"	d
_GFXFONT_H_	src/lgfx/v1/lgfx_fonts.hpp	/^#define _GFXFONT_H_$/;"	d
_GLIBCXX_CSTDINT	src/lgfx/internal/memory.h	/^  #define _GLIBCXX_CSTDINT /;"	d
_GSL1680E_800x480_FW_H_	src/lgfx/v1/touch/gslx680/Touch_GSL1680E_800x480_FW.hpp	/^#define _GSL1680E_800x480_FW_H_$/;"	d
_GSL1680F_480x272_FW_H_	src/lgfx/v1/touch/gslx680/Touch_GSL1680F_480x272_FW.hpp	/^#define _GSL1680F_480x272_FW_H_$/;"	d
_GSL1680F_800x480_FW_H_	src/lgfx/v1/touch/gslx680/Touch_GSL1680F_800x480_FW.hpp	/^#define _GSL1680F_800x480_FW_H_$/;"	d
_GSLX680_320x320_FW_H_	src/lgfx/v1/touch/gslx680/Touch_GSLx680_320x320_FW.hpp	/^#define _GSLX680_320x320_FW_H_$/;"	d
_GSLX680_FW_H_	src/lgfx/v1/touch/gslx680/Touch_GSLx680_FW.h	/^#define _GSLX680_FW_H_$/;"	d
_HDMI_Trans_config	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    HDMI_Trans::config_t _HDMI_Trans_config;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_LGFX_QRCODE_H_	src/lgfx/utility/lgfx_qrcode.h	/^#define _LGFX_QRCODE_H_$/;"	d
_ROM_SECURE_BOOT_H_	src/lgfx/v1/platforms/esp32/common.cpp	/^   #define _ROM_SECURE_BOOT_H_$/;"	d	file:
_Ul	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#define _Ul(/;"	d
_Ul	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^#undef _Ul$/;"	d
_Ul	src/lgfx/v0/platforms/samd51_common.cpp	/^#define _Ul(/;"	d	file:
_Ul	src/lgfx/v0/platforms/samd51_common.cpp	/^#undef _Ul$/;"	d	file:
_Ul	src/lgfx/v0/platforms/samd51_common.hpp	/^ #define _Ul(/;"	d
_Ul	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  #define _Ul(/;"	d	file:
_Ul	src/lgfx/v1/platforms/samd51/common.cpp	/^#define _Ul(/;"	d	file:
_Ul	src/lgfx/v1/platforms/samd51/common.cpp	/^#undef _Ul$/;"	d	file:
_Ul	src/lgfx/v1/platforms/samd51/common.hpp	/^ #define _Ul(/;"	d
__I	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define __I /;"	d
__I	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define __I /;"	d
__IO	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define __IO /;"	d
__IO	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define __IO /;"	d
__LGFX_BOARDS_HPP__	src/lgfx/boards.hpp	/^#define __LGFX_BOARDS_HPP__$/;"	d
__LGFX_PGMSPACE_H__	src/lgfx/utility/pgmspace.h	/^#define __LGFX_PGMSPACE_H__$/;"	d
__LGFX_PNGLE_H__	src/lgfx/utility/lgfx_pngle.h	/^#define __LGFX_PNGLE_H__$/;"	d
__LGFX_QOI_H__	src/lgfx/utility/lgfx_qoi.h	/^#define __LGFX_QOI_H__$/;"	d
__LGFX_TJPGDEC_H__	src/lgfx/utility/lgfx_tjpgd.h	/^#define __LGFX_TJPGDEC_H__$/;"	d
__O	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^#define __O /;"	d
__O	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^#define __O /;"	d
_adjust_abs	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static bool _adjust_abs(int32_t& x, int32_t& w) { if (w < 0) { x += w + 1; w = -w; } return !w; }$/;"	f	class:lgfx::v0::LGFXBase
_adjust_abs	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static bool _adjust_abs(int32_t& x, int32_t& w) { if (w < 0) { x += w; w = -w; } return !w; }$/;"	f	class:lgfx::v1::LGFXBase
_adjust_width	src/lgfx/v0/LGFXBase.hpp	/^    static bool _adjust_width(int32_t& x, int32_t& dx, int32_t& dw, int32_t left, int32_t width)$/;"	f	class:lgfx::v0::LGFXBase
_adjust_width	src/lgfx/v1/LGFXBase.hpp	/^    static bool _adjust_width(int32_t& x, int32_t& dx, int32_t& dw, int32_t left, int32_t width)$/;"	f	class:lgfx::v1::LGFXBase
_affine	src/lgfx/v1/panel/Panel_Device.hpp	/^    float _affine[6] = {1,0,0,0,1,0};  \/\/\/ touch affine parameter$/;"	m	struct:lgfx::v1::Panel_Device
_align_data	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    bool _align_data = false;$/;"	m	class:lgfx::v0::LGFX_SPI
_align_data	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint8_t _align_data;$/;"	m	class:lgfx::v1::Bus_Parallel16
_align_data	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    uint8_t _align_data;$/;"	m	class:lgfx::v1::Bus_Parallel16
_alloc_dmadesc	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static void _alloc_dmadesc(size_t len)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
_alloc_dmadesc	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    static void _alloc_dmadesc(size_t len)$/;"	f	class:lgfx::v0::LGFX_SPI
_alloc_dmadesc	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::_alloc_dmadesc(size_t len)$/;"	f	class:lgfx::v1::Bus_SPI
_alloc_dmadesc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_alloc_dmadesc(size_t len)$/;"	f	class:lgfx::v1::Bus_Parallel16
_alloc_dmadesc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_alloc_dmadesc(size_t len)$/;"	f	class:lgfx::v1::Bus_Parallel8
_alloc_dmadesc	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_alloc_dmadesc(size_t len)$/;"	f	class:lgfx::v1::Bus_Parallel16
_alloc_dmadesc	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_alloc_dmadesc(size_t len)$/;"	f	class:lgfx::v1::Bus_Parallel8
_auto_display	src/lgfx/v0/LGFXBase.hpp	/^    bool _auto_display = true;$/;"	m	class:lgfx::v0::LGFXBase
_auto_display	src/lgfx/v1/Panel.hpp	/^    bool _auto_display = false;$/;"	m	struct:lgfx::v1::IPanel
_b8a	src/lgfx/v1/misc/colortype.hpp	/^    uint_fast16_t _b8a;$/;"	m	struct:lgfx::effect_fill_alpha
_base_rgb888	src/lgfx/v0/LGFXBase.hpp	/^    uint32_t _base_rgb888 = 0;  \/\/ gap fill colour for clear and scroll zone$/;"	m	class:lgfx::v0::LGFXBase
_base_rgb888	src/lgfx/v1/LGFXBase.hpp	/^    uint32_t _base_rgb888 = 0;  \/\/ gap fill colour for clear and scroll zone $/;"	m	class:lgfx::v1::LGFXBase
_bitwidth	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _bitwidth;$/;"	m	class:lgfx::v0::LGFX_Sprite
_bitwidth	src/lgfx/v1/LGFX_Sprite.hpp	/^    uint_fast16_t _bitwidth;$/;"	m	struct:lgfx::v1::Panel_Sprite
_block_array	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    uint8_t** _block_array;$/;"	m	class:lgfx::v1::DividedFrameBuffer
_block_count	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    uint16_t _block_count; \/\/ メモリブロックの数$/;"	m	class:lgfx::v1::DividedFrameBuffer
_block_lines	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    uint16_t _block_lines; \/\/ メモリブロックひとつに含まれるライン数$/;"	m	class:lgfx::v1::DividedFrameBuffer
_board	src/lgfx/v1/LGFXBase.hpp	/^    board_t _board = board_t::board_unknown;$/;"	m	class:lgfx::v1::LGFX_Device
_brightness	src/lgfx/v1/LGFXBase.hpp	/^    uint8_t _brightness = 127;$/;"	m	class:lgfx::v1::LGFX_Device
_brightness	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    uint8_t _brightness = 128;$/;"	m	class:lgfx::v1::Bus_HUB75
_brightness_period	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    uint16_t _brightness_period[TRANSFER_PERIOD_COUNT_565 + 1];$/;"	m	class:lgfx::v1::Bus_HUB75
_buf	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    uint8_t* _buf = nullptr;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
_buf	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    uint8_t* _buf = nullptr;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
_buff_free_count	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    uint32_t _buff_free_count;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
_buffer	src/lgfx/v0/LGFX_Sprite.hpp	/^      uint8_t* _buffer;$/;"	m	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
_buffer	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    uint8_t* _buffer;$/;"	m	class:lgfx::v1::SpriteBuffer
_buffer	src/lgfx/v1/platforms/common.hpp	/^    uint8_t* _buffer = nullptr;$/;"	m	class:lgfx::v1::SimpleBuffer
_buffer	src/lgfx/v1/platforms/common.hpp	/^    uint8_t* _buffer[2] = { nullptr, nullptr };$/;"	m	class:lgfx::v1::FlipBuffer
_buffer	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t* _buffer = nullptr;    \/\/ 先読みバッファ(memcpy先アドレス)$/;"	m	class:lgfx::v1::scanline_cache_t	file:
_bus	src/lgfx/v1/panel/Panel_Device.hpp	/^    IBus* _bus = nullptr;$/;"	m	struct:lgfx::v1::Panel_Device
_bus_dlen	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr int _bus_dlen = (get_bus_dlen<CFG, 8>::value + 7) & ~7;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_bus_instance	examples/Test/build_test/main/main.cpp	/^    lgfx::Bus_I2C       _bus_instance;$/;"	m	class:LGFX_I2C	file:
_bus_instance	examples/Test/build_test/main/main.cpp	/^    lgfx::Bus_SPI       _bus_instance;$/;"	m	class:LGFX	file:
_bus_instance	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^    lgfx::Bus_SPI _bus_instance;$/;"	m	struct:lgfx::v1::Panel_F746DISCO
_bus_instance	src/lgfx_user/LGFX_ESP32S2_DSO138_Parallel8.hpp	/^  lgfx::Bus_Parallel8 _bus_instance;$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  lgfx::Bus_Parallel16 _bus_instance;$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h	/^  lgfx::Bus_RGB     _bus_instance;$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_ESP32S3_wywy_ESP32HMI.h	/^    lgfx::Bus_Parallel16 _bus_instance;$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_ESP32_sample.hpp	/^  lgfx::Bus_SPI       _bus_instance;   \/\/ SPIバスのインスタンス$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^  lgfx::Bus_SPI _bus_instance;$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_ESP8266_sample.hpp	/^  lgfx::Bus_SPI       _bus_instance;   \/\/ SPIバスのインスタンス$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_RP2040_096_Waveshare_sample.hpp	/^  lgfx::Bus_SPI       _bus_instance;$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_SAMD21_sample.hpp	/^  lgfx::Bus_SPI       _bus_instance;   \/\/ SPIバスのインスタンス$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_SAMD51_sample.hpp	/^  lgfx::Bus_SPI       _bus_instance;   \/\/ SPIバスのインスタンス$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/LGFX_SPRESENSE_sample.hpp	/^  lgfx::Bus_SPI       _bus_instance;   \/\/ SPIバスのインスタンス$/;"	m	class:LGFX
_bus_instance	src/lgfx_user/M5AtomDisplay.hpp	/^  lgfx::Bus_SPI      _bus_instance;$/;"	m	class:M5AtomDisplay
_bus_instance	src/lgfx_user/M5UnitLCD.hpp	/^  lgfx::Bus_I2C _bus_instance;$/;"	m	class:M5UnitLCD
_bus_instance	src/lgfx_user/M5UnitOLED.hpp	/^  lgfx::Bus_I2C _bus_instance;$/;"	m	class:M5UnitOLED
_bus_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    lgfx::IBus* _bus_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_bus_spi	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    lgfx::Bus_SPI _bus_spi;$/;"	m	class:lgfx::v1::LGFX
_bus_spi	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    lgfx::Bus_SPI _bus_spi;$/;"	m	class:lgfx::v1::LGFX
_bus_spi	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    lgfx::Bus_SPI _bus_spi;$/;"	m	class:lgfx::v1::LGFX
_bus_spi	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    lgfx::Bus_SPI _bus_spi;$/;"	m	class:lgfx::v1::LGFX
_bus_spi	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    lgfx::Bus_SPI _bus_spi;$/;"	m	class:lgfx::v1::LGFX
_bus_spi	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    lgfx::Bus_SPI _bus_spi;$/;"	m	class:lgfx::v1::LGFX
_cache	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    uint16_t _cache[2][CACHE_SIZE];$/;"	m	class:lgfx::v1::Bus_Parallel8
_cache	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _cache[2][CACHE_SIZE];$/;"	m	class:lgfx::v1::Bus_Parallel16
_cache	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    uint16_t _cache[2][CACHE_SIZE];$/;"	m	class:lgfx::v1::Bus_Parallel8
_cache	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    uint32_t _cache[2][CACHE_SIZE \/ sizeof(uint32_t)];$/;"	m	class:lgfx::v1::Bus_Parallel16
_cache	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    uint32_t _cache[2][CACHE_SIZE \/ sizeof(uint32_t)];$/;"	m	class:lgfx::v1::Bus_Parallel8
_cache_flip	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    uint16_t* _cache_flip;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cache_flip	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t* _cache_flip;$/;"	m	class:lgfx::v1::Bus_Parallel16
_cache_flip	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    uint16_t* _cache_flip;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cache_flip	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    uint32_t* _cache_flip;$/;"	m	class:lgfx::v1::Bus_Parallel16
_cache_flip	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    uint32_t* _cache_flip;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cache_index	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    size_t _cache_index;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cache_index	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    size_t _cache_index;$/;"	m	class:lgfx::v1::Bus_Parallel16
_cache_index	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    size_t _cache_index;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cfg	src/lgfx/v1/Touch.hpp	/^    config_t _cfg;$/;"	m	struct:lgfx::v1::ITouch
_cfg	src/lgfx/v1/panel/Panel_Device.hpp	/^    config_t _cfg;$/;"	m	struct:lgfx::v1::Panel_Device
_cfg	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_Stream
_cfg	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_HUB75
_cfg	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_I2C
_cfg	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cfg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Light_PWM
_cfg	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cfg	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_Parallel16
_cfg	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cfg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_Parallel16
_cfg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_Parallel8
_cfg	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_RGB
_cfg	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_I2C
_cfg	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_I2C
_cfg	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Light_PWM
_cfg	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_I2C
_cfg	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_I2C
_cfg	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    config_t _cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_cfg	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    config_t _cfg;$/;"	m	struct:lgfx::v1::Light_TC
_cfg	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    config_t _cfg;$/;"	m	struct:lgfx::v1::Light_TCC
_cfg	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    config_t _cfg;$/;"	m	struct:lgfx::v1::Light_TC
_ch	src/lgfx/v0/LGFXBase.cpp	/^    int32_t _ch;$/;"	m	struct:lgfx::v0::image_info_t	file:
_ch	src/lgfx/v1/LGFXBase.cpp	/^    int32_t _ch;$/;"	m	struct:lgfx::v1::image_info_t	file:
_check_afsr	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_check_afsr(void)$/;"	f	class:lgfx::v1::Panel_IT8951
_check_busy	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::_check_busy(uint32_t length, bool force)$/;"	f	class:lgfx::v1::Panel_M5HDMI
_check_init	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  bool Touch_FT5x06::_check_init(void)$/;"	f	class:lgfx::v1::Touch_FT5x06
_check_init	src/lgfx/v1/touch/Touch_TT21xxx.cpp	/^  bool Touch_TT21xxx::_check_init(void)$/;"	f	class:lgfx::v1::Touch_TT21xxx
_check_need_transaction	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool _check_need_transaction(void) const { return _fs == &SD; }$/;"	f	struct:lgfx::v0::FileWrapper
_check_need_transaction	src/lgfx/v1/platforms/esp32/common.hpp	/^    bool _check_need_transaction(void) const { return _fs != &SPIFFS; }$/;"	f	struct:lgfx::v1::FileWrapper
_check_need_transaction	src/lgfx/v1/platforms/esp8266/common.hpp	/^    bool _check_need_transaction(void) const { return _fs == &SD; }$/;"	f	struct:lgfx::v1::FileWrapper
_check_need_transaction	src/lgfx/v1/platforms/rp2040/common.hpp	/^      bool _check_need_transaction(void) const { return _fs != &LittleFS; }$/;"	f	struct:lgfx::v1::FileWrapper
_check_repeat	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  bool Panel_M5UnitLCD::_check_repeat(uint32_t cmd, uint_fast8_t limit)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
_cl	src/lgfx/v0/LGFXBase.cpp	/^    int32_t _cl;$/;"	m	struct:lgfx::v0::image_info_t	file:
_cl	src/lgfx/v1/LGFXBase.cpp	/^    int32_t _cl;$/;"	m	struct:lgfx::v1::image_info_t	file:
_clear_dma_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _clear_dma_reg = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_clip_b	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v0::LGFXBase
_clip_b	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v1::LGFXBase
_clip_l	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v0::LGFXBase
_clip_l	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v1::LGFXBase
_clip_r	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v0::LGFXBase
_clip_r	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v1::LGFXBase
_clip_t	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v0::LGFXBase
_clip_t	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _clip_l = 0, _clip_r = -1, _clip_t = 0, _clip_b = -1; \/\/ clip rect$/;"	m	class:lgfx::v1::LGFXBase
_clipping	src/lgfx/v1/LGFXBase.hpp	/^    bool _clipping(int32_t& x, int32_t& y, int32_t& w, int32_t& h)$/;"	f	class:lgfx::v1::LGFXBase
_clkdiv_fill	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _clkdiv_fill;$/;"	m	class:lgfx::v0::LGFX_SPI
_clkdiv_fill	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t _clkdiv_fill;$/;"	m	class:lgfx::v0::LGFX_SPI
_clkdiv_read	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v0::LGFX_SPI
_clkdiv_read	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v0::LGFX_SPI
_clkdiv_read	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_read	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _clkdiv_read = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_read	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_read	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_read	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_read	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_read	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_read	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    uint32_t _clkdiv_read;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_clkdiv_write	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v0::LGFX_SPI
_clkdiv_write	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v0::LGFX_SPI
_clkdiv_write	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_Parallel8
_clkdiv_write	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _clkdiv_write = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_Parallel16
_clkdiv_write	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_Parallel8
_clkdiv_write	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_SPI
_clkdiv_write	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    uint32_t _clkdiv_write;$/;"	m	class:lgfx::v1::Bus_SPI
_clock_reg_value	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    uint32_t _clock_reg_value;$/;"	m	class:lgfx::v1::Bus_Parallel16
_clock_reg_value	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    uint32_t _clock_reg_value;$/;"	m	class:lgfx::v1::Bus_Parallel8
_close_transfer	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::_close_transfer(LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
_close_transfer	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::_close_transfer(void)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
_cmd_caset	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t _cmd_caset;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_cmd_nop	src/lgfx/v1/panel/Panel_LCD.hpp	/^    uint8_t _cmd_nop = CMD_NOP;$/;"	m	struct:lgfx::v1::Panel_LCD
_cmd_ramrd	src/lgfx/v1/panel/Panel_LCD.hpp	/^    uint8_t _cmd_ramrd = CMD_RAMRD;$/;"	m	struct:lgfx::v1::Panel_LCD
_cmd_ramwr	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t _cmd_ramwr;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_cmd_ramwr	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _cmd_ramwr;$/;"	m	class:lgfx::v0::LGFX_SPI
_cmd_ramwr	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t _cmd_ramwr;$/;"	m	class:lgfx::v0::LGFX_SPI
_cmd_raset	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t _cmd_raset;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_color	src/lgfx/v0/LGFXBase.hpp	/^    raw_color_t _color = 0xFFFFFFU;$/;"	m	class:lgfx::v0::LGFXBase
_color	src/lgfx/v1/LGFXBase.hpp	/^    raw_color_t _color = 0xFFFFFFU;$/;"	m	class:lgfx::v1::LGFXBase
_colstart	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast16_t _colstart = 0;$/;"	m	struct:lgfx::v0::PanelCommon
_colstart	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint_fast16_t _colstart;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_colstart	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint_fast16_t _colstart;$/;"	m	class:lgfx::v0::LGFX_SPI
_colstart	src/lgfx/v1/panel/Panel_LCD.hpp	/^    uint16_t _colstart = 0;$/;"	m	struct:lgfx::v1::Panel_LCD
_colstart	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    uint16_t _colstart = 0;$/;"	m	struct:lgfx::v1::Panel_RA8875
_compins	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    uint8_t _compins = 0x12;$/;"	m	struct:lgfx::v1::Panel_SSD1306
_conf_reg_default	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr uint32_t _conf_reg_default = I2S_TX_MSB_RIGHT | I2S_TX_RIGHT_FIRST | I2S_RX_RIGHT_FIRST;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_conf_reg_default	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static constexpr uint32_t _conf_reg_default = I2S_TX_MSB_RIGHT | I2S_TX_RIGHT_FIRST | I2S_RX_RIGHT_FIRST | I2S_TX_MONO;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_default	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr uint32_t _conf_reg_default = I2S_TX_MSB_RIGHT | I2S_TX_RIGHT_FIRST | I2S_RX_RIGHT_FIRST;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_default	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr uint32_t _conf_reg_default = I2S_TX_RIGHT_FIRST | I2S_RX_RIGHT_FIRST | I2S_TX_DMA_EQUAL;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_default	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr uint32_t _conf_reg_default = I2S_TX_RIGHT_FIRST | I2S_RX_RIGHT_FIRST | I2S_TX_DMA_EQUAL;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_reset	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static constexpr uint32_t _conf_reg_reset   = _conf_reg_default | I2S_TX_RESET;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_reset	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr uint32_t _conf_reg_reset   = _conf_reg_default | I2S_TX_RESET;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_reset	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr uint32_t _conf_reg_reset   = _conf_reg_default | I2S_TX_RESET;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_reset	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr uint32_t _conf_reg_reset   = _conf_reg_default | I2S_TX_RESET;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_start	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr uint32_t _conf_reg_start   = _conf_reg_default | I2S_TX_START;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_conf_reg_start	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static constexpr uint32_t _conf_reg_start   = _conf_reg_default | I2S_TX_START;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_start	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr uint32_t _conf_reg_start   = _conf_reg_default | I2S_TX_START;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_start	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr uint32_t _conf_reg_start   = _conf_reg_default | I2S_TX_START;$/;"	m	namespace:lgfx::v1	file:
_conf_reg_start	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr uint32_t _conf_reg_start   = _conf_reg_default | I2S_TX_START;$/;"	m	namespace:lgfx::v1	file:
_config_detail	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    config_detail_t _config_detail;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_config_detail	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    config_detail_t _config_detail;$/;"	m	struct:lgfx::v1::Panel_CVBS
_config_detail	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    config_detail_t _config_detail;$/;"	m	struct:lgfx::v1::Panel_RGB
_content_length	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      DWORD _content_length = ~0u;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
_copy_rect	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::_copy_rect(uint32_t dst_xy, uint32_t src_xy, uint32_t wh)$/;"	f	class:lgfx::v1::Panel_M5HDMI
_create_pwm_backlight	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      static ILight* _create_pwm_backlight(int16_t pin, uint8_t ch, uint32_t freq = 12000, bool invert = false)$/;"	f	struct:lgfx::v1::LGFX::_detector_base_t
_ct	src/lgfx/v0/LGFXBase.cpp	/^    int32_t _ct;$/;"	m	struct:lgfx::v0::image_info_t	file:
_ct	src/lgfx/v1/LGFXBase.cpp	/^    int32_t _ct;$/;"	m	struct:lgfx::v1::image_info_t	file:
_cursor_x	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _cursor_x = 0;  \/\/ print text cursor$/;"	m	class:lgfx::v0::LGFXBase
_cursor_x	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _cursor_x = 0;  \/\/ print text cursor$/;"	m	class:lgfx::v1::LGFXBase
_cursor_y	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _cursor_y = 0;$/;"	m	class:lgfx::v0::LGFXBase
_cursor_y	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _cursor_y = 0;$/;"	m	class:lgfx::v1::LGFXBase
_cv_mat	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    cv::Mat _cv_mat;$/;"	m	struct:lgfx::v1::Panel_OpenCV
_cw	src/lgfx/v0/LGFXBase.cpp	/^    int32_t _cw;$/;"	m	struct:lgfx::v0::image_info_t	file:
_cw	src/lgfx/v1/LGFXBase.cpp	/^    int32_t _cw;$/;"	m	struct:lgfx::v1::image_info_t	file:
_datasize	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    size_t _datasize;     \/\/ データサイズ(memcpyする量)$/;"	m	class:lgfx::v1::scanline_cache_t	file:
_decoderState	src/lgfx/v0/LGFXBase.hpp	/^    utf8_decode_state_t _decoderState = utf8_state0;   \/\/ UTF8 decoder state$/;"	m	class:lgfx::v0::LGFXBase
_decoderState	src/lgfx/v1/LGFXBase.hpp	/^    utf8_decode_state_t _decoderState = utf8_state0;   \/\/ UTF8 decoder state$/;"	m	class:lgfx::v1::LGFXBase
_depth	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    color_depth_t _depth = color_depth_t::rgb565_2Byte;$/;"	m	class:lgfx::v1::Bus_HUB75
_detector_base_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    struct _detector_base_t$/;"	s	class:lgfx::v1::LGFX
_detector_parallel16_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      constexpr _detector_parallel16_t$/;"	f	struct:lgfx::v1::LGFX::_detector_parallel16_t
_detector_parallel16_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    struct _detector_parallel16_t : public _detector_t$/;"	s	class:lgfx::v1::LGFX
_detector_result_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    struct _detector_result_t$/;"	s	class:lgfx::v1::LGFX
_detector_spi_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      constexpr _detector_spi_t$/;"	f	struct:lgfx::v1::LGFX::_detector_spi_t
_detector_spi_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    struct _detector_spi_t : public _detector_t$/;"	s	class:lgfx::v1::LGFX
_detector_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      constexpr _detector_t (board_t board_, uint16_t id_cmd_, uint32_t id_mask_, uint32_t id_value_, uint32_t freq_write_, uint32_t freq_read_ )$/;"	f	struct:lgfx::v1::LGFX::_detector_t
_detector_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    struct _detector_t : public _detector_base_t$/;"	s	class:lgfx::v1::LGFX
_dev	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    volatile void *_dev;$/;"	m	class:lgfx::v1::Bus_HUB75
_dev	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    volatile void *_dev;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dev	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    volatile void *_dev;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dev	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    volatile void *_dev;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dev	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    volatile lcd_cam_dev_t* _dev;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dev	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    volatile lcd_cam_dev_t* _dev;$/;"	m	class:lgfx::v1::Bus_Parallel8
_direct_dc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    bool _direct_dc;$/;"	m	class:lgfx::v1::Bus_Parallel16
_direct_dc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    bool _direct_dc;$/;"	m	class:lgfx::v1::Bus_Parallel8
_div_num	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    size_t _div_num;$/;"	m	class:lgfx::v1::Bus_Parallel8
_div_num	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    size_t _div_num;$/;"	m	class:lgfx::v1::Bus_Parallel8
_div_num	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    size_t _div_num;$/;"	m	class:lgfx::v1::Bus_Parallel16
_div_num	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    size_t _div_num;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dmaHal	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    DMA_HandleTypeDef _dmaHal;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_adafruit	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    Adafruit_ZeroDMA _dma_adafruit;$/;"	m	class:lgfx::v0::LGFX_SPI
_dma_adafruit	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    Adafruit_ZeroDMA _dma_adafruit;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_adafruit	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    Adafruit_ZeroDMA _dma_adafruit;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_buf	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    uint16_t* _dma_buf[_dma_desc_set] = { nullptr, nullptr, nullptr };$/;"	m	class:lgfx::v1::Bus_HUB75
_dma_ch	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    int32_t _dma_ch;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dma_ch	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    int _dma_ch;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dma_ch	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    int32_t _dma_ch;$/;"	m	class:lgfx::v1::Bus_RGB
_dma_ch	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    int      _dma_ch;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_channel	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    static constexpr int _dma_channel= get_dma_channel<CFG,  0>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_dma_desc_set	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const uint8_t _dma_desc_set = 3;$/;"	m	class:lgfx::v1::Bus_HUB75
_dma_flip	src/lgfx/v0/LGFX_Device.hpp	/^    bool _dma_flip = false;$/;"	m	class:lgfx::v0::LGFX_Device
_dma_out_link_reg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    volatile uint32_t* _dma_out_link_reg;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dma_out_link_reg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    volatile uint32_t* _dma_out_link_reg;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dma_outstatus_reg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    volatile uint32_t* _dma_outstatus_reg;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dma_outstatus_reg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    volatile uint32_t* _dma_outstatus_reg;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dma_queue	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    lldesc_t* _dma_queue = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_queue_bytes	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _dma_queue_bytes = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_queue_capacity	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _dma_queue_capacity = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_queue_size	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _dma_queue_size = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_transfer_len	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    uint32_t _dma_transfer_len;$/;"	m	class:lgfx::v1::Bus_HUB75
_dma_tx_cfg	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    dma_channel_config _dma_tx_cfg;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_write_desc	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    DmacDescriptor* _dma_write_desc;$/;"	m	class:lgfx::v0::LGFX_SPI
_dma_write_desc	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    DmacDescriptor* _dma_write_desc = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_dma_write_desc	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    DmacDescriptor* _dma_write_desc = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_dmabufs	src/lgfx/v0/LGFX_Device.hpp	/^    _dmabufs_t _dmabufs[2];$/;"	m	class:lgfx::v0::LGFX_Device
_dmabufs_t	src/lgfx/v0/LGFX_Device.hpp	/^    struct _dmabufs_t {$/;"	s	class:lgfx::v0::LGFX_Device
_dmadesc	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static lldesc_t* _dmadesc;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_dmadesc	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  template <class T> lldesc_t* LGFX_PARALLEL<T>::_dmadesc = nullptr;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_dmadesc	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    static lldesc_t* _dmadesc;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^  template <class T> lldesc_t* LGFX_SPI<T>::_dmadesc = nullptr;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static DmacDescriptor* _dmadesc;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  template <class T> DmacDescriptor* LGFX_SPI<T>::_dmadesc = nullptr;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    lldesc_t* _dmadesc = nullptr;$/;"	m	class:lgfx::v1::Bus_HUB75
_dmadesc	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    lldesc_t _dmadesc;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dmadesc	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    lldesc_t* _dmadesc = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_dmadesc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    lldesc_t* _dmadesc = nullptr;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dmadesc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    lldesc_t* _dmadesc = nullptr;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dmadesc	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    dma_descriptor_t* _dmadesc = nullptr;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dmadesc	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    dma_descriptor_t* _dmadesc = nullptr;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dmadesc	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    dma_descriptor_t* _dmadesc = nullptr;$/;"	m	class:lgfx::v1::Bus_RGB
_dmadesc_len	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static uint32_t _dmadesc_len;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_dmadesc_len	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  template <class T> uint32_t LGFX_PARALLEL<T>::_dmadesc_len = 0;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_dmadesc_len	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    static uint32_t _dmadesc_len;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc_len	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^  template <class T> uint32_t LGFX_SPI<T>::_dmadesc_len = 0;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc_len	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static uint32_t _dmadesc_len;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc_len	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  template <class T> uint32_t LGFX_SPI<T>::_dmadesc_len = 0;$/;"	m	class:lgfx::v0::LGFX_SPI
_dmadesc_restart	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    dma_descriptor_t _dmadesc_restart;$/;"	m	class:lgfx::v1::Bus_RGB
_dmadesc_size	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _dmadesc_size = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_dmadesc_size	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _dmadesc_size = 0;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dmadesc_size	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    uint32_t _dmadesc_size = 0;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dmadesc_size	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    uint32_t _dmadesc_size = 0;$/;"	m	class:lgfx::v1::Bus_Parallel16
_dmadesc_size	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    uint32_t _dmadesc_size = 0;$/;"	m	class:lgfx::v1::Bus_Parallel8
_dmatask_handle	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    TaskHandle_t _dmatask_handle = nullptr;$/;"	m	class:lgfx::v1::Bus_HUB75
_drawCb	src/lgfx/v1/LGFX_Button.hpp	/^    drawCb _drawCb  = nullptr;$/;"	m	class:lgfx::v1::LGFX_Button
_draw_pixel	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    void _draw_pixel(int32_t x, int32_t y, uint32_t value)$/;"	f	struct:lgfx::v0::Panel_GDEW0154M09
_draw_pixel	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::_draw_pixel(uint_fast16_t x, uint_fast16_t y, uint32_t value)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
_draw_pixel	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::_draw_pixel(uint_fast16_t x, uint_fast16_t y, uint32_t value)$/;"	f	class:lgfx::v1::Panel_1bitOLED
_draw_pixel	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::_draw_pixel(uint_fast16_t x, uint_fast16_t y, uint32_t sum)$/;"	f	class:lgfx::v1::Panel_SSD1327
_draw_pixel_inner	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    virtual void _draw_pixel_inner(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) {}$/;"	f	struct:lgfx::v1::Panel_FlexibleFrameBuffer
_draw_pixel_inner	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  void Panel_HUB75::_draw_pixel_inner(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_HUB75
_draw_pixel_inner	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  void Panel_HUB75_Multi::_draw_pixel_inner(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_HUB75_Multi
_epd_mode	src/lgfx/v0/LGFXBase.hpp	/^    epd_mode_t _epd_mode = epd_mode_t::epd_quality;$/;"	m	class:lgfx::v0::LGFXBase
_epd_mode	src/lgfx/v1/Panel.hpp	/^    epd_mode_t _epd_mode = (epd_mode_t)0;  \/\/ EPDでない場合は0。それ以外の場合はEPD描画モード;$/;"	m	struct:lgfx::v1::IPanel
_exec_transfer	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::_exec_transfer(uint32_t cmd, LGFX_Device* gfx, const range_rect_t& range, bool invert)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
_exec_transfer	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::_exec_transfer(uint32_t cmd, const range_rect_t& range, bool invert)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
_fastmode	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    bool _fastmode = true;$/;"	m	struct:lgfx::v0::Panel_IT8951
_fbfd	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    int _fbfd = 0;$/;"	m	struct:lgfx::v1::Panel_fb
_fbp	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    char* _fbp = 0;$/;"	m	struct:lgfx::v1::Panel_fb
_fifo_conf_default	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr uint32_t _fifo_conf_default = 1 << I2S_TX_FIFO_MOD | 1 << I2S_RX_FIFO_MOD | 32 << I2S_TX_DATA_NUM_S | 32 << I2S_RX_DATA_NUM_S;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_fifo_conf_default	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static constexpr uint32_t _fifo_conf_default = 1 << I2S_TX_FIFO_MOD | 1 << I2S_RX_FIFO_MOD | 16 << I2S_TX_DATA_NUM_S | 16 << I2S_RX_DATA_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_fifo_conf_default	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr uint32_t _fifo_conf_default = 1 << I2S_TX_FIFO_MOD | 1 << I2S_RX_FIFO_MOD | 32 << I2S_TX_DATA_NUM_S | 32 << I2S_RX_DATA_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_fifo_conf_default	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr uint32_t _fifo_conf_default = 1 << I2S_TX_FIFO_MOD | 1 << I2S_RX_FIFO_MOD | 32 << I2S_TX_DATA_NUM_S | 32 << I2S_RX_DATA_NUM_S | I2S_TX_FIFO_MOD_FORCE_EN;$/;"	m	namespace:lgfx::v1	file:
_fifo_conf_default	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr uint32_t _fifo_conf_default = 1 << I2S_TX_FIFO_MOD | 1 << I2S_RX_FIFO_MOD | 32 << I2S_TX_DATA_NUM_S | 32 << I2S_RX_DATA_NUM_S | I2S_TX_FIFO_MOD_FORCE_EN;$/;"	m	namespace:lgfx::v1	file:
_fifo_conf_dma	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr uint32_t _fifo_conf_dma     = 1 << I2S_TX_FIFO_MOD | 1 << I2S_RX_FIFO_MOD | 32 << I2S_TX_DATA_NUM_S | 32 << I2S_RX_DATA_NUM_S | I2S_DSCR_EN;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_fifo_conf_dma	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static constexpr uint32_t _fifo_conf_dma     = _fifo_conf_default | I2S_DSCR_EN;$/;"	m	namespace:lgfx::v1	file:
_fifo_conf_dma	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr uint32_t _fifo_conf_dma     = _fifo_conf_default | I2S_DSCR_EN;$/;"	m	namespace:lgfx::v1	file:
_fifo_conf_dma	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr uint32_t _fifo_conf_dma     = _fifo_conf_default | I2S_DSCR_EN;$/;"	m	namespace:lgfx::v1	file:
_fifo_conf_dma	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr uint32_t _fifo_conf_dma     = _fifo_conf_default | I2S_DSCR_EN;$/;"	m	namespace:lgfx::v1	file:
_file	src/lgfx/v0/platforms/esp32_common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v0::FileWrapper
_file	src/lgfx/v0/platforms/samd51_common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v0::FileWrapper
_file	src/lgfx/v1/misc/DataWrapper.hpp	/^    FsFile _file;$/;"	m	struct:lgfx::v1::SdFatWrapper
_file	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_file	src/lgfx/v1/platforms/esp32/common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_file	src/lgfx/v1/platforms/esp8266/common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_file	src/lgfx/v1/platforms/rp2040/common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_file	src/lgfx/v1/platforms/samd21/common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_file	src/lgfx/v1/platforms/samd51/common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_file	src/lgfx/v1/platforms/spresense/common.hpp	/^    File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_file	src/lgfx/v1/platforms/stm32/common.hpp	/^    fs::File _file;$/;"	m	struct:lgfx::v1::FileWrapper
_fill_mode	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    bool _fill_mode;$/;"	m	class:lgfx::v0::LGFX_SPI
_fill_mode	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    bool _fill_mode;$/;"	m	class:lgfx::v0::LGFX_SPI
_fill_rect	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::_fill_rect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint_fast8_t bytes)$/;"	f	class:lgfx::v1::Panel_M5HDMI
_fill_rect	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::_fill_rect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint_fast8_t bytes)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
_fill_rect_inner	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::_fill_rect_inner(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
_fillcolor	src/lgfx/v1/LGFX_Button.hpp	/^    uint32_t _fillcolor    = 0;$/;"	m	class:lgfx::v1::LGFX_Button
_filled_x	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _filled_x = 0;  \/\/ print filled position$/;"	m	class:lgfx::v0::LGFXBase
_filled_x	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _filled_x = 0;  \/\/ print filled position$/;"	m	class:lgfx::v1::LGFXBase
_fix_info	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    struct fb_fix_screeninfo _fix_info;$/;"	m	struct:lgfx::v1::Panel_fb	typeref:struct:lgfx::v1::Panel_fb::fb_fix_screeninfo
_flg_memorywrite	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    bool _flg_memorywrite = false;$/;"	m	struct:lgfx::v1::Panel_RA8875
_flg_released	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^    bool _flg_released = false;$/;"	m	struct:lgfx::v1::Touch_FT5x06
_flg_serialbus	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    bool _flg_serialbus = false;$/;"	m	struct:lgfx::v1::Panel_RA8875
_flip	src/lgfx/v1/platforms/common.hpp	/^    bool _flip = false;$/;"	m	class:lgfx::v1::FlipBuffer
_flip_buffer	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flip_buffer	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_Stream
_flip_buffer	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_I2C
_flip_buffer	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_Parallel8
_flip_buffer	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flip_buffer	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_Parallel8
_flip_buffer	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_Parallel16
_flip_buffer	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_Parallel8
_flip_buffer	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_Parallel16
_flip_buffer	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_Parallel8
_flip_buffer	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_I2C
_flip_buffer	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flip_buffer	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_I2C
_flip_buffer	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flip_buffer	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_I2C
_flip_buffer	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flip_buffer	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    SimpleBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_I2C
_flip_buffer	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flip_buffer	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flip_buffer	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    FlipBuffer _flip_buffer;$/;"	m	class:lgfx::v1::Bus_SPI
_flush	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  size_t Bus_Parallel8::_flush(size_t count, bool force)$/;"	f	class:lgfx::v1::Bus_Parallel8
_flush	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  size_t Bus_Parallel16::_flush(size_t count, bool dc)$/;"	f	class:lgfx::v1::Bus_Parallel16
_flush	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  size_t Bus_Parallel8::_flush(size_t count, bool dc)$/;"	f	class:lgfx::v1::Bus_Parallel8
_font	src/lgfx/v0/LGFXBase.hpp	/^    const IFont* _font = &fonts::Font0;$/;"	m	class:lgfx::v0::LGFXBase
_font	src/lgfx/v0/lgfx_fonts.hpp	/^    const uint8_t* _font;$/;"	m	struct:lgfx::v0::U8g2font
_font	src/lgfx/v1/LGFXBase.hpp	/^    const IFont* _font = &fonts::Font0;$/;"	m	class:lgfx::v1::LGFXBase
_font	src/lgfx/v1/lgfx_fonts.hpp	/^    const uint8_t* _font;$/;"	m	struct:lgfx::v1::U8g2font
_fontData	src/lgfx/v0/lgfx_fonts.hpp	/^    DataWrapper* _fontData = nullptr;$/;"	m	struct:lgfx::v0::VLWfont
_fontData	src/lgfx/v1/lgfx_fonts.hpp	/^    DataWrapper* _fontData = nullptr;$/;"	m	struct:lgfx::v1::RunTimeFont
_fontLoaded	src/lgfx/v0/lgfx_fonts.hpp	/^    bool _fontLoaded = false; \/\/ Flags when a anti-aliased font is loaded$/;"	m	struct:lgfx::v0::VLWfont
_fontLoaded	src/lgfx/v1/lgfx_fonts.hpp	/^    bool _fontLoaded = false;$/;"	m	struct:lgfx::v1::RunTimeFont
_font_data	src/lgfx/v0/LGFXBase.hpp	/^    PointerWrapper _font_data;$/;"	m	class:lgfx::v0::LGFXBase
_font_data	src/lgfx/v1/LGFXBase.hpp	/^    PointerWrapper _font_data;$/;"	m	class:lgfx::v1::LGFXBase
_font_file	src/lgfx/v0/LGFXBase.hpp	/^    FileWrapper* _font_file = nullptr;$/;"	m	class:lgfx::v0::LGFXBase
_font_file	src/lgfx/v1/LGFXBase.hpp	/^    std::shared_ptr<DataWrapper> _font_file;  \/\/ run-time font file$/;"	m	class:lgfx::v1::LGFXBase
_font_metrics	src/lgfx/v0/LGFXBase.hpp	/^    FontMetrics _font_metrics = { 6, 6, 0, 8, 8, 0, 7 }; \/\/ Font0 default metric$/;"	m	class:lgfx::v0::LGFXBase
_font_metrics	src/lgfx/v1/LGFXBase.hpp	/^    FontMetrics _font_metrics = { 6, 6, 0, 8, 8, 0, 7 }; \/\/ Font0 default metric$/;"	m	class:lgfx::v1::LGFXBase
_fp	src/lgfx/v0/platforms/esp32_common.hpp	/^    FILE* _fp;$/;"	m	struct:lgfx::v0::FileWrapper
_fp	src/lgfx/v0/platforms/esp32_common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v0::FileWrapper
_fp	src/lgfx/v0/platforms/esp32_common.hpp	/^    void* _fp;$/;"	m	struct:lgfx::v0::FileWrapper
_fp	src/lgfx/v0/platforms/samd51_common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v0::FileWrapper
_fp	src/lgfx/v1/misc/DataWrapper.hpp	/^    FsFile *_fp;$/;"	m	struct:lgfx::v1::SdFatWrapper
_fp	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/esp32/common.hpp	/^    FILE* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/esp32/common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/esp32/common.hpp	/^    void* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/esp8266/common.hpp	/^    FILE* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/esp8266/common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/esp8266/common.hpp	/^    void* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/framebuffer/common.hpp	/^    FILE* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/opencv/common.hpp	/^    FILE* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/rp2040/common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/samd21/common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/samd51/common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/sdl/common.hpp	/^    FILE* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/spresense/common.hpp	/^    File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/spresense/common.hpp	/^    void* _fp;$/;"	m	struct:lgfx::v1::FileWrapper
_fp	src/lgfx/v1/platforms/stm32/common.hpp	/^    fs::File *_fp;$/;"	m	struct:lgfx::v1::FileWrapper
_frame_buffer	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    DividedFrameBuffer _frame_buffer;$/;"	m	struct:lgfx::v1::Panel_HUB75
_frame_buffer	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    DividedFrameBuffer* _frame_buffer;$/;"	m	class:lgfx::v1::Bus_HUB75
_frame_buffer	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    uint8_t *_frame_buffer = nullptr;$/;"	m	class:lgfx::v1::Bus_RGB
_frame_buffer	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    uint8_t* _frame_buffer = nullptr;$/;"	m	struct:lgfx::v1::Panel_RGB
_freshConfig	src/lgfx/v1/touch/Touch_GT911.cpp	/^  void Touch_GT911::_freshConfig(void)$/;"	f	class:lgfx::v1::Touch_GT911
_fs	src/lgfx/v0/platforms/esp32_common.hpp	/^    fs::FS* _fs;$/;"	m	struct:lgfx::v0::FileWrapper
_fs	src/lgfx/v0/platforms/samd51_common.hpp	/^    fs::FS *_fs = nullptr;$/;"	m	struct:lgfx::v0::FileWrapper
_fs	src/lgfx/v1/misc/DataWrapper.hpp	/^    LGFX_SDFAT_TYPE *_fs;$/;"	m	struct:lgfx::v1::SdFatWrapper
_fs	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    fs::FS *_fs = nullptr;$/;"	m	struct:lgfx::v1::FileWrapper
_fs	src/lgfx/v1/platforms/esp32/common.hpp	/^    fs::FS* _fs;$/;"	m	struct:lgfx::v1::FileWrapper
_fs	src/lgfx/v1/platforms/esp8266/common.hpp	/^    fs::FS* _fs;$/;"	m	struct:lgfx::v1::FileWrapper
_fs	src/lgfx/v1/platforms/rp2040/common.hpp	/^    fs::FS* _fs;$/;"	m	struct:lgfx::v1::FileWrapper
_fs	src/lgfx/v1/platforms/samd21/common.hpp	/^    fs::FS *_fs = nullptr;$/;"	m	struct:lgfx::v1::FileWrapper
_fs	src/lgfx/v1/platforms/samd51/common.hpp	/^    fs::FS *_fs = nullptr;$/;"	m	struct:lgfx::v1::FileWrapper
_fs	src/lgfx/v1/platforms/spresense/common.hpp	/^    StorageClass* _fs;$/;"	m	struct:lgfx::v1::FileWrapper
_fs	src/lgfx/v1/platforms/stm32/common.hpp	/^    fs::FS *_fs = nullptr;$/;"	m	struct:lgfx::v1::FileWrapper
_fw_data	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^    const gsl_fw_data* _fw_data = nullptr;$/;"	m	struct:lgfx::v1::Touch_GSLx680
_fw_size	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^    size_t _fw_size = 0;$/;"	m	struct:lgfx::v1::Touch_GSLx680
_g8a	src/lgfx/v1/misc/colortype.hpp	/^    uint_fast16_t _g8a;$/;"	m	struct:lgfx::effect_fill_alpha
_gcd	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static inline uint32_t _gcd(uint32_t a, uint32_t b)$/;"	f	namespace:lgfx::v1
_get_buffer_length	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  size_t Panel_GDEW0154M09::_get_buffer_length(void) const$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
_get_buffer_length	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  size_t Panel_1bitOLED::_get_buffer_length(void) const$/;"	f	class:lgfx::v1::Panel_1bitOLED
_get_buffer_length	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  size_t Panel_SSD1327::_get_buffer_length(void) const$/;"	f	class:lgfx::v1::Panel_SSD1327
_get_font_metrics	src/lgfx/v0/LGFXBase.hpp	/^    FontMetrics _get_font_metrics(void) const { return _font_metrics; }$/;"	f	class:lgfx::v0::LGFXBase
_get_text_filled_x	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _get_text_filled_x(void) const { return _filled_x; }$/;"	f	class:lgfx::v0::LGFXBase
_gfx	src/lgfx/v1/LGFX_Button.hpp	/^    LovyanGFX *_gfx = nullptr;$/;"	m	class:lgfx::v1::LGFX_Button
_gpio_d0	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d0  = (gpio_num_t)get_gpio_d0 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_d1	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d1  = (gpio_num_t)get_gpio_d1 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_d2	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d2  = (gpio_num_t)get_gpio_d2 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_d3	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d3  = (gpio_num_t)get_gpio_d3 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_d4	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d4  = (gpio_num_t)get_gpio_d4 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_d5	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d5  = (gpio_num_t)get_gpio_d5 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_d6	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d6  = (gpio_num_t)get_gpio_d6 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_d7	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_d7  = (gpio_num_t)get_gpio_d7 <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_dc_mask	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    uint32_t _gpio_dc_mask;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_dummy_values	src/lgfx/v1/platforms/sdl/common.cpp	/^  static uint8_t _gpio_dummy_values[EMULATED_GPIO_MAX];$/;"	m	namespace:lgfx::v1	file:
_gpio_enable	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        bool _gpio_enable;$/;"	m	class:lgfx::v1::LGFX::_detector_base_t::_pin_backup_t
_gpio_func_out_reg	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        uint32_t _gpio_func_out_reg;$/;"	m	class:lgfx::v1::LGFX::_detector_base_t::_pin_backup_t
_gpio_low_mask	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    uint32_t _gpio_low_mask = 0;$/;"	m	class:lgfx::v1::Bus_Parallel8
_gpio_pin_init	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static void _gpio_pin_init(int pin)$/;"	f	namespace:lgfx::v1
_gpio_pin_init	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static void _gpio_pin_init(int pin)$/;"	f	namespace:lgfx::v1
_gpio_pin_init	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  static void _gpio_pin_init(int pin)$/;"	f	namespace:lgfx::v1
_gpio_pin_init	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  static void _gpio_pin_init(int pin)$/;"	f	namespace:lgfx::v1
_gpio_pin_reg	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        uint32_t _gpio_pin_reg;$/;"	m	class:lgfx::v1::LGFX::_detector_base_t::_pin_backup_t
_gpio_pin_sig	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  static void _gpio_pin_sig(uint32_t pin, uint32_t sig)$/;"	f	namespace:lgfx::v1
_gpio_rd	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_rd  = (gpio_num_t)get_gpio_rd <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_reg_dc	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc[2] = { nullptr, nullptr };$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    volatile uint32_t* _gpio_reg_dc[2] = { nullptr, nullptr };$/;"	m	class:lgfx::v1::Bus_Parallel8
_gpio_reg_dc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    volatile uint32_t* _gpio_reg_dc[2] = { nullptr, nullptr };$/;"	m	class:lgfx::v1::Bus_Parallel16
_gpio_reg_dc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    volatile uint32_t* _gpio_reg_dc[2] = { nullptr, nullptr };$/;"	m	class:lgfx::v1::Bus_Parallel8
_gpio_reg_dc	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_h	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    volatile uint32_t* _gpio_reg_dc_h;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_reg_dc_h	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    volatile uint32_t* _gpio_reg_dc_h;$/;"	m	class:lgfx::v0::LGFX_SPI
_gpio_reg_dc_h	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    volatile uint32_t* _gpio_reg_dc_h;$/;"	m	class:lgfx::v0::LGFX_SPI
_gpio_reg_dc_h	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_h;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_h	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_h;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_h	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_h;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_h	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_h;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_l	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    volatile uint32_t* _gpio_reg_dc_l;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_reg_dc_l	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    volatile uint32_t* _gpio_reg_dc_l;$/;"	m	class:lgfx::v0::LGFX_SPI
_gpio_reg_dc_l	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    volatile uint32_t* _gpio_reg_dc_l;$/;"	m	class:lgfx::v0::LGFX_SPI
_gpio_reg_dc_l	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_l;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_l	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_l;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_l	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_l;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_reg_dc_l	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    volatile uint32_t* _gpio_reg_dc_l;$/;"	m	class:lgfx::v1::Bus_SPI
_gpio_rs	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_rs  = (gpio_num_t)get_gpio_rs <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_tbl	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    uint32_t _gpio_tbl[256];$/;"	m	class:lgfx::v1::Bus_Parallel8
_gpio_wr	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr gpio_num_t _gpio_wr  = (gpio_num_t)get_gpio_wr <CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_gpio_wr_mask	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    uint32_t _gpio_wr_mask = 0;$/;"	m	class:lgfx::v1::Bus_Parallel8
_h	src/lgfx/v1/LGFX_Button.hpp	/^    uint16_t _h = 0;   \/\/ Width and height of button$/;"	m	class:lgfx::v1::LGFX_Button
_has_align_data	src/lgfx/v1/panel/Panel_Device.hpp	/^    bool _has_align_data = false;$/;"	m	struct:lgfx::v1::Panel_Device
_has_align_data	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    bool _has_align_data;$/;"	m	class:lgfx::v1::Bus_Parallel16
_has_align_data	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    bool _has_align_data;$/;"	m	class:lgfx::v1::Bus_Parallel16
_height	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _width = 0, _height = 0;$/;"	m	class:lgfx::v0::LGFXBase
_height	src/lgfx/v1/Panel.hpp	/^    uint16_t _height = 0;$/;"	m	struct:lgfx::v1::IPanel
_http	src/lgfx/v0/lgfx_filesystem_support.hpp	/^      HTTPClient _http;$/;"	m	struct:lgfx::v0::LGFX_FILESYSTEM_Support::HttpWrapper
_http	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      HTTPClient _http;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
_i2s_fifo_wr_reg	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    volatile uint32_t* _i2s_fifo_wr_reg;$/;"	m	class:lgfx::v1::Bus_Parallel8
_i2s_port	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr i2s_port_t _i2s_port = get_i2s_port<CFG, I2S_NUM_0>::value;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_i80_bus	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    esp_lcd_i80_bus_handle_t _i80_bus = nullptr;$/;"	m	class:lgfx::v1::Bus_Parallel16
_i80_bus	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    esp_lcd_i80_bus_handle_t _i80_bus = nullptr;$/;"	m	class:lgfx::v1::Bus_Parallel8
_i80_bus	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    esp_lcd_i80_bus_handle_t _i80_bus = nullptr;$/;"	m	class:lgfx::v1::Bus_RGB
_img	src/lgfx/v0/LGFX_Sprite.hpp	/^    SpriteBuffer _img;$/;"	m	class:lgfx::v0::LGFX_Sprite
_img	src/lgfx/v1/LGFX_Sprite.hpp	/^      void* _img;$/;"	m	union:lgfx::v1::LGFX_Sprite::__anon273
_img	src/lgfx/v1/LGFX_Sprite.hpp	/^    SpriteBuffer _img;$/;"	m	struct:lgfx::v1::Panel_Sprite
_img	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    uint8_t* _img;$/;"	m	struct:lgfx::v1::Panel_OpenCV
_img16	src/lgfx/v1/LGFX_Sprite.hpp	/^      uint16_t* _img16;$/;"	m	union:lgfx::v1::LGFX_Sprite::__anon273
_img24	src/lgfx/v1/LGFX_Sprite.hpp	/^      lgfx::bgr888_t* _img24;$/;"	m	union:lgfx::v1::LGFX_Sprite::__anon273
_img8	src/lgfx/v1/LGFX_Sprite.hpp	/^      uint8_t* _img8;$/;"	m	union:lgfx::v1::LGFX_Sprite::__anon273
_in_transaction	src/lgfx/v0/LGFX_Device.hpp	/^    bool _in_transaction = false;$/;"	m	class:lgfx::v0::LGFX_Device
_in_transaction	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    bool _in_transaction = false;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
_in_transaction	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    bool _in_transaction = false;$/;"	m	struct:lgfx::v1::Panel_IT8951
_in_transaction	src/lgfx/v1/panel/Panel_LCD.hpp	/^    bool _in_transaction = false;$/;"	m	struct:lgfx::v1::Panel_LCD
_in_transaction	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    bool _in_transaction = false;$/;"	m	struct:lgfx::v1::Panel_RA8875
_index	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _index;$/;"	m	class:lgfx::v0::LGFX_Sprite
_index	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t _index = 0;$/;"	m	struct:lgfx::PointerWrapper
_index	src/lgfx/v0/platforms/esp32_common.hpp	/^    uint32_t _index;$/;"	m	struct:lgfx::v0::StreamWrapper
_index	src/lgfx/v0/platforms/samd51_common.hpp	/^    uint32_t _index;$/;"	m	struct:lgfx::v0::StreamWrapper
_index	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      int32_t _index = 0;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
_index	src/lgfx/v1/misc/DataWrapper.hpp	/^    uint32_t _index = 0;$/;"	m	struct:lgfx::v1::PointerWrapper
_index	src/lgfx/v1/misc/DataWrapper.hpp	/^    uint32_t _index;$/;"	m	struct:lgfx::v1::StreamWrapper
_index	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    uint32_t _index;$/;"	m	struct:lgfx::v1::StreamWrapper
_init	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^  bool Touch_GSLx680::_init(void)$/;"	f	class:lgfx::v1::Touch_GSLx680
_init_button	src/lgfx/v1/LGFX_Button.cpp	/^  void LGFX_Button::_init_button( LovyanGFX *gfx, int16_t x, int16_t y, uint16_t w, uint16_t h$/;"	f	class:lgfx::v1::LGFX_Button
_init_frame_buffer	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  bool Panel_HUB75::_init_frame_buffer(uint_fast16_t total_width, uint_fast16_t single_height)$/;"	f	class:lgfx::v1::Panel_HUB75
_init_hitcheck	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  bool Panel_HUB75_Multi::_init_hitcheck(void)$/;"	f	class:lgfx::v1::Panel_HUB75_Multi
_init_impl	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  bool Panel_HUB75::_init_impl(uint_fast16_t width, uint_fast16_t height)$/;"	f	class:lgfx::v1::Panel_HUB75
_init_pin	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_init_pin(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
_init_pin	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_init_pin(bool read)$/;"	f	class:lgfx::v1::Bus_Parallel8
_init_pin	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_init_pin(bool read)$/;"	f	class:lgfx::v1::Bus_Parallel16
_init_pin	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_init_pin(bool read)$/;"	f	class:lgfx::v1::Bus_Parallel8
_init_pin	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_init_pin(bool read)$/;"	f	class:lgfx::v1::Bus_Parallel16
_init_pin	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_init_pin(bool read)$/;"	f	class:lgfx::v1::Bus_Parallel8
_init_resolution	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::_init_resolution(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI
_inited	src/lgfx/v0/touch/TouchCommon.hpp	/^    bool _inited = false;$/;"	m	struct:lgfx::v0::TouchCommon
_inited	src/lgfx/v1/Touch.hpp	/^    bool _inited = false;$/;"	m	struct:lgfx::v1::ITouch
_inited	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    bool _inited = false;$/;"	m	class:lgfx::v1::Bus_SPI
_initialized	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    bool _initialized = false;$/;"	m	struct:lgfx::v1::Panel_HUB75
_internal_rotation	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t _internal_rotation = 0;$/;"	m	struct:lgfx::v0::PanelCommon
_internal_rotation	src/lgfx/v1/panel/Panel_Device.hpp	/^    uint8_t _internal_rotation = 0;$/;"	m	struct:lgfx::v1::Panel_Device
_intr_handle	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    intr_handle_t _intr_handle;$/;"	m	class:lgfx::v1::Bus_RGB
_inv	src/lgfx/v1/misc/colortype.hpp	/^    uint_fast16_t _inv;$/;"	m	struct:lgfx::effect_fill_alpha
_invert	src/lgfx/v1/Panel.hpp	/^    bool _invert = false;$/;"	m	struct:lgfx::v1::IPanel
_io_mux_gpio_reg	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        uint32_t _io_mux_gpio_reg;$/;"	m	class:lgfx::v1::LGFX::_detector_base_t::_pin_backup_t
_it8951_rotation	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    uint8_t _it8951_rotation = 0;$/;"	m	struct:lgfx::v1::Panel_IT8951
_label	src/lgfx/v1/LGFX_Button.hpp	/^    char _label[12]; \/\/ Button text is 11 chars maximum unless long_name used$/;"	m	class:lgfx::v1::LGFX_Button
_last_apb_freq	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t _last_apb_freq;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_last_apb_freq	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _last_apb_freq;$/;"	m	class:lgfx::v0::LGFX_SPI
_last_apb_freq	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t _last_apb_freq;$/;"	m	class:lgfx::v0::LGFX_SPI
_last_apb_freq	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    uint32_t _last_apb_freq = -1;$/;"	m	class:lgfx::v1::Bus_SPI
_last_apb_freq	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    uint32_t _last_apb_freq = -1;$/;"	m	class:lgfx::v1::Bus_SPI
_last_apb_freq	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    uint32_t _last_apb_freq = -1;$/;"	m	class:lgfx::v1::Bus_SPI
_last_apb_freq	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    uint32_t _last_apb_freq = -1;$/;"	m	class:lgfx::v1::Bus_SPI
_last_apb_freq	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    uint32_t _last_apb_freq = -1;$/;"	m	class:lgfx::v1::Bus_SPI
_last_apb_freq	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    uint32_t _last_apb_freq = -1;$/;"	m	class:lgfx::v1::Bus_SPI
_last_apb_freq	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    uint32_t _last_apb_freq = -1;$/;"	m	class:lgfx::v1::Bus_SPI
_last_cmd	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    uint32_t _last_cmd;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_last_cmd	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    uint32_t _last_cmd;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
_last_freq_apb	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _last_freq_apb = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_last_host	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      WCHAR _last_host[256] = L"";$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
_last_press	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^    bool _last_press = false;$/;"	m	struct:lgfx::v0::Touch_STMPE610
_last_press	src/lgfx/v1/LGFX_Button.hpp	/^    bool _pressed, _last_press; \/\/ Button states$/;"	m	class:lgfx::v1::LGFX_Button
_last_press	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    bool _last_press = false;$/;"	m	struct:lgfx::v1::Touch_STMPE610
_last_update	src/lgfx/v1/touch/Touch_GT911.hpp	/^    uint32_t _last_update = 0;$/;"	m	struct:lgfx::v1::Touch_GT911
_last_us	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    uint32_t _last_us = 0;$/;"	m	struct:lgfx::v1::Panel_SSD1331
_lasttime	src/lgfx/v0/touch/Touch_GT911.hpp	/^    uint32_t _lasttime;$/;"	m	struct:lgfx::v0::Touch_GT911
_latestcolor	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    uint32_t _latestcolor = 0;$/;"	m	struct:lgfx::v1::Panel_RA8875
_len_setwindow	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t _len_setwindow;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_len_setwindow	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _len_setwindow;$/;"	m	class:lgfx::v0::LGFX_SPI
_len_setwindow	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t _len_setwindow;$/;"	m	class:lgfx::v0::LGFX_SPI
_length	src/lgfx/v0/LGFX_Sprite.hpp	/^      size_t _length;$/;"	m	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
_length	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t _length = 0;$/;"	m	struct:lgfx::PointerWrapper
_length	src/lgfx/v0/platforms/esp32_common.hpp	/^    uint32_t _length = 0;$/;"	m	struct:lgfx::v0::StreamWrapper
_length	src/lgfx/v0/platforms/samd51_common.hpp	/^    uint32_t _length = 0;$/;"	m	struct:lgfx::v0::StreamWrapper
_length	src/lgfx/v1/misc/DataWrapper.hpp	/^    uint32_t _length = 0;$/;"	m	struct:lgfx::v1::PointerWrapper
_length	src/lgfx/v1/misc/DataWrapper.hpp	/^    uint32_t _length = 0;$/;"	m	struct:lgfx::v1::StreamWrapper
_length	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    size_t _length;$/;"	m	class:lgfx::v1::SpriteBuffer
_length	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    uint32_t _length = 0;$/;"	m	struct:lgfx::v1::StreamWrapper
_length	src/lgfx/v1/platforms/common.hpp	/^    size_t _length = 0;$/;"	m	class:lgfx::v1::SimpleBuffer
_length	src/lgfx/v1/platforms/common.hpp	/^    size_t _length[2] = { 0, 0 };$/;"	m	class:lgfx::v1::FlipBuffer
_light	src/lgfx/v1/panel/Panel_Device.hpp	/^    ILight* _light = nullptr;$/;"	m	struct:lgfx::v1::Panel_Device
_light_instance	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  lgfx::Light_PWM     _light_instance;$/;"	m	class:LGFX
_light_instance	src/lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h	/^  lgfx::Light_PWM   _light_instance;$/;"	m	class:LGFX
_light_instance	src/lgfx_user/LGFX_ESP32_sample.hpp	/^  lgfx::Light_PWM     _light_instance;$/;"	m	class:LGFX
_light_instance	src/lgfx_user/LGFX_RP2040_096_Waveshare_sample.hpp	/^  lgfx::Light_PWM     _light_instance;$/;"	m	class:LGFX
_light_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    lgfx::ILight* _light_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_light_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    lgfx::ILight* _light_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_light_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    lgfx::ILight* _light_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_light_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    lgfx::ILight* _light_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_light_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    lgfx::ILight* _light_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_light_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    lgfx::ILight* _light_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_light_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    lgfx::ILight* _light_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_line_size	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    uint16_t _line_size;  \/\/ ラインひとつあたりのバイト数$/;"	m	class:lgfx::v1::DividedFrameBuffer
_lines_buffer	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    uint8_t** _lines_buffer = nullptr;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
_lines_per_chunk	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    uint8_t _lines_per_chunk = 4;$/;"	m	struct:lgfx::v1::Panel_RGB
_list_mat	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  static std::list<cvmat_info_t> _list_mat;$/;"	m	namespace:lgfx::v1	file:
_list_monitor	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  static std::list<monitor_t*> _list_monitor;$/;"	m	namespace:lgfx::v1	file:
_m	src/lgfx/v1/platforms/opencv/common.cpp	/^static std::mutex _m;$/;"	v	file:
_mask_addr	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const uint32_t _mask_addr   = 0x1F001F00;$/;"	m	class:lgfx::v1::Bus_HUB75
_mask_lat	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const uint32_t _mask_lat    = 0x00000040;$/;"	m	class:lgfx::v1::Bus_HUB75
_mask_oe	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const uint32_t _mask_oe     = 0x00800080;$/;"	m	class:lgfx::v1::Bus_HUB75
_mask_pin_a_clk	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const uint32_t _mask_pin_a_clk = 0x00000100;$/;"	m	class:lgfx::v1::Bus_HUB75
_mask_pin_b_lat	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const uint32_t _mask_pin_b_lat = 0x02000200;$/;"	m	class:lgfx::v1::Bus_HUB75
_mask_pin_c_dat	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    static constexpr const uint32_t _mask_pin_c_dat = 0x04000400;$/;"	m	class:lgfx::v1::Bus_HUB75
_mask_reg_dc	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t _mask_reg_dc;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_mask_reg_dc	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _mask_reg_dc;$/;"	m	class:lgfx::v0::LGFX_SPI
_mask_reg_dc	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t _mask_reg_dc;$/;"	m	class:lgfx::v0::LGFX_SPI
_mask_reg_dc	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    uint32_t _mask_reg_dc;$/;"	m	class:lgfx::v1::Bus_SPI
_mask_reg_dc	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _mask_reg_dc = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_mask_reg_dc	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    uint32_t _mask_reg_dc = 0;$/;"	m	class:lgfx::v1::Bus_Parallel8
_mask_reg_dc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _mask_reg_dc = 0;$/;"	m	class:lgfx::v1::Bus_Parallel16
_mask_reg_dc	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    uint32_t _mask_reg_dc = 0;$/;"	m	class:lgfx::v1::Bus_Parallel8
_mask_reg_dc	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    uint32_t _mask_reg_dc;$/;"	m	class:lgfx::v1::Bus_SPI
_mask_reg_dc	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    uint32_t _mask_reg_dc;$/;"	m	class:lgfx::v1::Bus_SPI
_mask_reg_dc	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    uint32_t _mask_reg_dc;$/;"	m	class:lgfx::v1::Bus_SPI
_mask_reg_dc_h	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    uint32_t _mask_reg_dc_h;$/;"	m	class:lgfx::v1::Bus_SPI
_mask_reg_dc_l	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    uint32_t _mask_reg_dc_l;$/;"	m	class:lgfx::v1::Bus_SPI
_need_delay	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    uint32_t _need_delay = 0;$/;"	m	struct:lgfx::v1::Panel_SSD1331
_need_wait	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static bool _need_wait;$/;"	m	class:lgfx::v0::LGFX_SPI
_need_wait	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  template <class T> bool LGFX_SPI<T>::_need_wait;$/;"	m	class:lgfx::v0::LGFX_SPI
_need_wait	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_SPI
_need_wait	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_I2C
_need_wait	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_I2C
_need_wait	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_SPI
_need_wait	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_I2C
_need_wait	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_I2C
_need_wait	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    bool _need_wait = false;$/;"	m	class:lgfx::v1::Bus_SPI
_need_wait	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_I2C
_need_wait	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    bool _need_wait = false;$/;"	m	class:lgfx::v1::Bus_SPI
_need_wait	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    int _need_wait;$/;"	m	class:lgfx::v1::Bus_SPI
_need_wait	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    bool _need_wait;$/;"	m	class:lgfx::v1::Bus_SPI
_next_dma_reset	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    static bool _next_dma_reset;$/;"	m	class:lgfx::v0::LGFX_SPI
_next_dma_reset	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^  template <class T> bool LGFX_SPI<T>::_next_dma_reset;$/;"	m	class:lgfx::v0::LGFX_SPI
_next_dma_reset	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    bool _next_dma_reset = false;$/;"	m	class:lgfx::v1::Bus_SPI
_outlinecolor	src/lgfx/v1/LGFX_Button.hpp	/^    uint32_t _outlinecolor = 0xFFFFFF;$/;"	m	class:lgfx::v1::LGFX_Button
_padding_x	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _padding_x = 0;$/;"	m	class:lgfx::v0::LGFXBase
_palette	src/lgfx/v0/LGFX_Sprite.hpp	/^    SpriteBuffer _palette;$/;"	m	class:lgfx::v0::LGFX_Sprite
_palette	src/lgfx/v1/LGFX_Sprite.hpp	/^    SpriteBuffer _palette;$/;"	m	class:lgfx::v1::LGFX_Sprite
_palette_count	src/lgfx/v0/LGFXBase.hpp	/^    uint32_t _palette_count = 0;$/;"	m	class:lgfx::v0::LGFXBase
_palette_count	src/lgfx/v1/LGFXBase.hpp	/^    uint16_t _palette_count = 0;$/;"	m	class:lgfx::v1::LGFXBase
_panel	src/lgfx/v0/LGFXBase.hpp	/^    PanelCommon* _panel = nullptr;$/;"	m	class:lgfx::v0::LGFXBase
_panel	src/lgfx/v1/LGFXBase.hpp	/^    IPanel* _panel = nullptr;$/;"	m	class:lgfx::v1::LGFXBase
_panel_handle	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    esp_lcd_panel_handle_t _panel_handle = nullptr;$/;"	m	class:lgfx::v1::Bus_RGB
_panel_height	src/lgfx/v1/LGFX_Sprite.hpp	/^    uint_fast16_t _panel_height;  \/\/ rotationしていない状態の高さ;$/;"	m	struct:lgfx::v1::Panel_Sprite
_panel_height	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    int_fast16_t _panel_height = 32;$/;"	m	class:lgfx::v1::Bus_HUB75
_panel_instance	examples/Test/build_test/main/main.cpp	/^    lgfx::Panel_SSD1306 _panel_instance;$/;"	m	class:LGFX_I2C	file:
_panel_instance	examples/Test/build_test/main/main.cpp	/^    lgfx::Panel_ST7735S _panel_instance;$/;"	m	class:LGFX	file:
_panel_instance	src/lgfx/v1_autodetect/LGFX_AutoDetect_FrameBuffer.hpp	/^    lgfx::Panel_fb _panel_instance;$/;"	m	class:lgfx::v1::LGFX
_panel_instance	src/lgfx/v1_autodetect/LGFX_AutoDetect_OpenCV.hpp	/^    lgfx::Panel_OpenCV _panel_instance;$/;"	m	class:lgfx::v1::LGFX
_panel_instance	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^    Panel_F746DISCO _panel_instance;$/;"	m	struct:lgfx::v1::LGFX
_panel_instance	src/lgfx/v1_autodetect/LGFX_AutoDetect_sdl.hpp	/^    lgfx::Panel_sdl _panel_instance;$/;"	m	class:lgfx::v1::LGFX
_panel_instance	src/lgfx_user/LGFX_ESP32S2_DSO138_Parallel8.hpp	/^  lgfx::Panel_ILI9341 _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  lgfx::Panel_ILI9488 _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h	/^  lgfx::Panel_RGB   _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_ESP32S3_wywy_ESP32HMI.h	/^    lgfx::Panel_RM68120 _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_ESP32_sample.hpp	/^  lgfx::Panel_ILI9341     _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^  Panel_ESPboy _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_ESP8266_sample.hpp	/^  lgfx::Panel_ILI9341     _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_RP2040_096_Waveshare_sample.hpp	/^  lgfx::Panel_ST7735S _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_SAMD21_sample.hpp	/^  lgfx::Panel_ILI9341     _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_SAMD51_sample.hpp	/^  lgfx::Panel_ILI9341     _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/LGFX_SPRESENSE_sample.hpp	/^  lgfx::Panel_ILI9341     _panel_instance;$/;"	m	class:LGFX
_panel_instance	src/lgfx_user/M5AtomDisplay.hpp	/^  lgfx::Panel_M5HDMI _panel_instance;$/;"	m	class:M5AtomDisplay
_panel_instance	src/lgfx_user/M5UnitLCD.hpp	/^  lgfx::Panel_M5UnitLCD _panel_instance;$/;"	m	class:M5UnitLCD
_panel_instance	src/lgfx_user/M5UnitOLED.hpp	/^  lgfx::Panel_SH110x _panel_instance;$/;"	m	class:M5UnitOLED
_panel_last	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    lgfx::PanelCommon* _panel_last = nullptr;$/;"	m	class:lgfx::v0::LGFX
_panel_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    lgfx::Panel_Device* _panel_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_panel_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    lgfx::Panel_Device* _panel_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_panel_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    lgfx::Panel_Device* _panel_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_panel_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    lgfx::Panel_Device* _panel_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_panel_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    lgfx::Panel_Device* _panel_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_panel_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    lgfx::Panel_Device* _panel_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_panel_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    lgfx::Panel_Device* _panel_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_panel_position	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    panel_position_t* _panel_position = nullptr;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_panel_position_count	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    size_t  _panel_position_count = 0;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_panel_sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    Panel_Sprite _panel_sprite;$/;"	m	class:lgfx::v1::LGFX_Sprite
_panel_width	src/lgfx/v1/LGFX_Sprite.hpp	/^    uint_fast16_t _panel_width;   \/\/ rotationしていない状態の幅;$/;"	m	struct:lgfx::v1::Panel_Sprite
_panel_width	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    int_fast16_t _panel_width = 64;$/;"	m	class:lgfx::v1::Bus_HUB75
_parent	src/lgfx/v0/LGFX_Sprite.hpp	/^    LovyanGFX* _parent;$/;"	m	class:lgfx::v0::LGFX_Sprite
_parent	src/lgfx/v1/LGFX_Sprite.hpp	/^    LovyanGFX* _parent;$/;"	m	class:lgfx::v1::LGFX_Sprite
_pin_backup_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        _pin_backup_t(int8_t pin_num)$/;"	f	class:lgfx::v1::LGFX::_detector_base_t::_pin_backup_t
_pin_backup_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      class _pin_backup_t$/;"	c	struct:lgfx::v1::LGFX::_detector_base_t
_pin_index_h	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _pin_mask_h, _pin_mask_l, _pin_index_h, _pin_index_l;$/;"	m	class:lgfx::v1::Bus_Parallel16
_pin_index_l	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _pin_mask_h, _pin_mask_l, _pin_index_h, _pin_index_l;$/;"	m	class:lgfx::v1::Bus_Parallel16
_pin_level	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static void _pin_level(int_fast16_t pin, bool level)$/;"	f	class:lgfx::v1::LGFX
_pin_level	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    static void _pin_level(int_fast16_t pin, bool level)$/;"	f	class:lgfx::v1::LGFX
_pin_level	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static void _pin_level(int_fast16_t pin, bool level)$/;"	f	class:lgfx::v1::LGFX
_pin_level	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      static void _pin_level(int_fast16_t pin, bool level)$/;"	f	struct:lgfx::v1::LGFX::_detector_base_t
_pin_level	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    static void _pin_level(int_fast16_t pin, bool level)$/;"	f	class:lgfx::v1::LGFX
_pin_level	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    static void _pin_level(int_fast16_t pin, bool level)$/;"	f	class:lgfx::v1::LGFX
_pin_mask_h	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _pin_mask_h, _pin_mask_l, _pin_index_h, _pin_index_l;$/;"	m	class:lgfx::v1::Bus_Parallel16
_pin_mask_l	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t _pin_mask_h, _pin_mask_l, _pin_index_h, _pin_index_l;$/;"	m	class:lgfx::v1::Bus_Parallel16
_pin_num	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        gpio_num_t _pin_num;$/;"	m	class:lgfx::v1::LGFX::_detector_base_t::_pin_backup_t
_pin_read	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    static bool _pin_read(int_fast16_t pin)$/;"	f	class:lgfx::v1::LGFX
_pin_reset	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static void _pin_reset(int_fast16_t pin, bool use_reset)$/;"	f	class:lgfx::v1::LGFX
_pin_reset	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    static void _pin_reset(int_fast16_t pin, bool use_reset)$/;"	f	class:lgfx::v1::LGFX
_pin_reset	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static void _pin_reset(int_fast16_t pin, bool use_reset)$/;"	f	class:lgfx::v1::LGFX
_pin_reset	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      static void _pin_reset(int_fast16_t pin, bool use_reset)$/;"	f	struct:lgfx::v1::LGFX::_detector_base_t
_pin_reset	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    static void _pin_reset(int_fast16_t pin, bool use_reset)$/;"	f	class:lgfx::v1::LGFX
_pin_reset	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    static void _pin_reset(int_fast16_t pin, bool use_reset)$/;"	f	class:lgfx::v1::LGFX
_pixel_tbl	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    uint32_t* _pixel_tbl;$/;"	m	class:lgfx::v1::Bus_HUB75
_pngle_ihdr_t	src/lgfx/utility/lgfx_pngle.h	/^typedef struct __attribute__((packed)) _pngle_ihdr_t {$/;"	s
_pngle_t	src/lgfx/utility/lgfx_pngle.c	/^struct _pngle_t {$/;"	s	file:
_pressed	src/lgfx/v1/LGFX_Button.hpp	/^    bool _pressed, _last_press; \/\/ Button states$/;"	m	class:lgfx::v1::LGFX_Button
_psram	src/lgfx/v0/LGFX_Sprite.hpp	/^    bool _psram = false;$/;"	m	class:lgfx::v0::LGFX_Sprite
_psram	src/lgfx/v1/LGFX_Sprite.hpp	/^    bool _psram = false;$/;"	m	class:lgfx::v1::LGFX_Sprite
_ptr	src/lgfx/v0/lgfx_common.hpp	/^    const uint8_t* _ptr;$/;"	m	struct:lgfx::PointerWrapper
_ptr	src/lgfx/v1/misc/DataWrapper.hpp	/^    const uint8_t* _ptr = nullptr;$/;"	m	struct:lgfx::v1::PointerWrapper
_push_idx	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t _push_idx;    \/\/ 新規予約代入先インデクス;$/;"	m	class:lgfx::v1::scanline_cache_t	file:
_qoi_desc_t	src/lgfx/utility/lgfx_qoi.c	/^typedef struct __attribute__((packed)) _qoi_desc_t$/;"	s	file:
_qoi_t	src/lgfx/utility/lgfx_qoi.c	/^struct _qoi_t$/;"	s	file:
_r8a	src/lgfx/v1/misc/colortype.hpp	/^    uint_fast16_t _r8a;$/;"	m	struct:lgfx::effect_fill_alpha
_range_mod	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    range_rect_t _range_mod;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
_range_new	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    range_rect_t _range_new;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
_range_new	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    range_rect_t _range_new;$/;"	m	struct:lgfx::v0::Panel_IT8951
_range_new	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    range_rect_t _range_new;$/;"	m	struct:lgfx::v1::Panel_IT8951
_range_old	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    range_rect_t _range_old;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
_range_old	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    range_rect_t _range_old;$/;"	m	struct:lgfx::v0::Panel_IT8951
_range_old	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    range_rect_t _range_old;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
_range_old	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    range_rect_t _range_old;$/;"	m	struct:lgfx::v1::Panel_IT8951
_raw_color	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    uint32_t _raw_color = ~0u;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_raw_color	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    uint32_t _raw_color = ~0u;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
_read_attrib	src/lgfx/v1/Panel.hpp	/^        uint8_t _read_attrib;$/;"	m	struct:lgfx::v1::IPanel::__anon271::__anon272
_read_bits	src/lgfx/v1/Panel.hpp	/^        uint8_t _read_bits;$/;"	m	struct:lgfx::v1::IPanel::__anon271::__anon272
_read_bytes	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_read_bytes(uint8_t* __restrict dst, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
_read_bytes	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_read_bytes(uint8_t* dst, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
_read_bytes	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_read_bytes(uint8_t* dst, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel16
_read_bytes	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_read_bytes(uint8_t* dst, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
_read_bytes	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_read_bytes(uint8_t* dst, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel16
_read_bytes	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_read_bytes(uint8_t* dst, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
_read_cmd	src/lgfx/v1/touch/Touch_NS2009.cpp	/^  int Touch_NS2009::_read_cmd(uint8_t reg)$/;"	f	class:lgfx::v1::Touch_NS2009
_read_conv	src/lgfx/v0/LGFXBase.hpp	/^    color_conv_t _read_conv;$/;"	m	class:lgfx::v0::LGFXBase
_read_conv	src/lgfx/v1/LGFXBase.hpp	/^    color_conv_t _read_conv;$/;"	m	class:lgfx::v1::LGFXBase
_read_data	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  size_t Touch_FT5x06::_read_data(uint8_t* readdata)$/;"	f	class:lgfx::v1::Touch_FT5x06
_read_depth	src/lgfx/v1/Panel.hpp	/^      color_depth_t _read_depth  = color_depth_t::rgb565_2Byte;$/;"	m	union:lgfx::v1::IPanel::__anon271
_read_panel_id	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static uint32_t _read_panel_id(lgfx::Bus_SPI* bus, int32_t pin_cs, uint32_t cmd = 0x04, uint8_t dummy_read_bit = 1) \/\/ 0x04 = RDDID command$/;"	f	class:lgfx::v1::LGFX
_read_panel_id	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    static uint32_t _read_panel_id(lgfx::Bus_SPI* bus, int32_t pin_cs, uint32_t cmd = 0x04, uint8_t dummy_read_bit = 1) \/\/ 0x04 = RDDID command$/;"	f	class:lgfx::v1::LGFX
_read_panel_id	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static uint32_t _read_panel_id(lgfx::Bus_SPI* bus, int32_t pin_cs, uint32_t cmd = 0x04, uint8_t dummy_read_bit = 1) \/\/ 0x04 = RDDID command$/;"	f	class:lgfx::v1::LGFX
_read_panel_id	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      static uint32_t _read_panel_id(lgfx::IBus* bus, int32_t pin_cs, uint_fast16_t cmd = 0x04, uint8_t dummy_read_bit = 1) \/\/ 0x04 = RDDID command$/;"	f	struct:lgfx::v1::LGFX::_detector_base_t
_read_panel_id	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    static uint32_t _read_panel_id(lgfx::Bus_SPI* bus, int_fast16_t pin_cs, uint32_t cmd = 0x04, uint8_t dummy_read_bit = 1) \/\/ 0x04 = RDDID command$/;"	f	class:lgfx::v1::LGFX
_read_panel_id	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    static uint32_t _read_panel_id(lgfx::Bus_SPI* bus, int_fast16_t pin_cs, uint32_t cmd = 0x04, uint8_t dummy_read_bit = 1) \/\/ 0x04 = RDDID command$/;"	f	class:lgfx::v1::LGFX
_read_pixel	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    bool _read_pixel(int32_t x, int32_t y)$/;"	f	struct:lgfx::v0::Panel_GDEW0154M09
_read_pixel	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  bool Panel_GDEW0154M09::_read_pixel(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
_read_pixel	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  bool Panel_1bitOLED::_read_pixel(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_1bitOLED
_read_pixel	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  uint8_t Panel_SSD1327::_read_pixel(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_SSD1327
_read_pixel_inner	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    virtual uint32_t _read_pixel_inner(uint_fast16_t x, uint_fast16_t y) { return 0; }$/;"	f	struct:lgfx::v1::Panel_FlexibleFrameBuffer
_read_pixel_inner	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  uint32_t Panel_HUB75::_read_pixel_inner(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_HUB75
_read_pixel_inner	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  uint32_t Panel_HUB75_Multi::_read_pixel_inner(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_HUB75_Multi
_read_raw_line	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_read_raw_line(int32_t raw_x, int32_t raw_y, int32_t len, uint16_t* __restrict buf)$/;"	f	class:lgfx::v1::Panel_IT8951
_read_reg	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  bool Touch_FT5x06::_read_reg(uint8_t reg, uint8_t *data, size_t length)$/;"	f	class:lgfx::v1::Touch_FT5x06
_read_words	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_read_words(uint16_t *buf, uint32_t length)$/;"	f	class:lgfx::v1::Panel_IT8951
_readdata	src/lgfx/v0/touch/Touch_GT911.hpp	/^    uint8_t _readdata[42];$/;"	m	struct:lgfx::v0::Touch_GT911
_readdata	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^    uint8_t _readdata[44] = {0}; \/\/ 10point * 4byte + 4byte$/;"	m	struct:lgfx::v1::Touch_GSLx680
_readdata	src/lgfx/v1/touch/Touch_GT911.hpp	/^    uint8_t _readdata[max_touch_points * 8 + 2]; \/\/ 5point * 8byte + 2byte$/;"	m	struct:lgfx::v1::Touch_GT911
_readdata	src/lgfx/v1/touch/Touch_TT21xxx.hpp	/^    uint8_t _readdata[36] = {0}; \/\/ 3point * 10byte + 6byte$/;"	m	struct:lgfx::v1::Touch_TT21xxx
_refresh_msec	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    static constexpr unsigned long _refresh_msec = 320;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
_refresh_msec	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    static constexpr unsigned long _refresh_msec = 320;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
_refresh_rate	src/lgfx/v0/touch/Touch_GT911.hpp	/^    uint32_t _refresh_rate = 5;$/;"	m	struct:lgfx::v0::Touch_GT911
_refresh_rate	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    float _refresh_rate = 60.0f;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_refresh_rate	src/lgfx/v1/touch/Touch_GT911.hpp	/^    uint32_t _refresh_rate = 5;$/;"	m	struct:lgfx::v1::Touch_GT911
_reg_0x51	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    uint8_t _reg_0x51[16] = {0};$/;"	m	struct:lgfx::v1::Panel_RA8875
_reg_store	src/lgfx/v1/platforms/esp32/common.cpp	/^      uint32_t _reg_store[22];$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
_regbuf	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static uint32_t _regbuf[8];$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_regbuf	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^  template <class T> uint32_t LGFX_PARALLEL<T>::_regbuf[];$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_reset	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    void _reset(bool use_reset) {$/;"	f	class:lgfx::v0::LGFX
_retaddr	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t* _retaddr;       \/\/ 44 A0保管用$/;"	m	struct:lgfx::v1::asm_work_t	file:
_rotate_pixelcopy	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::_rotate_pixelcopy(uint_fast16_t& x, uint_fast16_t& y, uint_fast16_t& w, uint_fast16_t& h, pixelcopy_t* param, uint32_t& nextx, uint32_t& nexty)$/;"	f	class:lgfx::v1::Panel_Sprite
_rotate_pixelcopy	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::_rotate_pixelcopy(uint_fast16_t& x, uint_fast16_t& y, uint_fast16_t& w, uint_fast16_t& h, pixelcopy_t* param, uint32_t& nextx, uint32_t& nexty)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
_rotate_pixelcopy	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::_rotate_pixelcopy(uint_fast16_t& x, uint_fast16_t& y, uint_fast16_t& w, uint_fast16_t& h, pixelcopy_t* param, uint32_t& nextx, uint32_t& nexty)$/;"	f	class:lgfx::v1::Panel_M5HDMI
_rotate_pixelcopy	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::_rotate_pixelcopy(uint_fast16_t& x, uint_fast16_t& y, uint_fast16_t& w, uint_fast16_t& h, pixelcopy_t* param, uint32_t& nextx, uint32_t& nexty)$/;"	f	class:lgfx::v1::Panel_fb
_rotate_pixelcopy	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::_rotate_pixelcopy(uint_fast16_t& x, uint_fast16_t& y, uint_fast16_t& w, uint_fast16_t& h, pixelcopy_t* param, uint32_t& nextx, uint32_t& nexty)$/;"	f	class:lgfx::v1::Panel_OpenCV
_rotate_pixelcopy	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::_rotate_pixelcopy(uint_fast16_t& x, uint_fast16_t& y, uint_fast16_t& w, uint_fast16_t& h, pixelcopy_t* param, uint32_t& nextx, uint32_t& nexty)$/;"	f	class:lgfx::v1::Panel_sdl
_rotate_pos	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::_rotate_pos(uint_fast16_t &x, uint_fast16_t &y)$/;"	f	class:lgfx::v1::Panel_HasBuffer
_rotate_pos	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::_rotate_pos(uint_fast16_t &xs, uint_fast16_t &ys, uint_fast16_t &xe, uint_fast16_t &ye)$/;"	f	class:lgfx::v1::Panel_HasBuffer
_rotation	src/lgfx/v1/Panel.hpp	/^    uint8_t _rotation = 0;$/;"	m	struct:lgfx::v1::IPanel
_rowstart	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast16_t _rowstart = 0;$/;"	m	struct:lgfx::v0::PanelCommon
_rowstart	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint_fast16_t _rowstart;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_rowstart	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint_fast16_t _rowstart;$/;"	m	class:lgfx::v0::LGFX_SPI
_rowstart	src/lgfx/v1/panel/Panel_LCD.hpp	/^    uint16_t _rowstart = 0;$/;"	m	struct:lgfx::v1::Panel_LCD
_rowstart	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    uint16_t _rowstart = 0;$/;"	m	struct:lgfx::v1::Panel_RA8875
_runtime_font	src/lgfx/v0/LGFXBase.hpp	/^    std::shared_ptr<RunTimeFont> _runtime_font;  \/\/ run-time generated font$/;"	m	class:lgfx::v0::LGFXBase
_runtime_font	src/lgfx/v1/LGFXBase.hpp	/^    std::shared_ptr<RunTimeFont> _runtime_font;  \/\/ run-time generated font$/;"	m	class:lgfx::v1::LGFXBase
_sample_rate_conf_reg_16bit	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr uint32_t _sample_rate_conf_reg_16bit = 16 << I2S_TX_BITS_MOD_S | 16 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_sample_rate_conf_reg_16bit	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr uint32_t _sample_rate_conf_reg_16bit = 16 << I2S_TX_BITS_MOD_S | 16 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_sample_rate_conf_reg_16bit	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr uint32_t _sample_rate_conf_reg_16bit = 16 << I2S_TX_BITS_MOD_S | 16 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_sample_rate_conf_reg_32bit	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static constexpr uint32_t _sample_rate_conf_reg_32bit = 32 << I2S_TX_BITS_MOD_S | 32 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_sample_rate_conf_reg_32bit	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static constexpr uint32_t _sample_rate_conf_reg_32bit = 32 << I2S_TX_BITS_MOD_S | 32 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_sample_rate_conf_reg_8bit	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static constexpr uint32_t _sample_rate_conf_reg_8bit = 8 << I2S_TX_BITS_MOD_S | 8 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_sample_rate_conf_reg_bufferd	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr uint32_t _sample_rate_conf_reg_bufferd = 32 << I2S_TX_BITS_MOD_S | 32 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_sample_rate_conf_reg_direct	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static constexpr uint32_t _sample_rate_conf_reg_direct = 16 << I2S_TX_BITS_MOD_S | 16 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_sample_rate_conf_reg_direct	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static constexpr uint32_t _sample_rate_conf_reg_direct = 16 << I2S_TX_BITS_MOD_S | 16 << I2S_RX_BITS_MOD_S | 1 << I2S_TX_BCK_DIV_NUM_S | 1 << I2S_RX_BCK_DIV_NUM_S;$/;"	m	namespace:lgfx::v1	file:
_scale_h	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    uint8_t _scale_h = 1;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_scale_w	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    uint8_t _scale_w = 1;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_scanline_cache	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static scanline_cache_t _scanline_cache;$/;"	m	namespace:lgfx::v1	file:
_screensize	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    long int _screensize = 0;$/;"	m	struct:lgfx::v1::Panel_fb
_send_align_data	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_send_align_data(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
_send_msec	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    unsigned long _send_msec = 0;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
_send_msec	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    unsigned long _send_msec = 0;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
_send_sd_dummy_clock	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static void _send_sd_dummy_clock(int spi_host, int_fast16_t pin_cs)$/;"	f	class:lgfx::v1::LGFX
_send_sd_dummy_clock	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static void _send_sd_dummy_clock(int spi_host, int_fast16_t pin_cs)$/;"	f	class:lgfx::v1::LGFX
_send_sd_dummy_clock	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      static void _send_sd_dummy_clock(int spi_host, int_fast16_t pin_cs)$/;"	f	struct:lgfx::v1::LGFX::_detector_base_t
_sercom	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static Sercom* _sercom;$/;"	m	class:lgfx::v0::LGFX_SPI
_sercom	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  template <class T> Sercom* LGFX_SPI<T>::_sercom;$/;"	m	class:lgfx::v0::LGFX_SPI
_sercom	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    Sercom* _sercom = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_sercom	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    Sercom* _sercom = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_set_area	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_set_area( uint32_t x, uint32_t y, uint32_t w, uint32_t h)$/;"	f	class:lgfx::v1::Panel_IT8951
_set_backlight	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    void _set_backlight(ILight* bl)$/;"	f	class:lgfx::v1::LGFX
_set_backlight	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    void _set_backlight(ILight* bl)$/;"	f	class:lgfx::v1::LGFX
_set_backlight	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    void _set_backlight(ILight* bl)$/;"	f	class:lgfx::v1::LGFX
_set_pwm_backlight	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    void _set_pwm_backlight(int16_t pin, uint8_t ch, uint32_t freq = 12000, bool invert = false)$/;"	f	class:lgfx::v1::LGFX
_set_pwm_backlight	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    void _set_pwm_backlight(int16_t pin, uint8_t ch, uint32_t freq = 12000, bool invert = false)$/;"	f	class:lgfx::v1::LGFX
_set_pwm_backlight	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    void _set_pwm_backlight(int16_t pin, uint8_t ch, uint32_t freq = 12000, bool invert = false)$/;"	f	class:lgfx::v1::LGFX
_set_sd_spimode	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static void _set_sd_spimode(int spi_host, int_fast16_t pin_cs)$/;"	f	class:lgfx::v1::LGFX
_set_sd_spimode	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static void _set_sd_spimode(int spi_host, int_fast16_t pin_cs)$/;"	f	class:lgfx::v1::LGFX
_set_sd_spimode	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      static void _set_sd_spimode(int spi_host, int_fast16_t pin_cs)$/;"	f	struct:lgfx::v1::LGFX::_detector_base_t
_set_target_memory_addr	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_set_target_memory_addr(uint32_t tar_addr)$/;"	f	class:lgfx::v1::Panel_IT8951
_set_text_filled_x	src/lgfx/v0/LGFXBase.hpp	/^    void _set_text_filled_x(int32_t x) { _filled_x = x; }$/;"	f	class:lgfx::v0::LGFXBase
_set_video_timing	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::_set_video_timing(const video_timing_t::info_t* param, uint8_t command)$/;"	f	class:lgfx::v1::Panel_M5HDMI
_set_window	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::_set_window(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye, uint_fast8_t cmd_write)$/;"	f	class:lgfx::v1::Panel_M5HDMI
_set_window	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::_set_window(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
_set_write_pos	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::_set_write_pos(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_RA8875
_setup_dma_desc_links	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void _setup_dma_desc_links(const uint8_t *data, int32_t len)$/;"	f	class:lgfx::v0::LGFX_SPI
_setup_dma_desc_links	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void _setup_dma_desc_links(const uint8_t *data, int32_t w, int32_t h, int32_t width)$/;"	f	class:lgfx::v0::LGFX_SPI
_setup_dma_desc_links	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void _setup_dma_desc_links(uint8_t** data, int32_t w, int32_t h, bool endless)$/;"	f	class:lgfx::v0::LGFX_SPI
_setup_dma_desc_links	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::_setup_dma_desc_links(const uint8_t *data, int32_t len)$/;"	f	class:lgfx::v1::Bus_SPI
_setup_dma_desc_links	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_setup_dma_desc_links(const uint8_t *data, int32_t len)$/;"	f	class:lgfx::v1::Bus_Parallel16
_setup_dma_desc_links	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_setup_dma_desc_links(const uint8_t *data, int32_t len)$/;"	f	class:lgfx::v1::Bus_Parallel8
_setup_dma_desc_links	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_setup_dma_desc_links(const uint8_t *data, int32_t len)$/;"	f	class:lgfx::v1::Bus_Parallel16
_setup_dma_desc_links	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_setup_dma_desc_links(const uint8_t *data, int32_t len)$/;"	f	class:lgfx::v1::Bus_Parallel8
_sh	src/lgfx/v0/LGFXBase.hpp	/^    int32_t  _sx, _sy, _sw, _sh; \/\/ for scroll zone$/;"	m	class:lgfx::v0::LGFXBase
_sh	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _sx = 0, _sy = 0, _sw = 0, _sh = 0; \/\/ for scroll zone$/;"	m	class:lgfx::v1::LGFXBase
_signal_spec_info	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static signal_spec_info_t _signal_spec_info;$/;"	m	namespace:lgfx::v1	file:
_single_height	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint16_t _single_height;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_single_width	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint16_t _single_width;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_slice_num	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^    uint8_t _slice_num;$/;"	m	class:lgfx::v1::Light_PWM
_socket	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      SOCKET _socket;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
_source	src/lgfx/v0/LGFX_Sprite.hpp	/^      AllocationSource _source;$/;"	m	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
_source	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    AllocationSource _source;$/;"	m	class:lgfx::v1::SpriteBuffer
_spiHal	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    SPI_HandleTypeDef _spiHal;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_cmd_reg	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    volatile uint32_t* _spi_cmd_reg;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_cmd_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _spi_cmd_reg = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_dev	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  spi_inst_t * Bus_SPI::_spi_dev[] = {$/;"	m	class:lgfx::v1::Bus_SPI	file:
_spi_dev	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    static spi_inst_t * _spi_dev[];$/;"	m	class:lgfx::v1::Bus_SPI
_spi_dev	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    spi_dev_s* _spi_dev;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_dev_handle	src/lgfx/v1/platforms/esp32/common.cpp	/^    static spi_device_handle_t _spi_dev_handle[spi_periph_num] = {nullptr};$/;"	m	namespace:lgfx::v1::spi	file:
_spi_dlen	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    int _spi_dlen = get_spi_dlen<CFG,  8>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_dlen	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static constexpr int _spi_dlen = get_spi_dlen<CFG,  8>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_dma_out_link_reg	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    volatile uint32_t* _spi_dma_out_link_reg;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_dma_out_link_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _spi_dma_out_link_reg = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_dma_outstatus_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _spi_dma_outstatus_reg = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_dma_reset	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::_spi_dma_reset(void)$/;"	f	class:lgfx::v1::Bus_SPI
_spi_handle	src/lgfx/v0/platforms/esp32_common.cpp	/^    static spi_t* _spi_handle[VSPI_HOST + 1] = {nullptr};$/;"	m	namespace:lgfx::v0::spi	file:
_spi_handle	src/lgfx/v1/platforms/esp32/common.cpp	/^    static spi_t* _spi_handle[spi_periph_num] = {nullptr};$/;"	m	namespace:lgfx::v1::spi	file:
_spi_host	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    spi_host_device_t _spi_host;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_miso	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    int _spi_miso = get_spi_miso<CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_miso	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static constexpr int _spi_miso = get_spi_miso<CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_mode	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^    int _spi_mode = 0;$/;"	m	struct:lgfx::v0::Touch_STMPE610
_spi_mode	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    int _spi_mode = 0;$/;"	m	struct:lgfx::v1::Touch_STMPE610
_spi_mosi	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    int _spi_mosi = get_spi_mosi<CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_mosi	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static constexpr int _spi_mosi = get_spi_mosi<CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_mosi_dlen_reg	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    volatile uint32_t* _spi_mosi_dlen_reg;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_mosi_dlen_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _spi_mosi_dlen_reg = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_port	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint8_t _spi_port;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_port	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint8_t _spi_port = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_reg_dr	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    volatile uint32_t* _spi_reg_dr;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_reg_sr	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    volatile uint32_t* _spi_reg_sr;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_regs	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    volatile spi_hw_t * _spi_regs;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_sclk	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    int _spi_sclk = get_spi_sclk<CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_sclk	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    static constexpr int _spi_sclk = get_spi_sclk<CFG, -1>::value;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_shared	src/lgfx/v0/LGFXBase.hpp	/^    bool _spi_shared = true;$/;"	m	class:lgfx::v0::LGFXBase
_spi_user_reg	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    volatile uint32_t* _spi_user_reg;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_user_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _spi_user_reg = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_spi_w0_reg	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    volatile uint32_t* _spi_w0_reg;$/;"	m	class:lgfx::v0::LGFX_SPI
_spi_w0_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    volatile uint32_t* _spi_w0_reg = nullptr;$/;"	m	class:lgfx::v1::Bus_SPI
_spibase	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    uintptr_t _spibase;$/;"	m	class:lgfx::v1::Bus_SPI
_src	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    const uint8_t* _src[cache_num] = { nullptr }; \/\/ キューアドレス(memcpy元アドレス)$/;"	m	class:lgfx::v1::scanline_cache_t	file:
_sspcr0_mask_16bit	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    uint32_t _sspcr0_mask_16bit;$/;"	m	class:lgfx::v1::Bus_SPI
_sspcr0_mask_8bit	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    uint32_t _sspcr0_mask_8bit;$/;"	m	class:lgfx::v1::Bus_SPI
_start_count	src/lgfx/v1/Panel.hpp	/^    uint32_t _start_count = 0;$/;"	m	struct:lgfx::v1::IPanel
_start_memorywrite	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::_start_memorywrite(void)$/;"	f	class:lgfx::v1::Panel_RA8875
_started	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    bool _started = false;$/;"	m	struct:lgfx::v1::Panel_CVBS
_state	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    state_t _state = state_none;$/;"	m	class:lgfx::v1::Bus_I2C
_state	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    state_t _state = state_none;$/;"	m	class:lgfx::v1::Bus_I2C
_state	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    state_t _state = state_none;$/;"	m	class:lgfx::v1::Bus_I2C
_state	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    state_t _state = state_none;$/;"	m	class:lgfx::v1::Bus_I2C
_state	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    state_t _state = state_none;$/;"	m	class:lgfx::v1::Bus_I2C
_stream	src/lgfx/v0/platforms/esp32_common.hpp	/^    Stream* _stream;$/;"	m	struct:lgfx::v0::StreamWrapper
_stream	src/lgfx/v0/platforms/samd51_common.hpp	/^    Stream* _stream;$/;"	m	struct:lgfx::v0::StreamWrapper
_stream	src/lgfx/v1/misc/DataWrapper.hpp	/^    Stream* _stream;$/;"	m	struct:lgfx::v1::StreamWrapper
_stream	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    Stream* _stream;$/;"	m	struct:lgfx::v1::StreamWrapper
_sw	src/lgfx/v0/LGFXBase.hpp	/^    int32_t  _sx, _sy, _sw, _sh; \/\/ for scroll zone$/;"	m	class:lgfx::v0::LGFXBase
_sw	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _sx = 0, _sy = 0, _sw = 0, _sh = 0; \/\/ for scroll zone$/;"	m	class:lgfx::v1::LGFXBase
_swapBytes	src/lgfx/v0/LGFXBase.hpp	/^    bool _swapBytes = false;$/;"	m	class:lgfx::v0::LGFXBase
_swapBytes	src/lgfx/v1/LGFXBase.hpp	/^    bool _swapBytes = false;$/;"	m	class:lgfx::v1::LGFXBase
_sx	src/lgfx/v0/LGFXBase.hpp	/^    int32_t  _sx, _sy, _sw, _sh; \/\/ for scroll zone$/;"	m	class:lgfx::v0::LGFXBase
_sx	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _sx = 0, _sy = 0, _sw = 0, _sh = 0; \/\/ for scroll zone$/;"	m	class:lgfx::v1::LGFXBase
_sy	src/lgfx/v0/LGFXBase.hpp	/^    int32_t  _sx, _sy, _sw, _sh; \/\/ for scroll zone$/;"	m	class:lgfx::v0::LGFXBase
_sy	src/lgfx/v1/LGFXBase.hpp	/^    int32_t _sx = 0, _sy = 0, _sw = 0, _sh = 0; \/\/ for scroll zone$/;"	m	class:lgfx::v1::LGFXBase
_tar_memaddr	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  static constexpr uint32_t _tar_memaddr = 0x001236E0;$/;"	m	namespace:lgfx::v0	file:
_tar_memaddr	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    uint32_t _tar_memaddr = 0;$/;"	m	struct:lgfx::v1::Panel_IT8951
_task_handle	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    TaskHandle_t _task_handle = nullptr;$/;"	m	class:lgfx::v1::scanline_cache_t	file:
_tc	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    Tc* _tc = nullptr;$/;"	m	struct:lgfx::v1::Light_TC
_tc	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    Tc* _tc = nullptr;$/;"	m	struct:lgfx::v1::Light_TC
_tcc	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    Tcc* _tcc = nullptr;$/;"	m	struct:lgfx::v1::Light_TCC
_tck_reg	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      volatile uint32_t *_tck_reg[2];$/;"	m	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
_tdi_reg	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      volatile uint32_t *_tdi_reg[2];$/;"	m	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
_text_style	src/lgfx/v0/LGFXBase.hpp	/^    TextStyle _text_style;$/;"	m	class:lgfx::v0::LGFXBase
_text_style	src/lgfx/v1/LGFXBase.hpp	/^    TextStyle _text_style;$/;"	m	class:lgfx::v1::LGFXBase
_textcolor	src/lgfx/v1/LGFX_Button.hpp	/^    uint32_t _textcolor    = 0xFFFFFF;$/;"	m	class:lgfx::v1::LGFX_Button
_textdatum	src/lgfx/v1/LGFX_Button.hpp	/^    textdatum_t _textdatum = middle_center; \/\/ Text size multiplier and text datum for button$/;"	m	class:lgfx::v1::LGFX_Button
_textscroll	src/lgfx/v0/LGFXBase.hpp	/^    bool _textscroll = false;$/;"	m	class:lgfx::v0::LGFXBase
_textscroll	src/lgfx/v1/LGFXBase.hpp	/^    bool _textscroll = false;$/;"	m	class:lgfx::v1::LGFXBase
_textsize_x	src/lgfx/v1/LGFX_Button.hpp	/^    float _textsize_x, _textsize_y;$/;"	m	class:lgfx::v1::LGFX_Button
_textsize_y	src/lgfx/v1/LGFX_Button.hpp	/^    float _textsize_x, _textsize_y;$/;"	m	class:lgfx::v1::LGFX_Button
_textwrap_x	src/lgfx/v0/LGFXBase.hpp	/^    bool _textwrap_x = true;$/;"	m	class:lgfx::v0::LGFXBase
_textwrap_x	src/lgfx/v1/LGFXBase.hpp	/^    bool _textwrap_x = true;$/;"	m	class:lgfx::v1::LGFXBase
_textwrap_y	src/lgfx/v0/LGFXBase.hpp	/^    bool _textwrap_y = false;$/;"	m	class:lgfx::v0::LGFXBase
_textwrap_y	src/lgfx/v1/LGFXBase.hpp	/^    bool _textwrap_y = false;$/;"	m	class:lgfx::v1::LGFXBase
_timing_params	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    timing_params_t _timing_params;$/;"	m	namespace:lgfx::v1
_tm	src/lgfx/v1/platforms/opencv/common.cpp	/^static cv::TickMeter _tm;$/;"	v	file:
_tms_reg	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      volatile uint32_t *_tms_reg[2];$/;"	m	class:lgfx::v1::Panel_M5HDMI::LOAD_FPGA
_total_lines	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    uint16_t _total_lines; \/\/ 全体のライン数$/;"	m	class:lgfx::v1::DividedFrameBuffer
_total_send	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    size_t _total_send = 0;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_touch	src/lgfx/v0/LGFXBase.hpp	/^    TouchCommon* _touch = nullptr;$/;"	m	class:lgfx::v0::LGFXBase
_touch	src/lgfx/v1/panel/Panel_Device.hpp	/^    ITouch* _touch = nullptr;$/;"	m	struct:lgfx::v1::Panel_Device
_touch_affine	src/lgfx/v0/LGFX_Device.hpp	/^    float _touch_affine[6] = {1,0,0,0,1,0};$/;"	m	class:lgfx::v0::LGFX_Device
_touch_instance	examples/Test/build_test/main/main.cpp	/^    lgfx::Touch_FT5x06  _touch_instance;$/;"	m	class:LGFX_I2C	file:
_touch_instance	src/lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h	/^  lgfx::Touch_GT911 _touch_instance;$/;"	m	class:LGFX
_touch_instance	src/lgfx_user/LGFX_ESP32S3_wywy_ESP32HMI.h	/^    lgfx::Touch_FT5x06 _touch_instance;$/;"	m	class:LGFX
_touch_instance	src/lgfx_user/LGFX_ESP32_sample.hpp	/^  lgfx::Touch_FT5x06           _touch_instance; \/\/ FT5206, FT5306, FT5406, FT6206, FT6236, FT6336, FT6436$/;"	m	class:LGFX
_touch_instance_ptr	src/lgfx_user/LGFX_ESP32S2_MakerabsParallelTFTwithTouch.hpp	/^  lgfx::ITouch*  _touch_instance_ptr = nullptr;$/;"	m	class:LGFX
_touch_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    lgfx::ITouch* _touch_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_touch_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    lgfx::ITouch* _touch_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_touch_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    lgfx::ITouch* _touch_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_touch_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    lgfx::ITouch* _touch_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_touch_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    lgfx::ITouch* _touch_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_touch_last	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    lgfx::ITouch* _touch_last = nullptr;$/;"	m	class:lgfx::v1::LGFX
_touch_point	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    touch_point_t _touch_point;$/;"	m	struct:lgfx::v1::Panel_fb
_touch_point	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    touch_point_t _touch_point;$/;"	m	struct:lgfx::v1::Panel_OpenCV
_touch_point	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    touch_point_t _touch_point;$/;"	m	struct:lgfx::v1::Panel_sdl
_transaction_count	src/lgfx/v0/LGFXBase.hpp	/^    uint32_t _transaction_count = 0;$/;"	m	class:lgfx::v0::LGFXBase
_unicode_buffer	src/lgfx/v0/LGFXBase.hpp	/^    uint_fast16_t _unicode_buffer = 0;   \/\/ Unicode code-point buffer$/;"	m	class:lgfx::v0::LGFXBase
_unicode_buffer	src/lgfx/v1/LGFXBase.hpp	/^    uint16_t _unicode_buffer = 0;   \/\/ Unicode code-point buffer$/;"	m	class:lgfx::v1::LGFXBase
_update_data	src/lgfx/v1/touch/Touch_GT911.cpp	/^  bool Touch_GT911::_update_data(void)$/;"	f	class:lgfx::v1::Touch_GT911
_update_raw_area	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_update_raw_area(epd_update_mode_t mode)$/;"	f	class:lgfx::v1::Panel_IT8951
_update_transferred_rect	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::_update_transferred_rect(LGFX_Device* gfx, int32_t &xs, int32_t &ys, int32_t &xe, int32_t &ye)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
_update_transferred_rect	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::_update_transferred_rect(uint_fast16_t &xs, uint_fast16_t &ys, uint_fast16_t &xe, uint_fast16_t &ye)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
_update_transferred_rect	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::_update_transferred_rect(uint_fast16_t &xs, uint_fast16_t &ys, uint_fast16_t &xe, uint_fast16_t &ye)$/;"	f	class:lgfx::v1::Panel_1bitOLED
_update_transferred_rect	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::_update_transferred_rect(uint_fast16_t &xs, uint_fast16_t &ys, uint_fast16_t &xe, uint_fast16_t &ye)$/;"	f	class:lgfx::v1::Panel_SSD1327
_user	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t _user;$/;"	m	class:lgfx::v0::LGFX_SPI
_user_reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t _user_reg = 0;$/;"	m	class:lgfx::v1::Bus_SPI
_using_idx	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t _using_idx;   \/\/ 使用中インデクス;$/;"	m	class:lgfx::v1::scanline_cache_t	file:
_var_info	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    struct fb_var_screeninfo _var_info;$/;"	m	struct:lgfx::v1::Panel_fb	typeref:struct:lgfx::v1::Panel_fb::fb_var_screeninfo
_vcom	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    uint16_t _vcom = 0;$/;"	m	struct:lgfx::v1::Panel_IT8951
_w	src/lgfx/v1/LGFX_Button.hpp	/^    uint16_t _w = 0;   \/\/ Width and height of button$/;"	m	class:lgfx::v1::LGFX_Button
_wait	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
_wait	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::_wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
_wait	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::_wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
_wait_busy	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  bool Panel_GDEW0154M09::_wait_busy(uint32_t timeout)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
_wait_busy	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  bool Panel_GDEW0154M09::_wait_busy(uint32_t timeout)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
_wait_busy	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_wait_busy(uint32_t timeout)$/;"	f	class:lgfx::v1::Panel_IT8951
_wait_busy	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  bool Panel_RA8875::_wait_busy(uint32_t timeout)$/;"	f	class:lgfx::v1::Panel_RA8875
_width	src/lgfx/v0/LGFXBase.hpp	/^    int32_t _width = 0, _height = 0;$/;"	m	class:lgfx::v0::LGFXBase
_width	src/lgfx/v1/Panel.hpp	/^    uint16_t _width = 0;$/;"	m	struct:lgfx::v1::IPanel
_window_name	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    char _window_name[32];$/;"	m	struct:lgfx::v1::Panel_OpenCV
_window_no	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  static int _window_no;$/;"	m	namespace:lgfx::v1	file:
_writeBytes	src/lgfx/v1/touch/Touch_GT911.cpp	/^  bool Touch_GT911::_writeBytes(const uint8_t* data, size_t len)$/;"	f	class:lgfx::v1::Touch_GT911
_writeReadBytes	src/lgfx/v1/touch/Touch_GT911.cpp	/^  bool Touch_GT911::_writeReadBytes(const uint8_t* write_data, size_t write_len, uint8_t* read_data, size_t read_len)$/;"	f	class:lgfx::v1::Touch_GT911
_write_args	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_write_args(uint16_t cmd, uint16_t *args, int32_t length)$/;"	f	class:lgfx::v1::Panel_IT8951
_write_attrib	src/lgfx/v1/Panel.hpp	/^        uint8_t _write_attrib;$/;"	m	struct:lgfx::v1::IPanel::__anon269::__anon270
_write_bits	src/lgfx/v1/Panel.hpp	/^        uint8_t _write_bits;$/;"	m	struct:lgfx::v1::IPanel::__anon269::__anon270
_write_command	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_write_command(uint16_t cmd)$/;"	f	class:lgfx::v1::Panel_IT8951
_write_conv	src/lgfx/v0/LGFXBase.hpp	/^    color_conv_t _write_conv;$/;"	m	class:lgfx::v0::LGFXBase
_write_conv	src/lgfx/v1/LGFXBase.hpp	/^    color_conv_t _write_conv;$/;"	m	class:lgfx::v1::LGFXBase
_write_depth	src/lgfx/v1/Panel.hpp	/^      color_depth_t _write_depth = color_depth_t::rgb565_2Byte;$/;"	m	union:lgfx::v1::IPanel::__anon269
_write_reg	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_write_reg(uint16_t addr, uint16_t data)$/;"	f	class:lgfx::v1::Panel_IT8951
_write_reg	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::_write_reg(uint8_t reg, uint8_t data)$/;"	f	class:lgfx::v1::Panel_RA8875
_write_reg	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  bool Touch_FT5x06::_write_reg(uint8_t reg, uint8_t val)$/;"	f	class:lgfx::v1::Touch_FT5x06
_write_reg_0x51	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::_write_reg_0x51(uint8_t reg, uint8_t data)$/;"	f	class:lgfx::v1::Panel_RA8875
_write_word	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::_write_word(uint16_t data)$/;"	f	class:lgfx::v1::Panel_IT8951
_x	src/lgfx/v1/LGFX_Button.hpp	/^    int16_t  _x = 0; \/\/ Coordinates of top-left corner of button$/;"	m	class:lgfx::v1::LGFX_Button
_x_hitcheck_mask	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint32_t _x_hitcheck_mask[8];$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_x_hitcheck_shift	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint8_t _x_hitcheck_shift = 0;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_xd	src/lgfx/v1/LGFX_Button.hpp	/^    int16_t  _xd = 0; \/\/ Button text datum offsets (wrt centre of button)$/;"	m	class:lgfx::v1::LGFX_Button
_xe	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _xe;$/;"	m	class:lgfx::v0::LGFX_Sprite
_xe	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast16_t _xe = ~0;$/;"	m	struct:lgfx::v0::PanelCommon
_xe	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint_fast16_t _xe;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_xe	src/lgfx/v1/Panel.hpp	/^        uint16_t _xe;$/;"	m	struct:lgfx::v1::IPanel::__anon265::__anon266
_xpivot	src/lgfx/v0/LGFXBase.hpp	/^    float _xpivot;   \/\/ x pivot point coordinate$/;"	m	class:lgfx::v0::LGFXBase
_xpivot	src/lgfx/v1/LGFXBase.hpp	/^    float _xpivot = 0.0f;   \/\/ x pivot point coordinate$/;"	m	class:lgfx::v1::LGFXBase
_xpos	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    int32_t _xpos = 0;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
_xpos	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    uint_fast16_t _xpos = 0;$/;"	m	struct:lgfx::v0::Panel_IT8951
_xpos	src/lgfx/v1/LGFX_Sprite.hpp	/^    uint_fast16_t _xpos;$/;"	m	struct:lgfx::v1::Panel_Sprite
_xpos	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    uint16_t _xpos, _ypos;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
_xpos	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    uint16_t _xpos, _ypos;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
_xpos	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    int32_t _xpos = 0;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
_xpos	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    uint16_t _xpos = 0;$/;"	m	struct:lgfx::v1::Panel_IT8951
_xpos	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    uint32_t _xpos;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_xpos	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    uint32_t _xpos;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
_xpos	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    uint16_t _xpos = UINT16_MAX;$/;"	m	struct:lgfx::v1::Panel_RA8875
_xpos	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    int32_t _xpos = 0;$/;"	m	struct:lgfx::v1::Panel_fb
_xpos	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    int32_t _xpos = 0;$/;"	m	struct:lgfx::v1::Panel_OpenCV
_xpos	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    int32_t _xpos = 0;$/;"	m	struct:lgfx::v1::Panel_sdl
_xptr	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _xptr;$/;"	m	class:lgfx::v0::LGFX_Sprite
_xs	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _xs;$/;"	m	class:lgfx::v0::LGFX_Sprite
_xs	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast16_t _xs = ~0;$/;"	m	struct:lgfx::v0::PanelCommon
_xs	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint_fast16_t _xs;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_xs	src/lgfx/v1/Panel.hpp	/^        uint16_t _xs;$/;"	m	struct:lgfx::v1::IPanel::__anon265::__anon266
_xsxe	src/lgfx/v1/Panel.hpp	/^      uint32_t _xsxe = ~0;$/;"	m	union:lgfx::v1::IPanel::__anon265
_y	src/lgfx/v1/LGFX_Button.hpp	/^    int16_t  _y = 0; \/\/ Coordinates of top-left corner of button$/;"	m	class:lgfx::v1::LGFX_Button
_y_hitcheck_mask	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint32_t _y_hitcheck_mask[8];$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_y_hitcheck_shift	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint8_t _y_hitcheck_shift = 0;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
_yd	src/lgfx/v1/LGFX_Button.hpp	/^    int16_t  _yd = 0; \/\/ Button text datum offsets (wrt centre of button)$/;"	m	class:lgfx::v1::LGFX_Button
_ye	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _ye;$/;"	m	class:lgfx::v0::LGFX_Sprite
_ye	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast16_t _ye = ~0;$/;"	m	struct:lgfx::v0::PanelCommon
_ye	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint_fast16_t _ye;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_ye	src/lgfx/v1/Panel.hpp	/^        uint16_t _ye;$/;"	m	struct:lgfx::v1::IPanel::__anon267::__anon268
_ypivot	src/lgfx/v0/LGFXBase.hpp	/^    float _ypivot;   \/\/ x pivot point coordinate$/;"	m	class:lgfx::v0::LGFXBase
_ypivot	src/lgfx/v1/LGFXBase.hpp	/^    float _ypivot = 0.0f;   \/\/ x pivot point coordinate$/;"	m	class:lgfx::v1::LGFXBase
_ypos	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    int32_t _ypos = 0;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
_ypos	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    uint_fast16_t _ypos = 0;$/;"	m	struct:lgfx::v0::Panel_IT8951
_ypos	src/lgfx/v1/LGFX_Sprite.hpp	/^    uint_fast16_t _ypos;$/;"	m	struct:lgfx::v1::Panel_Sprite
_ypos	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    uint16_t _xpos, _ypos;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
_ypos	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    uint16_t _xpos, _ypos;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
_ypos	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    int32_t _ypos = 0;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
_ypos	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    uint16_t _ypos = 0;$/;"	m	struct:lgfx::v1::Panel_IT8951
_ypos	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    uint32_t _ypos;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
_ypos	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    uint32_t _ypos;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
_ypos	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    uint16_t _ypos = UINT16_MAX;$/;"	m	struct:lgfx::v1::Panel_RA8875
_ypos	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    int32_t _ypos = 0;$/;"	m	struct:lgfx::v1::Panel_fb
_ypos	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    int32_t _ypos = 0;$/;"	m	struct:lgfx::v1::Panel_OpenCV
_ypos	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    int32_t _ypos = 0;$/;"	m	struct:lgfx::v1::Panel_sdl
_yptr	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _yptr;$/;"	m	class:lgfx::v0::LGFX_Sprite
_ys	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t _ys;$/;"	m	class:lgfx::v0::LGFX_Sprite
_ys	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast16_t _ys = ~0;$/;"	m	struct:lgfx::v0::PanelCommon
_ys	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint_fast16_t _ys;$/;"	m	class:lgfx::v0::LGFX_PARALLEL
_ys	src/lgfx/v1/Panel.hpp	/^        uint16_t _ys;$/;"	m	struct:lgfx::v1::IPanel::__anon267::__anon268
_ysye	src/lgfx/v1/Panel.hpp	/^      uint32_t _ysye = ~0;$/;"	m	union:lgfx::v1::IPanel::__anon267
a	src/lgfx/utility/lgfx_qoi.c	/^  struct { unsigned char a, r, g, b; } rgba;$/;"	m	struct:__anon548::__anon549	file:
a	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t a;$/;"	m	struct:lgfx::v0::argb8888_t::__anon492::__anon493
a	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t a;$/;"	m	struct:lgfx::v0::bgra8888_t::__anon498::__anon499
a	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t a;$/;"	m	struct:lgfx::v1::argb8888_t::__anon34::__anon35
a	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t a;$/;"	m	struct:lgfx::v1::bgra8888_t::__anon42::__anon43
active	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        uint16_t active;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::video_timing_t::info_t
active_start	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t active_start;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
addDMAQueue	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::addDMAQueue(const uint8_t* data, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
add_x	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^int32_t add_x = 0;$/;"	v
add_x	examples_for_PC/CMake_OpenCV/user_code.cpp	/^int32_t add_x = 0;$/;"	v
add_x	examples_for_PC/CMake_SDL/user_code.cpp	/^int32_t add_x = 0;$/;"	v
add_y	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^int32_t add_y = 0;$/;"	v
add_y	examples_for_PC/CMake_OpenCV/user_code.cpp	/^int32_t add_y = 0;$/;"	v
add_y	examples_for_PC/CMake_SDL/user_code.cpp	/^int32_t add_y = 0;$/;"	v
address_binary	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        address_binary,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::address_mode_t
address_mode	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      address_mode_t address_mode = address_binary;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t
address_mode_t	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      enum address_mode_t$/;"	g	struct:lgfx::v1::Bus_HUB75::config_t
address_shiftreg	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        address_shiftreg,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::address_mode_t
adler	src/lgfx/utility/miniz.c	/^  mz_ulong adler;                   \/\/ adler32 of the source or uncompressed data$/;"	m	struct:mz_stream_s	file:
adler32	src/lgfx/utility/miniz.c	/^  #define adler32 /;"	d	file:
alloc_func	src/lgfx/utility/miniz.c	/^  #define alloc_func /;"	d	file:
alloc_pool	src/lgfx/utility/lgfx_tjpgd.c	/^static uint8_t* alloc_pool (	\/* Pointer to allocated memory block (NULL:no memory available) *\/$/;"	f	file:
alloca	src/lgfx/utility/lgfx_qrcode.c	/^#define alloca /;"	d	file:
alloca	src/lgfx/v0/LGFXBase.cpp	/^#define alloca /;"	d	file:
alloca	src/lgfx/v1/Panel.hpp	/^#define alloca /;"	d
alloca	src/lgfx/v1/lgfx_filesystem_support.hpp	/^ #define alloca /;"	d
alloca	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^#define alloca /;"	d	file:
allocated_list	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t* allocated_list = nullptr;  \/\/ フレームバッファのalloc割当対象のインデクス番号(free時に使用);$/;"	m	struct:lgfx::v1::internal_t	file:
allow_key_revoke	src/lgfx/v1/platforms/esp32/common.cpp	/^     bool allow_key_revoke;$/;"	m	struct:ets_secure_boot_key_digests	file:
apll_sdm	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint32_t apll_sdm;            \/\/ apllのクロック設定;$/;"	m	struct:lgfx::v1::signal_setup_info_t	file:
app_main	examples/Test/build_test/main/main.cpp	/^  void app_main()$/;"	f
applyMask	src/lgfx/utility/lgfx_qrcode.c	/^static void applyMask(BitBucket *modules, BitBucket *isFunction, uint8_t mask) {$/;"	f	file:
argb8888_t	src/lgfx/v0/lgfx_common.hpp	/^    argb8888_t() : raw(0) {}$/;"	f	struct:lgfx::v0::argb8888_t
argb8888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr argb8888_t(uint32_t argb8888) : raw(argb8888) {}$/;"	f	struct:lgfx::v0::argb8888_t
argb8888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr argb8888_t(uint8_t r, uint8_t g, uint8_t b) : b(b),g(g),r(r),a(255) {}$/;"	f	struct:lgfx::v0::argb8888_t
argb8888_t	src/lgfx/v0/lgfx_common.hpp	/^  struct argb8888_t {$/;"	s	namespace:lgfx::v0
argb8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr argb8888_t(uint32_t argb8888) : raw(argb8888) {}$/;"	f	struct:lgfx::v1::argb8888_t
argb8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr argb8888_t(uint8_t a8, uint8_t r8, uint8_t g8, uint8_t b8) : b(b8), g(g8), r(r8), a(a8) {}$/;"	f	struct:lgfx::v1::argb8888_t
argb8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr argb8888_t(uint8_t r8, uint8_t g8, uint8_t b8) : b(b8), g(g8), r(r8), a(255) {}$/;"	f	struct:lgfx::v1::argb8888_t
argb8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr argb8888_t(void) : raw(0) {}$/;"	f	struct:lgfx::v1::argb8888_t
argb8888_t	src/lgfx/v1/misc/colortype.hpp	/^  struct argb8888_t$/;"	s	namespace:lgfx::v1
ascent	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t  ascent;     \/\/ Height of top of 'd' above baseline, other characters may be taller$/;"	m	struct:lgfx::v0::VLWfont
ascent	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t  ascent;     \/\/ Height of top of 'd' above baseline, other characters may be taller$/;"	m	struct:lgfx::v1::VLWfont
ascent_A	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t ascent_A    (void) const { return _font[13]; }$/;"	f	struct:lgfx::v0::U8g2font
ascent_A	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t ascent_A    (void) const { return pgm_read_byte(&_font[13]); }$/;"	f	struct:lgfx::v1::U8g2font
ascent_para	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t ascent_para (void) const { return _font[15]; }$/;"	f	struct:lgfx::v0::U8g2font
ascent_para	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t ascent_para (void) const { return pgm_read_byte(&_font[15]); }$/;"	f	struct:lgfx::v1::U8g2font
asm_work_t	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  struct asm_work_t$/;"	s	namespace:lgfx::v1	file:
atof	src/lgfx/internal/algorithm.h	/^  #undef atof$/;"	d
atof	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) double atof(const char* nptr) { return strtod((nptr), NULL); }$/;"	f
atoi	src/lgfx/internal/algorithm.h	/^  #undef atoi$/;"	d
atoi	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) int atoi(const char* nptr) { return (int)strtol((nptr), NULL, 10); }$/;"	f
atol	src/lgfx/internal/algorithm.h	/^  #undef atol$/;"	d
atol	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) long atol(const char* nptr) { return strtol((nptr), NULL, 10); }$/;"	f
attribute	src/lgfx/v0/lgfx_common.hpp	/^  namespace attribute$/;"	n	namespace:lgfx::v0
attribute	src/lgfx/v1/misc/enum.hpp	/^  namespace attribute$/;"	n	namespace:lgfx::v1
attribute_t	src/lgfx/v0/lgfx_common.hpp	/^    enum attribute_t$/;"	g	namespace:lgfx::v0::attribute
attribute_t	src/lgfx/v1/misc/enum.hpp	/^    enum attribute_t$/;"	g	namespace:lgfx::v1::attribute
autodetect	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    bool autodetect(bool use_reset = true)$/;"	f	class:lgfx::v0::LGFX
autodetect	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    board_t autodetect(bool use_reset = true, board_t board = board_t::board_unknown)$/;"	f	class:lgfx::v1::LGFX
autodetect	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    board_t autodetect(bool use_reset = true, board_t board = board_t::board_unknown)$/;"	f	class:lgfx::v1::LGFX
autodetect	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    board_t autodetect(bool use_reset = true, board_t board = board_t::board_unknown)$/;"	f	class:lgfx::v1::LGFX
autodetect	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    board_t autodetect(bool use_reset = true, board_t board = board_t::board_unknown)$/;"	f	class:lgfx::v1::LGFX
autodetect	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    board_t autodetect(bool use_reset = true, board_t board = board_t::board_unknown)$/;"	f	class:lgfx::v1::LGFX
autodetect	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    board_t autodetect(bool use_reset = true, board_t board = board_t::board_unknown)$/;"	f	class:lgfx::v1::LGFX
autodetect	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    board_t autodetect(bool use_reset = true, board_t board = board_t::board_unknown)$/;"	f	class:lgfx::v1::LGFX
avail_in	src/lgfx/utility/miniz.c	/^  unsigned int avail_in;            \/\/ number of bytes available at next_in$/;"	m	struct:mz_stream_s	file:
avail_out	src/lgfx/utility/lgfx_pngle.c	/^  size_t  avail_out;$/;"	m	struct:_pngle_t	file:
avail_out	src/lgfx/utility/miniz.c	/^  unsigned int avail_out;           \/\/ number of bytes that can be written to next_out$/;"	m	struct:mz_stream_s	file:
aw9523_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static constexpr int_fast16_t aw9523_i2c_addr = 0x58;  \/\/ AW9523B$/;"	m	namespace:lgfx::v1::m5stack
aw9523_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t aw9523_i2c_addr = 0x58;  \/\/ AW9523B$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_addr	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr uint_fast8_t axp_i2c_addr = 0x34;$/;"	m	struct:lgfx::v0::Panel_M5StackCore2
axp_i2c_addr	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr uint_fast8_t axp_i2c_addr = 0x34;$/;"	m	struct:lgfx::v0::Panel_M5StickC
axp_i2c_addr	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr uint_fast8_t axp_i2c_addr = 0x34;$/;"	m	struct:lgfx::v0::Panel_M5StickCPlus
axp_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_addr = 0x35;  \/\/ axp202 addr$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr uint_fast8_t axp_i2c_addr = 0x34;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static constexpr int_fast16_t axp_i2c_addr = 0x34;     \/\/ AXP2101$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t axp_i2c_addr = 0x34;     \/\/ AXP2101$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t axp_i2c_addr = 0x35;  \/\/ axp202 addr$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_addr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr uint_fast8_t axp_i2c_addr = 0x34;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_freq	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int32_t axp_i2c_freq = 400000;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_freq	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int32_t axp_i2c_freq = 400000;$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_freq	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int32_t axp_i2c_freq = 400000;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_freq	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int32_t axp_i2c_freq = 400000;$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_port	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_port = I2C_NUM_1;$/;"	m	struct:lgfx::v0::Panel_M5StackCore2
axp_i2c_port	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_port = I2C_NUM_1;$/;"	m	struct:lgfx::v0::Panel_M5StickC
axp_i2c_port	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_port = I2C_NUM_1;$/;"	m	struct:lgfx::v0::Panel_M5StickCPlus
axp_i2c_port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_port = I2C_NUM_0;$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_port = I2C_NUM_1;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t axp_i2c_port = I2C_NUM_0;$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t axp_i2c_port = I2C_NUM_1;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_scl	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_scl = 22;$/;"	m	struct:lgfx::v0::Panel_M5StackCore2
axp_i2c_scl	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_scl = 22;$/;"	m	struct:lgfx::v0::Panel_M5StickC
axp_i2c_scl	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_scl = 22;$/;"	m	struct:lgfx::v0::Panel_M5StickCPlus
axp_i2c_scl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_scl = GPIO_NUM_22;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_scl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_scl = GPIO_NUM_22;$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_scl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr gpio_num_t axp_i2c_scl = GPIO_NUM_22;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_scl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t axp_i2c_scl = GPIO_NUM_22;$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_sda	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_sda = 21;$/;"	m	struct:lgfx::v0::Panel_M5StackCore2
axp_i2c_sda	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_sda = 21;$/;"	m	struct:lgfx::v0::Panel_M5StickC
axp_i2c_sda	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_sda = 21;$/;"	m	struct:lgfx::v0::Panel_M5StickCPlus
axp_i2c_sda	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_sda = GPIO_NUM_21;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_sda	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    static constexpr int_fast16_t axp_i2c_sda = GPIO_NUM_21;$/;"	m	struct:lgfx::v1::Light_TWatch
axp_i2c_sda	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr gpio_num_t axp_i2c_sda = GPIO_NUM_21;$/;"	m	namespace:lgfx::v1::m5stack
axp_i2c_sda	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t axp_i2c_sda = GPIO_NUM_21;$/;"	m	struct:lgfx::v1::Light_TWatch
b	src/lgfx/utility/lgfx_qoi.c	/^  struct { unsigned char a, r, g, b; } rgba;$/;"	m	struct:__anon548::__anon549	file:
b	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t b: 5;$/;"	m	struct:lgfx::v0::rgb565_t::__anon488::__anon489
b	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t b:5;$/;"	m	struct:lgfx::v0::swap565_t::__anon494::__anon495
b	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t b: 2;$/;"	m	struct:lgfx::v0::rgb332_t::__anon486::__anon487
b	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v0::argb8888_t::__anon492::__anon493
b	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v0::bgr888_t::__anon496::__anon497
b	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v0::bgra8888_t::__anon498::__anon499
b	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v0::rgb888_t::__anon490::__anon491
b	src/lgfx/v0/lgfx_common.hpp	/^      uint8_t b;$/;"	m	union:lgfx::v0::grayscale_t::__anon500
b	src/lgfx/v0/lgfx_common.hpp	/^    uint8_t b;$/;"	m	struct:lgfx::v0::bgr666_t
b	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v1::argb8888_t::__anon34::__anon35
b	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v1::bgr888_t::__anon40::__anon41
b	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v1::bgra8888_t::__anon42::__anon43
b	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t b;$/;"	m	struct:lgfx::v1::rgb888_t::__anon32::__anon33
b	src/lgfx/v1/misc/colortype.hpp	/^      uint8_t b;$/;"	m	union:lgfx::v1::grayscale_t::__anon44
b	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t b;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon51
b2	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t b2: 2;$/;"	m	struct:lgfx::v1::rgb332_t::__anon28::__anon29
b5	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t b5: 5;$/;"	m	struct:lgfx::v1::rgb565_t::__anon30::__anon31
b5	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t b5:5;$/;"	m	struct:lgfx::v1::swap565_t::__anon36::__anon37
b6	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t b6;$/;"	m	struct:lgfx::v1::bgr666_t::__anon38::__anon39
back_porch	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        uint16_t back_porch;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::video_timing_t::info_t
back_rgb888	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t back_rgb888 = 0;$/;"	m	struct:lgfx::TextStyle
back_rgb888	src/lgfx/v1/lgfx_fonts.hpp	/^    uint32_t back_rgb888 = 0;$/;"	m	struct:lgfx::v1::TextStyle
back_rgb888	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t back_rgb888 = 0;         \/\/ for copy_gray$/;"	m	struct:lgfx::v1::pixelcopy_t
backlight_level	src/lgfx/v0/panel/PanelCommon.hpp	/^    bool backlight_level = true;      \/\/ turn ON back-light backlight level (true = high \/ false = low)$/;"	m	struct:lgfx::v0::PanelCommon
bad_result_access	src/lgfx/utility/result.hpp	/^    auto operator=(bad_result_access&& other) -> bad_result_access& = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::bad_result_access
bad_result_access	src/lgfx/utility/result.hpp	/^    auto operator=(const bad_result_access& other) -> bad_result_access& = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::bad_result_access
bad_result_access	src/lgfx/utility/result.hpp	/^  class bad_result_access : public std::logic_error$/;"	c	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
bad_result_access	src/lgfx/utility/result.hpp	/^RESULT_NS_IMPL::bad_result_access<E>::bad_result_access($/;"	f	class:RESULT_NS_IMPL::bad_result_access
bad_result_access	src/lgfx/utility/result.hpp	/^RESULT_NS_IMPL::bad_result_access<E>::bad_result_access(E2&& error)$/;"	f	class:RESULT_NS_IMPL::bad_result_access
base	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t base;$/;"	m	struct:lgfx::v0::EncodeRange
base	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t base;$/;"	m	struct:lgfx::v1::EncodeRange
baseline	src/lgfx/v0/lgfx_fonts.hpp	/^    const uint8_t baseline;$/;"	m	struct:lgfx::v0::BaseFont
baseline	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t baseline;$/;"	m	struct:lgfx::v0::FontMetrics
baseline	src/lgfx/v1/lgfx_fonts.hpp	/^    const uint8_t baseline;$/;"	m	struct:lgfx::v1::BaseFont
baseline	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t baseline;$/;"	m	struct:lgfx::v1::FontMetrics
baseline_f16	src/lgfx/Fonts/Font16.h	/^#define baseline_f16 /;"	d
baseline_f32	src/lgfx/Fonts/Font32rle.h	/^#define baseline_f32 /;"	d
baseline_f64	src/lgfx/Fonts/Font64rle.h	/^#define baseline_f64 /;"	d
baseline_f72	src/lgfx/Fonts/Font72rle.h	/^#define baseline_f72 /;"	d
baseline_f72	src/lgfx/Fonts/Font72x53rle.h	/^#define baseline_f72 /;"	d
baseline_f7s	src/lgfx/Fonts/Font7srle.h	/^#define baseline_f7s /;"	d
baudrate	src/lgfx/v1/platforms/samd51/common.cpp	/^      uint32_t baudrate;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
bb_appendBits	src/lgfx/utility/lgfx_qrcode.c	/^static bool bb_appendBits(BitBucket *bitBuffer, uint32_t val, uint8_t length) {$/;"	f	file:
bb_getBit	src/lgfx/utility/lgfx_qrcode.c	/^static bool bb_getBit(BitBucket *bitGrid, uint_fast8_t x, uint_fast8_t y) {$/;"	f	file:
bb_getBufferSizeBytes	src/lgfx/utility/lgfx_qrcode.c	/^static uint16_t bb_getBufferSizeBytes(uint32_t bits) {$/;"	f	file:
bb_getGridSizeBytes	src/lgfx/utility/lgfx_qrcode.c	/^static uint16_t bb_getGridSizeBytes(uint8_t size) {$/;"	f	file:
bb_initBuffer	src/lgfx/utility/lgfx_qrcode.c	/^static void bb_initBuffer(BitBucket *bitBuffer, uint8_t *data, int32_t capacityBytes) {$/;"	f	file:
bb_initGrid	src/lgfx/utility/lgfx_qrcode.c	/^static void bb_initGrid(BitBucket *bitGrid, uint8_t *data, uint8_t size) {$/;"	f	file:
bb_invertBit	src/lgfx/utility/lgfx_qrcode.c	/^static void bb_invertBit(BitBucket *bitGrid, uint_fast8_t x, uint_fast8_t y, bool invert) {$/;"	f	file:
bb_setBit	src/lgfx/utility/lgfx_qrcode.c	/^static void bb_setBit(BitBucket *bitGrid, uint_fast8_t x, uint_fast8_t y, bool on) {$/;"	f	file:
bbx_mode	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bbx_mode  (void) const { return _font[1]; }$/;"	f	struct:lgfx::v0::U8g2font
bbx_mode	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bbx_mode  (void) const { return pgm_read_byte(&_font[1]); }$/;"	f	struct:lgfx::v1::U8g2font
begin	src/lgfx/v0/LGFXBase.cpp	/^    bool begin( LGFXBase* gfx$/;"	f	struct:lgfx::v0::image_info_t
begin	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void begin(void) { init_impl(); }$/;"	f	class:lgfx::v0::LGFX_PARALLEL
begin	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void begin(int sclk, int miso, int mosi, spi_host_device_t host = LGFX_SPI_DEFAULT) { init(sclk, miso, mosi, host); }$/;"	f	class:lgfx::v0::LGFX_SPI
begin	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void begin(void) { init_impl(); }$/;"	f	class:lgfx::v0::LGFX_SPI
begin	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void begin(void) { init_impl(); }$/;"	f	class:lgfx::v0::LGFX_SPI
begin	src/lgfx/v1/LGFXBase.cpp	/^    bool begin( LGFXBase* gfx_$/;"	f	struct:lgfx::v1::image_info_t
begin	src/lgfx/v1/LGFXBase.hpp	/^    bool begin(void)              { return init_impl(true , true); };$/;"	f	class:lgfx::v1::LGFX_Device
begin	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    bool begin(size_t line_width)$/;"	f	class:lgfx::v1::scanline_cache_t
beginRead	src/lgfx/v1/Bus.hpp	/^    virtual void beginRead(uint_fast8_t dummy_bits) { beginRead(); if (dummy_bits) { readData(dummy_bits); } }$/;"	f	struct:lgfx::v1::IBus
beginRead	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::beginRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginRead	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::beginRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
beginRead	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(uint_fast8_t dummy_bits)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::beginRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
beginRead	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::beginRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
beginRead	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::beginRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
beginRead	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::beginRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
beginRead	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::beginRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
beginRead	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::beginRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginRead	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::beginRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginRead	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::beginRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginRead	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::beginRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginRead	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(uint_fast8_t dummy_bits)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginRead	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::beginRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void beginTransaction(void) { beginTransaction_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
beginTransaction	src/lgfx/v0/platforms/esp32_common.cpp	/^    void beginTransaction(int spi_host)$/;"	f	namespace:lgfx::v0::spi
beginTransaction	src/lgfx/v0/platforms/esp32_common.cpp	/^    void beginTransaction(int spi_host, int spi_cs, int freq, int spi_mode)$/;"	f	namespace:lgfx::v0::spi
beginTransaction	src/lgfx/v0/platforms/samd51_common.cpp	/^    void beginTransaction(int) {}$/;"	f	namespace:lgfx::v0::spi
beginTransaction	src/lgfx/v0/platforms/samd51_common.cpp	/^    void beginTransaction(int, int, int, int) {}$/;"	f	namespace:lgfx::v0::spi
beginTransaction	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void beginTransaction(void)              { _panel->beginTransaction(); }$/;"	f	class:lgfx::v1::LGFXBase
beginTransaction	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::beginTransaction(void)$/;"	f	class:lgfx::v1::Panel_HasBuffer
beginTransaction	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::beginTransaction(void)$/;"	f	class:lgfx::v1::Panel_IT8951
beginTransaction	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::beginTransaction(void)$/;"	f	class:lgfx::v1::Panel_LCD
beginTransaction	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::beginTransaction(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI
beginTransaction	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::beginTransaction(void)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
beginTransaction	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::beginTransaction(void)$/;"	f	class:lgfx::v1::Panel_RA8875
beginTransaction	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    void beginTransaction(int spi_host, uint32_t freq, int spi_mode) {}$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_HUB75
beginTransaction	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginTransaction	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
beginTransaction	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int i2c_port, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/esp32/common.cpp	/^    void beginTransaction(int spi_host)$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/esp32/common.cpp	/^    void beginTransaction(int spi_host, uint32_t freq, int spi_mode)$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
beginTransaction	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
beginTransaction	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
beginTransaction	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
beginTransaction	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginTransaction	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int i2c_port, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/esp8266/common.cpp	/^    void beginTransaction(int spi_host)$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/esp8266/common.cpp	/^    void beginTransaction(int spi_host, uint32_t freq, int spi_mode)$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::beginTransaction(void) {}$/;"	f	class:lgfx::v1::Panel_fb
beginTransaction	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    void beginTransaction(int spi_host, uint32_t freq, int spi_mode) {}$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::beginTransaction(void) {}$/;"	f	class:lgfx::v1::Panel_OpenCV
beginTransaction	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/opencv/common.cpp	/^    void beginTransaction(int spi_host, uint32_t freq, int spi_mode) {}$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginTransaction	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int i2c_port, int i2c_addr, uint32_t freq, [[maybe_unused]]bool read)$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/rp2040/common.cpp	/^    void beginTransaction(int spi_port, uint32_t freq, int spi_mode)$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginTransaction	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int sercom_index, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/samd21/common.cpp	/^    void beginTransaction(int sercom_index, uint32_t freq, int spi_mode)$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
beginTransaction	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int sercom_index, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/samd51/common.cpp	/^    void beginTransaction(int sercom_index, uint32_t freq, int spi_mode)$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/sdl/common.cpp	/^    void beginTransaction(int spi_host, uint32_t freq, int spi_mode) {}$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> beginTransaction(int , int , uint32_t , bool ) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
beginTransaction	src/lgfx/v1/platforms/spresense/common.cpp	/^    void beginTransaction(int , uint32_t , int ) {}$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::beginTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
beginTransaction	src/lgfx/v1/platforms/stm32/common.cpp	/^    void beginTransaction(int) {}$/;"	f	namespace:lgfx::v1::spi
beginTransaction	src/lgfx/v1/platforms/stm32/common.cpp	/^    void beginTransaction(int, int, int, int) {}$/;"	f	namespace:lgfx::v1::spi
begin_transaction	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void begin_transaction(void)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
begin_transaction	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void begin_transaction(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
begin_transaction	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void begin_transaction(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
begin_transaction	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::begin_transaction(void)$/;"	f	class:lgfx::v1::Panel_LCD
begin_transaction	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::begin_transaction(void)$/;"	f	class:lgfx::v1::Panel_RA8875
bfOffBits	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t bfOffBits;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
bfOffBits	src/lgfx/v1/misc/bitmap.hpp	/^        uint32_t bfOffBits;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
bfReserved1	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t bfReserved1;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
bfReserved1	src/lgfx/v1/misc/bitmap.hpp	/^        uint16_t bfReserved1;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
bfReserved2	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t bfReserved2;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
bfReserved2	src/lgfx/v1/misc/bitmap.hpp	/^        uint16_t bfReserved2;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
bfSize	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t bfSize;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
bfSize	src/lgfx/v1/misc/bitmap.hpp	/^        uint32_t bfSize;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
bfType	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t bfType;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
bfType	src/lgfx/v1/misc/bitmap.hpp	/^        uint16_t bfType;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
bg	src/lgfx/v1/misc/colortype.hpp	/^      uint16_t bg;$/;"	m	union:lgfx::v1::rgb888_t::__anon32
bgr666_t	src/lgfx/v0/lgfx_common.hpp	/^    bgr666_t() : r(0), g(0), b(0) {};$/;"	f	struct:lgfx::v0::bgr666_t
bgr666_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr bgr666_t(uint32_t raw) : r(raw), g(raw>>8), b(raw>>16) {}$/;"	f	struct:lgfx::v0::bgr666_t
bgr666_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr bgr666_t(uint8_t r8, uint8_t g8, uint8_t b8) : r(r8>>2),g(g8>>2),b(b8>>2) {}$/;"	f	struct:lgfx::v0::bgr666_t
bgr666_t	src/lgfx/v0/lgfx_common.hpp	/^  struct bgr666_t {$/;"	s	namespace:lgfx::v0
bgr666_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgr666_t(uint32_t raw) : r6(raw), g6(raw>>8), b6(raw>>16) {}$/;"	f	struct:lgfx::v1::bgr666_t
bgr666_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgr666_t(uint8_t r8, uint8_t g8, uint8_t b8) : r6(r8>>2), g6(g8>>2), b6(b8>>2) {}$/;"	f	struct:lgfx::v1::bgr666_t
bgr666_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgr666_t(void) : r6(0), g6(0), b6(0) {};$/;"	f	struct:lgfx::v1::bgr666_t
bgr666_t	src/lgfx/v1/misc/colortype.hpp	/^  struct bgr666_t$/;"	s	namespace:lgfx::v1
bgr888_t	src/lgfx/v0/lgfx_common.hpp	/^    bgr888_t() : r{0}, g{0}, b{0} {};$/;"	f	struct:lgfx::v0::bgr888_t
bgr888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr bgr888_t(uint32_t bgr888) : r(bgr888), g(bgr888>>8), b(bgr888>>16) {}$/;"	f	struct:lgfx::v0::bgr888_t
bgr888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr bgr888_t(uint8_t r8, uint8_t g8, uint8_t b8) : r(r8),g(g8),b(b8) {}$/;"	f	struct:lgfx::v0::bgr888_t
bgr888_t	src/lgfx/v0/lgfx_common.hpp	/^  struct bgr888_t {$/;"	s	namespace:lgfx::v0
bgr888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgr888_t(uint32_t bgr888) : r(bgr888), g(bgr888>>8), b(bgr888>>16) {}$/;"	f	struct:lgfx::v1::bgr888_t
bgr888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgr888_t(uint8_t r8, uint8_t g8, uint8_t b8) : r(r8), g(g8), b(b8) {}$/;"	f	struct:lgfx::v1::bgr888_t
bgr888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgr888_t(void) : r{0}, g{0}, b{0} {};$/;"	f	struct:lgfx::v1::bgr888_t
bgr888_t	src/lgfx/v1/misc/colortype.hpp	/^  struct bgr888_t$/;"	s	namespace:lgfx::v1
bgra8888_t	src/lgfx/v0/lgfx_common.hpp	/^    bgra8888_t() : raw(0) {}$/;"	f	struct:lgfx::v0::bgra8888_t
bgra8888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr bgra8888_t(uint32_t argb8888) : raw(argb8888) {}$/;"	f	struct:lgfx::v0::bgra8888_t
bgra8888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr bgra8888_t(uint8_t r, uint8_t g, uint8_t b) : a(255),r(r),g(g),b(b) {}$/;"	f	struct:lgfx::v0::bgra8888_t
bgra8888_t	src/lgfx/v0/lgfx_common.hpp	/^  struct bgra8888_t {$/;"	s	namespace:lgfx::v0
bgra8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgra8888_t(uint32_t bgra8888) : raw(bgra8888) {}$/;"	f	struct:lgfx::v1::bgra8888_t
bgra8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgra8888_t(uint8_t a8, uint8_t r8, uint8_t g8, uint8_t b8) : a(a8), r(r8), g(g8), b(b8) {}$/;"	f	struct:lgfx::v1::bgra8888_t
bgra8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgra8888_t(uint8_t r8, uint8_t g8, uint8_t b8) : r(r8), g(g8), b(b8) {}$/;"	f	struct:lgfx::v1::bgra8888_t
bgra8888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr bgra8888_t(void) : raw{0} {};$/;"	f	struct:lgfx::v1::bgra8888_t
bgra8888_t	src/lgfx/v1/misc/colortype.hpp	/^  struct bgra8888_t$/;"	s	namespace:lgfx::v1
biBitCount	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t biBitCount;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biBitCount	src/lgfx/v1/misc/bitmap.hpp	/^        uint16_t biBitCount;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biClrImportant	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t biClrImportant;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biClrImportant	src/lgfx/v1/misc/bitmap.hpp	/^        uint32_t biClrImportant;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biClrUsed	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t biClrUsed;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biClrUsed	src/lgfx/v1/misc/bitmap.hpp	/^        uint32_t biClrUsed;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biCompression	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t biCompression;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biCompression	src/lgfx/v1/misc/bitmap.hpp	/^        uint32_t biCompression;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biHeight	src/lgfx/v0/lgfx_common.hpp	/^        int32_t  biHeight;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biHeight	src/lgfx/v1/misc/bitmap.hpp	/^        int32_t  biHeight;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biPlanes	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t biPlanes;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biPlanes	src/lgfx/v1/misc/bitmap.hpp	/^        uint16_t biPlanes;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biSize	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t biSize;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biSize	src/lgfx/v1/misc/bitmap.hpp	/^        uint32_t biSize;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biSizeImage	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t biSizeImage;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biSizeImage	src/lgfx/v1/misc/bitmap.hpp	/^        uint32_t biSizeImage;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biWidth	src/lgfx/v0/lgfx_common.hpp	/^        int32_t  biWidth;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biWidth	src/lgfx/v1/misc/bitmap.hpp	/^        int32_t  biWidth;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biXPelsPerMeter	src/lgfx/v0/lgfx_common.hpp	/^        int32_t  biXPelsPerMeter;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biXPelsPerMeter	src/lgfx/v1/misc/bitmap.hpp	/^        int32_t  biXPelsPerMeter;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
biYPelsPerMeter	src/lgfx/v0/lgfx_common.hpp	/^        int32_t  biYPelsPerMeter;$/;"	m	struct:lgfx::bitmap_header_t::__anon511::__anon512
biYPelsPerMeter	src/lgfx/v1/misc/bitmap.hpp	/^        int32_t  biYPelsPerMeter;$/;"	m	struct:lgfx::v1::bitmap_header_t::__anon52::__anon53
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon275	typeref:struct:__anon275::__anon276
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon277	typeref:struct:__anon277::__anon278
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon280	typeref:struct:__anon280::__anon281
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon282	typeref:struct:__anon282::__anon283
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon285	typeref:struct:__anon285::__anon286
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon287	typeref:struct:__anon287::__anon288
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon289	typeref:struct:__anon289::__anon290
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon291	typeref:struct:__anon291::__anon292
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon293	typeref:struct:__anon293::__anon294
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon295	typeref:struct:__anon295::__anon296
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon297	typeref:struct:__anon297::__anon298
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon299	typeref:struct:__anon299::__anon300
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon301	typeref:struct:__anon301::__anon302
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon303	typeref:struct:__anon303::__anon304
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon306	typeref:struct:__anon306::__anon307
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon308	typeref:struct:__anon308::__anon309
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon310	typeref:struct:__anon310::__anon311
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon313	typeref:struct:__anon313::__anon314
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon315	typeref:struct:__anon315::__anon316
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon318	typeref:struct:__anon318::__anon319
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon320	typeref:struct:__anon320::__anon321
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon322	typeref:struct:__anon322::__anon323
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon325	typeref:struct:__anon325::__anon326
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon328	typeref:struct:__anon328::__anon329
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon331	typeref:struct:__anon331::__anon332
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon333	typeref:struct:__anon333::__anon334
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon335	typeref:struct:__anon335::__anon336
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon337	typeref:struct:__anon337::__anon338
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon339	typeref:struct:__anon339::__anon340
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon341	typeref:struct:__anon341::__anon342
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon345	typeref:struct:__anon345::__anon346
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon348	typeref:struct:__anon348::__anon349
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon350	typeref:struct:__anon350::__anon351
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon352	typeref:struct:__anon352::__anon353
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon355	typeref:struct:__anon355::__anon356
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon358	typeref:struct:__anon358::__anon359
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon361	typeref:struct:__anon361::__anon362
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon364	typeref:struct:__anon364::__anon365
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon367	typeref:struct:__anon367::__anon368
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon369	typeref:struct:__anon369::__anon370
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon372	typeref:struct:__anon372::__anon373
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon374	typeref:struct:__anon374::__anon375
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon377	typeref:struct:__anon377::__anon378
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon379	typeref:struct:__anon379::__anon380
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon381	typeref:struct:__anon381::__anon382
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon383	typeref:struct:__anon383::__anon384
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon385	typeref:struct:__anon385::__anon386
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon387	typeref:struct:__anon387::__anon388
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon389	typeref:struct:__anon389::__anon390
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon391	typeref:struct:__anon391::__anon392
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon393	typeref:struct:__anon393::__anon394
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon397	typeref:struct:__anon397::__anon398
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon399	typeref:struct:__anon399::__anon400
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon401	typeref:struct:__anon401::__anon402
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon403	typeref:struct:__anon403::__anon404
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon405	typeref:struct:__anon405::__anon406
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon407	typeref:struct:__anon407::__anon408
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon409	typeref:struct:__anon409::__anon410
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon411	typeref:struct:__anon411::__anon412
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon413	typeref:struct:__anon413::__anon414
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon415	typeref:struct:__anon415::__anon416
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon417	typeref:struct:__anon417::__anon418
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon419	typeref:struct:__anon419::__anon420
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon421	typeref:struct:__anon421::__anon422
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon423	typeref:struct:__anon423::__anon424
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon427	typeref:struct:__anon427::__anon428
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon429	typeref:struct:__anon429::__anon430
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon431	typeref:struct:__anon431::__anon432
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon433	typeref:struct:__anon433::__anon434
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon435	typeref:struct:__anon435::__anon436
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon437	typeref:struct:__anon437::__anon438
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon439	typeref:struct:__anon439::__anon440
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon441	typeref:struct:__anon441::__anon442
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon443	typeref:struct:__anon443::__anon444
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon445	typeref:struct:__anon445::__anon446
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon447	typeref:struct:__anon447::__anon448
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon449	typeref:struct:__anon449::__anon450
bit	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon451	typeref:struct:__anon451::__anon452
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon101	typeref:struct:__anon101::__anon102
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon104	typeref:struct:__anon104::__anon105
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon106	typeref:struct:__anon106::__anon107
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon108	typeref:struct:__anon108::__anon109
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon111	typeref:struct:__anon111::__anon112
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon114	typeref:struct:__anon114::__anon115
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon117	typeref:struct:__anon117::__anon118
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon119	typeref:struct:__anon119::__anon120
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon121	typeref:struct:__anon121::__anon122
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon123	typeref:struct:__anon123::__anon124
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon125	typeref:struct:__anon125::__anon126
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon127	typeref:struct:__anon127::__anon128
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon131	typeref:struct:__anon131::__anon132
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon134	typeref:struct:__anon134::__anon135
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon136	typeref:struct:__anon136::__anon137
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon138	typeref:struct:__anon138::__anon139
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon141	typeref:struct:__anon141::__anon142
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon144	typeref:struct:__anon144::__anon145
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon147	typeref:struct:__anon147::__anon148
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon150	typeref:struct:__anon150::__anon151
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon153	typeref:struct:__anon153::__anon154
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon155	typeref:struct:__anon155::__anon156
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon158	typeref:struct:__anon158::__anon159
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon160	typeref:struct:__anon160::__anon161
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon163	typeref:struct:__anon163::__anon164
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon165	typeref:struct:__anon165::__anon166
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon167	typeref:struct:__anon167::__anon168
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon169	typeref:struct:__anon169::__anon170
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon171	typeref:struct:__anon171::__anon172
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon173	typeref:struct:__anon173::__anon174
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon175	typeref:struct:__anon175::__anon176
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon177	typeref:struct:__anon177::__anon178
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon179	typeref:struct:__anon179::__anon180
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon183	typeref:struct:__anon183::__anon184
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon185	typeref:struct:__anon185::__anon186
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon187	typeref:struct:__anon187::__anon188
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon189	typeref:struct:__anon189::__anon190
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon191	typeref:struct:__anon191::__anon192
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon193	typeref:struct:__anon193::__anon194
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon195	typeref:struct:__anon195::__anon196
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon197	typeref:struct:__anon197::__anon198
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon199	typeref:struct:__anon199::__anon200
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon201	typeref:struct:__anon201::__anon202
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon203	typeref:struct:__anon203::__anon204
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon205	typeref:struct:__anon205::__anon206
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon207	typeref:struct:__anon207::__anon208
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon209	typeref:struct:__anon209::__anon210
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon213	typeref:struct:__anon213::__anon214
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon215	typeref:struct:__anon215::__anon216
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon217	typeref:struct:__anon217::__anon218
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon219	typeref:struct:__anon219::__anon220
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon221	typeref:struct:__anon221::__anon222
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon223	typeref:struct:__anon223::__anon224
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon225	typeref:struct:__anon225::__anon226
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon227	typeref:struct:__anon227::__anon228
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon229	typeref:struct:__anon229::__anon230
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon231	typeref:struct:__anon231::__anon232
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon233	typeref:struct:__anon233::__anon234
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon235	typeref:struct:__anon235::__anon236
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon237	typeref:struct:__anon237::__anon238
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon61	typeref:struct:__anon61::__anon62
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon63	typeref:struct:__anon63::__anon64
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon66	typeref:struct:__anon66::__anon67
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon68	typeref:struct:__anon68::__anon69
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon71	typeref:struct:__anon71::__anon72
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon73	typeref:struct:__anon73::__anon74
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon75	typeref:struct:__anon75::__anon76
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon77	typeref:struct:__anon77::__anon78
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon79	typeref:struct:__anon79::__anon80
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon81	typeref:struct:__anon81::__anon82
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon83	typeref:struct:__anon83::__anon84
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon85	typeref:struct:__anon85::__anon86
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon87	typeref:struct:__anon87::__anon88
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon89	typeref:struct:__anon89::__anon90
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon92	typeref:struct:__anon92::__anon93
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon94	typeref:struct:__anon94::__anon95
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon96	typeref:struct:__anon96::__anon97
bit	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } bit;                       \/*!< Structure used for bit  access                  *\/$/;"	m	union:__anon99	typeref:struct:__anon99::__anon100
bitOff	src/lgfx/v0/lgfx_common.hpp	/^    inline bool bitOff(int i2c_port, uint16_t addr, uint8_t reg, uint8_t bit) { return writeRegister8(i2c_port, addr, reg, 0, ~bit); }$/;"	f	namespace:lgfx::i2c
bitOff	src/lgfx/v1/platforms/common.hpp	/^    inline cpp::result<void, error_t> bitOff(int i2c_port, int addr, uint8_t reg, uint8_t bit, uint32_t freq = I2C_DEFAULT_FREQ)$/;"	f	namespace:lgfx::v1::i2c
bitOffsetOrWidth	src/lgfx/utility/lgfx_qrcode.c	/^    uint32_t bitOffsetOrWidth;$/;"	m	struct:BitBucket	file:
bitOn	src/lgfx/v0/lgfx_common.hpp	/^    inline bool bitOn(int i2c_port, uint16_t addr, uint8_t reg, uint8_t bit)  { return writeRegister8(i2c_port, addr, reg, bit, ~0); }$/;"	f	namespace:lgfx::i2c
bitOn	src/lgfx/v1/platforms/common.hpp	/^    inline cpp::result<void, error_t> bitOn(int i2c_port, int addr, uint8_t reg, uint8_t bit, uint32_t freq = I2C_DEFAULT_FREQ)$/;"	f	namespace:lgfx::v1::i2c
bitext	src/lgfx/utility/lgfx_tjpgd.c	/^static int32_t bitext (	\/* >=0: extracted data, <0: error code *\/$/;"	f	file:
bitmap	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t  *bitmap;      \/\/ Glyph bitmaps, concatenated$/;"	m	struct:lgfx::v0::GFXfont
bitmap	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t  *bitmap;      \/\/ Glyph bitmaps, concatenated$/;"	m	struct:lgfx::v1::GFXfont
bitmapOffset	src/lgfx/v0/lgfx_fonts.hpp	/^    uint32_t bitmapOffset;     \/\/ Pointer into GFXfont->bitmap$/;"	m	struct:lgfx::v0::GFXglyph
bitmapOffset	src/lgfx/v1/lgfx_fonts.hpp	/^    uint32_t bitmapOffset;     \/\/ Pointer into GFXfont->bitmap$/;"	m	struct:lgfx::v1::GFXglyph
bitmap_header_t	src/lgfx/v0/lgfx_common.hpp	/^  struct bitmap_header_t$/;"	s	namespace:lgfx
bitmap_header_t	src/lgfx/v1/misc/bitmap.hpp	/^  struct bitmap_header_t$/;"	s	namespace:lgfx::v1
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 16;$/;"	m	struct:lgfx::v0::rgb565_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 16;$/;"	m	struct:lgfx::v0::swap565_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 24;$/;"	m	struct:lgfx::v0::bgr666_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 24;$/;"	m	struct:lgfx::v0::bgr888_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 24;$/;"	m	struct:lgfx::v0::rgb888_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 32;$/;"	m	struct:lgfx::v0::argb8888_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 32;$/;"	m	struct:lgfx::v0::bgra8888_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 8;$/;"	m	struct:lgfx::v0::grayscale_t
bits	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr uint8_t bits = 8;$/;"	m	struct:lgfx::v0::rgb332_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 16;$/;"	m	struct:lgfx::v1::rgb565_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 16;$/;"	m	struct:lgfx::v1::swap565_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 24;$/;"	m	struct:lgfx::v1::bgr666_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 24;$/;"	m	struct:lgfx::v1::bgr888_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 24;$/;"	m	struct:lgfx::v1::rgb888_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 32;$/;"	m	struct:lgfx::v1::argb8888_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 32;$/;"	m	struct:lgfx::v1::bgra8888_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 8;$/;"	m	struct:lgfx::v1::grayscale_t
bits	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr uint8_t bits = 8;$/;"	m	struct:lgfx::v1::rgb332_t
bits_per_0	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bits_per_0(void) const { return _font[2]; }$/;"	f	struct:lgfx::v0::U8g2font
bits_per_0	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bits_per_0(void) const { return pgm_read_byte(&_font[2]); }$/;"	f	struct:lgfx::v1::U8g2font
bits_per_1	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bits_per_1(void) const { return _font[3]; }$/;"	f	struct:lgfx::v0::U8g2font
bits_per_1	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bits_per_1(void) const { return pgm_read_byte(&_font[3]); }$/;"	f	struct:lgfx::v1::U8g2font
bits_per_char_height	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bits_per_char_height(void) const { return _font[5]; }$/;"	f	struct:lgfx::v0::U8g2font
bits_per_char_height	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bits_per_char_height(void) const { return pgm_read_byte(&_font[5]); }$/;"	f	struct:lgfx::v1::U8g2font
bits_per_char_width	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bits_per_char_width (void) const { return _font[4]; }$/;"	f	struct:lgfx::v0::U8g2font
bits_per_char_width	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bits_per_char_width (void) const { return pgm_read_byte(&_font[4]); }$/;"	f	struct:lgfx::v1::U8g2font
bits_per_char_x	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bits_per_char_x     (void) const { return _font[6]; }$/;"	f	struct:lgfx::v0::U8g2font
bits_per_char_x	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bits_per_char_x     (void) const { return pgm_read_byte(&_font[6]); }$/;"	f	struct:lgfx::v1::U8g2font
bits_per_char_y	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bits_per_char_y     (void) const { return _font[7]; }$/;"	f	struct:lgfx::v0::U8g2font
bits_per_char_y	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bits_per_char_y     (void) const { return pgm_read_byte(&_font[7]); }$/;"	f	struct:lgfx::v1::U8g2font
bits_per_delta_x	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t bits_per_delta_x    (void) const { return _font[8]; }$/;"	f	struct:lgfx::v0::U8g2font
bits_per_delta_x	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t bits_per_delta_x    (void) const { return pgm_read_byte(&_font[8]); }$/;"	f	struct:lgfx::v1::U8g2font
bitwizeshift	src/lgfx/utility/result.hpp	/^inline namespace bitwizeshift {$/;"	n	namespace:RESULT_NAMESPACE_INTERNAL
black_mv	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t black_mv;            \/\/ SYNCレベルと黒レベルの電圧差 mV$/;"	m	struct:lgfx::v1::signal_setup_info_t	file:
blanking_mv	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t blanking_mv;         \/\/ SYNCレベルとBLANKINGレベルの電圧差 mV$/;"	m	struct:lgfx::v1::signal_setup_info_t	file:
blend_palette_fast	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t blend_palette_fast(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
blend_palette_fast	src/lgfx/v1/misc/pixelcopy.cpp	/^    uint32_t pixelcopy_t::blend_palette_fast(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	class:lgfx::v1::pixelcopy_t
blend_rgb_fast	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t blend_rgb_fast(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
blend_rgb_fast	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t blend_rgb_fast(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
blit_ratio_h	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    int16_t blit_ratio_h = 0;$/;"	m	struct:lgfx::v1::internal_t	file:
blit_ratio_l	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    int16_t blit_ratio_l = 0;$/;"	m	struct:lgfx::v1::internal_t	file:
blit_x10_x15	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void IRAM_ATTR blit_x10_x15(uint32_t* __restrict d, const uint32_t* s, const uint32_t* s_end, const uint32_t* p, bool odd, int ratio_10, int ratio_15)$/;"	f	namespace:lgfx::v1
blit_x15_x20	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void IRAM_ATTR blit_x15_x20(uint32_t* __restrict d, const uint32_t* s, const uint32_t* s_end, const uint32_t* p, bool odd, int ratio_15, int ratio_20)$/;"	f	namespace:lgfx::v1
blit_x20_x30	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void IRAM_ATTR blit_x20_x30(uint32_t* __restrict d, const uint32_t* s, const uint32_t* s_end, const uint32_t* p, bool odd, int ratio_2, int ratio_3)$/;"	f	namespace:lgfx::v1
blit_x30_x40	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void IRAM_ATTR blit_x30_x40(uint32_t* __restrict d, const uint32_t* s, const uint32_t* s_end, const uint32_t* p, bool odd, int ratio_3, int ratio_4)$/;"	f	namespace:lgfx::v1
blit_x40_x50	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void IRAM_ATTR blit_x40_x50(uint32_t* __restrict d, const uint32_t* s, const uint32_t* s_end, const uint32_t* p, bool odd, int ratio_4, int ratio_5)$/;"	f	namespace:lgfx::v1
blit_x50_x60	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void IRAM_ATTR blit_x50_x60(uint32_t* __restrict d, const uint32_t* s, const uint32_t* s_end, const uint32_t* p, bool odd, int ratio_5, int ratio_6)$/;"	f	namespace:lgfx::v1
block_idct	src/lgfx/utility/lgfx_tjpgd.c	/^static void block_idct ($/;"	f	file:
board	src/lgfx/v0/LGFX_Device.hpp	/^    board_t board = lgfx::board_t::board_unknown;$/;"	m	class:lgfx::v0::LGFX_Device
board	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      board_t board = board_t::board_unknown;$/;"	m	struct:lgfx::v1::LGFX::_detector_t
board	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      board_t board;$/;"	m	struct:lgfx::v1::LGFX::_detector_result_t
board_DDUINO32_XS	src/lgfx/boards.hpp	/^    , board_DDUINO32_XS$/;"	e	enum:lgfx::boards::board_t
board_DDUINO32_XS	src/lgfx/v0/lgfx_common.hpp	/^    , board_DDUINO32_XS$/;"	e	enum:lgfx::v0::boards::board_t
board_ESP32_2432S028	src/lgfx/boards.hpp	/^    , board_ESP32_2432S028$/;"	e	enum:lgfx::boards::board_t
board_ESP32_S2_Kaluga_1	src/lgfx/boards.hpp	/^    , board_ESP32_S2_Kaluga_1$/;"	e	enum:lgfx::boards::board_t
board_ESP32_S2_Kaluga_1	src/lgfx/v0/lgfx_common.hpp	/^    , board_ESP32_S2_Kaluga_1$/;"	e	enum:lgfx::v0::boards::board_t
board_ESP32_S3_BOX	src/lgfx/boards.hpp	/^    , board_ESP32_S3_BOX$/;"	e	enum:lgfx::boards::board_t
board_ESP32_S3_BOX_Lite	src/lgfx/boards.hpp	/^    , board_ESP32_S3_BOX_Lite$/;"	e	enum:lgfx::boards::board_t
board_ESP_WROVER_KIT	src/lgfx/boards.hpp	/^    , board_ESP_WROVER_KIT$/;"	e	enum:lgfx::boards::board_t
board_ESP_WROVER_KIT	src/lgfx/v0/lgfx_common.hpp	/^    , board_ESP_WROVER_KIT$/;"	e	enum:lgfx::v0::boards::board_t
board_ESPboy	src/lgfx/boards.hpp	/^    , board_ESPboy$/;"	e	enum:lgfx::boards::board_t
board_FeatherM4_HX8357	src/lgfx/boards.hpp	/^    , board_FeatherM4_HX8357$/;"	e	enum:lgfx::boards::board_t
board_Feather_ESP32_S2_TFT	src/lgfx/boards.hpp	/^    , board_Feather_ESP32_S2_TFT$/;"	e	enum:lgfx::boards::board_t
board_Feather_ESP32_S3_TFT	src/lgfx/boards.hpp	/^    , board_Feather_ESP32_S3_TFT$/;"	e	enum:lgfx::boards::board_t
board_FrameBuffer	src/lgfx/boards.hpp	/^    , board_FrameBuffer$/;"	e	enum:lgfx::boards::board_t
board_FunHouse	src/lgfx/boards.hpp	/^    , board_FunHouse$/;"	e	enum:lgfx::boards::board_t
board_HalloWingM0	src/lgfx/boards.hpp	/^    , board_HalloWingM0$/;"	e	enum:lgfx::boards::board_t
board_HalloWingM4	src/lgfx/boards.hpp	/^    , board_HalloWingM4$/;"	e	enum:lgfx::boards::board_t
board_LoLinD32	src/lgfx/boards.hpp	/^    , board_LoLinD32$/;"	e	enum:lgfx::boards::board_t
board_LoLinD32	src/lgfx/v0/lgfx_common.hpp	/^    , board_LoLinD32$/;"	e	enum:lgfx::v0::boards::board_t
board_LoLinS3Pro	src/lgfx/boards.hpp	/^    , board_LoLinS3Pro$/;"	e	enum:lgfx::boards::board_t
board_M5AtomDisplay	src/lgfx/boards.hpp	/^    , board_M5AtomDisplay$/;"	e	enum:lgfx::boards::board_t
board_M5AtomS3	src/lgfx/boards.hpp	/^    , board_M5AtomS3$/;"	e	enum:lgfx::boards::board_t
board_M5ModuleDisplay	src/lgfx/boards.hpp	/^    , board_M5ModuleDisplay$/;"	e	enum:lgfx::boards::board_t
board_M5Paper	src/lgfx/boards.hpp	/^    , board_M5Paper$/;"	e	enum:lgfx::boards::board_t
board_M5Paper	src/lgfx/v0/lgfx_common.hpp	/^    , board_M5Paper$/;"	e	enum:lgfx::v0::boards::board_t
board_M5Stack	src/lgfx/boards.hpp	/^    , board_M5Stack$/;"	e	enum:lgfx::boards::board_t
board_M5Stack	src/lgfx/v0/lgfx_common.hpp	/^    , board_M5Stack$/;"	e	enum:lgfx::v0::boards::board_t
board_M5StackCore2	src/lgfx/boards.hpp	/^    , board_M5StackCore2$/;"	e	enum:lgfx::boards::board_t
board_M5StackCore2	src/lgfx/v0/lgfx_common.hpp	/^    , board_M5StackCore2$/;"	e	enum:lgfx::v0::boards::board_t
board_M5StackCoreInk	src/lgfx/boards.hpp	/^    , board_M5StackCoreInk$/;"	e	enum:lgfx::boards::board_t
board_M5StackCoreInk	src/lgfx/v0/lgfx_common.hpp	/^    , board_M5StackCoreInk$/;"	e	enum:lgfx::v0::boards::board_t
board_M5StackCoreS3	src/lgfx/boards.hpp	/^    , board_M5StackCoreS3$/;"	e	enum:lgfx::boards::board_t
board_M5Stack_CoreInk	src/lgfx/boards.hpp	/^    , board_M5Stack_CoreInk = board_M5StackCoreInk$/;"	e	enum:lgfx::boards::board_t
board_M5Stack_CoreInk	src/lgfx/v0/lgfx_common.hpp	/^    , board_M5Stack_CoreInk = board_M5StackCoreInk$/;"	e	enum:lgfx::v0::boards::board_t
board_M5Station	src/lgfx/boards.hpp	/^    , board_M5Station$/;"	e	enum:lgfx::boards::board_t
board_M5StickC	src/lgfx/boards.hpp	/^    , board_M5StickC$/;"	e	enum:lgfx::boards::board_t
board_M5StickC	src/lgfx/v0/lgfx_common.hpp	/^    , board_M5StickC$/;"	e	enum:lgfx::v0::boards::board_t
board_M5StickCPlus	src/lgfx/boards.hpp	/^    , board_M5StickCPlus$/;"	e	enum:lgfx::boards::board_t
board_M5StickCPlus	src/lgfx/v0/lgfx_common.hpp	/^    , board_M5StickCPlus$/;"	e	enum:lgfx::v0::boards::board_t
board_M5Tough	src/lgfx/boards.hpp	/^    , board_M5Tough$/;"	e	enum:lgfx::boards::board_t
board_M5UnitLCD	src/lgfx/boards.hpp	/^    , board_M5UnitLCD$/;"	e	enum:lgfx::boards::board_t
board_M5UnitOLED	src/lgfx/boards.hpp	/^    , board_M5UnitOLED$/;"	e	enum:lgfx::boards::board_t
board_Makerfabs_ESP32_C3_TFT_Touch_SPI	src/lgfx/boards.hpp	/^    , board_Makerfabs_ESP32_C3_TFT_Touch_SPI$/;"	e	enum:lgfx::boards::board_t
board_Makerfabs_ESP32_S2_TFT_Touch_Parallel16	src/lgfx/boards.hpp	/^    , board_Makerfabs_ESP32_S2_TFT_Touch_Parallel16$/;"	e	enum:lgfx::boards::board_t
board_Makerfabs_ESP32_S3_TFT_Touch_Parallel16	src/lgfx/boards.hpp	/^    , board_Makerfabs_ESP32_S3_TFT_Touch_Parallel16$/;"	e	enum:lgfx::boards::board_t
board_Makerfabs_ESP32_S3_TFT_Touch_SPI	src/lgfx/boards.hpp	/^    , board_Makerfabs_ESP32_S3_TFT_Touch_SPI$/;"	e	enum:lgfx::boards::board_t
board_Makerfabs_MakePython	src/lgfx/boards.hpp	/^    , board_Makerfabs_MakePython$/;"	e	enum:lgfx::boards::board_t
board_Makerfabs_MakePython	src/lgfx/v0/lgfx_common.hpp	/^    , board_Makerfabs_MakePython$/;"	e	enum:lgfx::v0::boards::board_t
board_Makerfabs_TouchCamera	src/lgfx/boards.hpp	/^    , board_Makerfabs_TouchCamera$/;"	e	enum:lgfx::boards::board_t
board_Makerfabs_TouchCamera	src/lgfx/v0/lgfx_common.hpp	/^    , board_Makerfabs_TouchCamera$/;"	e	enum:lgfx::v0::boards::board_t
board_Non_Panel	src/lgfx/boards.hpp	/^    , board_Non_Panel$/;"	e	enum:lgfx::boards::board_t
board_Non_Panel	src/lgfx/v0/lgfx_common.hpp	/^    , board_Non_Panel$/;"	e	enum:lgfx::v0::boards::board_t
board_ODROID_GO	src/lgfx/boards.hpp	/^    , board_ODROID_GO$/;"	e	enum:lgfx::boards::board_t
board_ODROID_GO	src/lgfx/v0/lgfx_common.hpp	/^    , board_ODROID_GO$/;"	e	enum:lgfx::v0::boards::board_t
board_OpenCV	src/lgfx/boards.hpp	/^    , board_OpenCV$/;"	e	enum:lgfx::boards::board_t
board_PyBadge	src/lgfx/boards.hpp	/^    , board_PyBadge$/;"	e	enum:lgfx::boards::board_t
board_PyGamer	src/lgfx/boards.hpp	/^    , board_PyGamer$/;"	e	enum:lgfx::boards::board_t
board_SDL	src/lgfx/boards.hpp	/^    , board_SDL$/;"	e	enum:lgfx::boards::board_t
board_TTGO_TDisplay	src/lgfx/boards.hpp	/^    , board_TTGO_TDisplay$/;"	e	enum:lgfx::boards::board_t
board_TTGO_TDisplay	src/lgfx/v0/lgfx_common.hpp	/^    , board_TTGO_TDisplay$/;"	e	enum:lgfx::v0::boards::board_t
board_TTGO_TS	src/lgfx/boards.hpp	/^    , board_TTGO_TS$/;"	e	enum:lgfx::boards::board_t
board_TTGO_TS	src/lgfx/v0/lgfx_common.hpp	/^    , board_TTGO_TS$/;"	e	enum:lgfx::v0::boards::board_t
board_TTGO_TWatch	src/lgfx/boards.hpp	/^    , board_TTGO_TWatch$/;"	e	enum:lgfx::boards::board_t
board_TTGO_TWatch	src/lgfx/v0/lgfx_common.hpp	/^    , board_TTGO_TWatch$/;"	e	enum:lgfx::v0::boards::board_t
board_TTGO_TWristband	src/lgfx/boards.hpp	/^    , board_TTGO_TWristband$/;"	e	enum:lgfx::boards::board_t
board_TTGO_TWristband	src/lgfx/v0/lgfx_common.hpp	/^    , board_TTGO_TWristband$/;"	e	enum:lgfx::v0::boards::board_t
board_WT32_SC01	src/lgfx/boards.hpp	/^    , board_WT32_SC01$/;"	e	enum:lgfx::boards::board_t
board_WT32_SC01	src/lgfx/v0/lgfx_common.hpp	/^    , board_WT32_SC01$/;"	e	enum:lgfx::v0::boards::board_t
board_WiFiBoy_Mini	src/lgfx/boards.hpp	/^    , board_WiFiBoy_Mini$/;"	e	enum:lgfx::boards::board_t
board_WiFiBoy_Mini	src/lgfx/v0/lgfx_common.hpp	/^    , board_WiFiBoy_Mini$/;"	e	enum:lgfx::v0::boards::board_t
board_WiFiBoy_Pro	src/lgfx/boards.hpp	/^    , board_WiFiBoy_Pro$/;"	e	enum:lgfx::boards::board_t
board_WiFiBoy_Pro	src/lgfx/v0/lgfx_common.hpp	/^    , board_WiFiBoy_Pro$/;"	e	enum:lgfx::v0::boards::board_t
board_WioTerminal	src/lgfx/boards.hpp	/^    , board_WioTerminal$/;"	e	enum:lgfx::boards::board_t
board_WioTerminal	src/lgfx/v0/lgfx_common.hpp	/^    , board_WioTerminal$/;"	e	enum:lgfx::v0::boards::board_t
board_t	src/lgfx/boards.hpp	/^    enum board_t$/;"	g	namespace:lgfx::boards
board_t	src/lgfx/v0/lgfx_common.hpp	/^    enum board_t$/;"	g	namespace:lgfx::v0::boards
board_unknown	src/lgfx/boards.hpp	/^    { board_unknown$/;"	e	enum:lgfx::boards::board_t
board_unknown	src/lgfx/v0/lgfx_common.hpp	/^    { board_unknown$/;"	e	enum:lgfx::v0::boards::board_t
board_wywy_ESP32S3_HMI_DevKit	src/lgfx/boards.hpp	/^    , board_wywy_ESP32S3_HMI_DevKit$/;"	e	enum:lgfx::boards::board_t
boards	src/lgfx/boards.hpp	/^  namespace boards$/;"	n	namespace:lgfx
boards	src/lgfx/v0/lgfx_common.hpp	/^  namespace boards$/;"	n	namespace:lgfx::v0
bool	src/lgfx/utility/lgfx_qrcode.h	/^typedef unsigned char bool;$/;"	t
bottom	src/lgfx/utility/lgfx_tjpgd.h	/^	uint32_t left, right, top, bottom;$/;"	m	struct:__anon552
bottom	src/lgfx/v0/lgfx_common.hpp	/^        int32_t bottom;$/;"	m	struct:lgfx::range_rect_t::__anon509::__anon510
bottom	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t bottom;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon50
brightness	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast8_t brightness    = 127;$/;"	m	struct:lgfx::v0::PanelCommon
buffer	src/lgfx/v0/LGFX_Device.hpp	/^      uint8_t* buffer = nullptr;$/;"	m	struct:lgfx::v0::LGFX_Device::_dmabufs_t
bufferLength	src/lgfx/v0/LGFX_Sprite.hpp	/^    uint32_t bufferLength(void) const { return (_bitwidth * _write_conv.bits >> 3) * _height; }$/;"	f	class:lgfx::v0::LGFX_Sprite
bufferLength	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE uint32_t bufferLength(void) const { return (_bitwidth * _write_bits >> 3) * _panel_height; }$/;"	f	struct:lgfx::v1::Panel_Sprite
bufferLength	src/lgfx/v1/LGFX_Sprite.hpp	/^    uint32_t bufferLength(void) const { return _panel_sprite.bufferLength(); }$/;"	f	class:lgfx::v1::LGFX_Sprite
burst_cycle	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t burst_cycle;          \/\/ バースト信号の数;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
burst_shift	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t burst_shift = 0;        \/\/ カラーバースト信号の反転・位相ずらし処理状態保持用;$/;"	m	struct:lgfx::v1::internal_t	file:
burst_shift_mask	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t burst_shift_mask;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
burst_start	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t burst_start;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
burst_wave	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint32_t burst_wave[2];       \/\/ カラーバースト信号の波形データ(EVENとODDで２通り)$/;"	m	struct:lgfx::v1::internal_t	file:
bus	src/lgfx/v1/panel/Panel_Device.hpp	/^    IBus* bus(void) const { return _bus; }$/;"	f	struct:lgfx::v1::Panel_Device
bus	src/lgfx/v1/panel/Panel_Device.hpp	/^    void bus(IBus* bus) { setBus(bus); };$/;"	f	struct:lgfx::v1::Panel_Device
bus	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      IBus* bus;$/;"	m	struct:lgfx::v1::LGFX::_detector_result_t
bus_i2c	src/lgfx/v1/Bus.hpp	/^    bus_i2c,$/;"	e	enum:lgfx::v1::bus_type_t
bus_image_push	src/lgfx/v1/Bus.hpp	/^    bus_image_push,$/;"	e	enum:lgfx::v1::bus_type_t
bus_parallel16	src/lgfx/v1/Bus.hpp	/^    bus_parallel16,$/;"	e	enum:lgfx::v1::bus_type_t
bus_parallel8	src/lgfx/v1/Bus.hpp	/^    bus_parallel8,$/;"	e	enum:lgfx::v1::bus_type_t
bus_shared	src/lgfx/v0/touch/TouchCommon.hpp	/^    bool bus_shared = false;$/;"	m	struct:lgfx::v0::TouchCommon
bus_shared	src/lgfx/v1/Touch.hpp	/^      bool bus_shared = true;          \/\/\/ パネルとタッチが同じバスに繋がっている場合true;$/;"	m	struct:lgfx::v1::ITouch::config_t
bus_shared	src/lgfx/v1/panel/Panel_Device.hpp	/^      bool bus_shared = true;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
bus_spi	src/lgfx/v1/Bus.hpp	/^    bus_spi,$/;"	e	enum:lgfx::v1::bus_type_t
bus_stream	src/lgfx/v1/Bus.hpp	/^    bus_stream,$/;"	e	enum:lgfx::v1::bus_type_t
bus_type_t	src/lgfx/v1/Bus.hpp	/^  enum bus_type_t$/;"	g	namespace:lgfx::v1
bus_unknown	src/lgfx/v1/Bus.hpp	/^    bus_unknown,$/;"	e	enum:lgfx::v1::bus_type_t
busy	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
busy	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  bool Bus_I2C::busy(void) const$/;"	f	class:lgfx::v1::Bus_I2C
busy	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::busy(void) const$/;"	f	class:lgfx::v1::Bus_Parallel8
busy	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
busy	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::busy(void) const$/;"	f	class:lgfx::v1::Bus_Parallel16
busy	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::busy(void) const$/;"	f	class:lgfx::v1::Bus_Parallel8
busy	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::busy(void) const$/;"	f	class:lgfx::v1::Bus_Parallel16
busy	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::busy(void) const$/;"	f	class:lgfx::v1::Bus_Parallel8
busy	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  bool Bus_I2C::busy(void) const$/;"	f	class:lgfx::v1::Bus_I2C
busy	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
busy	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  bool Bus_I2C::busy(void) const$/;"	f	class:lgfx::v1::Bus_I2C
busy	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
busy	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  bool Bus_I2C::busy(void) const$/;"	f	class:lgfx::v1::Bus_I2C
busy	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
busy	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  bool Bus_I2C::busy(void) const$/;"	f	class:lgfx::v1::Bus_I2C
busy	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
busy	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
busy	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  bool Bus_SPI::busy(void) const$/;"	f	class:lgfx::v1::Bus_SPI
bytes	src/lgfx/v0/lgfx_common.hpp	/^      bytes = bits >> 3;$/;"	m	struct:lgfx::v0::get_depth_impl
bytes_writer	src/lgfx/utility/lgfx_qoi.c	/^lfgx_qoi_writer_func bytes_writer;$/;"	v
cacheWriteBack	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void cacheWriteBack(const void* ptr, uint32_t size)$/;"	f	namespace:lgfx::v1
cache_num	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    static constexpr size_t cache_num = 8;  \/\/ 先読み保持可能なデータ数;$/;"	m	class:lgfx::v1::scanline_cache_t	file:
calcChecksum	src/lgfx/v0/touch/Touch_GT911.cpp	/^  static uint8_t calcChecksum(const uint8_t *buf, uint8_t len)$/;"	f	namespace:lgfx::v0
calcChecksum	src/lgfx/v1/touch/Touch_GT911.cpp	/^  static uint8_t calcChecksum(const uint8_t *buf, uint8_t len)$/;"	f	namespace:lgfx::v1
calcClockDiv	src/lgfx/v1/platforms/esp32/common.cpp	/^  void calcClockDiv(uint32_t* div_a, uint32_t* div_b, uint32_t* div_n, uint32_t* clkcnt, uint32_t baseClock, uint32_t targetFreq)$/;"	f	namespace:lgfx::v1
calibrateTouch	src/lgfx/v0/LGFX_Device.hpp	/^    void calibrateTouch(uint16_t *parameters, const T& color_fg, const T& color_bg, uint8_t size = 10)$/;"	f	class:lgfx::v0::LGFX_Device
calibrateTouch	src/lgfx/v1/LGFXBase.hpp	/^    void calibrateTouch(uint16_t *parameters, const T& color_fg, const T& color_bg, uint8_t size = 10)$/;"	f	class:lgfx::v1::LGFX_Device
calibrate_touch	src/lgfx/v0/LGFX_Device.hpp	/^    void calibrate_touch(uint16_t *parameters, uint32_t fg_rawcolor, uint32_t bg_rawcolor, uint8_t size)$/;"	f	class:lgfx::v0::LGFX_Device
calibrate_touch	src/lgfx/v1/LGFXBase.cpp	/^    void LGFX_Device::calibrate_touch(uint16_t *parameters, uint32_t fg_rawcolor, uint32_t bg_rawcolor, uint8_t size)$/;"	f	class:lgfx::v1::LGFX_Device
capacityBytes	src/lgfx/utility/lgfx_qrcode.c	/^    uint16_t capacityBytes;$/;"	m	struct:BitBucket	file:
cc_index	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      uint8_t cc_index = 0;$/;"	m	struct:lgfx::v1::Light_TC::config_t
cc_index	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      uint8_t cc_index = 0;$/;"	m	struct:lgfx::v1::Light_TCC::config_t
cc_index	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^      uint8_t cc_index = 0;$/;"	m	struct:lgfx::v1::Light_TC::config_t
channels	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t channels;$/;"	m	struct:_pngle_t	file:
channels	src/lgfx/utility/lgfx_qoi.c	/^  unsigned char channels;$/;"	m	struct:_qoi_desc_t	file:
charf	src/lgfx/utility/miniz.c	/^  typedef char charf;$/;"	t	file:
chartbl	src/lgfx/v0/lgfx_fonts.hpp	/^      const uint8_t *chartbl;$/;"	m	union:lgfx::v0::BaseFont::__anon458
chartbl	src/lgfx/v1/lgfx_fonts.hpp	/^      const uint8_t *chartbl;$/;"	m	union:lgfx::v1::BaseFont::__anon264
checkHeaderString	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      void checkHeaderString(const char* str)$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
check_pin_update	src/lgfx/v1/platforms/rp2040/common.cpp	/^    static std::pair<cpp::result<void, error_t>, bool> check_pin_update(int current_pin, int new_pin)$/;"	f	namespace:lgfx::v1::spi
chr_f16_20	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_20[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_21	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_21[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_22	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_22[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_23	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_23[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_24	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_24[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_25	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_25[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_26	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_26[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_27	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_27[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_28	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_28[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_29	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_29[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_2A	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_2A[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_2B	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_2B[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_2C	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_2C[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_2D	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_2D[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_2E	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_2E[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_2F	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_2F[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_30	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_30[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_31	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_31[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_32	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_32[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_33	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_33[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_34	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_34[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_35	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_35[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_36	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_36[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_37	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_37[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_38	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_38[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_39	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_39[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_3A	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_3A[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_3B	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_3B[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_3C	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_3C[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_3D	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_3D[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_3E	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_3E[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_3F	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_3F[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_40	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_40[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_41	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_41[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_42	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_42[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_43	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_43[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_44	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_44[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_45	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_45[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_46	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_46[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_47	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_47[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_48	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_48[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_49	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_49[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_4A	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_4A[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_4B	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_4B[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_4C	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_4C[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_4D	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_4D[32] =         \/\/ 2 unsigned chars per row$/;"	v
chr_f16_4E	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_4E[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_4F	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_4F[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_50	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_50[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_51	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_51[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_52	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_52[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_53	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_53[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_54	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_54[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_55	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_55[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_56	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_56[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_57	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_57[32] =         \/\/ 2 unsigned chars per row$/;"	v
chr_f16_58	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_58[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_59	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_59[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_5A	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_5A[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_5B	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_5B[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_5C	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_5C[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_5D	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_5D[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_5E	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_5E[32] =         \/\/ 1 unsigned chars per row$/;"	v
chr_f16_5F	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_5F[32] =         \/\/ 1 unsigned chars per row$/;"	v
chr_f16_60	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_60[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_61	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_61[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_62	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_62[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_63	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_63[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_64	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_64[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_65	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_65[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_66	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_66[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_67	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_67[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_68	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_68[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_69	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_69[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_6A	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_6A[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_6B	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_6B[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_6C	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_6C[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_6D	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_6D[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_6E	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_6E[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_6F	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_6F[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_70	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_70[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_71	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_71[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_72	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_72[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_73	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_73[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_74	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_74[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_75	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_75[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_76	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_76[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_77	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_77[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_78	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_78[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_79	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_79[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_7A	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_7A[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_7B	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_7B[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_7C	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_7C[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_7D	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_7D[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_7E	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_7E[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f16_7F	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char chr_f16_7F[16] =         \/\/ 1 unsigned char per row$/;"	v
chr_f32_20	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_20[] = $/;"	v
chr_f32_21	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_21[] = $/;"	v
chr_f32_22	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_22[] = $/;"	v
chr_f32_23	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_23[] = $/;"	v
chr_f32_24	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_24[] = $/;"	v
chr_f32_25	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_25[] = $/;"	v
chr_f32_26	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_26[] = $/;"	v
chr_f32_27	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_27[] = $/;"	v
chr_f32_28	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_28[] = $/;"	v
chr_f32_29	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_29[] = $/;"	v
chr_f32_2A	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_2A[] = $/;"	v
chr_f32_2B	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_2B[] = $/;"	v
chr_f32_2C	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_2C[] = $/;"	v
chr_f32_2D	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_2D[] = $/;"	v
chr_f32_2E	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_2E[] = $/;"	v
chr_f32_2F	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_2F[] = $/;"	v
chr_f32_30	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_30[] = $/;"	v
chr_f32_31	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_31[] = $/;"	v
chr_f32_32	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_32[] = $/;"	v
chr_f32_33	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_33[] = $/;"	v
chr_f32_34	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_34[] = $/;"	v
chr_f32_35	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_35[] = $/;"	v
chr_f32_36	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_36[] = $/;"	v
chr_f32_37	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_37[] = $/;"	v
chr_f32_38	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_38[] = $/;"	v
chr_f32_39	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_39[] = $/;"	v
chr_f32_3A	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_3A[] = $/;"	v
chr_f32_3B	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_3B[] = $/;"	v
chr_f32_3C	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_3C[] = $/;"	v
chr_f32_3D	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_3D[] = $/;"	v
chr_f32_3E	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_3E[] = $/;"	v
chr_f32_3F	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_3F[] = $/;"	v
chr_f32_40	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_40[] = $/;"	v
chr_f32_41	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_41[] = $/;"	v
chr_f32_42	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_42[] = $/;"	v
chr_f32_43	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_43[] = $/;"	v
chr_f32_44	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_44[] = $/;"	v
chr_f32_45	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_45[] = $/;"	v
chr_f32_46	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_46[] = $/;"	v
chr_f32_47	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_47[] = $/;"	v
chr_f32_48	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_48[] = $/;"	v
chr_f32_49	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_49[] = $/;"	v
chr_f32_4A	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_4A[] = $/;"	v
chr_f32_4B	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_4B[] = $/;"	v
chr_f32_4C	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_4C[] = $/;"	v
chr_f32_4D	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_4D[] = $/;"	v
chr_f32_4E	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_4E[] = $/;"	v
chr_f32_4F	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_4F[] = $/;"	v
chr_f32_50	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_50[] = $/;"	v
chr_f32_51	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_51[] = $/;"	v
chr_f32_52	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_52[] = $/;"	v
chr_f32_53	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_53[] = $/;"	v
chr_f32_54	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_54[] = $/;"	v
chr_f32_55	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_55[] = $/;"	v
chr_f32_56	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_56[] = $/;"	v
chr_f32_57	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_57[] = $/;"	v
chr_f32_58	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_58[] = $/;"	v
chr_f32_59	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_59[] = $/;"	v
chr_f32_5A	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_5A[] = $/;"	v
chr_f32_5B	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_5B[] = $/;"	v
chr_f32_5C	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_5C[] = $/;"	v
chr_f32_5D	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_5D[] = $/;"	v
chr_f32_5E	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_5E[] = $/;"	v
chr_f32_5F	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_5F[] = $/;"	v
chr_f32_60	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_60[] = $/;"	v
chr_f32_61	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_61[] = $/;"	v
chr_f32_62	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_62[] = $/;"	v
chr_f32_63	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_63[] = $/;"	v
chr_f32_64	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_64[] = $/;"	v
chr_f32_65	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_65[] = $/;"	v
chr_f32_66	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_66[] = $/;"	v
chr_f32_67	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_67[] = $/;"	v
chr_f32_68	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_68[] = $/;"	v
chr_f32_69	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_69[] = $/;"	v
chr_f32_6A	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_6A[] = $/;"	v
chr_f32_6B	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_6B[] = $/;"	v
chr_f32_6C	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_6C[] = $/;"	v
chr_f32_6D	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_6D[] = $/;"	v
chr_f32_6E	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_6E[] = $/;"	v
chr_f32_6F	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_6F[] = $/;"	v
chr_f32_70	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_70[] = $/;"	v
chr_f32_71	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_71[] = $/;"	v
chr_f32_72	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_72[] = $/;"	v
chr_f32_73	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_73[] = $/;"	v
chr_f32_74	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_74[] = $/;"	v
chr_f32_75	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_75[] = $/;"	v
chr_f32_76	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_76[] = $/;"	v
chr_f32_77	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_77[] = $/;"	v
chr_f32_78	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_78[] = $/;"	v
chr_f32_79	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_79[] = $/;"	v
chr_f32_7A	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_7A[] = $/;"	v
chr_f32_7B	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_7B[] = $/;"	v
chr_f32_7C	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_7C[] = $/;"	v
chr_f32_7D	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_7D[] = $/;"	v
chr_f32_7E	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_7E[] = $/;"	v
chr_f32_7F	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char chr_f32_7F[] = $/;"	v
chr_f64_20	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_20[] = $/;"	v
chr_f64_2D	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_2D[] = $/;"	v
chr_f64_2E	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_2E[] = $/;"	v
chr_f64_30	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_30[] = $/;"	v
chr_f64_31	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_31[] = $/;"	v
chr_f64_32	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_32[] = $/;"	v
chr_f64_33	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_33[] = $/;"	v
chr_f64_34	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_34[] = $/;"	v
chr_f64_35	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_35[] = $/;"	v
chr_f64_36	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_36[] = $/;"	v
chr_f64_37	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_37[] = $/;"	v
chr_f64_38	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_38[] = $/;"	v
chr_f64_39	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_39[] = $/;"	v
chr_f64_3A	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_3A[] = $/;"	v
chr_f64_61	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_61[] = $/;"	v
chr_f64_6D	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_6D[] = $/;"	v
chr_f64_70	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char chr_f64_70[] = $/;"	v
chr_f72_20	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_20[] = $/;"	v
chr_f72_20	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_20[] = $/;"	v
chr_f72_2D	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_2D[] = $/;"	v
chr_f72_2D	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_2D[] = $/;"	v
chr_f72_2E	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_2E[] = $/;"	v
chr_f72_2E	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_2E[] = $/;"	v
chr_f72_30	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_30[] = $/;"	v
chr_f72_30	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_30[] = $/;"	v
chr_f72_31	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_31[] = $/;"	v
chr_f72_31	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_31[] = $/;"	v
chr_f72_32	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_32[] = $/;"	v
chr_f72_32	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_32[] = $/;"	v
chr_f72_33	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_33[] = $/;"	v
chr_f72_33	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_33[] = $/;"	v
chr_f72_34	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_34[] = $/;"	v
chr_f72_34	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_34[] = $/;"	v
chr_f72_35	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_35[] = $/;"	v
chr_f72_35	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_35[] = $/;"	v
chr_f72_36	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_36[] = $/;"	v
chr_f72_36	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_36[] = $/;"	v
chr_f72_37	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_37[] = $/;"	v
chr_f72_37	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_37[] = $/;"	v
chr_f72_38	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_38[] = $/;"	v
chr_f72_38	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_38[] = $/;"	v
chr_f72_39	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_39[] = $/;"	v
chr_f72_39	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_39[] = $/;"	v
chr_f72_3A	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char chr_f72_3A[] = $/;"	v
chr_f72_3A	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char chr_f72_3A[] = $/;"	v
chr_f7s_20	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_20[] = $/;"	v
chr_f7s_2D	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_2D[] = $/;"	v
chr_f7s_2E	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_2E[] = $/;"	v
chr_f7s_30	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_30[] = $/;"	v
chr_f7s_31	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_31[] = $/;"	v
chr_f7s_32	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_32[] = $/;"	v
chr_f7s_33	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_33[] = $/;"	v
chr_f7s_34	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_34[] = $/;"	v
chr_f7s_35	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_35[] = $/;"	v
chr_f7s_36	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_36[] = $/;"	v
chr_f7s_37	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_37[] = $/;"	v
chr_f7s_38	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_38[] = $/;"	v
chr_f7s_39	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_39[] = $/;"	v
chr_f7s_3A	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char chr_f7s_3A[] = $/;"	v
chr_hgt_f16	src/lgfx/Fonts/Font16.h	/^#define chr_hgt_f16 /;"	d
chr_hgt_f32	src/lgfx/Fonts/Font32rle.h	/^#define chr_hgt_f32 /;"	d
chr_hgt_f64	src/lgfx/Fonts/Font64rle.h	/^#define chr_hgt_f64 /;"	d
chr_hgt_f72	src/lgfx/Fonts/Font72rle.h	/^#define chr_hgt_f72 /;"	d
chr_hgt_f72	src/lgfx/Fonts/Font72x53rle.h	/^#define chr_hgt_f72 /;"	d
chr_hgt_f7s	src/lgfx/Fonts/Font7srle.h	/^#define chr_hgt_f7s /;"	d
chroma_level	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^      uint8_t chroma_level = 128;$/;"	m	struct:lgfx::v1::Panel_CVBS::config_detail_t
chrtbl_f16	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char* const chrtbl_f16[96] =       \/\/ character pointer table$/;"	v
chrtbl_f32	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char* const chrtbl_f32[96] =       \/\/ character pointer table$/;"	v
chrtbl_f64	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char* const chrtbl_f64[96] =        \/\/ character pointer table$/;"	v
chrtbl_f72	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char * const chrtbl_f72[96] =        \/\/ character pointer table$/;"	v
chrtbl_f72	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char * const chrtbl_f72[96] =        \/\/ character pointer table$/;"	v
chrtbl_f7s	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char* const chrtbl_f7s[96] =        \/\/ character pointer table$/;"	v
clear	src/lgfx/v0/LGFXBase.hpp	/^                         inline void clear       ( void )          { setColor(_base_rgb888); fillScreen(); }$/;"	f	class:lgfx::v0::LGFXBase
clear	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void clear       ( const T& color) { setBaseColor(color); clear(); }$/;"	f	class:lgfx::v0::LGFXBase
clear	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void clear       ( void )          { setColor(_base_rgb888); fillScreen(); }$/;"	f	class:lgfx::v1::LGFXBase
clear	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void clear       ( const T& color) { setBaseColor(color); clear(); }$/;"	f	class:lgfx::v1::LGFXBase
clearClipRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::clearClipRect(void)$/;"	f	class:lgfx::v0::LGFXBase
clearClipRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::clearClipRect(void)$/;"	f	class:lgfx::v1::LGFXBase
clearDisplay	src/lgfx/v0/LGFXBase.hpp	/^                         inline void clearDisplay( void )          { setColor(_base_rgb888); fillScreen(); }$/;"	f	class:lgfx::v0::LGFXBase
clearDisplay	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void clearDisplay( const T& color) { setBaseColor(color); clear(); }$/;"	f	class:lgfx::v0::LGFXBase
clearDisplay	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void clearDisplay( void )          { setColor(_base_rgb888); fillScreen(); }$/;"	f	class:lgfx::v1::LGFXBase
clearDisplay	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void clearDisplay( const T& color) { setBaseColor(color); clear(); }$/;"	f	class:lgfx::v1::LGFXBase
clearScrollRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::clearScrollRect(void)$/;"	f	class:lgfx::v0::LGFXBase
clearScrollRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::clearScrollRect(void)$/;"	f	class:lgfx::v1::LGFXBase
clear_rx_fifo	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void clear_rx_fifo()$/;"	f	class:lgfx::v1::Bus_SPI
clock	src/lgfx/v1/platforms/samd21/common.hpp	/^      uint8_t   clock;$/;"	m	struct:lgfx::v1::samd21::sercom_data_t
cmd_caset	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t cmd_caset = 0;$/;"	m	struct:lgfx::v0::PanelCommon
cmd_ramrd	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t cmd_ramrd = 0;$/;"	m	struct:lgfx::v0::PanelCommon
cmd_ramwr	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t cmd_ramwr = 0;$/;"	m	struct:lgfx::v0::PanelCommon
cmd_raset	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t cmd_raset = 0;$/;"	m	struct:lgfx::v0::PanelCommon
cmd_rddid	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t cmd_rddid = 0;$/;"	m	struct:lgfx::v0::PanelCommon
colmod_t	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    enum colmod_t$/;"	g	struct:lgfx::v0::PanelIlitekCommon
colmod_t	src/lgfx/v1/panel/Panel_LCD.hpp	/^    enum colmod_t$/;"	g	struct:lgfx::v1::Panel_LCD
color16to24	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint32_t color16to24(uint32_t rgb565) { return lgfx::convert_rgb565_to_rgb888(rgb565); }$/;"	f	class:lgfx::v0::LGFXBase
color16to24	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static uint32_t color16to24(uint32_t rgb565) { return lgfx::color_convert<rgb888_t,rgb565_t>(rgb565); }$/;"	f	class:lgfx::v1::LGFXBase
color16to8	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint8_t  color16to8(uint32_t rgb565) { return lgfx::convert_rgb565_to_rgb332(rgb565); }$/;"	f	class:lgfx::v0::LGFXBase
color16to8	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static uint8_t  color16to8( uint32_t rgb565) { return lgfx::color_convert<rgb332_t,rgb565_t>(rgb565); }$/;"	f	class:lgfx::v1::LGFXBase
color24to16	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint16_t color24to16(uint32_t rgb888) { return lgfx::convert_rgb888_to_rgb565(rgb888); }$/;"	f	class:lgfx::v0::LGFXBase
color24to16	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static uint16_t color24to16(uint32_t rgb888) { return lgfx::color_convert<rgb565_t,rgb888_t>(rgb888); }$/;"	f	class:lgfx::v1::LGFXBase
color332	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint8_t  color332(uint8_t r, uint8_t g, uint8_t b) { return lgfx::color332(r, g, b); }$/;"	f	class:lgfx::v0::LGFXBase
color332	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline static constexpr uint8_t color332(uint8_t r, uint8_t g, uint8_t b) { return (r >> 5) << 5 | (g >> 5) << 2 | b >> 6; }$/;"	f	namespace:lgfx::v0
color332	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static constexpr uint8_t  color332(uint8_t r, uint8_t g, uint8_t b) { return lgfx::color332(r, g, b); }$/;"	f	class:lgfx::v1::LGFXBase
color332	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint8_t  color332(uint8_t r, uint8_t g, uint8_t b) { return ((((r >> 5) << 3) + (g >> 5)) << 2) + (b >> 6); }$/;"	f	namespace:lgfx::v1
color565	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint16_t color565(uint8_t r, uint8_t g, uint8_t b) { return lgfx::color565(r, g, b); }$/;"	f	class:lgfx::v0::LGFXBase
color565	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline static constexpr uint16_t color565(uint8_t r, uint8_t g, uint8_t b) { return (r >> 3) <<11 | (g >> 2) << 5 | b >> 3; }$/;"	f	namespace:lgfx::v0
color565	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static constexpr uint16_t color565(uint8_t r, uint8_t g, uint8_t b) { return lgfx::color565(r, g, b); }$/;"	f	class:lgfx::v1::LGFXBase
color565	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint16_t color565(uint8_t r, uint8_t g, uint8_t b) { return (r >> 3) <<11 | (g >> 2) << 5 | b >> 3; }$/;"	f	namespace:lgfx::v1
color888	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint32_t color888(uint8_t r, uint8_t g, uint8_t b) { return lgfx::color888(r, g, b); }$/;"	f	class:lgfx::v0::LGFXBase
color888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline static constexpr uint32_t color888(uint8_t r, uint8_t g, uint8_t b) { return  r << 16 | g << 8 | b; }$/;"	f	namespace:lgfx::v0
color888	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static constexpr uint32_t color888(uint8_t r, uint8_t g, uint8_t b) { return lgfx::color888(r, g, b); }$/;"	f	class:lgfx::v1::LGFXBase
color888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t color888(uint8_t r, uint8_t g, uint8_t b) { return  r << 16 | g << 8 | b; }$/;"	f	namespace:lgfx::v1
color8to16	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint16_t color8to16(uint32_t rgb332) { return lgfx::convert_rgb332_to_rgb565(rgb332); }$/;"	f	class:lgfx::v0::LGFXBase
color8to16	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static uint16_t color8to16( uint32_t rgb332) { return lgfx::color_convert<rgb565_t,rgb332_t>(rgb332); }$/;"	f	class:lgfx::v1::LGFXBase
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , bgr666_t   >(uint32_t c) { c = ((((c | 0x3FC0)<<8) +  ((c>>8)&0x3F))<<8) + ((c>>16)&0x3F); return (c << 2) + ((c >> 4) & 0x030303); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , bgr888_t   >(uint32_t c) { return (c | 0xFF00)<<16 | (((c>>8)&0xFF))<<8  | ((c>>16)&0xFF); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , bgra8888_t >(uint32_t c) { return getSwap32(c); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , grayscale_t>(uint32_t c) { return (c * 0x010101) | (0xFF<<24); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , rgb332_t   >(uint32_t c) { uint_fast8_t r = (c >>  5) & 0x07; r = (((r<<3)+r)<<2)+(r>>1); uint_fast8_t g = c & 0x1C; g = (g << 3) + g + (g >> 3); uint_fast8_t b = (c & 0x03); b = (b << 2) + b; b = (b << 4) + b; return (((((0xFF<<8)+r)<<8)+g)<<8)+b; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , rgb565_t   >(uint32_t c) { uint_fast8_t r = (c >> 11) & 0x1F; r = (r << 3) + (r >> 2); uint_fast8_t g = (c >> 5) & 0x3F; g = (g << 2) + (g >> 4); uint_fast8_t b = c & 0x1F; b = (b << 3) + (b >> 2); return (((((0xFF<<8)+r)<<8)+g)<<8)+b; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , rgb888_t   >(uint32_t c) { return c | (0xFF << 24); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<argb8888_t , swap565_t  >(uint32_t c) { uint_fast16_t g = (c & 7); uint_fast16_t b = (c >> 8) & 0x1F;  b = (b << 3) + (b >> 2); uint_fast16_t r = (c >> 3) & 0x1F;  r = (r << 3) + (r >> 2); return (((((((((0xFF << 8) + r) << 3) + g) << 3) + (c >> 13)) << 2) + (g >> 1)) << 8) + b; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , argb8888_t >(uint32_t c) { return ((c >> 2) & 0x3F) << 16 | ((c >> 10) & 0x3F) << 8 | ((c >> 18) & 0x3F);  }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , bgr888_t   >(uint32_t c) { return (c >>  2) & 0x3F3F3F; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , bgra8888_t >(uint32_t c) { return (c >> 10) & 0x3F3F3F; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , grayscale_t>(uint32_t c) { return (c >>  2) * 0x010101; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , rgb332_t   >(uint32_t c) { uint_fast8_t r = (c >>  5) & 0x07; r = (r << 3) +  r;       uint_fast8_t g = (c >> 2) & 0x07; g = (g << 3) + g; uint_fast8_t b = (c & 3) * 0x15; return (((b<<8)+g)<<8)+r; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , rgb565_t   >(uint32_t c) { uint_fast8_t r = (c >> 11) & 0x1F; r = (r << 1) + (r >> 4); uint_fast8_t g = (c >> 5) & 0x3F; uint_fast8_t b = c & 0x1F; b = (b << 1) + (b >> 4); return (((b<<8)+g)<<8)+r; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , rgb888_t   >(uint32_t c) { return ((c >> 2) & 0x3F) << 16 | ((c >> 10) & 0x3F) << 8 | ((c >> 18) & 0x3F);  }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr666_t   , swap565_t  >(uint32_t c) { uint_fast16_t g = (c & 7); g = (g << 3) + (c >> 13); uint_fast16_t b = (c >> 8) & 0x1F;  b = (b << 1) + (b >> 4); uint_fast16_t r = (c >> 3) & 0x1F;  r = (r << 1) + (r >> 4); return (((b<<8)+g)<<8)+r; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , argb8888_t >(uint32_t c) { return getSwap24(c); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , bgr666_t   >(uint32_t c) { return (c << 2) + ((c >> 4) & 0x030303); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , bgra8888_t >(uint32_t c) { return c >> 8; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , grayscale_t>(uint32_t c) { return ((c << 16) + c) + (c << 8); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , rgb332_t   >(uint32_t c) { uint_fast8_t r = (c >>  5) & 0x07; r = (((r<<3)+r)<<2)+(r>>1); uint_fast8_t g = c & 0x1C; g = (g << 3) + g + (g >> 3); uint_fast8_t b = (c & 0x03) * 0x55; return (((b<<8)+g)<<8)+r; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , rgb565_t   >(uint32_t c) { uint_fast8_t r = (c >> 11) & 0x1F; r = (r << 3) + (r >> 2); uint_fast8_t g = (c >> 5) & 0x3F; g = (g << 2) + (g >> 4); uint_fast8_t b = c & 0x1F; b = (b << 3) + (b >> 2); return (((b<<8)+g)<<8)+r; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , rgb888_t   >(uint32_t c) { return getSwap24(c); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgr888_t   , swap565_t  >(uint32_t c) { uint_fast16_t g = (c & 7); uint_fast16_t b = (c >> 8) & 0x1F;  b = (b << 3) + (b >> 2); uint_fast16_t r = (c >> 3) & 0x1F;  r = (r << 3) + (r >> 2); return (((((((b << 3) + g) << 3) + (c >> 13)) << 2) + (g >> 1)) << 8) + r; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , argb8888_t >(uint32_t c) { return getSwap32(c); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , bgr666_t   >(uint32_t c) { c<<=2; return (c << 8) + ((c & 0xC0C0C0) << 2) + 0xFF; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , bgr888_t   >(uint32_t c) { return (c << 8) + 0xFF; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , grayscale_t>(uint32_t c) { return (((c << 8) + c) << 16) + (c << 8) + 0xFF; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , rgb332_t   >(uint32_t c) { uint_fast8_t r = (c>> 5)*0x49; uint_fast8_t g = c & 0x1C; g = (g << 3) + g + (g >> 3); uint_fast8_t b = (c & 0x03) * 0x55; return (((((b<<8)+g)<<9)+r)<<7)|0xFF; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , rgb565_t   >(uint32_t c) { uint_fast8_t r = (c >> 11) & 0x1F; r = (r << 3) + (r >> 2); uint_fast8_t g = (c >> 5) & 0x3F; g = (g << 2) + (g >> 4); uint_fast8_t b = c & 0x1F; b = (b << 3) + (b >> 2); return (((((b<<8)+g)<<8)+r)<<8)+0xFF; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , rgb888_t   >(uint32_t c) { return (((c << 8) + ((c >> 8) & 0xFF)) << 16) + ((uint16_t)(c >> 8) | 0xFF); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<bgra8888_t , swap565_t  >(uint32_t c) { uint_fast16_t g = (c & 7); uint_fast16_t b = (c >> 8) & 0x1F;  b = (b << 3) + (b >> 2); uint_fast16_t r = (c >> 3) & 0x1F;  r = (r << 3) + (r >> 2); return (((((((((b << 3) + g) << 3) + (c >> 13)) << 2) + (g >> 1)) << 8) + r) << 8) + 0xFF; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, argb8888_t >(uint32_t c) { uint_fast16_t g = ( c >> 8) & 0xFF; g = (g << 1) + (g >> 7); return (g + ((c>>16)&0xFF)+(c&0xFF))>>2; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, bgr666_t   >(uint32_t c) { uint_fast16_t g = ((c >> 8) & 0x3F)*0x82; uint_fast16_t rb = ((c>>16) + (c&0x3F))*0x41; return (rb+g)>>6; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, bgr888_t   >(uint32_t c) { uint_fast16_t g = ( c >> 8) & 0xFF; g = (g << 1) + (g >> 7); return (g + ((c>>16)&0xFF)+(c&0xFF))>>2; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, bgra8888_t >(uint32_t c) { return color_convert<grayscale_t, bgr888_t>(c>>8); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, rgb332_t   >(uint32_t c) { uint_fast16_t t = ((c>>5)*0x49); t += ((c>>2)&7)*0x92; t += (c&3) * 0xAA; return t >> 3; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, rgb565_t   >(uint32_t c) { uint_fast16_t g = ( c & 0x07E0); g |= g >> 6; uint_fast16_t rb = ((c>>11)+(c&0x1F))*0x21; return (rb+g)>>4; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, rgb888_t   >(uint32_t c) { uint_fast16_t g = ( c >> 8) & 0xFF; g = (g << 1) + (g >> 7); return (g + ((c>>16)&0xFF)+(c&0xFF))>>2; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<grayscale_t, swap565_t  >(uint32_t c) { uint_fast16_t rb = ((((c>>3)&0x1F) + ((c>>8)&0x1F)) * 0x21) >> 2; uint_fast16_t g = (c & 7); g = (((g << 3) + (c >> 13)) << 3) + g; return (rb+g) >> 2; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , argb8888_t >(uint32_t c) { return (((((c >>21) & 7) << 3) + ((c >>13) & 7)) << 2) + ((c >> 6) & 3); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , bgr666_t   >(uint32_t c) { return (((((c >> 3) & 7) << 3) + ((c >>11) & 7)) << 2) + ((c >>20) & 3); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , bgr888_t   >(uint32_t c) { return (((((c >> 5) & 7) << 3) + ((c >>13) & 7)) << 2) + ((c >>22) & 3); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , bgra8888_t >(uint32_t c) { return (((((c >>13) & 7) << 3) + ((c >>21) & 7)) << 2) + ((c >>30) & 3); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , grayscale_t>(uint32_t c) { return ((c>>5)*0x49)>>1; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , rgb565_t   >(uint32_t c) { return (((((c >>13) & 7) << 3) + ((c >> 8) & 7)) << 2) + ((c >> 3) & 3); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , rgb888_t   >(uint32_t c) { return (((((c >>21) & 7) << 3) + ((c >>13) & 7)) << 2) + ((c >> 6) & 3); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb332_t   , swap565_t  >(uint32_t c) { return (((((c >> 5) & 7) << 3) + ( c       & 7)) << 2) + ((c >>11) & 3); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , argb8888_t >(uint32_t c) { return (((((c >>19) & 0x1F) << 6) + ((c >>10) & 0x3F)) << 5) + ((c >> 3) & 0x1F); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , bgr666_t   >(uint32_t c) { return (((((c >> 1) & 0x1F) << 6) + ((c >> 8) & 0x3F)) << 5) + (c >> 17); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , bgr888_t   >(uint32_t c) { return (((((c >> 3) & 0x1F) << 6) + ((c >>10) & 0x3F)) << 5) + (c >> 19); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , bgra8888_t >(uint32_t c) { return (((((c >>11) & 0x1F) << 6) + ((c >>18) & 0x3F)) << 5) +((c >> 27) & 0x1F); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , grayscale_t>(uint32_t c) { uint_fast8_t r = c >> 3; return ((c&0xFC) << 3) + (r | r << 11); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , rgb332_t   >(uint32_t c) { uint_fast8_t r = (c >> 5) & 0x07; r = (r << 2) + (r >> 1); uint_fast8_t g = (c >> 2) & 0x07; g = (g << 3) + g; uint_fast8_t b = c & 0x03; b = (((b << 2) + b) << 1) + (b >> 1); return (((r<<6)+g)<<5)+b; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , rgb888_t   >(uint32_t c) { return (((((c >>19) & 0x1F) << 6) + ((c >>10) & 0x3F)) << 5) + ((c >> 3) & 0x1F); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb565_t   , swap565_t  >(uint32_t c) { return getSwap16(c); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , argb8888_t >(uint32_t c) { return (c << 8) >> 8; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , bgr666_t   >(uint32_t c) { return getSwap24((c << 2) + ((c >> 4) & 0x030303)); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , bgr888_t   >(uint32_t c) { return getSwap24(c); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , bgra8888_t >(uint32_t c) { return ((c>>8) & 0xFF) << 16 | ((c>>16)&0xFF)<<8 | (c>>24); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , grayscale_t>(uint32_t c) { return c*0x010101; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , rgb332_t   >(uint32_t c) { uint_fast8_t r = (c >>  5) & 0x07; r = (((r<<3)+r)<<2)+(r>>1); uint_fast8_t g = c & 0x1C; g = (g << 3) + g + (g >> 3); uint_fast8_t b = (c & 0x03); b = (b << 2) + b; b = (b << 4) + b; return (((r<<8)+g)<<8)+b; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , rgb565_t   >(uint32_t c) { uint_fast8_t r = (c >> 11) & 0x1F; r = (r << 3) + (r >> 2); uint_fast8_t g = (c >> 5) & 0x3F; g = (g << 2) + (g >> 4); uint_fast8_t b = c & 0x1F; b = (b << 3) + (b >> 2); return (((r<<8)+g)<<8)+b; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<rgb888_t   , swap565_t  >(uint32_t c) { uint_fast16_t g = (c & 7); uint_fast16_t b = (c >> 8) & 0x1F;  b = (b << 3) + (b >> 2); uint_fast16_t r = (c >> 3) & 0x1F;  r = (r << 3) + (r >> 2); return (((((((r << 3) + g) << 3) + (c >> 13)) << 2) + (g >> 1)) << 8) + b; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , argb8888_t >(uint32_t c) { uint_fast8_t r = (c >> 19) & 0x1F; uint_fast8_t gh = (c >> 13) & 0x07; uint_fast8_t gl = (c >> 10) & 0x07; uint_fast8_t b = (c >>  3) & 0x1F; return (((((gl << 5) + b) << 5) + r) << 3) + gh; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , bgr666_t   >(uint32_t c) { uint_fast8_t r = (c >>  1) & 0x1F; uint_fast8_t gh = (c >> 11) & 0x07; uint_fast8_t gl = (c >>  8) & 0x07; uint_fast8_t b = (c >> 17) & 0x1F; return (((((gl << 5) + b) << 5) + r) << 3) + gh; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , bgr888_t   >(uint32_t c) { uint_fast8_t r = (c >>  3) & 0x1F; uint_fast8_t gh = (c >> 13) & 0x07; uint_fast8_t gl = (c >> 10) & 0x07; uint_fast8_t b = (c >> 19) & 0x1F; return (((((gl << 5) + b) << 5) + r) << 3) + gh; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , bgra8888_t >(uint32_t c) { uint_fast8_t r = (c >> 11) & 0x1F; uint_fast8_t gh = (c >> 21) & 0x07; uint_fast8_t gl = (c >> 18) & 0x07; uint_fast8_t b = (c >> 27) & 0x1F; return (((((gl << 5) + b) << 5) + r) << 3) + gh; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , grayscale_t>(uint32_t c) { uint_fast8_t rb = c >> 3; return ((((((c & 0x1C) << 3) + rb) << 5) + rb) << 3) + (c >> 5); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , rgb332_t   >(uint32_t c) { uint_fast8_t r = (c >> 5) & 0x07; r = (r << 2) + (r >> 1); uint_fast8_t g = (c >> 2) & 0x07; uint_fast8_t b = c & 0x03; b = (((b << 2) + b) << 1) + (b >> 1); return (((((g<<5)+b)<<5)+r)<<3)+g; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , rgb565_t   >(uint32_t c) { return getSwap16(c); }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<> LGFX_INLINE uint32_t color_convert<swap565_t  , rgb888_t   >(uint32_t c) { uint_fast8_t r = (c >> 19) & 0x1F; uint_fast8_t gh = (c >> 13) & 0x07; uint_fast8_t gl = (c >> 10) & 0x07; uint_fast8_t b = (c >>  3) & 0x1F; return (((((gl << 5) + b) << 5) + r) << 3) + gh; }$/;"	f	namespace:lgfx::v1
color_convert	src/lgfx/v1/misc/colortype.hpp	/^  template<class TDst, class TSrc> LGFX_INLINE uint32_t color_convert(uint32_t c) { return c; }$/;"	f	namespace:lgfx::v1
color_type	src/lgfx/utility/lgfx_pngle.h	/^  uint8_t color_type;$/;"	m	struct:_pngle_ihdr_t
colormask	src/lgfx/v0/lgfx_common.hpp	/^      colormask = (1 << bits) - 1;$/;"	m	struct:lgfx::v0::get_depth_impl
colors	src/lgfx/v0/lgfx_common.hpp	/^  namespace colors  \/\/ Colour enumeration$/;"	n	namespace:lgfx::v0
colors	src/lgfx/v1/misc/enum.hpp	/^  namespace colors  \/\/ Colour enumeration$/;"	n	namespace:lgfx::v1
colorspace	src/lgfx/utility/lgfx_qoi.c	/^  unsigned char colorspace;$/;"	m	struct:_qoi_desc_t	file:
commandList	src/lgfx/v0/LGFX_Device.hpp	/^    bool commandList(const uint8_t *addr)$/;"	f	class:lgfx::v0::LGFX_Device
command_list	src/lgfx/v0/LGFX_Device.hpp	/^    void command_list(const uint8_t *addr)$/;"	f	class:lgfx::v0::LGFX_Device
command_list	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::command_list(const uint8_t *addr)$/;"	f	class:lgfx::v1::Panel_Device
compare_bit_affine	src/lgfx/v1/misc/pixelcopy.cpp	/^    uint32_t pixelcopy_t::compare_bit_affine(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	class:lgfx::v1::pixelcopy_t
compare_bit_fast	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t compare_bit_fast(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
compare_rgb_affine	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t compare_rgb_affine(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
compare_rgb_fast	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t compare_rgb_fast(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
compress	src/lgfx/utility/miniz.c	/^  #define compress /;"	d	file:
compress2	src/lgfx/utility/miniz.c	/^  #define compress2 /;"	d	file:
compressBound	src/lgfx/utility/miniz.c	/^  #define compressBound /;"	d	file:
compression	src/lgfx/utility/lgfx_pngle.h	/^  uint8_t compression;$/;"	m	struct:_pngle_ihdr_t
comps_in_frame	src/lgfx/utility/lgfx_tjpgd.h	/^	uint8_t comps_in_frame;		\/* 1=Y(grayscale)  3=YCrCb *\/$/;"	m	struct:lgfxJdec
config	src/lgfx/v1/Touch.hpp	/^    config_t config(void) const { return _cfg; }$/;"	f	struct:lgfx::v1::ITouch
config	src/lgfx/v1/Touch.hpp	/^    void config(const config_t& config) { _cfg = config; }$/;"	f	struct:lgfx::v1::ITouch
config	src/lgfx/v1/panel/Panel_Device.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	struct:lgfx::v1::Panel_Device
config	src/lgfx/v1/panel/Panel_Device.hpp	/^    void config(const config_t& cfg) { _cfg = cfg; }$/;"	f	struct:lgfx::v1::Panel_Device
config	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  void Bus_Stream::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_Stream
config	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_Stream
config	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_HUB75
config	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_HUB75
config	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Light_PWM
config	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^    void config(const config_t &cfg) { _cfg = cfg; }$/;"	f	class:lgfx::v1::Light_PWM
config	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_Parallel16
config	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_Parallel16
config	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_Parallel16
config	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_Parallel16
config	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_Parallel8
config	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  void Bus_RGB::config(const config_t& cfg)$/;"	f	class:lgfx::v1::Bus_RGB
config	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_RGB
config	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Light_PWM
config	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^    void config(const config_t &cfg) { _cfg = cfg; }$/;"	f	class:lgfx::v1::Light_PWM
config	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_I2C
config	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::config(const config_t& config)$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    const config_t& config(void) const { return _cfg; }$/;"	f	class:lgfx::v1::Bus_SPI
config	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    config_t config(void) const { return _cfg; }$/;"	f	struct:lgfx::v1::Light_TC
config	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    config_t config(void) const { return _cfg; }$/;"	f	struct:lgfx::v1::Light_TCC
config	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    void config(const config_t& config) { _cfg = config; }$/;"	f	struct:lgfx::v1::Light_TC
config	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    void config(const config_t& config) { _cfg = config; }$/;"	f	struct:lgfx::v1::Light_TCC
config	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    config_t config(void) const { return _cfg; }$/;"	f	struct:lgfx::v1::Light_TC
config	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    void config(const config_t& config) { _cfg = config; }$/;"	f	struct:lgfx::v1::Light_TC
config_detail	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    const config_detail_t& config_detail(void) const { return _config_detail; }$/;"	f	struct:lgfx::v1::Panel_HUB75_Multi
config_detail	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    void config_detail(const config_detail_t& config_detail) { _config_detail = config_detail; }$/;"	f	struct:lgfx::v1::Panel_HUB75_Multi
config_detail	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void Panel_CVBS::config_detail(const config_detail_t& config_detail)$/;"	f	class:lgfx::v1::Panel_CVBS
config_detail	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    const config_detail_t& config_detail(void) const { return _config_detail; }$/;"	f	struct:lgfx::v1::Panel_CVBS
config_detail	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    const config_detail_t& config_detail(void) const { return _config_detail; }$/;"	f	struct:lgfx::v1::Panel_RGB
config_detail	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    void config_detail(const config_detail_t& config_detail) { _config_detail = config_detail; }$/;"	f	struct:lgfx::v1::Panel_RGB
config_detail_t	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    struct config_detail_t$/;"	s	struct:lgfx::v1::Panel_HUB75_Multi
config_detail_t	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    struct config_detail_t$/;"	s	struct:lgfx::v1::Panel_CVBS
config_detail_t	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    struct config_detail_t$/;"	s	struct:lgfx::v1::Panel_RGB
config_resolution	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::config_resolution( const config_resolution_t& cfg_reso )$/;"	f	class:lgfx::v1::Panel_M5HDMI
config_resolution_t	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    struct config_resolution_t$/;"	s	struct:lgfx::v1::Panel_M5HDMI
config_t	src/lgfx/v1/Touch.hpp	/^    struct config_t$/;"	s	struct:lgfx::v1::ITouch
config_t	src/lgfx/v1/panel/Panel_Device.hpp	/^    struct config_t$/;"	s	struct:lgfx::v1::Panel_Device
config_t	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      typedef lgfx::Bus_I2C::config_t config_t;$/;"	t	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
config_t	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_Stream
config_t	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_HUB75
config_t	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_I2C
config_t	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_Parallel8
config_t	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Light_PWM
config_t	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_Parallel8
config_t	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_Parallel16
config_t	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_Parallel8
config_t	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_Parallel16
config_t	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_Parallel8
config_t	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_RGB
config_t	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_I2C
config_t	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_I2C
config_t	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Light_PWM
config_t	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_I2C
config_t	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_I2C
config_t	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    struct config_t$/;"	s	class:lgfx::v1::Bus_SPI
config_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    struct config_t$/;"	s	struct:lgfx::v1::Light_TC
config_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    struct config_t$/;"	s	struct:lgfx::v1::Light_TCC
config_t	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    struct config_t$/;"	s	struct:lgfx::v1::Light_TC
config_timing_params	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^  void Panel_SSD1963::config_timing_params(const timing_params_t& timing_params)$/;"	f	class:lgfx::v1::Panel_SSD1963
config_timing_params	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    const timing_params_t& config_timing_params(void) const { return _timing_params; }$/;"	f	namespace:lgfx::v1
config_transmitter	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    const HDMI_Trans::config_t& config_transmitter(void) const { return _HDMI_Trans_config; }$/;"	f	struct:lgfx::v1::Panel_M5HDMI
config_transmitter	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void config_transmitter(const HDMI_Trans::config_t& cfg) { _HDMI_Trans_config = cfg; }$/;"	f	struct:lgfx::v1::Panel_M5HDMI
connection_lost	src/lgfx/v1/misc/enum.hpp	/^  , connection_lost     \/\/ 通信が切断されたり正しく行えない場合のエラー;$/;"	e	enum:lgfx::v1::error_t
contain	src/lgfx/v1/misc/range.hpp	/^    LGFX_INLINE bool contain(int_fast16_t x, int_fast16_t y) const { return left <= x && x <= right && top <= y && y <= bottom; }$/;"	f	struct:lgfx::v1::range_rect_t
contains	src/lgfx/v1/LGFX_Button.hpp	/^    bool contains(int16_t x, int16_t y) const$/;"	f	class:lgfx::v1::LGFX_Button
convert	src/lgfx/v0/lgfx_common.hpp	/^    TYPECHECK(int16_t ) constexpr uint32_t convert(T c) { return convert_rgb565(c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    TYPECHECK(int32_t ) constexpr uint32_t convert(T c) { return convert_rgb565(c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    TYPECHECK(int8_t  ) constexpr uint32_t convert(T c) { return convert_rgb332(c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    TYPECHECK(uint16_t) constexpr uint32_t convert(T c) { return convert_rgb565(c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    TYPECHECK(uint32_t) constexpr uint32_t convert(T c) { return convert_rgb888(c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    TYPECHECK(uint8_t ) constexpr uint32_t convert(T c) { return convert_rgb332(c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline constexpr uint32_t convert(const argb8888_t& c) { return convert_rgb888(c.raw); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline constexpr uint32_t convert(const bgr888_t&   c) { return convert_bgr888(*(uint32_t*)&c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline constexpr uint32_t convert(const rgb332_t&   c) { return convert_rgb332(c.raw); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline constexpr uint32_t convert(const rgb565_t&   c) { return convert_rgb565(c.raw); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline constexpr uint32_t convert(const rgb888_t&   c) { return convert_rgb888(*(uint32_t*)&c); }$/;"	f	namespace:lgfx::v0
convert	src/lgfx/v1/misc/colortype.hpp	/^    LGFX_INLINE uint32_t convert(const argb8888_t& c) { return convert_argb8888(c.get()); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    LGFX_INLINE uint32_t convert(const bgr888_t&   c) { return convert_bgr888(  c.get()); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    LGFX_INLINE uint32_t convert(const rgb332_t&   c) { return convert_rgb332(  c.get()); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    LGFX_INLINE uint32_t convert(const rgb565_t&   c) { return convert_rgb565(  c.get()); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    LGFX_INLINE uint32_t convert(const rgb888_t&   c) { return convert_rgb888(  c.get()); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    TYPECHECK(int16_t ) uint32_t convert(T c) { return convert_rgb565(c); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    TYPECHECK(int32_t ) uint32_t convert(T c) { return convert_rgb565(c); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    TYPECHECK(int8_t  ) uint32_t convert(T c) { return convert_rgb332(c); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    TYPECHECK(uint16_t) uint32_t convert(T c) { return convert_rgb565(c); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    TYPECHECK(uint32_t) uint32_t convert(T c) { return convert_rgb888(c); }$/;"	f	namespace:lgfx::v1
convert	src/lgfx/v1/misc/colortype.hpp	/^    TYPECHECK(uint8_t ) uint32_t convert(T c) { return convert_rgb332(c); }$/;"	f	namespace:lgfx::v1
convertCoordinate	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    void (*convertCoordinate)(uint_fast16_t &x, uint_fast16_t &y) = nullptr;$/;"	m	struct:lgfx::v1::Panel_HUB75
convertRawXY	src/lgfx/v0/LGFX_Device.hpp	/^    void convertRawXY(int32_t *x, int32_t *y)$/;"	f	class:lgfx::v0::LGFX_Device
convertRawXY	src/lgfx/v0/LGFX_Device.hpp	/^    void convertRawXY(uint16_t *x, uint16_t *y)$/;"	f	class:lgfx::v0::LGFX_Device
convertRawXY	src/lgfx/v1/LGFXBase.hpp	/^    inline void convertRawXY(touch_point_t *tp, uint_fast8_t count = 1) { panel()->convertRawXY(tp, count); }$/;"	f	class:lgfx::v1::LGFX_Device
convertRawXY	src/lgfx/v1/LGFXBase.hpp	/^    void convertRawXY(T *x, T *y)$/;"	f	class:lgfx::v1::LGFX_Device
convertRawXY	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::convertRawXY(touch_point_t *tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Panel_Device
convert_bgr888	src/lgfx/v0/lgfx_common.hpp	/^      convert_bgr888 = get_fp_convert_src<bgr888_t>(bpp, has_palette);$/;"	m	struct:lgfx::v0::get_depth_impl
convert_bgr888_to_bgr666	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_bgr888_to_bgr666 (uint32_t c) { return (c>>2) & 0x3F3F3F;  }$/;"	f	namespace:lgfx::v0
convert_bgr888_to_rgb332	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_bgr888_to_rgb332 (uint32_t c) { return ((uint8_t)c >> 5) << 5 | (((uint16_t)c)>>13) << 2 | c>>22; }$/;"	f	namespace:lgfx::v0
convert_bgr888_to_rgb565	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_bgr888_to_rgb565( uint32_t c) { return  (((uint8_t)c) >> 3) << 11 | (((uint16_t)c)>>10)<<5 | c>>19; }$/;"	f	namespace:lgfx::v0
convert_bgr888_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_bgr888_to_rgb888( uint32_t c) { return getSwap24(c);  }$/;"	f	namespace:lgfx::v0
convert_bgr888_to_swap565	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_bgr888_to_swap565(uint32_t c) { return  (((uint8_t)c) >> 3) << 3 |  ((uint16_t)c) >> 13 | (c & 0x1C00) << 3 | (c>>19) << 8; }$/;"	f	namespace:lgfx::v0
convert_rgb332	src/lgfx/v0/lgfx_common.hpp	/^      convert_rgb332 = get_fp_convert_src<rgb332_t>(bpp, has_palette);$/;"	m	struct:lgfx::v0::get_depth_impl
convert_rgb332_to_bgr666	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb332_to_bgr666 (uint32_t c) { return (((c&0xE0)*9)>>5) | ((c&0x1C)*0x240) | ((c&3)*0x15)<<16; }$/;"	f	namespace:lgfx::v0
convert_rgb332_to_bgr888	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb332_to_bgr888 (uint32_t c) { return (((c&3)*0x55)<<8 | ((c&0x1C)*0x49)>>3)<<8 | (((c>>5)*0x49) >> 1); }$/;"	f	namespace:lgfx::v0
convert_rgb332_to_rgb565	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb332_to_rgb565 (uint32_t c) { return (((c&3)*0x15)>>1) | ((c&0x1C)*0x48) | ((c&0xE0)|(c>>6)<<3)<<8; }$/;"	f	namespace:lgfx::v0
convert_rgb332_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb332_to_rgb888 (uint32_t c) { return ((((c>>5)*0x49) >> 1)<<8 | ((c&0x1C)*0x49)>>3)<<8 | ((c&3)*0x55); }$/;"	f	namespace:lgfx::v0
convert_rgb332_to_swap565	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb332_to_swap565(uint32_t c) { return (((c&3)*0x15)>>1)<<8 | ((c&0x1C)<<11) | ((c&0x1C)>>2) | (((c>>5)*0x24)&0xF8); }$/;"	f	namespace:lgfx::v0
convert_rgb565	src/lgfx/v0/lgfx_common.hpp	/^      convert_rgb565 = get_fp_convert_src<rgb565_t>(bpp, has_palette);$/;"	m	struct:lgfx::v0::get_depth_impl
convert_rgb565_to_bgr666	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb565_to_bgr666 (uint32_t c) { return ((c&0x1F)<<17) | ((c&0x10)<<12) | ((c&0x7E0)<<3) | ((c>>10)&0xF8) | (c>>15); }$/;"	f	namespace:lgfx::v0
convert_rgb565_to_bgr888	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb565_to_bgr888 (uint32_t c) { return ((((c&0x1F)*0x21)>>2)<<8 | ((((c>>5)&0x3F)*0x41)>>4))<<8 | (((c>>11)*0x21)>>2); }$/;"	f	namespace:lgfx::v0
convert_rgb565_to_rgb332	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb565_to_rgb332 (uint32_t c) { return ((c>>13) <<5) | ((c>>6) & 0x1C) | ((c>>3) & 3); }$/;"	f	namespace:lgfx::v0
convert_rgb565_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb565_to_rgb888( uint32_t c) { return ((((c>>11)*0x21)>>2)<<8 | ((((c>>5)&0x3F)*0x41)>>4))<<8 | (((c&0x1F)*0x21)>>2); }$/;"	f	namespace:lgfx::v0
convert_rgb565_to_swap565	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb565_to_swap565(uint32_t c) { return (0xFF & c)<<8|c>>8; }$/;"	f	namespace:lgfx::v0
convert_rgb888	src/lgfx/v0/lgfx_common.hpp	/^      convert_rgb888 = get_fp_convert_src<rgb888_t>(bpp, has_palette);$/;"	m	struct:lgfx::v0::get_depth_impl
convert_rgb888_to_bgr666	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb888_to_bgr666 (uint32_t c) { return ((c>>2) & 0x3F) << 16 | ((c >> 10) & 0x3F) << 8 | ((c>>18)&0x3F);  }$/;"	f	namespace:lgfx::v0
convert_rgb888_to_bgr888	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb888_to_bgr888 (uint32_t c) { return getSwap24(c);  }$/;"	f	namespace:lgfx::v0
convert_rgb888_to_rgb332	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb888_to_rgb332 (uint32_t c) { return ((c>>21) << 5) | ((((uint16_t)c)>>13) << 2) | ((c>>6) & 3); }$/;"	f	namespace:lgfx::v0
convert_rgb888_to_rgb565	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb888_to_rgb565 (uint32_t c) { return  (c>>19) << 11 | (((uint16_t)c)>>10)<<5 | ((uint8_t)c) >> 3;   }$/;"	f	namespace:lgfx::v0
convert_rgb888_to_swap565	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_rgb888_to_swap565(uint32_t c) { return  (c>>19) << 3 |  ((uint16_t)c) >> 13 | (c & 0x1C00) << 3 | (((uint8_t)c) >> 3) << 8; }$/;"	f	namespace:lgfx::v0
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_bgr888(const argb8888_t& c) { return color_convert<bgr888_t, argb8888_t>(c.get()); } \/\/ return c.B8()<<16|c.G8()<<8|c.R8(); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_bgr888(const bgr666_t&   c) { return color_convert<bgr888_t, bgr666_t  >(c.get()); } \/\/ return c.B8()<<16|c.G8()<<8|c.R8(); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_bgr888(const bgr888_t&   c) { return c.get(); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_bgr888(const rgb332_t&   c) { return color_convert<bgr888_t, rgb332_t  >(c.get()); } \/\/ return c.B8()<<16|c.G8()<<8|c.R8(); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_bgr888(const rgb565_t&   c) { return color_convert<bgr888_t, rgb565_t  >(c.get()); } \/\/ return c.B8()<<16|c.G8()<<8|c.R8(); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_bgr888(const rgb888_t&   c) { return color_convert<bgr888_t, rgb888_t  >(c.get()); } \/\/ return c.B8()<<16|c.G8()<<8|c.R8(); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_bgr888(const swap565_t&  c) { return color_convert<bgr888_t, swap565_t >(c.get()); } \/\/ return c.B8()<<16|c.G8()<<8|c.R8(); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(int16_t ) uint32_t convert_to_bgr888(T c) { return color_convert<bgr888_t, rgb565_t>(c); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(int32_t ) uint32_t convert_to_bgr888(T c) { return color_convert<bgr888_t, rgb565_t>(c); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(int8_t  ) uint32_t convert_to_bgr888(T c) { return color_convert<bgr888_t, rgb332_t>(c); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(uint16_t) uint32_t convert_to_bgr888(T c) { return color_convert<bgr888_t, rgb565_t>(c); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(uint32_t) uint32_t convert_to_bgr888(T c) { return getSwap24(c); }$/;"	f	namespace:lgfx
convert_to_bgr888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(uint8_t ) uint32_t convert_to_bgr888(T c) { return color_convert<bgr888_t, rgb332_t>(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  TYPECHECK(int16_t ) constexpr uint32_t convert_to_rgb888(T c) { return convert_rgb565_to_rgb888(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  TYPECHECK(int32_t ) constexpr uint32_t convert_to_rgb888(T c) { return convert_rgb565_to_rgb888(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  TYPECHECK(int8_t  ) constexpr uint32_t convert_to_rgb888(T c) { return convert_rgb332_to_rgb888(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  TYPECHECK(uint16_t) constexpr uint32_t convert_to_rgb888(T c) { return convert_rgb565_to_rgb888(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  TYPECHECK(uint32_t) constexpr uint32_t convert_to_rgb888(T c) { return c; }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  TYPECHECK(uint8_t ) constexpr uint32_t convert_to_rgb888(T c) { return convert_rgb332_to_rgb888(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline constexpr uint32_t convert_to_rgb888(const argb8888_t& c) { return c.r   <<16|c.g   <<8|c.b;    }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline constexpr uint32_t convert_to_rgb888(const bgr666_t&   c) { return c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline constexpr uint32_t convert_to_rgb888(const bgr888_t&   c) { return c.r   <<16|c.g   <<8|c.b;    }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline constexpr uint32_t convert_to_rgb888(const rgb332_t&   c) { return c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline constexpr uint32_t convert_to_rgb888(const rgb565_t&   c) { return c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline constexpr uint32_t convert_to_rgb888(const rgb888_t&   c) { return c.r   <<16|c.g   <<8|c.b;    }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline constexpr uint32_t convert_to_rgb888(const swap565_t&  c) { return c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_rgb888(const argb8888_t& c) { return color_convert<rgb888_t, argb8888_t>(c.get()); } \/\/ c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_rgb888(const bgr666_t&   c) { return color_convert<rgb888_t, bgr666_t  >(c.get()); } \/\/ c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_rgb888(const bgr888_t&   c) { return getSwap24(c.get()); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_rgb888(const rgb332_t&   c) { return color_convert<rgb888_t, rgb332_t  >(c.get()); } \/\/ c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_rgb888(const rgb565_t&   c) { return color_convert<rgb888_t, rgb565_t  >(c.get()); } \/\/ c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_rgb888(const rgb888_t&   c) { return c.get(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE uint32_t convert_to_rgb888(const swap565_t&  c) { return color_convert<rgb888_t, swap565_t >(c.get()); } \/\/ c.R8()<<16|c.G8()<<8|c.B8(); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(int16_t ) uint32_t convert_to_rgb888(T c) { return color_convert<rgb888_t, rgb565_t>(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(int32_t ) uint32_t convert_to_rgb888(T c) { return color_convert<rgb888_t, rgb565_t>(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(int8_t  ) uint32_t convert_to_rgb888(T c) { return color_convert<rgb888_t, rgb332_t>(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(uint16_t) uint32_t convert_to_rgb888(T c) { return color_convert<rgb888_t, rgb565_t>(c); }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(uint32_t) uint32_t convert_to_rgb888(T c) { return c & 0xFFFFFF; }$/;"	f	namespace:lgfx
convert_to_rgb888	src/lgfx/v1/misc/colortype.hpp	/^  TYPECHECK(uint8_t ) uint32_t convert_to_rgb888(T c) { return color_convert<rgb888_t, rgb332_t>(c); }$/;"	f	namespace:lgfx
convert_uint32_to_palette1	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_uint32_to_palette1(uint32_t c) { return (c&1)?0xFF:0; }$/;"	f	namespace:lgfx::v0
convert_uint32_to_palette1	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t convert_uint32_to_palette1(uint32_t c) { return (c & 1) ? 0xFF : 0; }$/;"	f	namespace:lgfx::v1
convert_uint32_to_palette2	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_uint32_to_palette2(uint32_t c) { return (c&0x03) * 0x55; }$/;"	f	namespace:lgfx::v0
convert_uint32_to_palette2	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t convert_uint32_to_palette2(uint32_t c) { return (c & 0x03) * 0x55; }$/;"	f	namespace:lgfx::v1
convert_uint32_to_palette4	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_uint32_to_palette4(uint32_t c) { return (c&0x0F) * 0x11; }$/;"	f	namespace:lgfx::v0
convert_uint32_to_palette4	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t convert_uint32_to_palette4(uint32_t c) { return (c & 0x0F) * 0x11; }$/;"	f	namespace:lgfx::v1
convert_uint32_to_palette8	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t convert_uint32_to_palette8(uint32_t c) { return  c&0xFF; }$/;"	f	namespace:lgfx::v0
convert_uint32_to_palette8	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t convert_uint32_to_palette8(uint32_t c) { return  c & 0xFF; }$/;"	f	namespace:lgfx::v1
converted_scanline	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    volatile uint16_t converted_scanline = 0;$/;"	m	struct:lgfx::v1::internal_t	file:
copyRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::copyRect(int32_t dst_x, int32_t dst_y, int32_t w, int32_t h, int32_t src_x, int32_t src_y)$/;"	f	class:lgfx::v0::LGFXBase
copyRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::copyRect(int32_t dst_x, int32_t dst_y, int32_t w, int32_t h, int32_t src_x, int32_t src_y)$/;"	f	class:lgfx::v1::LGFXBase
copyRect	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_Sprite
copyRect	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_Device
copyRect	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
copyRect	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_M5HDMI
copyRect	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
copyRect	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_RA8875
copyRect	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_SSD1331
copyRect	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_fb
copyRect	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_OpenCV
copyRect	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y)$/;"	f	class:lgfx::v1::Panel_sdl
copy_alpha_affine	src/lgfx/v1/misc/pixelcopy.cpp	/^    uint32_t pixelcopy_t::copy_alpha_affine(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	class:lgfx::v1::pixelcopy_t
copy_bit_affine	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_bit_affine(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
copy_bit_affine	src/lgfx/v1/misc/pixelcopy.cpp	/^    uint32_t pixelcopy_t::copy_bit_affine(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	class:lgfx::v1::pixelcopy_t
copy_bit_fast	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_bit_fast(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
copy_bit_fast	src/lgfx/v1/misc/pixelcopy.cpp	/^    uint32_t pixelcopy_t::copy_bit_fast(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	class:lgfx::v1::pixelcopy_t
copy_grayscale_affine	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t copy_grayscale_affine(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
copy_palette_affine	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_palette_affine(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
copy_palette_affine	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t copy_palette_affine(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
copy_palette_antialias	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_palette_antialias(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
copy_palette_antialias	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t copy_palette_antialias(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
copy_palette_fast	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_palette_fast(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
copy_palette_fast	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t copy_palette_fast(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
copy_rgb_affine	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_rgb_affine(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
copy_rgb_affine	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t copy_rgb_affine(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
copy_rgb_antialias	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_rgb_antialias(void* __restrict dst, int32_t index, int32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::pixelcopy_t
copy_rgb_antialias	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t copy_rgb_antialias(void* __restrict dst, uint32_t index, uint32_t last, pixelcopy_t* __restrict param)$/;"	f	struct:lgfx::v1::pixelcopy_t
copy_rgb_fast	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t copy_rgb_fast(void* dst, int32_t index, int32_t last, pixelcopy_t* param)$/;"	f	struct:lgfx::pixelcopy_t
copy_rgb_fast	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t copy_rgb_fast(void* dst, uint32_t index, uint32_t last, pixelcopy_t* param)$/;"	f	struct:lgfx::v1::pixelcopy_t
count	.github/scripts/installOpenCV.bat	/^set count=1$/;"	v
count	.github/scripts/installSDL2.bat	/^::set count=1$/;"	v
cp437	src/lgfx/v0/LGFXBase.hpp	/^    void cp437(bool enable = true) { _text_style.cp437 = enable; }  \/\/ AdafruitGFX compatible.$/;"	f	class:lgfx::v0::LGFXBase
cp437	src/lgfx/v0/lgfx_common.hpp	/^    bool cp437 = false;$/;"	m	struct:lgfx::TextStyle
cp437	src/lgfx/v1/LGFXBase.hpp	/^    void cp437(bool enable = true) { _text_style.cp437 = enable; }  \/\/ AdafruitGFX compatible.$/;"	f	class:lgfx::v1::LGFXBase
cp437	src/lgfx/v1/lgfx_fonts.hpp	/^    bool cp437 = false;$/;"	m	struct:lgfx::v1::TextStyle
cp437_switch	src/lgfx/v0/lgfx_common.hpp	/^    { cp437_switch = 1$/;"	e	enum:lgfx::v0::attribute::attribute_t
cp437_switch	src/lgfx/v1/misc/enum.hpp	/^    { cp437_switch = 1$/;"	e	enum:lgfx::v1::attribute::attribute_t
crc32	src/lgfx/utility/miniz.c	/^  #define crc32 /;"	d	file:
create	src/lgfx/v1/misc/DividedFrameBuffer.cpp	/^  uint8_t** DividedFrameBuffer::create(size_t line_size, size_t total_lines, size_t block_lines, psram_setting_t use_psram)$/;"	f	class:lgfx::v1::DividedFrameBuffer
createFromBmp	src/lgfx/v0/LGFX_Sprite.hpp	/^    inline void createFromBmp(fs::FS &fs, const char *path) { createFromBmpFile(fs, path); }$/;"	f	class:lgfx::v0::LGFX_Sprite
createFromBmp	src/lgfx/v0/LGFX_Sprite.hpp	/^    void createFromBmp(const uint8_t *bmp_data, uint32_t bmp_len = ~0u) {$/;"	f	class:lgfx::v0::LGFX_Sprite
createFromBmp	src/lgfx/v1/LGFX_Sprite.hpp	/^    inline void createFromBmp(LGFX_SDFAT_TYPE &fs, const char *path) { createFromBmpFile(fs, path); }$/;"	f	class:lgfx::v1::LGFX_Sprite
createFromBmp	src/lgfx/v1/LGFX_Sprite.hpp	/^    inline void createFromBmp(fs::FS &fs, const char *path) { createFromBmpFile(fs, path); }$/;"	f	class:lgfx::v1::LGFX_Sprite
createFromBmp	src/lgfx/v1/LGFX_Sprite.hpp	/^    void createFromBmp(const uint8_t *bmp_data, uint32_t bmp_len = ~0u) {$/;"	f	class:lgfx::v1::LGFX_Sprite
createFromBmpFile	src/lgfx/v0/LGFX_Sprite.hpp	/^    void createFromBmpFile(FileWrapper* file, const char *path) {$/;"	f	class:lgfx::v0::LGFX_Sprite
createFromBmpFile	src/lgfx/v0/LGFX_Sprite.hpp	/^    void createFromBmpFile(const char *path) {$/;"	f	class:lgfx::v0::LGFX_Sprite
createFromBmpFile	src/lgfx/v0/LGFX_Sprite.hpp	/^    void createFromBmpFile(fs::FS &fs, const char *path) {$/;"	f	class:lgfx::v0::LGFX_Sprite
createFromBmpFile	src/lgfx/v1/LGFX_Sprite.hpp	/^    void createFromBmpFile(DataWrapper* file, const char *path) {$/;"	f	class:lgfx::v1::LGFX_Sprite
createFromBmpFile	src/lgfx/v1/LGFX_Sprite.hpp	/^    void createFromBmpFile(LGFX_SDFAT_TYPE &fs, const char *path) {$/;"	f	class:lgfx::v1::LGFX_Sprite
createFromBmpFile	src/lgfx/v1/LGFX_Sprite.hpp	/^    void createFromBmpFile(const char *path) {$/;"	f	class:lgfx::v1::LGFX_Sprite
createFromBmpFile	src/lgfx/v1/LGFX_Sprite.hpp	/^    void createFromBmpFile(fs::FS &fs, const char *path) {$/;"	f	class:lgfx::v1::LGFX_Sprite
createPalette	src/lgfx/v0/LGFX_Sprite.hpp	/^    bool createPalette(const uint16_t* colors, uint32_t count)$/;"	f	class:lgfx::v0::LGFX_Sprite
createPalette	src/lgfx/v0/LGFX_Sprite.hpp	/^    bool createPalette(const uint32_t* colors, uint32_t count)$/;"	f	class:lgfx::v0::LGFX_Sprite
createPalette	src/lgfx/v0/LGFX_Sprite.hpp	/^    bool createPalette(void)$/;"	f	class:lgfx::v0::LGFX_Sprite
createPalette	src/lgfx/v1/LGFX_Sprite.hpp	/^    bool createPalette(const uint16_t* colors, uint32_t count)$/;"	f	class:lgfx::v1::LGFX_Sprite
createPalette	src/lgfx/v1/LGFX_Sprite.hpp	/^    bool createPalette(const uint32_t* colors, uint32_t count)$/;"	f	class:lgfx::v1::LGFX_Sprite
createPalette	src/lgfx/v1/LGFX_Sprite.hpp	/^    bool createPalette(void)$/;"	f	class:lgfx::v1::LGFX_Sprite
createPng	src/lgfx/v0/LGFXBase.cpp	/^  void* LGFXBase::createPng(size_t* datalen, int32_t x, int32_t y, int32_t width, int32_t height)$/;"	f	class:lgfx::v0::LGFXBase
createPng	src/lgfx/v1/LGFXBase.cpp	/^  void* LGFXBase::createPng(size_t* datalen, int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
createSprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    void* createSprite(int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFX_Sprite
createSprite	src/lgfx/v1/LGFX_Sprite.cpp	/^  void* Panel_Sprite::createSprite(int32_t w, int32_t h, color_conv_t* conv, bool psram)$/;"	f	class:lgfx::v1::Panel_Sprite
createSprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    void* createSprite(int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFX_Sprite
create_from_bmp	src/lgfx/v0/LGFX_Sprite.hpp	/^    bool create_from_bmp(DataWrapper* data) {$/;"	f	class:lgfx::v0::LGFX_Sprite
create_from_bmp	src/lgfx/v1/LGFX_Sprite.hpp	/^    bool create_from_bmp(DataWrapper* data)$/;"	f	class:lgfx::v1::LGFX_Sprite
create_huffman_tbl	src/lgfx/utility/lgfx_tjpgd.c	/^static int32_t create_huffman_tbl (	\/* 0:OK, !0:Failed *\/$/;"	f	file:
create_palette	src/lgfx/v0/LGFX_Sprite.hpp	/^    bool create_palette(void)$/;"	f	class:lgfx::v0::LGFX_Sprite
create_palette	src/lgfx/v1/LGFX_Sprite.hpp	/^    bool create_palette(void)$/;"	f	class:lgfx::v1::LGFX_Sprite
create_pc	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc(const uint16_t *data) { return create_pc(data, _swapBytes); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc(const uint16_t *data, bool swap)$/;"	f	class:lgfx::v0::LGFXBase
create_pc	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc(const uint8_t  *data) { return create_pc(reinterpret_cast<const rgb332_t*>(data)); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc(const void          *data) { return create_pc(data, _swapBytes); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc(const void *data, bool swap)$/;"	f	class:lgfx::v0::LGFXBase
create_pc	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc(const T *data)$/;"	f	class:lgfx::v0::LGFXBase
create_pc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc(const uint16_t* data) { return create_pc(data, _swapBytes); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc(const uint16_t* data, bool swap)$/;"	f	class:lgfx::v1::LGFXBase
create_pc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc(const uint8_t*  data) { return create_pc(reinterpret_cast<const rgb332_t*>(data)); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc(const void*     data) { return create_pc(data, _swapBytes); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc(const void* data, bool swap)$/;"	f	class:lgfx::v1::LGFXBase
create_pc	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc(const T *data)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_antialias	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_antialias(const uint16_t *data, uint32_t raw_transparent = ~0u)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_antialias	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_antialias(const uint8_t *data, uint32_t raw_transparent = ~0u)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_antialias	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_antialias(const void *data, uint32_t raw_transparent = ~0u)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_antialias	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_antialias(const T* data, uint32_t raw_transparent = ~0u)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_antialias	src/lgfx/v0/LGFXBase.hpp	/^    static pixelcopy_t create_pc_antialias(const void* data, const T* palette, lgfx::color_depth_t depth, uint32_t transparent = ~0u)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_antialias	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_antialias(const uint16_t *data, uint32_t raw_transparent = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_antialias	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_antialias(const uint8_t *data, uint32_t raw_transparent = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_antialias	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_antialias(const void *data, uint32_t raw_transparent = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_antialias	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_antialias(const T* data, uint32_t raw_transparent = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_antialias	src/lgfx/v1/LGFXBase.hpp	/^    static pixelcopy_t create_pc_antialias(const void* data, const T* palette, lgfx::color_depth_t depth, uint32_t transparent = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_fast	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_fast(const uint16_t *data) { return create_pc_fast(data, _swapBytes); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc_fast	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_fast(const uint16_t *data, bool swap)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_fast	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_fast(const uint8_t  *data) { return create_pc_fast(reinterpret_cast<const rgb332_t*>(data)); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc_fast	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_fast(const void     *data) { return create_pc_fast(data, _swapBytes); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc_fast	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline pixelcopy_t create_pc_fast(const void *data, bool swap)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_fast	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_fast(const T *data)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_fast	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_fast(const void *data, const T *palette, lgfx::color_depth_t src_depth)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_fast	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_fast(const uint16_t* data) { return create_pc_fast(data, _swapBytes); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc_fast	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_fast(const uint16_t* data, bool swap)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_fast	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_fast(const uint8_t*  data) { return create_pc_fast(reinterpret_cast<const rgb332_t*>(data)); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc_fast	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_fast(const void *data, bool swap)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_fast	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE pixelcopy_t create_pc_fast(const void*     data) { return create_pc_fast(data, _swapBytes); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc_fast	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_fast(const T *data)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_fast	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_fast(const void *data, const T *palette, lgfx::color_depth_t src_depth)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_gray	src/lgfx/v1/LGFXBase.cpp	/^  pixelcopy_t LGFXBase::create_pc_gray(const uint8_t *image, lgfx::color_depth_t depth, uint32_t fore_rgb888, uint32_t back_rgb888)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_palette	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_palette(const void *data, const T *palette, lgfx::color_depth_t depth, uint32_t transparent = ~0u)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_palette	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_palette(const void *data, const bgr888_t *palette, lgfx::color_depth_t depth, uint32_t transparent = ~0u)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_palette	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_palette(const void *data, const T *palette, lgfx::color_depth_t depth, uint32_t transparent = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_palette	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_palette(const void *data, const bgr888_t *palette, lgfx::color_depth_t depth, uint32_t transparent = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_rawtr	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_rawtr(const T *data, uint32_t raw_transparent)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_rawtr	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_rawtr(const T *data, uint32_t raw_transparent)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_tr	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_tr(const T1 *data, const T2& transparent)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_tr	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const uint16_t *data, const T& transparent) { return create_pc_tr(data, transparent, _swapBytes); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc_tr	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const uint16_t *data, const T& transparent, bool swap)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_tr	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const uint8_t  *data, const T& transparent) { return create_pc_tr(reinterpret_cast<const rgb332_t*>(data), transparent); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc_tr	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const void          *data, const T& transparent) { return create_pc_tr(data, transparent, _swapBytes); }$/;"	f	class:lgfx::v0::LGFXBase
create_pc_tr	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const void *data, const T& transparent, bool swap)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_tr	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_tr(const T1 *data, const T2& transparent)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_tr	src/lgfx/v1/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const uint16_t* data, const T& transparent) { return create_pc_tr(data, transparent, _swapBytes); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc_tr	src/lgfx/v1/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const uint16_t* data, const T& transparent, bool swap)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_tr	src/lgfx/v1/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const uint8_t*  data, const T& transparent) { return create_pc_tr(reinterpret_cast<const rgb332_t*>(data), transparent); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc_tr	src/lgfx/v1/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const void *data, const T& transparent, bool swap)$/;"	f	class:lgfx::v1::LGFXBase
create_pc_tr	src/lgfx/v1/LGFXBase.hpp	/^    template<typename T> pixelcopy_t create_pc_tr(const void*     data, const T& transparent) { return create_pc_tr(data, transparent, _swapBytes); }$/;"	f	class:lgfx::v1::LGFXBase
create_pc_tr_antialias	src/lgfx/v0/LGFXBase.hpp	/^    pixelcopy_t create_pc_tr_antialias(const T1* data, const T2& transparent)$/;"	f	class:lgfx::v0::LGFXBase
create_pc_tr_antialias	src/lgfx/v1/LGFXBase.hpp	/^    pixelcopy_t create_pc_tr_antialias(const T1* data, const T2& transparent)$/;"	f	class:lgfx::v1::LGFXBase
create_qt_tbl	src/lgfx/utility/lgfx_tjpgd.c	/^static int32_t create_qt_tbl (	\/* 0:OK, !0:Failed *\/$/;"	f	file:
cs_control	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::cs_control(bool level)$/;"	f	class:lgfx::v1::Panel_Device
cs_h	src/lgfx/v0/LGFX_Device.hpp	/^    void cs_h(void) {$/;"	f	class:lgfx::v0::LGFX_Device
cs_l	src/lgfx/v0/LGFX_Device.hpp	/^    void cs_l(void) {$/;"	f	class:lgfx::v0::LGFX_Device
current_scanline	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    volatile uint16_t current_scanline = 0;$/;"	m	struct:lgfx::v1::internal_t	file:
current_x	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^int32_t current_x = 0;$/;"	v
current_x	examples_for_PC/CMake_OpenCV/user_code.cpp	/^int32_t current_x = 0;$/;"	v
current_x	examples_for_PC/CMake_SDL/user_code.cpp	/^int32_t current_x = 0;$/;"	v
current_y	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^int32_t current_y = 0;$/;"	v
current_y	examples_for_PC/CMake_OpenCV/user_code.cpp	/^int32_t current_y = 0;$/;"	v
current_y	examples_for_PC/CMake_SDL/user_code.cpp	/^int32_t current_y = 0;$/;"	v
cvVersion	.github/scripts/installOpenCV.bat	/^set cvVersion=4.5.5$/;"	v
cv_mouse_callback	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  static void cv_mouse_callback(int event, int x, int y, int flags, void *userdata)$/;"	f	namespace:lgfx::v1
cvmat	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^    cv::Mat* cvmat;$/;"	m	struct:lgfx::v1::cvmat_info_t	file:
cvmat_info_t	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  struct cvmat_info_t$/;"	s	namespace:lgfx::v1	file:
cwd	.github/scripts/installOpenCV.bat	/^set cwd=%cd%$/;"	v
cwd	.github/scripts/installSDL2.bat	/^set cwd=%cd%$/;"	v
d32	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t* d32;            \/\/  0$/;"	m	struct:lgfx::v1::asm_work_t	file:
data	src/lgfx/utility/lgfx_qrcode.c	/^    uint8_t *data;$/;"	m	struct:BitBucket	file:
data	src/lgfx/v0/LGFXBase.cpp	/^    DataWrapper* data;$/;"	m	struct:lgfx::v0::image_decoder_t	file:
data	src/lgfx/v1/LGFXBase.cpp	/^    DataWrapper* data;$/;"	m	struct:lgfx::v1::image_decoder_t	file:
data_size_f16	src/lgfx/Fonts/Font16.h	/^#define data_size_f16 /;"	d
data_size_f32	src/lgfx/Fonts/Font32rle.h	/^#define data_size_f32 /;"	d
data_size_f64	src/lgfx/Fonts/Font64rle.h	/^#define data_size_f64 /;"	d
data_size_f72	src/lgfx/Fonts/Font72rle.h	/^#define data_size_f72 /;"	d
data_size_f72	src/lgfx/Fonts/Font72x53rle.h	/^#define data_size_f72 /;"	d
data_size_f7s	src/lgfx/Fonts/Font7srle.h	/^#define data_size_f7s /;"	d
data_type	src/lgfx/utility/miniz.c	/^  int data_type;                    \/\/ data_type (unused)$/;"	m	struct:mz_stream_s	file:
data_width	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      panel_data_width_t data_width = is24bit;$/;"	m	struct:lgfx::v1::timing_params_t
datawidth	src/lgfx/v0/lgfx_fonts.cpp	/^    uint8_t datawidth;$/;"	m	struct:lgfx::v0::glcd_fontinfo_t	file:
datawidth	src/lgfx/v1/lgfx_fonts.cpp	/^    uint8_t datawidth;$/;"	m	struct:lgfx::v1::glcd_fontinfo_t	file:
datum	src/lgfx/v0/LGFXBase.cpp	/^    datum_t datum;$/;"	m	struct:lgfx::v0::image_info_t	file:
datum	src/lgfx/v0/lgfx_common.hpp	/^    textdatum_t datum = textdatum_t::top_left;$/;"	m	struct:lgfx::TextStyle
datum	src/lgfx/v0/lgfx_common.hpp	/^  namespace datum$/;"	n	namespace:lgfx::v0
datum	src/lgfx/v1/LGFXBase.cpp	/^    datum_t datum;$/;"	m	struct:lgfx::v1::image_info_t	file:
datum	src/lgfx/v1/lgfx_fonts.hpp	/^    textdatum_t datum = textdatum_t::top_left;$/;"	m	struct:lgfx::v1::TextStyle
datum	src/lgfx/v1/misc/enum.hpp	/^  namespace datum$/;"	n	namespace:lgfx::v1
dbit	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast8_t dbit;			\/* Current bit in the current read byte *\/$/;"	m	struct:lgfxJdec
dc_control	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::dc_control(bool dc)$/;"	f	class:lgfx::v1::Bus_I2C
dc_control	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_SPI
dc_control	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_Parallel16
dc_control	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_Parallel8
dc_control	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::dc_control(bool dc)$/;"	f	class:lgfx::v1::Bus_I2C
dc_control	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_SPI
dc_control	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::dc_control(bool dc)$/;"	f	class:lgfx::v1::Bus_I2C
dc_control	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_SPI
dc_control	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::dc_control(bool dc)$/;"	f	class:lgfx::v1::Bus_I2C
dc_control	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_SPI
dc_control	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::dc_control(bool dc)$/;"	f	class:lgfx::v1::Bus_I2C
dc_control	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_SPI
dc_control	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_control(bool flg)$/;"	f	class:lgfx::v1::Bus_SPI
dc_h	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void dc_h(void) {$/;"	f	class:lgfx::v0::LGFX_PARALLEL
dc_h	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void dc_h(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
dc_h	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void dc_h(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
dc_h	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_h(void) {$/;"	f	class:lgfx::v1::Bus_SPI
dc_h	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_h(void)$/;"	f	class:lgfx::v1::Bus_SPI
dc_h	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_h(void)$/;"	f	class:lgfx::v1::Bus_SPI
dc_l	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void dc_l(void) {$/;"	f	class:lgfx::v0::LGFX_PARALLEL
dc_l	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void dc_l(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
dc_l	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void dc_l(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
dc_l	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_l(void) {$/;"	f	class:lgfx::v1::Bus_SPI
dc_l	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_l(void)$/;"	f	class:lgfx::v1::Bus_SPI
dc_l	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void dc_l(void)$/;"	f	class:lgfx::v1::Bus_SPI
dcv	src/lgfx/utility/lgfx_tjpgd.h	/^	int32_t dcv[3];				\/* Previous DC element of each component *\/$/;"	m	struct:lgfxJdec
de_idle_high	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      bool de_idle_high = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
debug_printf	src/lgfx/utility/lgfx_pngle.c	/^#define debug_printf(/;"	d	file:
debug_printf	src/lgfx/utility/lgfx_qoi.c	/^#define debug_printf(/;"	d	file:
decodeUTF8	src/lgfx/v0/LGFXBase.cpp	/^    uint16_t LGFXBase::decodeUTF8(uint8_t c)$/;"	f	class:lgfx::v0::LGFXBase
decodeUTF8	src/lgfx/v1/LGFXBase.cpp	/^  uint16_t LGFXBase::decodeUTF8(uint8_t c)$/;"	f	class:lgfx::v1::LGFXBase
decode_bit_pos	src/lgfx/v0/lgfx_fonts.cpp	/^    uint8_t decode_bit_pos;     \/* bitpos inside a byte of the compressed data *\/$/;"	m	struct:lgfx::v0::u8g2_font_decode_t	file:
decode_bit_pos	src/lgfx/v1/lgfx_fonts.cpp	/^    uint8_t decode_bit_pos;     \/* bitpos inside a byte of the compressed data *\/$/;"	m	struct:lgfx::v1::u8g2_font_decode_t	file:
decode_ptr	src/lgfx/v0/lgfx_fonts.cpp	/^    const uint8_t* decode_ptr;      \/* pointer to the compressed data *\/$/;"	m	struct:lgfx::v0::u8g2_font_decode_t	file:
decode_ptr	src/lgfx/v1/lgfx_fonts.cpp	/^    const uint8_t* decode_ptr;      \/* pointer to the compressed data *\/$/;"	m	struct:lgfx::v1::u8g2_font_decode_t	file:
def_alloc_func	src/lgfx/utility/miniz.c	/^static void *def_alloc_func(void *opaque, size_t items, size_t size) { (void)opaque, (void)items, (void)size; return MZ_MALLOC(items * size); }$/;"	f	file:
def_free_func	src/lgfx/utility/miniz.c	/^static void def_free_func(void *opaque, void *address) { (void)opaque, (void)address; MZ_FREE(address); }$/;"	f	file:
def_realloc_func	src/lgfx/utility/miniz.c	/^static void *def_realloc_func(void *opaque, void *address, size_t items, size_t size) { (void)opaque, (void)address, (void)items, (void)size; return MZ_REALLOC(address, items * size); }$/;"	f	file:
default_spi_host	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int default_spi_host = SPI2_HOST;$/;"	m	namespace:lgfx::v1::spi	file:
default_spi_host	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int default_spi_host = VSPI_HOST;$/;"	m	namespace:lgfx::v1::spi	file:
default_spi_host	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    static constexpr uint8_t default_spi_host = 1; $/;"	m	class:lgfx::v1::Bus_SPI
deflate	src/lgfx/utility/miniz.c	/^  #define deflate /;"	d	file:
deflateBound	src/lgfx/utility/miniz.c	/^  #define deflateBound /;"	d	file:
deflateEnd	src/lgfx/utility/miniz.c	/^  #define deflateEnd /;"	d	file:
deflateInit	src/lgfx/utility/miniz.c	/^  #define deflateInit /;"	d	file:
deflateInit2	src/lgfx/utility/miniz.c	/^  #define deflateInit2 /;"	d	file:
deflateReset	src/lgfx/utility/miniz.c	/^  #define deflateReset /;"	d	file:
deg_to_rad	src/lgfx/v0/LGFXBase.cpp	/^  static constexpr float deg_to_rad = 0.017453292519943295769236907684886;$/;"	m	namespace:lgfx::v0	file:
deg_to_rad	src/lgfx/v1/LGFXBase.cpp	/^  static constexpr float deg_to_rad = 0.017453292519943295769236907684886;$/;"	m	namespace:lgfx::v1	file:
deinit	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void Panel_CVBS::deinit(void)$/;"	f	class:lgfx::v1::Panel_CVBS
deinitFrameBuffer	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void Panel_CVBS::deinitFrameBuffer(void)$/;"	f	class:lgfx::v1::Panel_CVBS
deinitFrameBuffer	src/lgfx/v1/platforms/esp32s3/Panel_RGB.cpp	/^  void Panel_RGB::deinitFrameBuffer(void)$/;"	f	class:lgfx::v1::Panel_RGB
delay	src/lgfx/v0/platforms/esp32_common.hpp	/^  __attribute__ ((unused)) static inline void delay(uint32_t ms)$/;"	f
delay	src/lgfx/v0/platforms/esp32_common.hpp	/^  inline void delay(uint32_t ms) { ::delay(ms); }$/;"	f	namespace:lgfx::v0
delay	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v0
delay	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/esp32/common.hpp	/^  __attribute__ ((unused)) static inline void delay(uint32_t ms)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/framebuffer/common.cpp	/^  void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/opencv/common.cpp	/^  void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/sdl/common.cpp	/^  void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delay	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline void delay(unsigned long milliseconds)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v0/platforms/esp32_common.hpp	/^  __attribute__ ((unused)) static inline void delayMicroseconds(uint32_t us)$/;"	f
delayMicroseconds	src/lgfx/v0/platforms/samd51_common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v0
delayMicroseconds	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/esp32/common.hpp	/^  __attribute__ ((unused)) static inline void delayMicroseconds(uint32_t us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/framebuffer/common.cpp	/^  void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/opencv/common.cpp	/^  void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/samd21/common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/samd51/common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/sdl/common.cpp	/^  void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/spresense/common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
delayMicroseconds	src/lgfx/v1/platforms/stm32/common.hpp	/^  static void delayMicroseconds(unsigned int us)$/;"	f	namespace:lgfx::v1
deleteBuffer	src/lgfx/v1/platforms/common.hpp	/^    void deleteBuffer(void)$/;"	f	class:lgfx::v1::FlipBuffer
deleteBuffer	src/lgfx/v1/platforms/common.hpp	/^    void deleteBuffer(void)$/;"	f	class:lgfx::v1::SimpleBuffer
deletePalette	src/lgfx/v0/LGFX_Sprite.hpp	/^    void deletePalette(void)$/;"	f	class:lgfx::v0::LGFX_Sprite
deletePalette	src/lgfx/v1/LGFX_Sprite.hpp	/^    void deletePalette(void)$/;"	f	class:lgfx::v1::LGFX_Sprite
deleteSprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    void deleteSprite(void)$/;"	f	class:lgfx::v0::LGFX_Sprite
deleteSprite	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::deleteSprite(void)$/;"	f	class:lgfx::v1::Panel_Sprite
deleteSprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    void deleteSprite(void)$/;"	f	class:lgfx::v1::LGFX_Sprite
delete_dmabuffer	src/lgfx/v0/LGFX_Device.hpp	/^    void delete_dmabuffer(void)$/;"	f	class:lgfx::v0::LGFX_Device
depth	src/lgfx/utility/lgfx_pngle.h	/^  uint8_t depth;$/;"	m	struct:_pngle_ihdr_t
depth	src/lgfx/v0/lgfx_common.hpp	/^      depth = bpp;$/;"	m	struct:lgfx::v0::get_depth_impl
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = argb8888_4Byte;$/;"	m	struct:lgfx::v0::argb8888_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = argb8888_4Byte;$/;"	m	struct:lgfx::v0::bgra8888_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = rgb332_1Byte;$/;"	m	struct:lgfx::v0::grayscale_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = rgb332_1Byte;$/;"	m	struct:lgfx::v0::rgb332_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = rgb565_2Byte;$/;"	m	struct:lgfx::v0::rgb565_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = rgb565_2Byte;$/;"	m	struct:lgfx::v0::swap565_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = rgb666_3Byte;$/;"	m	struct:lgfx::v0::bgr666_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = rgb888_3Byte;$/;"	m	struct:lgfx::v0::bgr888_t
depth	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr color_depth_t depth = rgb888_3Byte;$/;"	m	struct:lgfx::v0::rgb888_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = argb8888_4Byte;$/;"	m	struct:lgfx::v1::bgra8888_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = argb8888_nonswapped;$/;"	m	struct:lgfx::v1::argb8888_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = grayscale_8bit;$/;"	m	struct:lgfx::v1::grayscale_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = rgb332_1Byte;$/;"	m	struct:lgfx::v1::rgb332_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = rgb565_2Byte;$/;"	m	struct:lgfx::v1::swap565_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = rgb565_nonswapped;$/;"	m	struct:lgfx::v1::rgb565_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = rgb666_3Byte;$/;"	m	struct:lgfx::v1::bgr666_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = rgb888_3Byte;$/;"	m	struct:lgfx::v1::bgr888_t
depth	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr color_depth_t depth = rgb888_nonswapped;$/;"	m	struct:lgfx::v1::rgb888_t
desc	src/lgfx/utility/lgfx_qoi.c	/^  qoi_desc_t desc;$/;"	m	struct:_qoi_t	file:
descent	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t  descent;    \/\/ Offset to bottom of 'p', other characters may have a larger descent$/;"	m	struct:lgfx::v0::VLWfont
descent	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t  descent;    \/\/ Offset to bottom of 'p', other characters may have a larger descent$/;"	m	struct:lgfx::v1::VLWfont
descent_g	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t descent_g   (void) const { return _font[14]; }  \/* usually a negative value *\/$/;"	f	struct:lgfx::v0::U8g2font
descent_g	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t descent_g   (void) const { return pgm_read_byte(&_font[14]); }  \/* usually a negative value *\/$/;"	f	struct:lgfx::v1::U8g2font
descent_para	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t descent_para(void) const { return _font[16]; }$/;"	f	struct:lgfx::v0::U8g2font
descent_para	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t descent_para(void) const { return pgm_read_byte(&_font[16]); }$/;"	f	struct:lgfx::v1::U8g2font
detail	src/lgfx/utility/result.hpp	/^  namespace detail {$/;"	n	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
device	src/lgfx/utility/lgfx_tjpgd.h	/^	void* device;				\/* Pointer to I\/O device identifiler for the session *\/$/;"	m	struct:lgfxJdec
digitalRead	src/lgfx/v1/platforms/rp2040/common.cpp	/^  bool digitalRead(int_fast16_t pin)$/;"	f	namespace:lgfx::v1
digitalWrite	src/lgfx/v1/platforms/rp2040/common.cpp	/^  void digitalWrite(int_fast16_t pin, PinStatus val)$/;"	f	namespace:lgfx::v1
disableWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static inline void disableWIRE(SercomI2cm *i2cm)$/;"	f	namespace:lgfx::v1::i2c
disable_copy_assignment	src/lgfx/utility/result.hpp	/^        -> disable_copy_assignment& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_copy_assignment
disable_copy_assignment	src/lgfx/utility/result.hpp	/^        -> disable_copy_assignment& = delete;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_copy_assignment
disable_copy_assignment	src/lgfx/utility/result.hpp	/^    struct disable_copy_assignment$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
disable_copy_ctor	src/lgfx/utility/result.hpp	/^        -> disable_copy_ctor& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_copy_ctor
disable_copy_ctor	src/lgfx/utility/result.hpp	/^    struct disable_copy_ctor : result_trivial_move_assign_base<T,E>$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
disable_move_assignment	src/lgfx/utility/result.hpp	/^        -> disable_move_assignment& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_move_assignment
disable_move_assignment	src/lgfx/utility/result.hpp	/^        -> disable_move_assignment& = delete;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_move_assignment
disable_move_assignment	src/lgfx/utility/result.hpp	/^    struct disable_move_assignment$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
disable_move_ctor	src/lgfx/utility/result.hpp	/^        -> disable_move_ctor& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_move_ctor
disable_move_ctor	src/lgfx/utility/result.hpp	/^    struct disable_move_ctor : result_copy_ctor_base<T,E>$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
disconnect	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      void disconnect(void)$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
display	src/lgfx/v0/LGFX_Device.hpp	/^    void display(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFX_Device
display	src/lgfx/v0/LGFX_Device.hpp	/^    void display(void)$/;"	f	class:lgfx::v0::LGFX_Device
display	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::display(PanelCommon* panel, LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
display	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::display(PanelCommon* panel, LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::Panel_IT8951
display	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::display(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
display	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void display(void) { _panel->display(0, 0, 0, 0); }$/;"	f	class:lgfx::v1::LGFXBase
display	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_Device
display	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
display	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_IT8951
display	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_SH110x::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_SH110x
display	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_SSD1306::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_SSD1306
display	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_SSD1327
display	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_fb
display	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h)$/;"	f	class:lgfx::v1::Panel_OpenCV
display1	examples/Test/build_test/main/main.cpp	/^static LGFX display1;$/;"	v	file:
display1	examples/Test/build_test/main/main.cpp	/^static LGFX_Sprite sprite(&display1);$/;"	v	file:
display2	examples/Test/build_test/main/main.cpp	/^  static LGFX_I2C display2;$/;"	v	file:
displayBusy	src/lgfx/v0/LGFX_Device.hpp	/^    bool displayBusy(void)$/;"	f	class:lgfx::v0::LGFX_Device
displayBusy	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  bool Panel_GDEW0154M09::displayBusy(PanelCommon* panel, LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
displayBusy	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::displayBusy(PanelCommon* panel, LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_IT8951
displayBusy	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool displayBusy(void) { return _panel->displayBusy(); }$/;"	f	class:lgfx::v1::LGFXBase
displayBusy	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  bool Panel_GDEW0154M09::displayBusy(void)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
displayBusy	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::displayBusy(void)$/;"	f	class:lgfx::v1::Panel_IT8951
displayBusy	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::displayBusy(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI
displayBusy	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  bool Panel_RA8875::displayBusy(void)$/;"	f	class:lgfx::v1::Panel_RA8875
displayBusy	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  bool Panel_1bitOLED::displayBusy(void)$/;"	f	class:lgfx::v1::Panel_1bitOLED
displayBusy	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  bool Panel_SSD1327::displayBusy(void)$/;"	f	class:lgfx::v1::Panel_SSD1327
display_height	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t display_height;      \/\/ Y方向 表示可能ピクセル数;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
display_width	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t display_width;       \/\/ X方向 表示可能ピクセル数;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
dlen_16bit	src/lgfx/v1/panel/Panel_Device.hpp	/^      bool dlen_16bit = false;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
dmaBusy	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline bool dmaBusy(void) { return dmaBusy_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
dmaBusy	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool dmaBusy(void) { return _panel->dmaBusy(); }$/;"	f	class:lgfx::v1::LGFXBase
dmaBusy	src/lgfx/v1/panel/Panel_Device.cpp	/^  bool Panel_Device::dmaBusy(void)$/;"	f	class:lgfx::v1::Panel_Device
dmaCallback	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^static void dmaCallback(Adafruit_ZeroDMA*) {}$/;"	f
dmaCallback	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  static void dmaCallback(Adafruit_ZeroDMA*) {}$/;"	f	file:
dmaHal_single	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  static DMA_HandleTypeDef *dmaHal_single;$/;"	m	namespace:lgfx::v1	file:
dmaTask	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::dmaTask(void *arg)$/;"	f	class:lgfx::v1::Bus_HUB75
dmaTask_inner	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::dmaTask_inner(void)$/;"	f	class:lgfx::v1::Bus_HUB75
dma_channel	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::v0::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^    static constexpr int dma_channel = 1;$/;"	m	struct:lgfx::LGFX_Config
dma_channel	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      uint8_t dma_channel = LGFX_ESP32_SPI_DMA_CH;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
dma_desc	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    lldesc_t dma_desc[2];$/;"	m	struct:lgfx::v1::internal_t	file:
dma_hw	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^#define dma_hw /;"	d
dma_hw	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^#undef dma_hw$/;"	d
dma_port	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      DMA_TypeDef *dma_port = DMA1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
dmac_id_rx	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    int       dmac_id_rx;$/;"	m	struct:lgfx::v0::__anon274
dmac_id_rx	src/lgfx/v1/platforms/samd51/common.hpp	/^      int       dmac_id_rx;$/;"	m	struct:lgfx::v1::samd51::sercom_data_t
dmac_id_tx	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    int       dmac_id_tx;$/;"	m	struct:lgfx::v0::__anon274
dmac_id_tx	src/lgfx/v1/platforms/samd51/common.hpp	/^      int       dmac_id_tx;$/;"	m	struct:lgfx::v1::samd51::sercom_data_t
dpend	src/lgfx/utility/lgfx_tjpgd.h	/^	uint8_t* dpend;				\/* data end ptr *\/$/;"	m	struct:lgfxJdec
dptr	src/lgfx/utility/lgfx_tjpgd.h	/^	uint8_t* dptr;				\/* Current data read ptr *\/$/;"	m	struct:lgfxJdec
drawAlignmentPattern	src/lgfx/utility/lgfx_qrcode.c	/^static void drawAlignmentPattern(BitBucket *modules, BitBucket *isFunction, uint_fast8_t x, uint_fast8_t y) {$/;"	f	file:
drawArc	src/lgfx/v0/LGFXBase.hpp	/^                                void drawArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1)                 {                  drawEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v0::LGFXBase
drawArc	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1, const T& color) { setColor(color); drawEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v0::LGFXBase
drawArc	src/lgfx/v1/LGFXBase.hpp	/^                  void drawArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1)                 {                  drawEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v1::LGFXBase
drawArc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1, const T& color) { setColor(color); drawEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v1::LGFXBase
drawBezier	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawBezier( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v0::LGFXBase
drawBezier	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawBezier( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3)$/;"	f	class:lgfx::v0::LGFXBase
drawBezier	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawBezier      ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, const T& color)  { setColor(color); drawBezier(x0, y0, x1, y1, x2, y2); }$/;"	f	class:lgfx::v0::LGFXBase
drawBezier	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawBezier      ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3, const T& color)  { setColor(color); drawBezier(x0, y0, x1, y1, x2, y2, x3, y3); }$/;"	f	class:lgfx::v0::LGFXBase
drawBezier	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawBezier( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v1::LGFXBase
drawBezier	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawBezier( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3)$/;"	f	class:lgfx::v1::LGFXBase
drawBezier	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawBezier      ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, const T& color)  { setColor(color); drawBezier(x0, y0, x1, y1, x2, y2); }$/;"	f	class:lgfx::v1::LGFXBase
drawBezier	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawBezier      ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3, const T& color)  { setColor(color); drawBezier(x0, y0, x1, y1, x2, y2, x3, y3); }$/;"	f	class:lgfx::v1::LGFXBase
drawBezierHelper	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawBezierHelper( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, const T& color)  { setColor(color); drawBezierHelper(x0, y0, x1, y1, x2, y2); }$/;"	f	class:lgfx::v0::LGFXBase
drawBitmap	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> void drawBitmap (int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, const T& color                    ) { draw_bitmap (x, y, bitmap, w, h, _write_conv.convert(color)); }$/;"	f	class:lgfx::v0::LGFXBase
drawBitmap	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> void drawBitmap (int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, const T& fgcolor, const T& bgcolor) { draw_bitmap (x, y, bitmap, w, h, _write_conv.convert(fgcolor), _write_conv.convert(bgcolor)); }$/;"	f	class:lgfx::v0::LGFXBase
drawBitmap	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawBitmap (int32_t x, int32_t y, const uint8_t* bitmap, int32_t w, int32_t h, const T& color                    ) { draw_bitmap (x, y, bitmap, w, h, _write_conv.convert(color)); }$/;"	f	class:lgfx::v1::LGFXBase
drawBitmap	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawBitmap (int32_t x, int32_t y, const uint8_t* bitmap, int32_t w, int32_t h, const T& fgcolor, const T& bgcolor) { draw_bitmap (x, y, bitmap, w, h, _write_conv.convert(fgcolor), _write_conv.convert(bgcolor)); }$/;"	f	class:lgfx::v1::LGFXBase
drawBmp	src/lgfx/v0/LGFXBase.hpp	/^    bool drawBmp(const uint8_t *bmp_data, uint32_t bmp_len, int32_t x=0, int32_t y=0, int32_t maxWidth=0, int32_t maxHeight=0, int32_t offX=0, int32_t offY=0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFXBase
drawBmp	src/lgfx/v0/LGFXBase.hpp	/^    inline bool drawBmp(DataWrapper *data, int32_t x=0, int32_t y=0, int32_t maxWidth=0, int32_t maxHeight=0, int32_t offX=0, int32_t offY=0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFXBase
drawBmp	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmp(Stream *dataSource, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmp	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmp(fs::FS &fs, const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmp	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmp(fs::File *dataSource, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmp	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawBmp(LGFX_SDFAT_TYPE &fs, const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawBmp	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawBmp(StorageClass &fs, const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawBmp	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawBmp(fs::FS &fs, const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawBmpFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    bool drawBmpFile(FileWrapper* file, const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float scale_x, float scale_y, datum_t datum)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmpFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmpFile(const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmpFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmpFile(fs::FS &fs, const String& path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmpFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmpFile(fs::FS &fs, const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmpFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmpFile(fs::FS &fs, fs::File *file, int32_t x=0, int32_t y=0, int32_t maxWidth=0, int32_t maxHeight=0, int32_t offX=0, int32_t offY=0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmpUrl	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmpUrl(const String& url, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawBmpUrl	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawBmpUrl(const char* url, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawButton	src/lgfx/v1/LGFX_Button.cpp	/^  void LGFX_Button::drawButton(bool inverted, const char* long_name)$/;"	f	class:lgfx::v1::LGFX_Button
drawCb	src/lgfx/v1/LGFX_Button.hpp	/^    typedef void (*drawCb)( LovyanGFX *_gfx, int32_t x, int32_t y, int32_t w, int32_t h, bool invert, const char* long_name );$/;"	t	class:lgfx::v1::LGFX_Button
drawCenterString	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use setTextDatum() and drawString()")]] inline size_t drawCenterString(const String& string, int32_t x, int32_t y, uint8_t font) { setFont(fontdata[font]); return draw_string(string.c_str(), x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v0::LGFXBase
drawCenterString	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use setTextDatum() and drawString()")]] inline size_t drawCenterString(const char *string, int32_t x, int32_t y, uint8_t font) { setFont(fontdata[font]); return draw_string(string, x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v0::LGFXBase
drawCenterString	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use IFont")]] inline size_t drawCenterString(const String& string, int32_t x, int32_t y, uint8_t font) { return draw_string(string.c_str(), x, y, textdatum_t::top_center, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawCenterString	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use IFont")]] inline size_t drawCenterString(const char *string, int32_t x, int32_t y, uint8_t font) { return draw_string(string, x, y, textdatum_t::top_center, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawCenterString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCenterString(const String& string, int32_t x, int32_t y                   ) { return draw_string(string.c_str(), x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v1::LGFXBase
drawCenterString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCenterString(const String& string, int32_t x, int32_t y, const IFont* font) { return draw_string(string.c_str(), x, y, textdatum_t::top_center, font); }$/;"	f	class:lgfx::v1::LGFXBase
drawCenterString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCenterString(const char *string, int32_t x, int32_t y                   ) { return draw_string(string, x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v1::LGFXBase
drawCenterString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCenterString(const char *string, int32_t x, int32_t y, const IFont* font) { return draw_string(string, x, y, textdatum_t::top_center, font); }$/;"	f	class:lgfx::v1::LGFXBase
drawCentreString	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use setTextDatum() and drawString()")]] inline size_t drawCentreString(const String& string, int32_t x, int32_t y, uint8_t font) { setFont(fontdata[font]); return draw_string(string.c_str(), x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v0::LGFXBase
drawCentreString	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use setTextDatum() and drawString()")]] inline size_t drawCentreString(const char *string, int32_t x, int32_t y, uint8_t font) { setFont(fontdata[font]); return draw_string(string, x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v0::LGFXBase
drawCentreString	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use IFont")]] inline size_t drawCentreString(const String& string, int32_t x, int32_t y, uint8_t font) { return draw_string(string.c_str(), x, y, textdatum_t::top_center, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawCentreString	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use IFont")]] inline size_t drawCentreString(const char *string, int32_t x, int32_t y, uint8_t font) { return draw_string(string, x, y, textdatum_t::top_center, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawCentreString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCentreString(const String& string, int32_t x, int32_t y                   ) { return draw_string(string.c_str(), x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v1::LGFXBase
drawCentreString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCentreString(const String& string, int32_t x, int32_t y, const IFont* font) { return draw_string(string.c_str(), x, y, textdatum_t::top_center, font); }$/;"	f	class:lgfx::v1::LGFXBase
drawCentreString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCentreString(const char *string, int32_t x, int32_t y                   ) { return draw_string(string, x, y, textdatum_t::top_center); }$/;"	f	class:lgfx::v1::LGFXBase
drawCentreString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawCentreString(const char *string, int32_t x, int32_t y, const IFont* font) { return draw_string(string, x, y, textdatum_t::top_center, font); }$/;"	f	class:lgfx::v1::LGFXBase
drawChar	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::drawChar(uint16_t uniCode, int32_t x, int32_t y, uint8_t font) {$/;"	f	class:lgfx::v0::LGFXBase
drawChar	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawChar(int32_t x, int32_t y, uint16_t uniCode, T color, T bg, float size) { return drawChar(x, y, uniCode, color, bg, size, size); }$/;"	f	class:lgfx::v0::LGFXBase
drawChar	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawChar(int32_t x, int32_t y, uint16_t uniCode, T color, T bg, float size_x, float size_y)$/;"	f	class:lgfx::v0::LGFXBase
drawChar	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawChar(uint16_t uniCode, int32_t x, int32_t y              ) { _filled_x = 0; return _font->drawChar(this, x, y, uniCode, &_text_style); }$/;"	f	class:lgfx::v0::LGFXBase
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t BDFfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const$/;"	f	class:lgfx::v0::BDFfont
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t BMPfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style) const$/;"	f	class:lgfx::v0::BMPfont
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t FixedBMPfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style) const$/;"	f	class:lgfx::v0::FixedBMPfont
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t GFXfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style) const$/;"	f	class:lgfx::v0::GFXfont
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t GLCDfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const$/;"	f	class:lgfx::v0::GLCDfont
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t RLEfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t code, const TextStyle* style) const$/;"	f	class:lgfx::v0::RLEfont
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t U8g2font::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style) const$/;"	f	class:lgfx::v0::U8g2font
drawChar	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t VLWfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t code, const TextStyle* style) const$/;"	f	class:lgfx::v0::VLWfont
drawChar	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::drawChar(uint16_t uniCode, int32_t x, int32_t y, uint8_t font)$/;"	f	class:lgfx::v1::LGFXBase
drawChar	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawChar(int32_t x, int32_t y, uint16_t uniCode, T color, T bg, float size) { return drawChar(x, y, uniCode, color, bg, size, size); }$/;"	f	class:lgfx::v1::LGFXBase
drawChar	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawChar(int32_t x, int32_t y, uint16_t uniCode, T color, T bg, float size_x, float size_y)$/;"	f	class:lgfx::v1::LGFXBase
drawChar	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawChar(uint16_t uniCode, int32_t x, int32_t y) { int32_t dummy_filled_x = 0; return _font->drawChar(this, x, y, uniCode, &_text_style, &_font_metrics, dummy_filled_x); }$/;"	f	class:lgfx::v1::LGFXBase
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t BDFfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::BDFfont
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t BMPfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::BMPfont
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t FixedBMPfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::FixedBMPfont
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t GFXfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::GFXfont
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t GLCDfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::GLCDfont
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t RLEfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t code, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::RLEfont
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t U8g2font::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t uniCode, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::U8g2font
drawChar	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t VLWfont::drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t code, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const$/;"	f	class:lgfx::v1::VLWfont
drawCharDummy	src/lgfx/v0/lgfx_fonts.cpp	/^  size_t IFont::drawCharDummy(LGFXBase* gfx, int32_t x, int32_t y, int32_t w, int32_t h, const TextStyle* style) const$/;"	f	class:lgfx::v0::IFont
drawCharDummy	src/lgfx/v1/lgfx_fonts.cpp	/^  size_t IFont::drawCharDummy(LGFXBase* gfx, int32_t x, int32_t y, int32_t w, int32_t h, const TextStyle* style, int32_t& filled_x) const$/;"	f	class:lgfx::v1::IFont
drawCircle	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawCircle(int32_t x, int32_t y, int32_t r)$/;"	f	class:lgfx::v0::LGFXBase
drawCircle	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawCircle      ( int32_t x, int32_t y                      , int32_t r, const T& color) { setColor(color); drawCircle   (x, y      , r); }$/;"	f	class:lgfx::v0::LGFXBase
drawCircle	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawCircle(int32_t x, int32_t y, int32_t r)$/;"	f	class:lgfx::v1::LGFXBase
drawCircle	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawCircle      ( int32_t x, int32_t y                      , int32_t r, const T& color) { setColor(color); drawCircle   (x, y      , r); }$/;"	f	class:lgfx::v1::LGFXBase
drawCircleHelper	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawCircleHelper(int32_t x, int32_t y, int32_t r, uint_fast8_t cornername)$/;"	f	class:lgfx::v0::LGFXBase
drawCircleHelper	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawCircleHelper( int32_t x, int32_t y, int32_t r, uint_fast8_t cornername                , const T& color) { setColor(color); drawCircleHelper(x, y, r, cornername    ); }$/;"	f	class:lgfx::v0::LGFXBase
drawCircleHelper	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawCircleHelper(int32_t x, int32_t y, int32_t r, uint_fast8_t cornername)$/;"	f	class:lgfx::v1::LGFXBase
drawCircleHelper	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawCircleHelper( int32_t x, int32_t y, int32_t r, uint_fast8_t cornername                , const T& color) { setColor(color); drawCircleHelper(x, y, r, cornername    ); }$/;"	f	class:lgfx::v1::LGFXBase
drawCodewords	src/lgfx/utility/lgfx_qrcode.c	/^static void drawCodewords(BitBucket *modules, BitBucket *isFunction, BitBucket *codewords) {$/;"	f	file:
drawEllipse	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawEllipse(int32_t x, int32_t y, int32_t rx, int32_t ry)$/;"	f	class:lgfx::v0::LGFXBase
drawEllipse	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawEllipse     ( int32_t x, int32_t y, int32_t rx, int32_t ry         , const T& color) { setColor(color); drawEllipse  (x, y, rx, ry ); }$/;"	f	class:lgfx::v0::LGFXBase
drawEllipse	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawEllipse(int32_t x, int32_t y, int32_t rx, int32_t ry)$/;"	f	class:lgfx::v1::LGFXBase
drawEllipse	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawEllipse     ( int32_t x, int32_t y, int32_t rx, int32_t ry         , const T& color) { setColor(color); drawEllipse  (x, y, rx, ry ); }$/;"	f	class:lgfx::v1::LGFXBase
drawEllipseArc	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawEllipseArc(int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float start, float end)$/;"	f	class:lgfx::v0::LGFXBase
drawEllipseArc	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawEllipseArc  ( int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float angle0, float angle1, const T& color) { setColor(color); drawEllipseArc( x, y, r0x, r1x, r0y, r1y, angle0, angle1); }$/;"	f	class:lgfx::v0::LGFXBase
drawEllipseArc	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawEllipseArc(int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float start, float end)$/;"	f	class:lgfx::v1::LGFXBase
drawEllipseArc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawEllipseArc  ( int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float angle0, float angle1, const T& color) { setColor(color); drawEllipseArc( x, y, r0x, r1x, r0y, r1y, angle0, angle1); }$/;"	f	class:lgfx::v1::LGFXBase
drawFastHLine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawFastHLine(int32_t x, int32_t y, int32_t w)$/;"	f	class:lgfx::v0::LGFXBase
drawFastHLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawFastHLine   ( int32_t x, int32_t y, int32_t w                      , const T& color) { setColor(color); drawFastHLine(x, y, w      ); }$/;"	f	class:lgfx::v0::LGFXBase
drawFastHLine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawFastHLine(int32_t x, int32_t y, int32_t w)$/;"	f	class:lgfx::v1::LGFXBase
drawFastHLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawFastHLine   ( int32_t x, int32_t y, int32_t w                      , const T& color) { setColor(color); drawFastHLine(x, y, w      ); }$/;"	f	class:lgfx::v1::LGFXBase
drawFastVLine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawFastVLine(int32_t x, int32_t y, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
drawFastVLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawFastVLine   ( int32_t x, int32_t y           , int32_t h           , const T& color) { setColor(color); drawFastVLine(x, y   , h   ); }$/;"	f	class:lgfx::v0::LGFXBase
drawFastVLine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawFastVLine(int32_t x, int32_t y, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
drawFastVLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawFastVLine   ( int32_t x, int32_t y           , int32_t h           , const T& color) { setColor(color); drawFastVLine(x, y   , h   ); }$/;"	f	class:lgfx::v1::LGFXBase
drawFinderPattern	src/lgfx/utility/lgfx_qrcode.c	/^static void drawFinderPattern(BitBucket *modules, BitBucket *isFunction, uint_fast8_t x, uint_fast8_t y) {$/;"	f	file:
drawFloat	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY)$/;"	f	class:lgfx::v0::LGFXBase
drawFloat	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY, const IFont* font) { setFont(font          ); return drawFloat(floatNumber, dp, poX, poY); }$/;"	f	class:lgfx::v0::LGFXBase
drawFloat	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY, uint8_t      font) { setFont(fontdata[font]); return drawFloat(floatNumber, dp, poX, poY); }$/;"	f	class:lgfx::v0::LGFXBase
drawFloat	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY, const IFont* font)$/;"	f	class:lgfx::v1::LGFXBase
drawFloat	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY              ) { return drawFloat(floatNumber, dp, poX, poY, _font         ); }$/;"	f	class:lgfx::v1::LGFXBase
drawFloat	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawFloat(float floatNumber, uint8_t dp, int32_t poX, int32_t poY, uint8_t font) { return drawFloat(floatNumber, dp, poX, poY, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawFormatBits	src/lgfx/utility/lgfx_qrcode.c	/^static void drawFormatBits(BitBucket *modules, BitBucket *isFunction, uint8_t ecc, uint8_t mask) {$/;"	f	file:
drawFunctionPatterns	src/lgfx/utility/lgfx_qrcode.c	/^static void drawFunctionPatterns(BitBucket *modules, BitBucket *isFunction, uint8_t version, uint8_t ecc) {$/;"	f	file:
drawGradientHLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawGradientHLine( int32_t x, int32_t y, int32_t w, const T& colorstart, const T& colorend ) { drawGradientLine( x, y, x + w - 1, y, colorstart, colorend ); }$/;"	f	class:lgfx::v0::LGFXBase
drawGradientHLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawGradientHLine( int32_t x, int32_t y, int32_t w, const T& colorstart, const T& colorend ) { drawGradientLine( x, y, x + w - 1, y, colorstart, colorend ); }$/;"	f	class:lgfx::v1::LGFXBase
drawGradientLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawGradientLine ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, const T& colorstart, const T& colorend ) { draw_gradient_line( x0, y0, x1, y1, convert_to_rgb888(colorstart), convert_to_rgb888(colorend) ); }$/;"	f	class:lgfx::v0::LGFXBase
drawGradientLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawGradientLine ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, const T& colorstart, const T& colorend ) { draw_gradient_line( x0, y0, x1, y1, convert_to_rgb888(colorstart), convert_to_rgb888(colorend) ); }$/;"	f	class:lgfx::v1::LGFXBase
drawGradientVLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawGradientVLine( int32_t x, int32_t y, int32_t h, const T& colorstart, const T& colorend ) { drawGradientLine( x, y, x, y + h - 1, colorstart, colorend ); }$/;"	f	class:lgfx::v0::LGFXBase
drawGradientVLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawGradientVLine( int32_t x, int32_t y, int32_t h, const T& colorstart, const T& colorend ) { drawGradientLine( x, y, x, y + h - 1, colorstart, colorend ); }$/;"	f	class:lgfx::v1::LGFXBase
drawJpg	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use float scale")]] bool drawJpg(const uint8_t *jpg_data, uint32_t jpg_len, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFXBase
drawJpg	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use float scale")]] inline bool drawJpg(DataWrapper *data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFXBase
drawJpg	src/lgfx/v0/LGFXBase.hpp	/^    bool drawJpg(const uint8_t *jpg_data, uint32_t jpg_len, int32_t x=0, int32_t y=0, int32_t maxWidth=0, int32_t maxHeight=0, int32_t offX=0, int32_t offY=0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFXBase
drawJpg	src/lgfx/v0/LGFXBase.hpp	/^    inline bool drawJpg(DataWrapper *data, int32_t x=0, int32_t y=0, int32_t maxWidth=0, int32_t maxHeight=0, int32_t offX=0, int32_t offY=0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFXBase
drawJpg	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpg(Stream *dataSource, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpg	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpg(Stream *dataSource, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpg	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpg(fs::File *dataSource, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpg	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpg(fs::File *dataSource, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpg	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use float scale")]] bool drawJpg(const uint8_t *jpg_data, uint32_t jpg_len, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFXBase
drawJpg	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use float scale")]] inline bool drawJpg(DataWrapper *data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFXBase
drawJpg	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpg(File *dataSource, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpg	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpg(Stream *dataSource, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpg	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpg(fs::File *dataSource, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    bool drawJpgFile(FileWrapper* file, const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float scale_x, float scale_y, datum_t datum)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(fs::FS &fs, const String& path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(fs::FS &fs, const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(fs::FS &fs, const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(fs::FS &fs, fs::File *file, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(fs::FS &fs, fs::File *file, int32_t x=0, int32_t y=0, int32_t maxWidth=0, int32_t maxHeight=0, int32_t offX=0, int32_t offY=0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(LGFX_SDFAT_TYPE &fs, FsFile *file, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(LGFX_SDFAT_TYPE &fs, const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(StorageClass &fs, File *file, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(StorageClass &fs, const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(fs::FS &fs, const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpgFile	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpgFile(fs::FS &fs, fs::File *file, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawJpgUrl	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgUrl(const String& url, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgUrl	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgUrl(const char* url, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgUrl	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawJpgUrl(const char* url, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawJpgUrl	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    inline bool drawJpgUrl(const char* url, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, jpeg_div::jpeg_div_t scale)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
drawLine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1)$/;"	f	class:lgfx::v0::LGFXBase
drawLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawLine        ( int32_t x0, int32_t y0, int32_t x1, int32_t y1       , const T& color)  { setColor(color); drawLine(    x0, y0, x1, y1        ); }$/;"	f	class:lgfx::v0::LGFXBase
drawLine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawLine(int32_t x0, int32_t y0, int32_t x1, int32_t y1)$/;"	f	class:lgfx::v1::LGFXBase
drawLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawLine        ( int32_t x0, int32_t y0, int32_t x1, int32_t y1       , const T& color) { setColor(color); drawLine     (x0,y0,x1, y1 ); }$/;"	f	class:lgfx::v1::LGFXBase
drawNumber	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::drawNumber(long long_num, int32_t poX, int32_t poY)$/;"	f	class:lgfx::v0::LGFXBase
drawNumber	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawNumber(long long_num, int32_t poX, int32_t poY, const IFont* font) { setFont(font          ); return drawNumber(long_num, poX, poY); }$/;"	f	class:lgfx::v0::LGFXBase
drawNumber	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawNumber(long long_num, int32_t poX, int32_t poY, uint8_t      font) { setFont(fontdata[font]); return drawNumber(long_num, poX, poY); }$/;"	f	class:lgfx::v0::LGFXBase
drawNumber	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::drawNumber(long long_num, int32_t poX, int32_t poY, const IFont* font)$/;"	f	class:lgfx::v1::LGFXBase
drawNumber	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawNumber(long long_num, int32_t poX, int32_t poY              ) { return drawNumber(long_num, poX, poY, _font         ); }$/;"	f	class:lgfx::v1::LGFXBase
drawNumber	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawNumber(long long_num, int32_t poX, int32_t poY, uint8_t font) { return drawNumber(long_num, poX, poY, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawPixel	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void drawPixel( int32_t x, int32_t y ) { if (x >= _clip_l && x <= _clip_r && y >= _clip_t && y <= _clip_b) drawPixel_impl(x, y); }$/;"	f	class:lgfx::v0::LGFXBase
drawPixel	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawPixel       ( int32_t x, int32_t y                                 , const T& color) { setColor(color); drawPixel    (x, y         ); }$/;"	f	class:lgfx::v0::LGFXBase
drawPixel	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void drawPixel       ( int32_t x, int32_t y) { if (x >= _clip_l && x <= _clip_r && y >= _clip_t && y <= _clip_b) { _panel->drawPixelPreclipped(x, y, getRawColor()); } }$/;"	f	class:lgfx::v1::LGFXBase
drawPixel	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawPixel       ( int32_t x, int32_t y                                 , const T& color) { setColor(color); drawPixel    (x, y         ); }$/;"	f	class:lgfx::v1::LGFXBase
drawPixelPreclipped	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_Sprite
drawPixelPreclipped	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
drawPixelPreclipped	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
drawPixelPreclipped	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_HasBuffer
drawPixelPreclipped	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_ILI9225
drawPixelPreclipped	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_IT8951
drawPixelPreclipped	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_LCD
drawPixelPreclipped	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_M5HDMI
drawPixelPreclipped	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
drawPixelPreclipped	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_RA8875
drawPixelPreclipped	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_SSD1331
drawPixelPreclipped	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_SSD1351
drawPixelPreclipped	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_fb
drawPixelPreclipped	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_OpenCV
drawPixelPreclipped	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_sdl
drawPng	src/lgfx/v0/LGFXBase.hpp	/^    bool drawPng(const uint8_t *png_data, uint32_t png_len, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFXBase
drawPng	src/lgfx/v0/LGFXBase.hpp	/^    inline bool drawPng(DataWrapper *data, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFXBase
drawPng	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPng(Stream *dataSource, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPng	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPng(fs::File *dataSource, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPngFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    bool drawPngFile(FileWrapper* file, const char *path, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float scale_x, float scale_y, datum_t datum)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPngFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPngFile(const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPngFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPngFile(fs::FS &fs, const String& path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPngFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPngFile(fs::FS &fs, const char *path, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPngFile	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPngFile(fs::FS &fs, fs::File *file, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPngUrl	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPngUrl(const String& url, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawPngUrl	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    inline bool drawPngUrl(const char* url, int32_t x = 0, int32_t y = 0, int32_t maxWidth = 0, int32_t maxHeight = 0, int32_t offX = 0, int32_t offY = 0, float scale_x = 1.0f, float scale_y = 0.0f, datum_t datum = datum_t::top_left)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
drawRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
drawRect	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawRect        ( int32_t x, int32_t y, int32_t w, int32_t h           , const T& color) { setColor(color); drawRect     (x, y, w, h   ); }$/;"	f	class:lgfx::v0::LGFXBase
drawRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
drawRect	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawRect        ( int32_t x, int32_t y, int32_t w, int32_t h           , const T& color) { setColor(color); drawRect     (x, y, w, h   ); }$/;"	f	class:lgfx::v1::LGFXBase
drawRightString	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use setTextDatum() and drawString()")]] inline size_t drawRightString( const String& string, int32_t x, int32_t y, uint8_t font) { setFont(fontdata[font]); return draw_string(string.c_str(), x, y, textdatum_t::top_right); }$/;"	f	class:lgfx::v0::LGFXBase
drawRightString	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use setTextDatum() and drawString()")]] inline size_t drawRightString( const char *string, int32_t x, int32_t y, uint8_t font) { setFont(fontdata[font]); return draw_string(string, x, y, textdatum_t::top_right); }$/;"	f	class:lgfx::v0::LGFXBase
drawRightString	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use IFont")]] inline size_t drawRightString( const String& string, int32_t x, int32_t y, uint8_t font) { return draw_string(string.c_str(), x, y, textdatum_t::top_right , fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawRightString	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use IFont")]] inline size_t drawRightString( const char *string, int32_t x, int32_t y, uint8_t font) { return draw_string(string, x, y, textdatum_t::top_right , fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawRightString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawRightString( const String& string, int32_t x, int32_t y                   ) { return draw_string(string.c_str(), x, y, textdatum_t::top_right ); }$/;"	f	class:lgfx::v1::LGFXBase
drawRightString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawRightString( const String& string, int32_t x, int32_t y, const IFont* font) { return draw_string(string.c_str(), x, y, textdatum_t::top_right , font); }$/;"	f	class:lgfx::v1::LGFXBase
drawRightString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawRightString( const char *string, int32_t x, int32_t y                   ) { return draw_string(string, x, y, textdatum_t::top_right ); }$/;"	f	class:lgfx::v1::LGFXBase
drawRightString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawRightString( const char *string, int32_t x, int32_t y, const IFont* font) { return draw_string(string, x, y, textdatum_t::top_right , font); }$/;"	f	class:lgfx::v1::LGFXBase
drawRoundRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r)$/;"	f	class:lgfx::v0::LGFXBase
drawRoundRect	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawRoundRect   ( int32_t x, int32_t y, int32_t w, int32_t h, int32_t r, const T& color) { setColor(color); drawRoundRect(x, y, w, h, r); }$/;"	f	class:lgfx::v0::LGFXBase
drawRoundRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r)$/;"	f	class:lgfx::v1::LGFXBase
drawRoundRect	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawRoundRect   ( int32_t x, int32_t y, int32_t w, int32_t h, int32_t r, const T& color) { setColor(color); drawRoundRect(x, y, w, h, r); }$/;"	f	class:lgfx::v1::LGFXBase
drawString	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawString(const String& string, int32_t x, int32_t y              ) {                          return draw_string(string.c_str(), x, y, _text_style.datum); }$/;"	f	class:lgfx::v0::LGFXBase
drawString	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawString(const String& string, int32_t x, int32_t y, uint8_t font) { setFont(fontdata[font]); return draw_string(string.c_str(), x, y, _text_style.datum); }$/;"	f	class:lgfx::v0::LGFXBase
drawString	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawString(const char *string, int32_t x, int32_t y                   ) {                          return draw_string(string, x, y, _text_style.datum); }$/;"	f	class:lgfx::v0::LGFXBase
drawString	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawString(const char *string, int32_t x, int32_t y, const IFont* font) { setFont(font          ); return draw_string(string, x, y, _text_style.datum); }$/;"	f	class:lgfx::v0::LGFXBase
drawString	src/lgfx/v0/LGFXBase.hpp	/^    inline size_t drawString(const char *string, int32_t x, int32_t y, uint8_t      font) { setFont(fontdata[font]); return draw_string(string, x, y, _text_style.datum); }$/;"	f	class:lgfx::v0::LGFXBase
drawString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawString(const String& string, int32_t x, int32_t y                   ) { return draw_string(string.c_str(), x, y, _text_style.datum); }$/;"	f	class:lgfx::v1::LGFXBase
drawString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawString(const String& string, int32_t x, int32_t y, const IFont* font) { return draw_string(string.c_str(), x, y, _text_style.datum,          font ); }$/;"	f	class:lgfx::v1::LGFXBase
drawString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawString(const String& string, int32_t x, int32_t y, uint8_t      font) { return draw_string(string.c_str(), x, y, _text_style.datum, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawString(const char *string, int32_t x, int32_t y                   ) { return draw_string(string, x, y, _text_style.datum); }$/;"	f	class:lgfx::v1::LGFXBase
drawString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawString(const char *string, int32_t x, int32_t y, const IFont* font) { return draw_string(string, x, y, _text_style.datum, font); }$/;"	f	class:lgfx::v1::LGFXBase
drawString	src/lgfx/v1/LGFXBase.hpp	/^    inline size_t drawString(const char *string, int32_t x, int32_t y, uint8_t      font) { return draw_string(string, x, y, _text_style.datum, fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
drawTriangle	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::drawTriangle(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v0::LGFXBase
drawTriangle	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void drawTriangle    ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, const T& color)  { setColor(color); drawTriangle(x0, y0, x1, y1, x2, y2); }$/;"	f	class:lgfx::v0::LGFXBase
drawTriangle	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::drawTriangle(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v1::LGFXBase
drawTriangle	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawTriangle    ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, const T& color)  { setColor(color); drawTriangle(x0, y0, x1, y1, x2, y2); }$/;"	f	class:lgfx::v1::LGFXBase
drawVersion	src/lgfx/utility/lgfx_qrcode.c	/^static void drawVersion(BitBucket *modules, BitBucket *isFunction, uint8_t version) {$/;"	f	file:
drawXBitmap	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> void drawXBitmap(int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, const T& color                    ) { draw_xbitmap(x, y, bitmap, w, h, _write_conv.convert(color)); }$/;"	f	class:lgfx::v0::LGFXBase
drawXBitmap	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> void drawXBitmap(int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, const T& fgcolor, const T& bgcolor) { draw_xbitmap(x, y, bitmap, w, h, _write_conv.convert(fgcolor), _write_conv.convert(bgcolor)); }$/;"	f	class:lgfx::v0::LGFXBase
drawXBitmap	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawXBitmap(int32_t x, int32_t y, const uint8_t* bitmap, int32_t w, int32_t h, const T& color                    ) { draw_xbitmap(x, y, bitmap, w, h, _write_conv.convert(color)); }$/;"	f	class:lgfx::v1::LGFXBase
drawXBitmap	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void drawXBitmap(int32_t x, int32_t y, const uint8_t* bitmap, int32_t w, int32_t h, const T& fgcolor, const T& bgcolor) { draw_xbitmap(x, y, bitmap, w, h, _write_conv.convert(fgcolor), _write_conv.convert(bgcolor)); }$/;"	f	class:lgfx::v1::LGFXBase
draw_bezier_helper	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::draw_bezier_helper( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v0::LGFXBase
draw_bezier_helper	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::draw_bezier_helper( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v1::LGFXBase
draw_bitmap	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::draw_bitmap(int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, uint32_t fg_rawcolor, uint32_t bg_rawcolor)$/;"	f	class:lgfx::v0::LGFXBase
draw_bitmap	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::draw_bitmap(int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, uint32_t fg_rawcolor, uint32_t bg_rawcolor)$/;"	f	class:lgfx::v1::LGFXBase
draw_bmp	src/lgfx/v0/LGFXBase.cpp	/^  bool LGFXBase::draw_bmp(DataWrapper* data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float zoom_x, float zoom_y, datum_t datum)$/;"	f	class:lgfx::v0::LGFXBase
draw_bmp	src/lgfx/v1/LGFXBase.cpp	/^  bool LGFXBase::draw_bmp(DataWrapper* data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float zoom_x, float zoom_y, datum_t datum)$/;"	f	class:lgfx::v1::LGFXBase
draw_calibrate_point	src/lgfx/v0/LGFX_Device.hpp	/^    void draw_calibrate_point(int32_t x, int32_t y, int32_t r, uint32_t fg_rawcolor, uint32_t bg_rawcolor)$/;"	f	class:lgfx::v0::LGFX_Device
draw_calibrate_point	src/lgfx/v1/LGFXBase.cpp	/^    void LGFX_Device::draw_calibrate_point(int32_t x, int32_t y, int32_t r, uint32_t fg_rawcolor, uint32_t bg_rawcolor)$/;"	f	class:lgfx::v1::LGFX_Device
draw_callback	src/lgfx/utility/lgfx_pngle.c	/^  lgfx_pngle_draw_callback_t draw_callback;$/;"	m	struct:_pngle_t	file:
draw_char_bmp	src/lgfx/v0/lgfx_fonts.cpp	/^  static size_t draw_char_bmp(LGFXBase* gfx, int32_t x, int32_t y, const TextStyle* style, const uint8_t* font_addr, int_fast8_t fontWidth, int_fast8_t fontHeight, int_fast8_t w, int_fast8_t margin )$/;"	f	namespace:lgfx::v0
draw_char_bmp	src/lgfx/v1/lgfx_fonts.cpp	/^  static size_t draw_char_bmp(LGFXBase* gfx, int32_t x, int32_t y, const TextStyle* style, const uint8_t* font_addr, int_fast8_t fontWidth, int_fast8_t fontHeight, int_fast8_t w, int_fast8_t margin)$/;"	f	namespace:lgfx::v1
draw_gradient_line	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::draw_gradient_line( int32_t x0, int32_t y0, int32_t x1, int32_t y1, uint32_t colorstart, uint32_t colorend )$/;"	f	class:lgfx::v0::LGFXBase
draw_gradient_line	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::draw_gradient_line( int32_t x0, int32_t y0, int32_t x1, int32_t y1, uint32_t colorstart, uint32_t colorend )$/;"	f	class:lgfx::v1::LGFXBase
draw_jpg	src/lgfx/v0/LGFXBase.cpp	/^  bool LGFXBase::draw_jpg(DataWrapper* data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float zoom_x, float zoom_y, datum_t datum)$/;"	f	class:lgfx::v0::LGFXBase
draw_jpg	src/lgfx/v1/LGFXBase.cpp	/^  bool LGFXBase::draw_jpg(DataWrapper* data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float zoom_x, float zoom_y, datum_t datum)$/;"	f	class:lgfx::v1::LGFXBase
draw_jpg_info_t	src/lgfx/v0/LGFXBase.cpp	/^  struct draw_jpg_info_t : public image_decoder_t$/;"	s	namespace:lgfx::v0	file:
draw_jpg_info_t	src/lgfx/v1/LGFXBase.cpp	/^  struct draw_jpg_info_t : public image_decoder_t$/;"	s	namespace:lgfx::v1	file:
draw_png	src/lgfx/v0/LGFXBase.cpp	/^  bool LGFXBase::draw_png(DataWrapper* data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float zoom_x, float zoom_y, datum_t datum)$/;"	f	class:lgfx::v0::LGFXBase
draw_png	src/lgfx/v1/LGFXBase.cpp	/^  bool LGFXBase::draw_png(DataWrapper* data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float zoom_x, float zoom_y, datum_t datum)$/;"	f	class:lgfx::v1::LGFXBase
draw_qoi	src/lgfx/v1/LGFXBase.cpp	/^  bool LGFXBase::draw_qoi(DataWrapper* data, int32_t x, int32_t y, int32_t maxWidth, int32_t maxHeight, int32_t offX, int32_t offY, float zoom_x, float zoom_y, datum_t datum)$/;"	f	class:lgfx::v1::LGFXBase
draw_string	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::draw_string(const char *string, int32_t x, int32_t y, textdatum_t datum)$/;"	f	class:lgfx::v0::LGFXBase
draw_string	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::draw_string(const char *string, int32_t x, int32_t y, textdatum_t datum, const IFont* font)$/;"	f	class:lgfx::v1::LGFXBase
draw_xbitmap	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::draw_xbitmap(int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, uint32_t fg_rawcolor, uint32_t bg_rawcolor)$/;"	f	class:lgfx::v0::LGFXBase
draw_xbitmap	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::draw_xbitmap(int32_t x, int32_t y, const uint8_t *bitmap, int32_t w, int32_t h, uint32_t fg_rawcolor, uint32_t bg_rawcolor)$/;"	f	class:lgfx::v1::LGFXBase
drawing_y	src/lgfx/utility/lgfx_pngle.c	/^  uint32_t drawing_y;$/;"	m	struct:_pngle_t	file:
driver_brightness	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      uint8_t driver_brightness = 192;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t
dst_attrib	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint8_t dst_attrib;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon6::__anon7
dst_bits	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t dst_bits = 8;$/;"	m	struct:lgfx::pixelcopy_t
dst_bits	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint8_t dst_bits;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon6::__anon7
dst_depth	src/lgfx/v1/misc/pixelcopy.hpp	/^      color_depth_t dst_depth = rgb332_1Byte;$/;"	m	union:lgfx::v1::pixelcopy_t::__anon6
dst_mask	src/lgfx/v0/lgfx_common.hpp	/^    uint8_t dst_mask  = ~0;$/;"	m	struct:lgfx::pixelcopy_t
dst_mask	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint8_t dst_mask  = ~0;$/;"	m	struct:lgfx::v1::pixelcopy_t
dummy_read_bits	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint8_t dummy_read_bits = 1;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
dummy_read_pixel	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint8_t dummy_read_pixel = 8;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
dwStatusCode	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      DWORD dwStatusCode;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
ecc	src/lgfx/utility/lgfx_qrcode.h	/^    uint8_t ecc;$/;"	m	struct:QRCode
effect	src/lgfx/v1/LGFXBase.hpp	/^    void effect(int32_t x, int32_t y, int32_t w, int32_t h, TFunc&& effector)$/;"	f	class:lgfx::v1::LGFXBase
effect	src/lgfx/v1/Panel.hpp	/^    void effect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, TFunc&& effector)$/;"	f	struct:lgfx::v1::IPanel
effect_fill_alpha	src/lgfx/v1/misc/colortype.hpp	/^    effect_fill_alpha(argb8888_t src)$/;"	f	struct:lgfx::effect_fill_alpha
effect_fill_alpha	src/lgfx/v1/misc/colortype.hpp	/^  struct effect_fill_alpha$/;"	s	namespace:lgfx
efont	src/lgfx/v0/lgfx_fonts.hpp	/^  static constexpr lgfx::BDFfont efont = { (const uint8_t *)efontFontData, efontFontList, sizeof(efontFontList)>>1, 16, 8, 16, 14, 16 };$/;"	m	namespace:fonts::v0
efont	src/lgfx/v1/lgfx_fonts.hpp	/^    static constexpr lgfx::BDFfont efont = { (const uint8_t *)efontFontData, efontFontList, sizeof(efontFontList)>>1, 16, 8, 16, 14, 16 };$/;"	m	namespace:lgfx::v1::fonts
efontCN_10	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_10     = { lgfx_efont_cn_10    };$/;"	m	namespace:fonts::v0	file:
efontCN_10	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_10     = { lgfx_efont_cn_10    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_10_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_10_b   = { lgfx_efont_cn_10_b  };$/;"	m	namespace:fonts::v0	file:
efontCN_10_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_10_b   = { lgfx_efont_cn_10_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_10_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_10_bi  = { lgfx_efont_cn_10_bi };$/;"	m	namespace:fonts::v0	file:
efontCN_10_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_10_bi  = { lgfx_efont_cn_10_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_10_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_10_i   = { lgfx_efont_cn_10_i  };$/;"	m	namespace:fonts::v0	file:
efontCN_10_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_10_i   = { lgfx_efont_cn_10_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_12     = { lgfx_efont_cn_12    };$/;"	m	namespace:fonts::v0	file:
efontCN_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_12     = { lgfx_efont_cn_12    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_12_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_12_b   = { lgfx_efont_cn_12_b  };$/;"	m	namespace:fonts::v0	file:
efontCN_12_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_12_b   = { lgfx_efont_cn_12_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_12_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_12_bi  = { lgfx_efont_cn_12_bi };$/;"	m	namespace:fonts::v0	file:
efontCN_12_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_12_bi  = { lgfx_efont_cn_12_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_12_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_12_i   = { lgfx_efont_cn_12_i  };$/;"	m	namespace:fonts::v0	file:
efontCN_12_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_12_i   = { lgfx_efont_cn_12_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_14	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_14     = { lgfx_efont_cn_14    };$/;"	m	namespace:fonts::v0	file:
efontCN_14	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_14     = { lgfx_efont_cn_14    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_14_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_14_b   = { lgfx_efont_cn_14_b  };$/;"	m	namespace:fonts::v0	file:
efontCN_14_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_14_b   = { lgfx_efont_cn_14_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_14_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_14_bi  = { lgfx_efont_cn_14_bi };$/;"	m	namespace:fonts::v0	file:
efontCN_14_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_14_bi  = { lgfx_efont_cn_14_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_14_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_14_i   = { lgfx_efont_cn_14_i  };$/;"	m	namespace:fonts::v0	file:
efontCN_14_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_14_i   = { lgfx_efont_cn_14_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_16     = { lgfx_efont_cn_16    };$/;"	m	namespace:fonts::v0	file:
efontCN_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_16     = { lgfx_efont_cn_16    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_16_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_16_b   = { lgfx_efont_cn_16_b  };$/;"	m	namespace:fonts::v0	file:
efontCN_16_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_16_b   = { lgfx_efont_cn_16_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_16_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_16_bi  = { lgfx_efont_cn_16_bi };$/;"	m	namespace:fonts::v0	file:
efontCN_16_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_16_bi  = { lgfx_efont_cn_16_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_16_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_16_i   = { lgfx_efont_cn_16_i  };$/;"	m	namespace:fonts::v0	file:
efontCN_16_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_16_i   = { lgfx_efont_cn_16_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_24     = { lgfx_efont_cn_24    };$/;"	m	namespace:fonts::v0	file:
efontCN_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_24     = { lgfx_efont_cn_24    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_24_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_24_b   = { lgfx_efont_cn_24_b  };$/;"	m	namespace:fonts::v0	file:
efontCN_24_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_24_b   = { lgfx_efont_cn_24_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_24_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_24_bi  = { lgfx_efont_cn_24_bi };$/;"	m	namespace:fonts::v0	file:
efontCN_24_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_24_bi  = { lgfx_efont_cn_24_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontCN_24_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontCN_24_i   = { lgfx_efont_cn_24_i  };$/;"	m	namespace:fonts::v0	file:
efontCN_24_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontCN_24_i   = { lgfx_efont_cn_24_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_10	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_10     = { lgfx_efont_ja_10    };$/;"	m	namespace:fonts::v0	file:
efontJA_10	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_10     = { lgfx_efont_ja_10    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_10_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_10_b   = { lgfx_efont_ja_10_b  };$/;"	m	namespace:fonts::v0	file:
efontJA_10_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_10_b   = { lgfx_efont_ja_10_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_10_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_10_bi  = { lgfx_efont_ja_10_bi };$/;"	m	namespace:fonts::v0	file:
efontJA_10_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_10_bi  = { lgfx_efont_ja_10_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_10_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_10_i   = { lgfx_efont_ja_10_i  };$/;"	m	namespace:fonts::v0	file:
efontJA_10_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_10_i   = { lgfx_efont_ja_10_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_12     = { lgfx_efont_ja_12    };$/;"	m	namespace:fonts::v0	file:
efontJA_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_12     = { lgfx_efont_ja_12    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_12_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_12_b   = { lgfx_efont_ja_12_b  };$/;"	m	namespace:fonts::v0	file:
efontJA_12_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_12_b   = { lgfx_efont_ja_12_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_12_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_12_bi  = { lgfx_efont_ja_12_bi };$/;"	m	namespace:fonts::v0	file:
efontJA_12_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_12_bi  = { lgfx_efont_ja_12_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_12_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_12_i   = { lgfx_efont_ja_12_i  };$/;"	m	namespace:fonts::v0	file:
efontJA_12_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_12_i   = { lgfx_efont_ja_12_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_14	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_14     = { lgfx_efont_ja_14    };$/;"	m	namespace:fonts::v0	file:
efontJA_14	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_14     = { lgfx_efont_ja_14    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_14_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_14_b   = { lgfx_efont_ja_14_b  };$/;"	m	namespace:fonts::v0	file:
efontJA_14_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_14_b   = { lgfx_efont_ja_14_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_14_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_14_bi  = { lgfx_efont_ja_14_bi };$/;"	m	namespace:fonts::v0	file:
efontJA_14_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_14_bi  = { lgfx_efont_ja_14_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_14_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_14_i   = { lgfx_efont_ja_14_i  };$/;"	m	namespace:fonts::v0	file:
efontJA_14_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_14_i   = { lgfx_efont_ja_14_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_16     = { lgfx_efont_ja_16    };$/;"	m	namespace:fonts::v0	file:
efontJA_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_16     = { lgfx_efont_ja_16    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_16_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_16_b   = { lgfx_efont_ja_16_b  };$/;"	m	namespace:fonts::v0	file:
efontJA_16_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_16_b   = { lgfx_efont_ja_16_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_16_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_16_bi  = { lgfx_efont_ja_16_bi };$/;"	m	namespace:fonts::v0	file:
efontJA_16_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_16_bi  = { lgfx_efont_ja_16_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_16_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_16_i   = { lgfx_efont_ja_16_i  };$/;"	m	namespace:fonts::v0	file:
efontJA_16_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_16_i   = { lgfx_efont_ja_16_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_24     = { lgfx_efont_ja_24    };$/;"	m	namespace:fonts::v0	file:
efontJA_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_24     = { lgfx_efont_ja_24    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_24_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_24_b   = { lgfx_efont_ja_24_b  };$/;"	m	namespace:fonts::v0	file:
efontJA_24_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_24_b   = { lgfx_efont_ja_24_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_24_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_24_bi  = { lgfx_efont_ja_24_bi };$/;"	m	namespace:fonts::v0	file:
efontJA_24_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_24_bi  = { lgfx_efont_ja_24_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontJA_24_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontJA_24_i   = { lgfx_efont_ja_24_i  };$/;"	m	namespace:fonts::v0	file:
efontJA_24_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontJA_24_i   = { lgfx_efont_ja_24_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_10	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_10     = { lgfx_efont_kr_10    };$/;"	m	namespace:fonts::v0	file:
efontKR_10	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_10     = { lgfx_efont_kr_10    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_10_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_10_b   = { lgfx_efont_kr_10_b  };$/;"	m	namespace:fonts::v0	file:
efontKR_10_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_10_b   = { lgfx_efont_kr_10_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_10_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_10_bi  = { lgfx_efont_kr_10_bi };$/;"	m	namespace:fonts::v0	file:
efontKR_10_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_10_bi  = { lgfx_efont_kr_10_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_10_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_10_i   = { lgfx_efont_kr_10_i  };$/;"	m	namespace:fonts::v0	file:
efontKR_10_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_10_i   = { lgfx_efont_kr_10_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_12     = { lgfx_efont_kr_12    };$/;"	m	namespace:fonts::v0	file:
efontKR_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_12     = { lgfx_efont_kr_12    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_12_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_12_b   = { lgfx_efont_kr_12_b  };$/;"	m	namespace:fonts::v0	file:
efontKR_12_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_12_b   = { lgfx_efont_kr_12_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_12_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_12_bi  = { lgfx_efont_kr_12_bi };$/;"	m	namespace:fonts::v0	file:
efontKR_12_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_12_bi  = { lgfx_efont_kr_12_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_12_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_12_i   = { lgfx_efont_kr_12_i  };$/;"	m	namespace:fonts::v0	file:
efontKR_12_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_12_i   = { lgfx_efont_kr_12_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_14	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_14     = { lgfx_efont_kr_14    };$/;"	m	namespace:fonts::v0	file:
efontKR_14	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_14     = { lgfx_efont_kr_14    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_14_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_14_b   = { lgfx_efont_kr_14_b  };$/;"	m	namespace:fonts::v0	file:
efontKR_14_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_14_b   = { lgfx_efont_kr_14_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_14_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_14_bi  = { lgfx_efont_kr_14_bi };$/;"	m	namespace:fonts::v0	file:
efontKR_14_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_14_bi  = { lgfx_efont_kr_14_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_14_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_14_i   = { lgfx_efont_kr_14_i  };$/;"	m	namespace:fonts::v0	file:
efontKR_14_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_14_i   = { lgfx_efont_kr_14_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_16     = { lgfx_efont_kr_16    };$/;"	m	namespace:fonts::v0	file:
efontKR_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_16     = { lgfx_efont_kr_16    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_16_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_16_b   = { lgfx_efont_kr_16_b  };$/;"	m	namespace:fonts::v0	file:
efontKR_16_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_16_b   = { lgfx_efont_kr_16_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_16_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_16_bi  = { lgfx_efont_kr_16_bi };$/;"	m	namespace:fonts::v0	file:
efontKR_16_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_16_bi  = { lgfx_efont_kr_16_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_16_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_16_i   = { lgfx_efont_kr_16_i  };$/;"	m	namespace:fonts::v0	file:
efontKR_16_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_16_i   = { lgfx_efont_kr_16_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_24     = { lgfx_efont_kr_24    };$/;"	m	namespace:fonts::v0	file:
efontKR_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_24     = { lgfx_efont_kr_24    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_24_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_24_b   = { lgfx_efont_kr_24_b  };$/;"	m	namespace:fonts::v0	file:
efontKR_24_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_24_b   = { lgfx_efont_kr_24_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_24_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_24_bi  = { lgfx_efont_kr_24_bi };$/;"	m	namespace:fonts::v0	file:
efontKR_24_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_24_bi  = { lgfx_efont_kr_24_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontKR_24_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontKR_24_i   = { lgfx_efont_kr_24_i  };$/;"	m	namespace:fonts::v0	file:
efontKR_24_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontKR_24_i   = { lgfx_efont_kr_24_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_10	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_10     = { lgfx_efont_tw_10    };$/;"	m	namespace:fonts::v0	file:
efontTW_10	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_10     = { lgfx_efont_tw_10    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_10_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_10_b   = { lgfx_efont_tw_10_b  };$/;"	m	namespace:fonts::v0	file:
efontTW_10_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_10_b   = { lgfx_efont_tw_10_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_10_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_10_bi  = { lgfx_efont_tw_10_bi };$/;"	m	namespace:fonts::v0	file:
efontTW_10_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_10_bi  = { lgfx_efont_tw_10_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_10_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_10_i   = { lgfx_efont_tw_10_i  };$/;"	m	namespace:fonts::v0	file:
efontTW_10_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_10_i   = { lgfx_efont_tw_10_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_12     = { lgfx_efont_tw_12    };$/;"	m	namespace:fonts::v0	file:
efontTW_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_12     = { lgfx_efont_tw_12    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_12_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_12_b   = { lgfx_efont_tw_12_b  };$/;"	m	namespace:fonts::v0	file:
efontTW_12_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_12_b   = { lgfx_efont_tw_12_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_12_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_12_bi  = { lgfx_efont_tw_12_bi };$/;"	m	namespace:fonts::v0	file:
efontTW_12_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_12_bi  = { lgfx_efont_tw_12_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_12_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_12_i   = { lgfx_efont_tw_12_i  };$/;"	m	namespace:fonts::v0	file:
efontTW_12_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_12_i   = { lgfx_efont_tw_12_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_14	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_14     = { lgfx_efont_tw_14    };$/;"	m	namespace:fonts::v0	file:
efontTW_14	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_14     = { lgfx_efont_tw_14    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_14_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_14_b   = { lgfx_efont_tw_14_b  };$/;"	m	namespace:fonts::v0	file:
efontTW_14_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_14_b   = { lgfx_efont_tw_14_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_14_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_14_bi  = { lgfx_efont_tw_14_bi };$/;"	m	namespace:fonts::v0	file:
efontTW_14_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_14_bi  = { lgfx_efont_tw_14_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_14_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_14_i   = { lgfx_efont_tw_14_i  };$/;"	m	namespace:fonts::v0	file:
efontTW_14_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_14_i   = { lgfx_efont_tw_14_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_16     = { lgfx_efont_tw_16    };$/;"	m	namespace:fonts::v0	file:
efontTW_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_16     = { lgfx_efont_tw_16    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_16_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_16_b   = { lgfx_efont_tw_16_b  };$/;"	m	namespace:fonts::v0	file:
efontTW_16_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_16_b   = { lgfx_efont_tw_16_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_16_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_16_bi  = { lgfx_efont_tw_16_bi };$/;"	m	namespace:fonts::v0	file:
efontTW_16_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_16_bi  = { lgfx_efont_tw_16_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_16_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_16_i   = { lgfx_efont_tw_16_i  };$/;"	m	namespace:fonts::v0	file:
efontTW_16_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_16_i   = { lgfx_efont_tw_16_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_24     = { lgfx_efont_tw_24    };$/;"	m	namespace:fonts::v0	file:
efontTW_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_24     = { lgfx_efont_tw_24    };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_24_b	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_24_b   = { lgfx_efont_tw_24_b  };$/;"	m	namespace:fonts::v0	file:
efontTW_24_b	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_24_b   = { lgfx_efont_tw_24_b  };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_24_bi	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_24_bi  = { lgfx_efont_tw_24_bi };$/;"	m	namespace:fonts::v0	file:
efontTW_24_bi	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_24_bi  = { lgfx_efont_tw_24_bi };$/;"	m	namespace:lgfx::v1::fonts	file:
efontTW_24_i	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font efontTW_24_i   = { lgfx_efont_tw_24_i  };$/;"	m	namespace:fonts::v0	file:
efontTW_24_i	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font efontTW_24_i   = { lgfx_efont_tw_24_i  };$/;"	m	namespace:lgfx::v1::fonts	file:
empty	src/lgfx/v0/lgfx_common.hpp	/^    bool empty(void) const { return horizon.empty() || vertical.empty(); }$/;"	f	struct:lgfx::range_rect_t
empty	src/lgfx/v0/lgfx_common.hpp	/^    bool empty(void) const { return last < first; }$/;"	f	struct:lgfx::range_t
empty	src/lgfx/v1/misc/range.hpp	/^    LGFX_INLINE bool empty(void) const { return left > right || top > bottom; }$/;"	f	struct:lgfx::v1::range_rect_t
empty	src/lgfx/v1/misc/range.hpp	/^    bool empty(void) const { return last < first; }$/;"	f	struct:lgfx::v1::range_t
enableSPI	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^void enableSPI()$/;"	f	class:lgfx::v0::LGFX_SPI
enableWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static inline void enableWIRE(SercomI2cm *i2cm)$/;"	f	namespace:lgfx::v1::i2c
enc_write_uint32	src/lgfx/utility/lgfx_qoi.c	/^static int8_t enc_write_uint32( uint32_t v )$/;"	f	file:
enc_write_uint8	src/lgfx/utility/lgfx_qoi.c	/^static int8_t enc_write_uint8( uint8_t v )$/;"	f	file:
encodeDataCodewords	src/lgfx/utility/lgfx_qrcode.c	/^static int8_t encodeDataCodewords(BitBucket *dataCodewords, const uint8_t *text, uint16_t length, uint8_t version) {$/;"	f	file:
end	src/lgfx/v0/LGFXBase.cpp	/^    void end(void)$/;"	f	struct:lgfx::v0::image_info_t
end	src/lgfx/v0/lgfx_fonts.cpp	/^    uint8_t end;$/;"	m	struct:lgfx::v0::glcd_fontinfo_t	file:
end	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t end;$/;"	m	struct:lgfx::v0::EncodeRange
end	src/lgfx/v1/LGFXBase.cpp	/^    void end(void)$/;"	f	struct:lgfx::v1::image_info_t
end	src/lgfx/v1/lgfx_fonts.cpp	/^    uint8_t end;$/;"	m	struct:lgfx::v1::glcd_fontinfo_t	file:
end	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t end;$/;"	m	struct:lgfx::v1::EncodeRange
end	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    void end(void)$/;"	f	class:lgfx::v1::scanline_cache_t
endRead	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endRead	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::endRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
endRead	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::endRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
endRead	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endRead	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::endRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
endRead	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::endRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
endRead	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::endRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
endRead	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::endRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
endRead	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::endRead(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
endRead	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::endRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
endRead	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endRead	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::endRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
endRead	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endRead	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::endRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
endRead	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endRead	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::endRead(void)$/;"	f	class:lgfx::v1::Bus_I2C
endRead	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endRead	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endRead	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::endRead(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void endTransaction(void)   { endTransaction_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
endTransaction	src/lgfx/v0/platforms/esp32_common.cpp	/^    void endTransaction(int spi_host, int spi_cs)$/;"	f	namespace:lgfx::v0::spi
endTransaction	src/lgfx/v0/platforms/samd51_common.cpp	/^    void endTransaction(int, int) {}$/;"	f	namespace:lgfx::v0::spi
endTransaction	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void endTransaction(void)                { _panel->endTransaction(); }$/;"	f	class:lgfx::v1::LGFXBase
endTransaction	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::endTransaction(void)$/;"	f	class:lgfx::v1::Panel_HasBuffer
endTransaction	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::endTransaction(void)$/;"	f	class:lgfx::v1::Panel_IT8951
endTransaction	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::endTransaction(void)$/;"	f	class:lgfx::v1::Panel_LCD
endTransaction	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::endTransaction(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI
endTransaction	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::endTransaction(void)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
endTransaction	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::endTransaction(void)$/;"	f	class:lgfx::v1::Panel_RA8875
endTransaction	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> endTransaction(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    void endTransaction(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_HUB75
endTransaction	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
endTransaction	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
endTransaction	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> endTransaction(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/esp32/common.cpp	/^    void endTransaction(int spi_host)$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/esp32/common.cpp	/^    void endTransaction(int spi_host, int spi_cs)$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
endTransaction	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
endTransaction	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
endTransaction	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
endTransaction	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
endTransaction	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> endTransaction(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/esp8266/common.cpp	/^    void endTransaction(int spi_host)$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::endTransaction(void) {}$/;"	f	class:lgfx::v1::Panel_fb
endTransaction	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> endTransaction(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    void endTransaction(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::endTransaction(void) {}$/;"	f	class:lgfx::v1::Panel_OpenCV
endTransaction	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> endTransaction(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/opencv/common.cpp	/^    void endTransaction(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
endTransaction	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> endTransaction(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/rp2040/common.cpp	/^    void endTransaction([[maybe_unused]]int spi_port)$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
endTransaction	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> endTransaction(int sercom_index)$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/samd21/common.cpp	/^    void endTransaction(int sercom_index)$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_I2C
endTransaction	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> endTransaction(int sercom_index)$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/samd51/common.cpp	/^    void endTransaction(int sercom_index)$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> endTransaction(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/sdl/common.cpp	/^    void endTransaction(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> endTransaction(int ) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
endTransaction	src/lgfx/v1/platforms/spresense/common.cpp	/^    void endTransaction(int ) {}$/;"	f	namespace:lgfx::v1::spi
endTransaction	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::endTransaction(void)$/;"	f	class:lgfx::v1::Bus_SPI
endTransaction	src/lgfx/v1/platforms/stm32/common.cpp	/^    void endTransaction(int, int) {}$/;"	f	namespace:lgfx::v1::spi
endWrite	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void endWrite(void)   { if (_transaction_count) { if (1 == _transaction_count) { endTransaction(); } --_transaction_count; } }$/;"	f	class:lgfx::v0::LGFXBase
endWrite	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void endWrite(void)                      { _panel->endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
endWrite	src/lgfx/v1/Panel.hpp	/^    void endWrite(void) { if (_start_count) {  if (0 == --_start_count) { if (_auto_display) { display(0,0,0,0); } endTransaction(); } } }$/;"	f	struct:lgfx::v1::IPanel
end_read	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void end_read(bool cs_ctrl = true)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
end_read	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void end_read(bool cs_ctrl = true)$/;"	f	class:lgfx::v0::LGFX_SPI
end_read	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void end_read(bool cs_ctrl = true)$/;"	f	class:lgfx::v0::LGFX_SPI
end_read_delay_us	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint16_t end_read_delay_us = 0;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
end_transaction	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void end_transaction(void) {$/;"	f	class:lgfx::v0::LGFX_PARALLEL
end_transaction	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void end_transaction(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
end_transaction	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void end_transaction(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
end_transaction	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::end_transaction(void)$/;"	f	class:lgfx::v1::Panel_LCD
end_transaction	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::end_transaction(void)$/;"	f	class:lgfx::v1::Panel_RA8875
epd_fast	src/lgfx/v0/lgfx_common.hpp	/^      epd_fast,$/;"	e	enum:lgfx::v0::epd_mode::epd_mode_t
epd_fast	src/lgfx/v1/misc/enum.hpp	/^      epd_fast    = 3,$/;"	e	enum:lgfx::v1::epd_mode::epd_mode_t
epd_fastest	src/lgfx/v0/lgfx_common.hpp	/^      epd_fastest,$/;"	e	enum:lgfx::v0::epd_mode::epd_mode_t
epd_fastest	src/lgfx/v1/misc/enum.hpp	/^      epd_fastest = 4,$/;"	e	enum:lgfx::v1::epd_mode::epd_mode_t
epd_mode	src/lgfx/v0/lgfx_common.hpp	/^  namespace epd_mode$/;"	n	namespace:lgfx::v0
epd_mode	src/lgfx/v1/misc/enum.hpp	/^  namespace epd_mode$/;"	n	namespace:lgfx::v1
epd_mode_switch	src/lgfx/v0/lgfx_common.hpp	/^    , epd_mode_switch = 4$/;"	e	enum:lgfx::v0::attribute::attribute_t
epd_mode_switch	src/lgfx/v1/misc/enum.hpp	/^    , epd_mode_switch = 4$/;"	e	enum:lgfx::v1::attribute::attribute_t
epd_mode_t	src/lgfx/v0/lgfx_common.hpp	/^    enum epd_mode_t$/;"	g	namespace:lgfx::v0::epd_mode
epd_mode_t	src/lgfx/v1/misc/enum.hpp	/^    enum epd_mode_t$/;"	g	namespace:lgfx::v1::epd_mode
epd_quality	src/lgfx/v0/lgfx_common.hpp	/^      epd_quality,$/;"	e	enum:lgfx::v0::epd_mode::epd_mode_t
epd_quality	src/lgfx/v1/misc/enum.hpp	/^      epd_quality = 1,$/;"	e	enum:lgfx::v1::epd_mode::epd_mode_t
epd_text	src/lgfx/v0/lgfx_common.hpp	/^      epd_text,$/;"	e	enum:lgfx::v0::epd_mode::epd_mode_t
epd_text	src/lgfx/v1/misc/enum.hpp	/^      epd_text    = 2,$/;"	e	enum:lgfx::v1::epd_mode::epd_mode_t
epd_update_mode_t	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    enum epd_update_mode_t$/;"	g	struct:lgfx::v0::Panel_IT8951
epd_update_mode_t	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    enum epd_update_mode_t$/;"	g	struct:lgfx::v1::Panel_IT8951
error_t	src/lgfx/v1/misc/enum.hpp	/^  enum error_t$/;"	g	namespace:lgfx::v1
error_type	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto error_or(U&& default_error) && -> error_type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
error_type	src/lgfx/utility/result.hpp	/^    constexpr auto error_or(U&& default_error) const & -> error_type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
ets_secure_boot_key_digests	src/lgfx/v1/platforms/esp32/common.cpp	/^   struct ets_secure_boot_key_digests$/;"	s	file:
ets_secure_boot_key_digests_t	src/lgfx/v1/platforms/esp32/common.cpp	/^   typedef struct ets_secure_boot_key_digests ets_secure_boot_key_digests_t;$/;"	t	typeref:struct:ets_secure_boot_key_digests	file:
execDMAQueue	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
execDMAQueue	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_Stream
execDMAQueue	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
execDMAQueue	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::execDMAQueue(void)$/;"	f	class:lgfx::v1::Bus_SPI
execDMAQueue	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
execDMAQueue	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
execDMAQueue	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
execDMAQueue	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
execDMAQueue	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
execDMAQueue	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
execDMAQueue	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
execDMAQueue	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
execDMAQueue	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
execDMAQueue	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void execDMAQueue(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
exec_spi	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void exec_spi(void) {        *_spi_cmd_reg = SPI_USR; }$/;"	f	class:lgfx::v0::LGFX_SPI
exec_spi	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void exec_spi(void) {        *_spi_cmd_reg = SPI_EXECUTE; }$/;"	f	class:lgfx::v1::Bus_SPI
exec_spi	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void exec_spi(void) { SPI1CMD = SPIBUSY; }$/;"	f	class:lgfx::v1::Bus_SPI
failure	src/lgfx/utility/result.hpp	/^      noexcept(std::is_nothrow_assignable<E,E2&&>::value) -> failure&;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::failure
failure	src/lgfx/utility/result.hpp	/^      noexcept(std::is_nothrow_assignable<E,const E2&>::value) -> failure&;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::failure
failure	src/lgfx/utility/result.hpp	/^    -> failure<E>;$/;"	m	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
failure	src/lgfx/utility/result.hpp	/^    -> failure<typename std::decay<E>::type>;$/;"	m	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
failure	src/lgfx/utility/result.hpp	/^    auto operator=(const failure& other) -> failure& = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::failure
failure	src/lgfx/utility/result.hpp	/^    auto operator=(failure&& other) -> failure& = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::failure
failure	src/lgfx/utility/result.hpp	/^  class failure$/;"	c	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
failure	src/lgfx/utility/result.hpp	/^  failure(T&&) -> failure<typename std::decay<T>::type>;$/;"	m	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
failure	src/lgfx/utility/result.hpp	/^  failure(std::reference_wrapper<T>) -> failure<T&>;$/;"	m	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
false	src/lgfx/utility/lgfx_qrcode.h	/^static const bool false = 0;$/;"	v
fastread_dir_t	src/lgfx/v1/panel/Panel_Device.hpp	/^    enum fastread_dir_t$/;"	g	struct:lgfx::v1::Panel_Device
fastread_horizontal	src/lgfx/v1/panel/Panel_Device.hpp	/^      fastread_horizontal,$/;"	e	enum:lgfx::v1::Panel_Device::fastread_dir_t
fastread_nothing	src/lgfx/v1/panel/Panel_Device.hpp	/^      fastread_nothing,$/;"	e	enum:lgfx::v1::Panel_Device::fastread_dir_t
fastread_vertical	src/lgfx/v1/panel/Panel_Device.hpp	/^      fastread_vertical,$/;"	e	enum:lgfx::v1::Panel_Device::fastread_dir_t
fb_draw_argb_pixel	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::fb_draw_argb_pixel(int x, int y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_fb
fb_draw_rgb_pixel	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::fb_draw_rgb_pixel(int x, int y, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_fb
fdata	examples/HowToUse/4_unicode_fonts/arduino_misaki/misakiUTF16FontData.h	/^PROGMEM static const uint8_t fdata[] = {$/;"	v
fillAffine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillAffine(const float matrix[6], int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
fillAffine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillAffine(const float matrix[6], int32_t w, int32_t h, const T& color) { setColor(color); fillAffine(matrix, w, h); }$/;"	f	class:lgfx::v0::LGFXBase
fillAffine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillAffine(const float matrix[6], int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
fillAffine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillAffine(const float matrix[6], int32_t w, int32_t h, const T& color) { setColor(color); fillAffine(matrix, w, h); }$/;"	f	class:lgfx::v1::LGFXBase
fillArc	src/lgfx/v0/LGFXBase.hpp	/^                                void fillArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1)                 {                  fillEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v0::LGFXBase
fillArc	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1, const T& color) { setColor(color); fillEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v0::LGFXBase
fillArc	src/lgfx/v1/LGFXBase.hpp	/^                  void fillArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1)                 {                  fillEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v1::LGFXBase
fillArc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillArc         ( int32_t x, int32_t y, int32_t r0, int32_t r1, float angle0, float angle1, const T& color) { setColor(color); fillEllipseArc( x, y, r0, r1, r0, r1, angle0, angle1); }$/;"	f	class:lgfx::v1::LGFXBase
fillCircle	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillCircle(int32_t x, int32_t y, int32_t r) {$/;"	f	class:lgfx::v0::LGFXBase
fillCircle	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillCircle      ( int32_t x, int32_t y                      , int32_t r, const T& color) { setColor(color); fillCircle   (x, y      , r); }$/;"	f	class:lgfx::v0::LGFXBase
fillCircle	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillCircle(int32_t x, int32_t y, int32_t r) {$/;"	f	class:lgfx::v1::LGFXBase
fillCircle	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillCircle      ( int32_t x, int32_t y                      , int32_t r, const T& color) { setColor(color); fillCircle   (x, y      , r); }$/;"	f	class:lgfx::v1::LGFXBase
fillCircleHelper	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillCircleHelper(int32_t x, int32_t y, int32_t r, uint_fast8_t corners, int32_t delta)$/;"	f	class:lgfx::v0::LGFXBase
fillCircleHelper	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillCircleHelper( int32_t x, int32_t y, int32_t r, uint_fast8_t corners, int32_t delta, const T& color)  { setColor(color); fillCircleHelper(x, y, r, corners, delta); }$/;"	f	class:lgfx::v0::LGFXBase
fillCircleHelper	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillCircleHelper(int32_t x, int32_t y, int32_t r, uint_fast8_t corners, int32_t delta)$/;"	f	class:lgfx::v1::LGFXBase
fillCircleHelper	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillCircleHelper( int32_t x, int32_t y, int32_t r, uint_fast8_t corners, int32_t delta, const T& color)  { setColor(color); fillCircleHelper(x, y, r, corners, delta); }$/;"	f	class:lgfx::v1::LGFXBase
fillEllipse	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillEllipse(int32_t x, int32_t y, int32_t rx, int32_t ry)$/;"	f	class:lgfx::v0::LGFXBase
fillEllipse	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillEllipse     ( int32_t x, int32_t y, int32_t rx, int32_t ry         , const T& color) { setColor(color); fillEllipse  (x, y, rx, ry ); }$/;"	f	class:lgfx::v0::LGFXBase
fillEllipse	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillEllipse(int32_t x, int32_t y, int32_t rx, int32_t ry)$/;"	f	class:lgfx::v1::LGFXBase
fillEllipse	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillEllipse     ( int32_t x, int32_t y, int32_t rx, int32_t ry         , const T& color) { setColor(color); fillEllipse  (x, y, rx, ry ); }$/;"	f	class:lgfx::v1::LGFXBase
fillEllipseArc	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillEllipseArc(int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float start, float end)$/;"	f	class:lgfx::v0::LGFXBase
fillEllipseArc	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillEllipseArc  ( int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float angle0, float angle1, const T& color) { setColor(color); fillEllipseArc( x, y, r0x, r1x, r0y, r1y, angle0, angle1); }$/;"	f	class:lgfx::v0::LGFXBase
fillEllipseArc	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillEllipseArc(int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float start, float end)$/;"	f	class:lgfx::v1::LGFXBase
fillEllipseArc	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillEllipseArc  ( int32_t x, int32_t y, int32_t r0x, int32_t r1x, int32_t r0y, int32_t r1y, float angle0, float angle1, const T& color) { setColor(color); fillEllipseArc( x, y, r0x, r1x, r0y, r1y, angle0, angle1); }$/;"	f	class:lgfx::v1::LGFXBase
fillRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
fillRect	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillRect        ( int32_t x, int32_t y, int32_t w, int32_t h           , const T& color) { setColor(color); fillRect     (x, y, w, h   ); }$/;"	f	class:lgfx::v0::LGFXBase
fillRect	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::fillRect(PanelCommon* panel, LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
fillRect	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::fillRect(PanelCommon* panel, LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v0::Panel_IT8951
fillRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
fillRect	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillRect        ( int32_t x, int32_t y, int32_t w, int32_t h           , const T& color) { setColor(color); fillRect     (x, y, w, h   ); }$/;"	f	class:lgfx::v1::LGFXBase
fillRectAlpha	src/lgfx/v1/LGFXBase.hpp	/^    void fillRectAlpha(int32_t x, int32_t y, int32_t w, int32_t h, uint8_t alpha, const T& color)$/;"	f	class:lgfx::v1::LGFXBase
fillRoundRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r)$/;"	f	class:lgfx::v0::LGFXBase
fillRoundRect	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillRoundRect   ( int32_t x, int32_t y, int32_t w, int32_t h, int32_t r, const T& color) { setColor(color); fillRoundRect(x, y, w, h, r); }$/;"	f	class:lgfx::v0::LGFXBase
fillRoundRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r)$/;"	f	class:lgfx::v1::LGFXBase
fillRoundRect	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillRoundRect   ( int32_t x, int32_t y, int32_t w, int32_t h, int32_t r, const T& color) { setColor(color); fillRoundRect(x, y, w, h, r); }$/;"	f	class:lgfx::v1::LGFXBase
fillScreen	src/lgfx/v0/LGFXBase.hpp	/^                         inline void fillScreen  ( void )          {                  fillRect(0, 0, _width, _height); }$/;"	f	class:lgfx::v0::LGFXBase
fillScreen	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillScreen  ( const T& color) { setColor(color); fillRect(0, 0, _width, _height); }$/;"	f	class:lgfx::v0::LGFXBase
fillScreen	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void fillScreen  ( void )          {                  fillRect(0, 0, width(), height()); }$/;"	f	class:lgfx::v1::LGFXBase
fillScreen	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillScreen  ( const T& color) { setColor(color); fillRect(0, 0, width(), height()); }$/;"	f	class:lgfx::v1::LGFXBase
fillSmoothCircle	src/lgfx/v1/LGFXBase.hpp	/^                  void fillSmoothCircle(int32_t x, int32_t y, int32_t r) { fillSmoothRoundRect(x-r, y-r, r*2+1, r*2+1, r); }$/;"	f	class:lgfx::v1::LGFXBase
fillSmoothCircle	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillSmoothCircle(int32_t x, int32_t y, int32_t r, const T& color) { setColor(color); fillSmoothCircle(x, y, r); }$/;"	f	class:lgfx::v1::LGFXBase
fillSmoothRoundRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillSmoothRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r)$/;"	f	class:lgfx::v1::LGFXBase
fillSmoothRoundRect	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillSmoothRoundRect(int32_t x, int32_t y, int32_t w, int32_t h, int32_t r, const T& color) { setColor(color); fillSmoothRoundRect(x, y, w, h, r); }$/;"	f	class:lgfx::v1::LGFXBase
fillSprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    __attribute__ ((always_inline)) inline void fillSprite (const T& color) { fillScreen(color); }$/;"	f	class:lgfx::v0::LGFX_Sprite
fillSprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void fillSprite (const T& color) { fillScreen(color); }$/;"	f	class:lgfx::v1::LGFX_Sprite
fillTriangle	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fillTriangle(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v0::LGFXBase
fillTriangle	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void fillTriangle    ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, const T& color)  { setColor(color); fillTriangle(x0, y0, x1, y1, x2, y2); }$/;"	f	class:lgfx::v0::LGFXBase
fillTriangle	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fillTriangle(int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2)$/;"	f	class:lgfx::v1::LGFXBase
fillTriangle	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void fillTriangle    ( int32_t x0, int32_t y0, int32_t x1, int32_t y1, int32_t x2, int32_t y2, const T& color)  { setColor(color); fillTriangle(x0, y0, x1, y1, x2, y2); }$/;"	f	class:lgfx::v1::LGFXBase
fill_arc_helper	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::fill_arc_helper(int32_t cx, int32_t cy, int32_t oradius_x, int32_t iradius_x, int32_t oradius_y, int32_t iradius_y, float start, float end)$/;"	f	class:lgfx::v0::LGFXBase
fill_arc_helper	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::fill_arc_helper(int32_t cx, int32_t cy, int32_t oradius_x, int32_t iradius_x, int32_t oradius_y, int32_t iradius_y, float start, float end)$/;"	f	class:lgfx::v1::LGFXBase
filter	src/lgfx/utility/lgfx_pngle.h	/^  uint8_t filter;$/;"	m	struct:_pngle_ihdr_t
filter_type	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t filter_type;$/;"	m	struct:_pngle_t	file:
first	src/lgfx/v0/lgfx_common.hpp	/^    int32_t first;$/;"	m	struct:lgfx::range_t
first	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t  first, last; \/\/ ASCII extents$/;"	m	struct:lgfx::v0::GFXfont
first	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t  first, last; \/\/ ASCII extents$/;"	m	struct:lgfx::v1::GFXfont
first	src/lgfx/v1/misc/range.hpp	/^    int_fast16_t first;$/;"	m	struct:lgfx::v1::range_t
firstchr_f16	src/lgfx/Fonts/Font16.h	/^#define firstchr_f16 /;"	d
firstchr_f32	src/lgfx/Fonts/Font32rle.h	/^#define firstchr_f32 /;"	d
firstchr_f64	src/lgfx/Fonts/Font64rle.h	/^#define firstchr_f64 /;"	d
firstchr_f72	src/lgfx/Fonts/Font72rle.h	/^#define firstchr_f72 /;"	d
firstchr_f72	src/lgfx/Fonts/Font72x53rle.h	/^#define firstchr_f72 /;"	d
firstchr_f7s	src/lgfx/Fonts/Font7srle.h	/^#define firstchr_f7s /;"	d
floatToStr	src/lgfx/v0/LGFXBase.cpp	/^    static char* floatToStr(double number, char* buf, size_t \/*buflen*\/, uint8_t digits)$/;"	f	namespace:lgfx::v0
floatToStr	src/lgfx/v1/LGFXBase.cpp	/^  static char* floatToStr(double number, char* buf, size_t \/*buflen*\/, uint8_t digits)$/;"	f	namespace:lgfx::v1
floodFill	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::floodFill(int32_t x, int32_t y) {$/;"	f	class:lgfx::v0::LGFXBase
floodFill	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void floodFill( int32_t x, int32_t y, const T& color) { setColor(color); floodFill(x, y); }$/;"	f	class:lgfx::v0::LGFXBase
floodFill	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::floodFill(int32_t x, int32_t y)$/;"	f	class:lgfx::v1::LGFXBase
floodFill	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void floodFill( int32_t x, int32_t y, const T& color) { setColor(color); floodFill(x, y); }$/;"	f	class:lgfx::v1::LGFXBase
flush	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void flush(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
flush	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::flush(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
flush	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::flush(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
flush	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::flush(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
flush	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void flush(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
flush	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void flush(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
flush	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void flush(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
font0_info	src/lgfx/v0/lgfx_fonts.cpp	/^  static constexpr uint8_t font0_info[]        = {  0, 255, 5  }; \/\/ start code, end code, width$/;"	m	namespace:fonts::v0	file:
font0_info	src/lgfx/v1/lgfx_fonts.cpp	/^    static constexpr uint8_t font0_info[]         = {  0, 255, 5 }; \/\/ start code, end code, width$/;"	m	namespace:lgfx::v1::fonts	file:
font8x8c64_info	src/lgfx/v0/lgfx_fonts.cpp	/^  static constexpr uint8_t font8x8c64_info[]   = { 32, 143, 8 }; \/\/ start code, end code, width$/;"	m	namespace:fonts::v0	file:
font8x8c64_info	src/lgfx/v1/lgfx_fonts.cpp	/^    static constexpr uint8_t font8x8c64_info[]    = { 32, 143, 8 }; \/\/ start code, end code, width$/;"	m	namespace:lgfx::v1::fonts	file:
fontHeight	src/lgfx/v0/LGFXBase.cpp	/^    int32_t LGFXBase::fontHeight(const IFont* font) const$/;"	f	class:lgfx::v0::LGFXBase
fontHeight	src/lgfx/v0/LGFXBase.hpp	/^    int32_t fontHeight(uint8_t font) const { return ((const BaseFont*)fontdata[font])->height * _text_style.size_y; }$/;"	f	class:lgfx::v0::LGFXBase
fontHeight	src/lgfx/v0/LGFXBase.hpp	/^    int32_t fontHeight(void) const { return _font_metrics.height * _text_style.size_y; }$/;"	f	class:lgfx::v0::LGFXBase
fontHeight	src/lgfx/v1/LGFXBase.cpp	/^  int32_t LGFXBase::fontHeight(const IFont* font) const$/;"	f	class:lgfx::v1::LGFXBase
fontHeight	src/lgfx/v1/LGFXBase.hpp	/^    int32_t fontHeight(uint8_t font) const { return (int32_t)(((const BaseFont*)fontdata[font])->height * _text_style.size_y); }$/;"	f	class:lgfx::v1::LGFXBase
fontHeight	src/lgfx/v1/LGFXBase.hpp	/^    int32_t fontHeight(void) const { return (int32_t)(_font_metrics.height * _text_style.size_y); }$/;"	f	class:lgfx::v1::LGFXBase
fontWidth	src/lgfx/v0/LGFXBase.cpp	/^    int32_t LGFXBase::fontWidth(const IFont* font) const$/;"	f	class:lgfx::v0::LGFXBase
fontWidth	src/lgfx/v0/LGFXBase.hpp	/^    int32_t fontWidth(uint8_t font) const { return ((const BaseFont*)fontdata[font])->width * _text_style.size_x; }$/;"	f	class:lgfx::v0::LGFXBase
fontWidth	src/lgfx/v0/LGFXBase.hpp	/^    int32_t fontWidth(void) const { return _font_metrics.width * _text_style.size_x; }$/;"	f	class:lgfx::v0::LGFXBase
fontWidth	src/lgfx/v1/LGFXBase.cpp	/^  int32_t LGFXBase::fontWidth(const IFont* font) const$/;"	f	class:lgfx::v1::LGFXBase
fontWidth	src/lgfx/v1/LGFXBase.hpp	/^    int32_t fontWidth(uint8_t font) const { return (int32_t)(((const BaseFont*)fontdata[font])->width * _text_style.size_x); }$/;"	f	class:lgfx::v1::LGFXBase
fontWidth	src/lgfx/v1/LGFXBase.hpp	/^    int32_t fontWidth(void) const { return (int32_t)(_font_metrics.width * _text_style.size_x); }$/;"	f	class:lgfx::v1::LGFXBase
font_type_t	src/lgfx/v0/lgfx_fonts.hpp	/^    enum font_type_t$/;"	g	struct:lgfx::v0::IFont
font_type_t	src/lgfx/v1/lgfx_fonts.hpp	/^    enum font_type_t$/;"	g	struct:lgfx::v1::IFont
fontdata	src/lgfx/v0/lgfx_fonts.cpp	/^  const IFont* fontdata [] =$/;"	m	namespace:lgfx::v0	file:
fontdata	src/lgfx/v1/lgfx_fonts.cpp	/^  const IFont* fontdata [] =$/;"	m	namespace:lgfx::v1	file:
fontlib24x48_info	src/lgfx/v0/lgfx_fonts.cpp	/^  static constexpr uint8_t fontlib24x48_info[]  = { 32, 126, 0 }; \/\/ start code, end code$/;"	m	namespace:fonts::v0	file:
fontlib24x48_info	src/lgfx/v1/lgfx_fonts.cpp	/^    static constexpr uint8_t fontlib24x48_info[]  = { 32, 126, 0 }; \/\/ start code, end code$/;"	m	namespace:lgfx::v1::fonts	file:
fonts	src/lgfx/v0/lgfx_fonts.cpp	/^namespace fonts$/;"	n	file:
fonts	src/lgfx/v0/lgfx_fonts.hpp	/^namespace fonts$/;"	n
fonts	src/lgfx/v1/lgfx_fonts.cpp	/^  namespace fonts$/;"	n	namespace:lgfx::v1	file:
fonts	src/lgfx/v1/lgfx_fonts.hpp	/^  namespace fonts$/;"	n	namespace:lgfx::v1
fonts	src/lgfx/v1/lgfx_fonts.hpp	/^namespace fonts$/;"	n
fore_rgb888	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t fore_rgb888 = 0xFFFFFFU;$/;"	m	struct:lgfx::TextStyle
fore_rgb888	src/lgfx/v1/lgfx_fonts.hpp	/^    uint32_t fore_rgb888 = 0xFFFFFFU;$/;"	m	struct:lgfx::v1::TextStyle
fore_rgb888	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t fore_rgb888 = 0xFFFFFF;  \/\/ for copy_gray$/;"	m	struct:lgfx::v1::pixelcopy_t
forward	src/lgfx/utility/result.hpp	/^    m_error(detail::forward<E2>(error))$/;"	f
fpGetWindowAddr	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t(*fpGetWindowAddr)(uint_fast16_t, uint_fast16_t);$/;"	m	class:lgfx::v0::LGFX_PARALLEL
fpGetWindowAddr	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t(*fpGetWindowAddr)(uint_fast16_t, uint_fast16_t);$/;"	m	class:lgfx::v0::LGFX_SPI
fp_begin	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_begin)(PanelCommon*, LGFX_Device*) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_blit	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    void (*fp_blit)(uint32_t*, const uint32_t*, const uint32_t*, const uint32_t*, bool, int, int);$/;"	m	struct:lgfx::v1::internal_t	file:
fp_copy	src/lgfx/v0/lgfx_common.hpp	/^    int32_t (*fp_copy)(void*, int32_t, int32_t, pixelcopy_t*) = nullptr;$/;"	m	struct:lgfx::pixelcopy_t
fp_copy	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t (*fp_copy)(void*, uint32_t, uint32_t, pixelcopy_t*) = nullptr;$/;"	m	struct:lgfx::v1::pixelcopy_t
fp_display	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_display)(PanelCommon*, LGFX_Device*, int32_t x, int32_t y, int32_t w, int32_t h) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_displayBusy	src/lgfx/v0/panel/PanelCommon.hpp	/^    bool (*fp_displayBusy)(PanelCommon*, LGFX_Device*) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_end	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_end)(PanelCommon*, LGFX_Device*) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_fillRect	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_fillRect)(PanelCommon*, LGFX_Device*, int32_t x, int32_t y, int32_t w, int32_t h, uint32_t rawcolor) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_post_read	src/lgfx/v0/lgfx_common.hpp	/^    void (*fp_post_read)(void*) = nullptr;$/;"	m	struct:lgfx::DataWrapper
fp_post_read	src/lgfx/v1/misc/DataWrapper.hpp	/^    void (*fp_post_read)(LGFXBase*) = nullptr;$/;"	m	struct:lgfx::v1::DataWrapper
fp_pre_read	src/lgfx/v0/lgfx_common.hpp	/^    void (*fp_pre_read)(void*) = nullptr;$/;"	m	struct:lgfx::DataWrapper
fp_pre_read	src/lgfx/v1/misc/DataWrapper.hpp	/^    void (*fp_pre_read )(LGFXBase*) = nullptr;$/;"	m	struct:lgfx::v1::DataWrapper
fp_pushBlock	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_pushBlock)(PanelCommon*, LGFX_Device*, int32_t len, uint32_t rawcolor) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_pushImage	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_pushImage)(PanelCommon*, LGFX_Device*, int32_t x, int32_t y, int32_t w, int32_t h, pixelcopy_t* param) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_readRect	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_readRect)(PanelCommon*, LGFX_Device*, int32_t x, int32_t y, int32_t w, int32_t h, void* dst, pixelcopy_t* param) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_skip	src/lgfx/v0/lgfx_common.hpp	/^    int32_t (*fp_skip)(       int32_t, int32_t, pixelcopy_t*) = nullptr;$/;"	m	struct:lgfx::pixelcopy_t
fp_skip	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t (*fp_skip)(       uint32_t, uint32_t, pixelcopy_t*) = nullptr;$/;"	m	struct:lgfx::v1::pixelcopy_t
fp_waitDisplay	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_waitDisplay)(PanelCommon*, LGFX_Device*) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fp_writePixels	src/lgfx/v0/panel/PanelCommon.hpp	/^    void (*fp_writePixels)(PanelCommon*, LGFX_Device*, int32_t len, pixelcopy_t* param) = nullptr;$/;"	m	struct:lgfx::v0::PanelCommon
fps	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint16_t fps = 8;$/;"	m	struct:lgfx::v1::timing_params_t
frameBuffer	src/LGFX_TFT_eSPI.hpp	/^  void* frameBuffer(uint8_t) { return getBuffer(); }$/;"	f	class:TFT_eSprite
free	src/lgfx/v0/LGFX_Device.hpp	/^      void free(void) {$/;"	f	struct:lgfx::v0::LGFX_Device::_dmabufs_t
free_func	src/lgfx/utility/miniz.c	/^  #define free_func /;"	d	file:
freq	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int32_t freq = 400000;$/;"	m	struct:lgfx::v0::Panel_M5StackCore2
freq	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int32_t freq = 400000;$/;"	m	struct:lgfx::v0::Panel_M5StickC
freq	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr int32_t freq = 400000;$/;"	m	struct:lgfx::v0::Panel_M5StickCPlus
freq	src/lgfx/v0/touch/TouchCommon.hpp	/^    int32_t freq = 1000000;$/;"	m	struct:lgfx::v0::TouchCommon
freq	src/lgfx/v1/Touch.hpp	/^      uint32_t freq = 1000000;$/;"	m	struct:lgfx::v1::ITouch::config_t
freq	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^      uint32_t freq = 1200;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
freq	src/lgfx/v1/platforms/esp32/common.cpp	/^      uint32_t freq = 0;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
freq	src/lgfx/v1/platforms/esp8266/common.cpp	/^      uint32_t freq = 0;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
freq	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^      uint32_t freq = 1200;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
freq	src/lgfx/v1/platforms/samd51/common.cpp	/^      uint32_t freq = 0;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
freq_fill	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint32_t freq_fill  = 4000000;    \/\/ SPI freq (fill pixel )$/;"	m	struct:lgfx::v0::PanelCommon
freq_read	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint32_t freq_read  = 1600000;    \/\/ SPI freq (read pixel )$/;"	m	struct:lgfx::v0::PanelCommon
freq_read	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      uint32_t freq_read = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_read	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
freq_read	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
freq_read	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      uint32_t freq_read = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_read	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      uint32_t freq_read = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_read	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      uint32_t freq_read = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_read	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      uint32_t freq_read = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_read	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      uint32_t freq_read  =  8000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_read	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      uint32_t freq_read;$/;"	m	struct:lgfx::v1::LGFX::_detector_t
freq_write	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint32_t freq_write = 2700000;    \/\/ SPI freq (write pixel)$/;"	m	struct:lgfx::v0::PanelCommon
freq_write	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t
freq_write	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      uint32_t freq_write = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_write	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
freq_write	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
freq_write	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
freq_write	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
freq_write	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
freq_write	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
freq_write	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      uint32_t freq_write = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_write	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      uint32_t freq_write = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_write	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      uint32_t freq_write = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_write	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      uint32_t freq_write = 400000;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
freq_write	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      uint32_t freq_write = 16000000;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
freq_write	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      uint32_t freq_write;$/;"	m	struct:lgfx::v1::LGFX::_detector_t
freshConfig	src/lgfx/v0/touch/Touch_GT911.cpp	/^  void Touch_GT911::freshConfig(void)$/;"	f	class:lgfx::v0::Touch_GT911
front_porch	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        uint16_t front_porch;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::video_timing_t::info_t
fs_bitstream_rle	src/lgfx/v1/panel/Panel_M5HDMI_FS.h	/^static constexpr const unsigned char fs_bitstream_rle[] = {$/;"	v
ft_bdf	src/lgfx/v0/lgfx_fonts.hpp	/^    , ft_bdf$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_bdf	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_bdf$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_bmp	src/lgfx/v0/lgfx_fonts.hpp	/^    , ft_bmp$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_bmp	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_bmp$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_gfx	src/lgfx/v0/lgfx_fonts.hpp	/^    , ft_gfx$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_gfx	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_gfx$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_glcd	src/lgfx/v0/lgfx_fonts.hpp	/^    , ft_glcd$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_glcd	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_glcd$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_rle	src/lgfx/v0/lgfx_fonts.hpp	/^    , ft_rle$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_rle	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_rle$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_ttf	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_ttf$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_u8g2	src/lgfx/v0/lgfx_fonts.hpp	/^    , ft_u8g2$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_u8g2	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_u8g2$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_unknown	src/lgfx/v0/lgfx_fonts.hpp	/^    { ft_unknown$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_unknown	src/lgfx/v1/lgfx_fonts.hpp	/^    { ft_unknown$/;"	e	enum:lgfx::v1::IFont::font_type_t
ft_vlw	src/lgfx/v0/lgfx_fonts.hpp	/^    , ft_vlw$/;"	e	enum:lgfx::v0::IFont::font_type_t
ft_vlw	src/lgfx/v1/lgfx_fonts.hpp	/^    , ft_vlw$/;"	e	enum:lgfx::v1::IFont::font_type_t
ftable	examples/HowToUse/4_unicode_fonts/arduino_misaki/misakiUTF16FontData.h	/^PROGMEM static const uint16_t ftable [] = {$/;"	v
full_psram	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^      full_psram$/;"	e	enum:lgfx::v1::DividedFrameBuffer::psram_setting_t
g	src/lgfx/utility/lgfx_qoi.c	/^  struct { unsigned char a, r, g, b; } rgba;$/;"	m	struct:__anon548::__anon549	file:
g	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t g: 6;$/;"	m	struct:lgfx::v0::rgb565_t::__anon488::__anon489
g	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t g: 3;$/;"	m	struct:lgfx::v0::rgb332_t::__anon486::__anon487
g	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v0::argb8888_t::__anon492::__anon493
g	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v0::bgr888_t::__anon496::__anon497
g	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v0::bgra8888_t::__anon498::__anon499
g	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v0::rgb888_t::__anon490::__anon491
g	src/lgfx/v0/lgfx_common.hpp	/^      uint8_t g;$/;"	m	union:lgfx::v0::grayscale_t::__anon500
g	src/lgfx/v0/lgfx_common.hpp	/^    uint8_t g;$/;"	m	struct:lgfx::v0::bgr666_t
g	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v1::argb8888_t::__anon34::__anon35
g	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v1::bgr888_t::__anon40::__anon41
g	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v1::bgra8888_t::__anon42::__anon43
g	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t g;$/;"	m	struct:lgfx::v1::rgb888_t::__anon32::__anon33
g	src/lgfx/v1/misc/colortype.hpp	/^      uint8_t g;$/;"	m	union:lgfx::v1::grayscale_t::__anon44
g3	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t g3: 3;$/;"	m	struct:lgfx::v1::rgb332_t::__anon28::__anon29
g6	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t g6: 6;$/;"	m	struct:lgfx::v1::rgb565_t::__anon30::__anon31
g6	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t g6;$/;"	m	struct:lgfx::v1::bgr666_t::__anon38::__anon39
gBitmap	src/lgfx/v0/lgfx_fonts.hpp	/^    uint32_t* gBitmap   = nullptr;  \/\/file pointer to greyscale bitmap$/;"	m	struct:lgfx::v0::VLWfont
gBitmap	src/lgfx/v1/lgfx_fonts.hpp	/^    uint32_t* gBitmap   = nullptr;  \/\/file pointer to greyscale bitmap$/;"	m	struct:lgfx::v1::VLWfont
gCount	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t gCount;     \/\/ Total number of characters$/;"	m	struct:lgfx::v0::VLWfont
gCount	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t gCount;     \/\/ Total number of characters$/;"	m	struct:lgfx::v1::VLWfont
gUnicode	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t* gUnicode  = nullptr;  \/\/UTF-16 code, the codes are searched so do not need to be sequential$/;"	m	struct:lgfx::v0::VLWfont
gUnicode	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t* gUnicode  = nullptr;  \/\/UTF-16 code, the codes are searched so do not need to be sequential$/;"	m	struct:lgfx::v1::VLWfont
gWidth	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t*  gWidth    = nullptr;  \/\/cwidth$/;"	m	struct:lgfx::v0::VLWfont
gWidth	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t*  gWidth    = nullptr;  \/\/cwidth$/;"	m	struct:lgfx::v1::VLWfont
gdX	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t*   gdX       = nullptr;  \/\/leftExtent$/;"	m	struct:lgfx::v0::VLWfont
gdX	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t*   gdX       = nullptr;  \/\/leftExtent$/;"	m	struct:lgfx::v1::VLWfont
get	src/lgfx/v0/LGFX_Sprite.hpp	/^      uint8_t* get() const { return _buffer; }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
get	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    uint8_t* get() const { return _buffer; }$/;"	f	class:lgfx::v1::SpriteBuffer
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast16_t get(void) const { return pgm_read_word(this); }$/;"	f	struct:lgfx::v1::rgb565_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast16_t get(void) const { return pgm_read_word(this); }$/;"	f	struct:lgfx::v1::swap565_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast32_t get(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::bgr666_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast32_t get(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::bgr888_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast32_t get(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::rgb888_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast32_t get(void) const { return pgm_read_dword(this); }$/;"	f	struct:lgfx::v1::argb8888_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast32_t get(void) const { return pgm_read_dword(this); }$/;"	f	struct:lgfx::v1::bgra8888_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast8_t get(void) const { return pgm_read_byte(this); }$/;"	f	struct:lgfx::v1::grayscale_t
get	src/lgfx/v1/misc/colortype.hpp	/^    inline uint_fast8_t get(void) const { return pgm_read_byte(this); }$/;"	f	struct:lgfx::v1::rgb332_t
get	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    inline const uint8_t* IRAM_ATTR get(const uint8_t* ptr)$/;"	f	class:lgfx::v1::scanline_cache_t
getAdjustBpp	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual color_depth_t getAdjustBpp(color_depth_t bpp) const { return (bpp > 16) ? rgb888_3Byte : rgb565_2Byte; }$/;"	f	struct:lgfx::v0::PanelCommon
getAlphanumeric	src/lgfx/utility/lgfx_qrcode.c	/^static int8_t getAlphanumeric(char c) {$/;"	f	file:
getApbFrequency	src/lgfx/v0/platforms/esp32_common.cpp	/^  uint32_t getApbFrequency(void)$/;"	f	namespace:lgfx::v0
getApbFrequency	src/lgfx/v1/platforms/esp32/common.cpp	/^  uint32_t getApbFrequency(void)$/;"	f	namespace:lgfx::v1
getAttribute	src/lgfx/v0/LGFXBase.cpp	/^    uint8_t LGFXBase::getAttribute(attribute_t attr_id) {$/;"	f	class:lgfx::v0::LGFXBase
getAttribute	src/lgfx/v0/LGFXBase.hpp	/^    uint8_t getAttribute(uint8_t attr_id) { return getAttribute((attribute_t)attr_id); }$/;"	f	class:lgfx::v0::LGFXBase
getAttribute	src/lgfx/v1/LGFXBase.cpp	/^  uint8_t LGFXBase::getAttribute(attribute_t attr_id) {$/;"	f	class:lgfx::v1::LGFXBase
getAttribute	src/lgfx/v1/LGFXBase.hpp	/^    uint8_t getAttribute(uint8_t attr_id) { return getAttribute((attribute_t)attr_id); }$/;"	f	class:lgfx::v1::LGFXBase
getAutoDisplay	src/lgfx/v1/Panel.hpp	/^    bool getAutoDisplay(void) const { return _auto_display; }$/;"	f	struct:lgfx::v1::IPanel
getBaseColor	src/lgfx/v0/LGFXBase.hpp	/^    uint32_t getBaseColor(void) const { return _base_rgb888; }$/;"	f	class:lgfx::v0::LGFXBase
getBaseColor	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   uint32_t getBaseColor(void) const { return _base_rgb888; }$/;"	f	class:lgfx::v1::LGFXBase
getBlockBuffer	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    inline uint8_t* getBlockBuffer(size_t index) const { return index < _block_count ? _block_array[index] : nullptr; }$/;"	f	class:lgfx::v1::DividedFrameBuffer
getBlockCount	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    inline size_t getBlockCount(void) const { return _block_count; }$/;"	f	class:lgfx::v1::DividedFrameBuffer
getBoard	src/lgfx/v0/LGFX_Device.hpp	/^    board_t getBoard(void) const { return board; }$/;"	f	class:lgfx::v0::LGFX_Device
getBoard	src/lgfx/v1/LGFXBase.hpp	/^    board_t getBoard(void) const { return _board; }$/;"	f	class:lgfx::v1::LGFX_Device
getBrightness	src/lgfx/v0/LGFX_Device.hpp	/^    uint8_t getBrightness(void) const { return _panel->brightness; }$/;"	f	class:lgfx::v0::LGFX_Device
getBrightness	src/lgfx/v1/LGFXBase.hpp	/^    inline uint8_t getBrightness(void) const { return _brightness; }$/;"	f	class:lgfx::v1::LGFX_Device
getBrightness	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    uint8_t getBrightness(void) const { return _brightness; }$/;"	f	class:lgfx::v1::Bus_HUB75
getBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^    __attribute__ ((always_inline)) inline void* getBuffer(void) const { return _img.get(); }$/;"	f	class:lgfx::v0::LGFX_Sprite
getBuffer	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void* getBuffer(void) const { return _img.get(); }$/;"	f	struct:lgfx::v1::Panel_Sprite
getBuffer	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void* getBuffer(void) const { return _panel_sprite.getBuffer(); }$/;"	f	class:lgfx::v1::LGFX_Sprite
getBuffer	src/lgfx/v1/platforms/common.hpp	/^    uint8_t* getBuffer(size_t length)$/;"	f	class:lgfx::v1::FlipBuffer
getBuffer	src/lgfx/v1/platforms/common.hpp	/^    uint8_t* getBuffer(size_t length)$/;"	f	class:lgfx::v1::SimpleBuffer
getBus	src/lgfx/v1/panel/Panel_Device.hpp	/^    IBus* getBus(void) const { return _bus; }$/;"	f	struct:lgfx::v1::Panel_Device
getClipRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::getClipRect(int32_t *x, int32_t *y, int32_t *w, int32_t *h)$/;"	f	class:lgfx::v0::LGFXBase
getClipRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::getClipRect(int32_t *x, int32_t *y, int32_t *w, int32_t *h)$/;"	f	class:lgfx::v1::LGFXBase
getClock	src/lgfx/v1/Bus.hpp	/^    virtual uint32_t getClock(void) const { return 0; }$/;"	f	struct:lgfx::v1::IBus
getClockDivValue	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static uint32_t getClockDivValue(uint32_t targetFreq)$/;"	f	namespace:lgfx::v1
getCmdCaset	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t getCmdCaset(void) const { return cmd_caset; }$/;"	f	struct:lgfx::v0::PanelCommon
getCmdRamrd	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t getCmdRamrd(void) const { return cmd_ramrd; }$/;"	f	struct:lgfx::v0::PanelCommon
getCmdRamwr	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t getCmdRamwr(void) const { return cmd_ramwr; }$/;"	f	struct:lgfx::v0::PanelCommon
getCmdRaset	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t getCmdRaset(void) const { return cmd_raset; }$/;"	f	struct:lgfx::v0::PanelCommon
getCmdRddid	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t getCmdRddid(void) const { return cmd_rddid; }$/;"	f	struct:lgfx::v0::PanelCommon
getColMod	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    virtual uint8_t getColMod(uint8_t bpp) const { return (bpp > 16) ? RGB666_3BYTE : RGB565_2BYTE; }$/;"	f	struct:lgfx::v0::PanelIlitekCommon
getColMod	src/lgfx/v1/panel/Panel_LCD.hpp	/^    virtual uint8_t getColMod(uint8_t bpp) const { return (bpp > 16) ? RGB888_3BYTE : RGB565_2BYTE; }$/;"	f	struct:lgfx::v1::Panel_LCD
getColStart	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t getColStart(void) const {$/;"	f	struct:lgfx::v0::PanelCommon
getColorConverter	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline color_conv_t* getColorConverter(void)       { return &_write_conv; }$/;"	f	class:lgfx::v0::LGFXBase
getColorConverter	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   color_conv_t* getColorConverter(void) { return &_write_conv; }$/;"	f	class:lgfx::v1::LGFXBase
getColorDepth	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline color_depth_t getColorDepth    (void) const { return _write_conv.depth; }$/;"	f	class:lgfx::v0::LGFXBase
getColorDepth	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   color_depth_t getColorDepth(void) const { return _write_conv.depth; }$/;"	f	class:lgfx::v1::LGFXBase
getColorDepthCommands	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual const uint8_t* getColorDepthCommands(uint8_t* buf, color_depth_t depth) {$/;"	f	struct:lgfx::v0::PanelCommon
getCursorX	src/lgfx/v0/LGFXBase.hpp	/^    int32_t getCursorX(void) const { return _cursor_x; }$/;"	f	class:lgfx::v0::LGFXBase
getCursorX	src/lgfx/v1/LGFXBase.hpp	/^    int32_t getCursorX(void) const { return _cursor_x; }$/;"	f	class:lgfx::v1::LGFXBase
getCursorY	src/lgfx/v0/LGFXBase.hpp	/^    int32_t getCursorY(void) const { return _cursor_y; }$/;"	f	class:lgfx::v0::LGFXBase
getCursorY	src/lgfx/v1/LGFXBase.hpp	/^    int32_t getCursorY(void) const { return _cursor_y; }$/;"	f	class:lgfx::v1::LGFXBase
getDMABuffer	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  uint8_t* Bus_RGB::getDMABuffer(uint32_t length)$/;"	f	class:lgfx::v1::Bus_RGB
getDefaultMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  void BDFfont::getDefaultMetric(FontMetrics *metrics) const$/;"	f	class:lgfx::v0::BDFfont
getDefaultMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  void BaseFont::getDefaultMetric(FontMetrics *metrics) const$/;"	f	class:lgfx::v0::BaseFont
getDefaultMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  void GFXfont::getDefaultMetric(lgfx::FontMetrics *metrics) const {$/;"	f	class:lgfx::v0::GFXfont
getDefaultMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  void U8g2font::getDefaultMetric(lgfx::FontMetrics *metrics) const$/;"	f	class:lgfx::v0::U8g2font
getDefaultMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  void VLWfont::getDefaultMetric(FontMetrics *metrics) const {$/;"	f	class:lgfx::v0::VLWfont
getDefaultMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  void BDFfont::getDefaultMetric(FontMetrics *metrics) const$/;"	f	class:lgfx::v1::BDFfont
getDefaultMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  void BaseFont::getDefaultMetric(FontMetrics *metrics) const$/;"	f	class:lgfx::v1::BaseFont
getDefaultMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  void GFXfont::getDefaultMetric(lgfx::FontMetrics *metrics) const$/;"	f	class:lgfx::v1::GFXfont
getDefaultMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  void U8g2font::getDefaultMetric(lgfx::FontMetrics *metrics) const$/;"	f	class:lgfx::v1::U8g2font
getDefaultMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  void VLWfont::getDefaultMetric(FontMetrics *metrics) const$/;"	f	class:lgfx::v1::VLWfont
getDev	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static inline i2s_dev_t* getDev(i2s_port_t port)$/;"	f	namespace:lgfx::v1
getDev	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static i2s_dev_t* getDev(i2s_port_t port)$/;"	f	namespace:lgfx::v1
getDev	src/lgfx/v1/platforms/esp32/common.cpp	/^    static i2c_dev_t* getDev(int num)$/;"	f	namespace:lgfx::v1::i2c
getDev	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static i2s_dev_t* getDev(i2s_port_t port)$/;"	f	namespace:lgfx::v1
getDev	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static i2s_dev_t* getDev(i2s_port_t port)$/;"	f	namespace:lgfx::v1
getDev	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  static lcd_cam_dev_t* getDev(int port)$/;"	f	namespace:lgfx::v1
getDev	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  static lcd_cam_dev_t* getDev(int port)$/;"	f	namespace:lgfx::v1
getDev	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  static lcd_cam_dev_t* getDev(int port)$/;"	f	namespace:lgfx::v1
getEpdMode	src/lgfx/v0/LGFXBase.hpp	/^    epd_mode_t getEpdMode(void) const { return _epd_mode; }$/;"	f	class:lgfx::v0::LGFXBase
getEpdMode	src/lgfx/v1/LGFXBase.hpp	/^    epd_mode_t getEpdMode(void) const { return _panel->getEpdMode(); }$/;"	f	class:lgfx::v1::LGFX_Device
getEpdMode	src/lgfx/v1/Panel.hpp	/^    epd_mode_t getEpdMode(void) const { return _epd_mode; }$/;"	f	struct:lgfx::v1::IPanel
getFifoAddr	src/lgfx/v1/platforms/esp32/common.cpp	/^    static volatile uint32_t* getFifoAddr(int num)$/;"	f	namespace:lgfx::v1::i2c
getFont	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline const IFont* getFont (void) const { return _font; }$/;"	f	class:lgfx::v0::LGFXBase
getFont	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE const IFont* getFont (void) const { return _font; }$/;"	f	class:lgfx::v1::LGFXBase
getGlyph	src/lgfx/v0/lgfx_fonts.cpp	/^  GFXglyph* GFXfont::getGlyph(uint16_t uniCode) const {$/;"	f	class:lgfx::v0::GFXfont
getGlyph	src/lgfx/v0/lgfx_fonts.cpp	/^  const uint8_t* U8g2font::getGlyph(uint16_t encoding) const$/;"	f	class:lgfx::v0::U8g2font
getGlyph	src/lgfx/v1/lgfx_fonts.cpp	/^  GFXglyph* GFXfont::getGlyph(uint16_t uniCode) const$/;"	f	class:lgfx::v1::GFXfont
getGlyph	src/lgfx/v1/lgfx_fonts.cpp	/^  const uint8_t* U8g2font::getGlyph(uint16_t encoding) const$/;"	f	class:lgfx::v1::U8g2font
getHeight	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t getHeight(void) const {$/;"	f	struct:lgfx::v0::PanelCommon
getIndexInterleave	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static inline int getIndexInterleave(int index)$/;"	f	namespace:lgfx::v1
getInitCommands	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual const uint8_t* getInitCommands(uint8_t listno = 0) const { (void)listno; return nullptr; }$/;"	f	struct:lgfx::v0::PanelCommon
getInitCommands	src/lgfx/v1/panel/Panel_Device.hpp	/^    virtual const uint8_t* getInitCommands(uint8_t listno) const { (void)listno; return nullptr; }$/;"	f	struct:lgfx::v1::Panel_Device
getInitCommands	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  const uint8_t* Panel_NT35510::getInitCommands(uint8_t listno) const$/;"	f	class:lgfx::v1::Panel_NT35510
getInitCommands	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  const uint8_t* Panel_RA8875::getInitCommands(uint8_t listno) const$/;"	f	class:lgfx::v1::Panel_RA8875
getInvert	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline bool getInvert(void) const { return _panel->invert; }$/;"	f	class:lgfx::v0::LGFX_Device
getInvert	src/lgfx/v1/LGFXBase.hpp	/^    inline bool getInvert(void) const { return _panel->getInvert(); }$/;"	f	class:lgfx::v1::LGFX_Device
getInvert	src/lgfx/v1/Panel.hpp	/^    bool getInvert(void) const { return _invert; }$/;"	f	struct:lgfx::v1::IPanel
getLight	src/lgfx/v1/panel/Panel_Device.hpp	/^    ILight* getLight(void) const { return _light; }$/;"	f	struct:lgfx::v1::Panel_Device
getLineBuffer	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    inline uint8_t* getLineBuffer(size_t y) const { return &_block_array[y \/ _block_lines][_line_size * (y % _block_lines)]; }$/;"	f	class:lgfx::v1::DividedFrameBuffer
getLineSize	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    inline size_t getLineSize(void) const { return _line_size; }$/;"	f	class:lgfx::v1::DividedFrameBuffer
getMadCtl	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    virtual uint8_t getMadCtl(uint8_t r) const {$/;"	f	struct:lgfx::v0::PanelIlitekCommon
getMadCtl	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^    uint8_t getMadCtl(uint_fast8_t r, uint_fast8_t bpp) {$/;"	f	struct:lgfx::v0::Panel_SSD1351
getMadCtl	src/lgfx/v1/panel/Panel_LCD.hpp	/^    virtual uint8_t getMadCtl(uint8_t r) const$/;"	f	struct:lgfx::v1::Panel_LCD
getModeBits	src/lgfx/utility/lgfx_qrcode.c	/^static char getModeBits(uint8_t version, uint8_t mode) {$/;"	f	file:
getMonitorByWindowID	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  static monitor_t* const getMonitorByWindowID(uint32_t windowID)$/;"	f	namespace:lgfx::v1
getPadNumber	src/lgfx/v1/platforms/samd21/common.cpp	/^  static int getPadNumber(int sercom_index, int pin, bool alt)$/;"	f	namespace:lgfx::v1
getPadNumber	src/lgfx/v1/platforms/samd51/common.cpp	/^  static int getPadNumber(int sercom_index, int pin, bool alt)$/;"	f	namespace:lgfx::v1
getPalette	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline RGBColor*     getPalette       (void) const { return getPalette_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
getPalette	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   RGBColor*     getPalette(void) const { return getPalette_impl(); }$/;"	f	class:lgfx::v1::LGFXBase
getPaletteCount	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline uint32_t      getPaletteCount  (void) const { return _palette_count; }$/;"	f	class:lgfx::v0::LGFXBase
getPaletteCount	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   uint32_t getPaletteCount(void) const { return _palette_count; }$/;"	f	class:lgfx::v1::LGFXBase
getPaletteIndex	src/lgfx/v0/LGFX_Sprite.hpp	/^    int32_t getPaletteIndex(const bgr888_t& color)$/;"	f	class:lgfx::v0::LGFX_Sprite
getPaletteIndex	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> inline int32_t getPaletteIndex(const T& color)$/;"	f	class:lgfx::v0::LGFX_Sprite
getPaletteIndex	src/lgfx/v1/LGFX_Sprite.hpp	/^    int32_t getPaletteIndex(const bgr888_t& color)$/;"	f	class:lgfx::v1::LGFX_Sprite
getPaletteIndex	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> inline int32_t getPaletteIndex(const T& color)$/;"	f	class:lgfx::v1::LGFX_Sprite
getPalette_impl	src/lgfx/v0/LGFXBase.hpp	/^    virtual RGBColor* getPalette_impl(void) const { return nullptr; }$/;"	f	class:lgfx::v0::LGFXBase
getPalette_impl	src/lgfx/v1/LGFXBase.hpp	/^    virtual RGBColor* getPalette_impl(void) const { return nullptr; }$/;"	f	class:lgfx::v1::LGFXBase
getPanel	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline PanelCommon* getPanel(void) const { return _panel; }$/;"	f	class:lgfx::v0::LGFX_Device
getPanel	src/lgfx/v1/LGFXBase.hpp	/^    inline Panel_Device* getPanel(void) const { return reinterpret_cast<Panel_Device*>(_panel); }$/;"	f	class:lgfx::v1::LGFX_Device
getPenaltyScore	src/lgfx/utility/lgfx_qrcode.c	/^static uint32_t getPenaltyScore(BitBucket *modules) {$/;"	f	file:
getPeriphModule	src/lgfx/v1/platforms/esp32/common.cpp	/^    static periph_module_t getPeriphModule(int num)$/;"	f	namespace:lgfx::v1::i2c
getPivotX	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline float getPivotX(void) const { return _xpivot; }$/;"	f	class:lgfx::v0::LGFXBase
getPivotX	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   float getPivotX(void) const { return _xpivot; }$/;"	f	class:lgfx::v1::LGFXBase
getPivotY	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline float getPivotY(void) const { return _ypivot; }$/;"	f	class:lgfx::v0::LGFXBase
getPivotY	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   float getPivotY(void) const { return _ypivot; }$/;"	f	class:lgfx::v1::LGFXBase
getPowerSaveOffCommands	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual const uint8_t* getPowerSaveOffCommands(uint8_t* buf) { (void)buf; return nullptr; }$/;"	f	struct:lgfx::v0::PanelCommon
getPowerSaveOnCommands	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual const uint8_t* getPowerSaveOnCommands(uint8_t* buf) { (void)buf; return nullptr; }$/;"	f	struct:lgfx::v0::PanelCommon
getRawColor	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   uint32_t getRawColor(void) const { return *((uint32_t*)&_color); }$/;"	f	class:lgfx::v1::LGFXBase
getReadClock	src/lgfx/v1/Bus.hpp	/^    virtual uint32_t getReadClock(void) const { return 0; }$/;"	f	struct:lgfx::v1::IBus
getReadDepth	src/lgfx/v1/Panel.hpp	/^    color_depth_t getReadDepth(void) const { return _read_depth; }$/;"	f	struct:lgfx::v1::IPanel
getRotation	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline int_fast8_t   getRotation      (void) const { return getRotation_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
getRotation	src/lgfx/v1/LGFXBase.hpp	/^    uint8_t getRotation(void) const { return _panel->getRotation(); }$/;"	f	class:lgfx::v1::LGFXBase
getRotation	src/lgfx/v1/Panel.hpp	/^    uint8_t getRotation(void) const { return _rotation; }$/;"	f	struct:lgfx::v1::IPanel
getRotationCommands	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual const uint8_t* getRotationCommands(uint8_t* buf, int_fast8_t r)$/;"	f	struct:lgfx::v0::PanelCommon
getRowStart	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t getRowStart(void) const {$/;"	f	struct:lgfx::v0::PanelCommon
getRxFifoCount	src/lgfx/v1/platforms/esp32/common.cpp	/^    static int32_t getRxFifoCount(i2c_dev_t* dev)$/;"	f	namespace:lgfx::v1::i2c
getScanLine	src/lgfx/v1/LGFXBase.hpp	/^    int32_t getScanLine(void) { return _panel->getScanLine(); }$/;"	f	class:lgfx::v1::LGFXBase
getScanLine	src/lgfx/v1/Panel.hpp	/^    virtual int32_t getScanLine(void) { return -1; }$/;"	f	struct:lgfx::v1::IPanel
getScanLine	src/lgfx/v1/panel/Panel_LCD.cpp	/^  int32_t Panel_LCD::getScanLine(void)$/;"	f	class:lgfx::v1::Panel_LCD
getScanLine	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  int32_t Panel_CVBS::getScanLine(void)$/;"	f	class:lgfx::v1::Panel_CVBS
getScrollRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::getScrollRect(int32_t *x, int32_t *y, int32_t *w, int32_t *h)$/;"	f	class:lgfx::v0::LGFXBase
getScrollRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::getScrollRect(int32_t *x, int32_t *y, int32_t *w, int32_t *h)$/;"	f	class:lgfx::v1::LGFXBase
getSercomData	src/lgfx/v1/platforms/samd21/common.cpp	/^    const sercom_data_t* getSercomData(size_t sercom_index)$/;"	f	namespace:lgfx::v1::samd21
getSercomData	src/lgfx/v1/platforms/samd51/common.cpp	/^    const sercom_data_t* getSercomData(size_t sercom_index)$/;"	f	namespace:lgfx::v1::samd51
getSpriteBuffer	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE const SpriteBuffer* getSpriteBuffer(void) const { return &_img; }$/;"	f	struct:lgfx::v1::Panel_Sprite
getStartCount	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   uint32_t getStartCount(void) const  { return _panel->getStartCount(); }$/;"	f	class:lgfx::v1::LGFXBase
getStartCount	src/lgfx/v1/Panel.hpp	/^    uint32_t getStartCount(void) const { return _start_count; }$/;"	f	struct:lgfx::v1::IPanel
getSwap16	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline static constexpr uint16_t getSwap16(uint16_t c) { return __builtin_bswap16(c); }$/;"	f	namespace:lgfx::v0
getSwap16	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t getSwap16(uint32_t c) { return (uint16_t)((c << 8) + (c >> 8)); }$/;"	f	namespace:lgfx::v1
getSwap24	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline static constexpr uint32_t getSwap24(uint32_t c) { return ((uint8_t)c)<<16 | ((uint8_t)(c>>8))<<8 | (uint8_t)(c>>16); }$/;"	f	namespace:lgfx::v0
getSwap24	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t getSwap24(uint32_t c) { return ((((c & 0xFF) << 8) + ((c >> 8) & 0xFF)) << 8) + ((c>>16) & 0xFF); }$/;"	f	namespace:lgfx::v1
getSwap32	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE           uint32_t getSwap32(uint32_t c) { c = (c >> 16) + (c << 16); return ((c >> 8) & 0xFF00FF) + ((c & 0xFF00FF) << 8); }$/;"	f	namespace:lgfx::v1
getSwapBytes	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline bool          getSwapBytes     (void) const { return _swapBytes; }$/;"	f	class:lgfx::v0::LGFXBase
getSwapBytes	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool getSwapBytes(void) const { return _swapBytes; }$/;"	f	class:lgfx::v1::LGFXBase
getTextDatum	src/lgfx/v0/LGFXBase.hpp	/^    textdatum_t getTextDatum(void) const { return _text_style.datum; }$/;"	f	class:lgfx::v0::LGFXBase
getTextDatum	src/lgfx/v1/LGFXBase.hpp	/^    textdatum_t getTextDatum(void) const { return _text_style.datum; }$/;"	f	class:lgfx::v1::LGFXBase
getTextFont	src/lgfx/v0/LGFXBase.hpp	/^    uint8_t getTextFont(void) const$/;"	f	class:lgfx::v0::LGFXBase
getTextFont	src/lgfx/v1/LGFXBase.hpp	/^    uint_fast8_t getTextFont(void) const$/;"	f	class:lgfx::v1::LGFXBase
getTextPadding	src/lgfx/v0/LGFXBase.hpp	/^    uint32_t getTextPadding(void) const { return _padding_x; }$/;"	f	class:lgfx::v0::LGFXBase
getTextPadding	src/lgfx/v1/LGFXBase.hpp	/^    uint32_t getTextPadding(void) const { return _text_style.padding_x; }$/;"	f	class:lgfx::v1::LGFXBase
getTextSizeX	src/lgfx/v0/LGFXBase.hpp	/^    float getTextSizeX(void) const { return _text_style.size_x; }$/;"	f	class:lgfx::v0::LGFXBase
getTextSizeX	src/lgfx/v1/LGFXBase.hpp	/^    float getTextSizeX(void) const { return _text_style.size_x; }$/;"	f	class:lgfx::v1::LGFXBase
getTextSizeY	src/lgfx/v0/LGFXBase.hpp	/^    float getTextSizeY(void) const { return _text_style.size_y; }$/;"	f	class:lgfx::v0::LGFXBase
getTextSizeY	src/lgfx/v1/LGFXBase.hpp	/^    float getTextSizeY(void) const { return _text_style.size_y; }$/;"	f	class:lgfx::v1::LGFXBase
getTextStyle	src/lgfx/v0/LGFXBase.hpp	/^    const TextStyle& getTextStyle(void) const { return _text_style; }$/;"	f	class:lgfx::v0::LGFXBase
getTextStyle	src/lgfx/v1/LGFXBase.hpp	/^    const TextStyle& getTextStyle(void) const { return _text_style; }$/;"	f	class:lgfx::v1::LGFXBase
getTotalLines	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    inline size_t getTotalLines(void) const { return _total_lines; }$/;"	f	class:lgfx::v1::DividedFrameBuffer
getTouch	src/lgfx/v0/LGFX_Device.hpp	/^    uint_fast8_t getTouch(T *x, T *y, uint_fast8_t number = 0)$/;"	f	class:lgfx::v0::LGFX_Device
getTouch	src/lgfx/v0/LGFX_Device.hpp	/^    uint_fast8_t getTouch(int32_t *x, int32_t *y, uint_fast8_t number = 0)$/;"	f	class:lgfx::v0::LGFX_Device
getTouch	src/lgfx/v0/LGFX_Device.hpp	/^    uint_fast8_t getTouch(touch_point_t *tp, uint_fast8_t number = 0)$/;"	f	class:lgfx::v0::LGFX_Device
getTouch	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  uint_fast8_t Touch_FT5x06::getTouch(touch_point_t* tp, int_fast8_t number)$/;"	f	class:lgfx::v0::Touch_FT5x06
getTouch	src/lgfx/v0/touch/Touch_GT911.cpp	/^  uint_fast8_t Touch_GT911::getTouch(touch_point_t* tp, int_fast8_t number)$/;"	f	class:lgfx::v0::Touch_GT911
getTouch	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^  uint_fast8_t Touch_STMPE610::getTouch(touch_point_t* tp, int_fast8_t number)$/;"	f	class:lgfx::v0::Touch_STMPE610
getTouch	src/lgfx/v0/touch/Touch_XPT2046.cpp	/^  uint_fast8_t Touch_XPT2046::getTouch(touch_point_t* tp, int_fast8_t number)$/;"	f	class:lgfx::v0::Touch_XPT2046
getTouch	src/lgfx/v1/LGFXBase.hpp	/^    inline uint_fast8_t getTouch(touch_point_t *tp, uint_fast8_t count = 1) { return panel()->getTouch(tp, count); }$/;"	f	class:lgfx::v1::LGFX_Device
getTouch	src/lgfx/v1/LGFXBase.hpp	/^    uint_fast8_t getTouch(T *x, T *y, uint_fast8_t index = 0)$/;"	f	class:lgfx::v1::LGFX_Device
getTouch	src/lgfx/v1/panel/Panel_Device.cpp	/^  uint_fast8_t Panel_Device::getTouch(touch_point_t* tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Panel_Device
getTouch	src/lgfx/v1/panel/Panel_Device.hpp	/^    ITouch* getTouch(void) const { return _touch; }$/;"	f	struct:lgfx::v1::Panel_Device
getTouchRaw	src/lgfx/v0/LGFX_Device.hpp	/^    uint_fast8_t getTouchRaw(int32_t *x = nullptr, int32_t *y = nullptr, uint_fast8_t number = 0)$/;"	f	class:lgfx::v0::LGFX_Device
getTouchRaw	src/lgfx/v0/LGFX_Device.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t *tp, uint_fast8_t number = 0)$/;"	f	class:lgfx::v0::LGFX_Device
getTouchRaw	src/lgfx/v1/LGFXBase.hpp	/^    inline uint_fast8_t getTouchRaw(touch_point_t *tp, uint_fast8_t count = 1) { return panel()->getTouchRaw(tp, count); }$/;"	f	class:lgfx::v1::LGFX_Device
getTouchRaw	src/lgfx/v1/LGFXBase.hpp	/^    uint_fast8_t getTouchRaw(T *x, T *y, uint_fast8_t index = 0)$/;"	f	class:lgfx::v1::LGFX_Device
getTouchRaw	src/lgfx/v1/panel/Panel_Device.cpp	/^  uint_fast8_t Panel_Device::getTouchRaw(touch_point_t* tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Panel_Device
getTouchRaw	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  uint_fast8_t Panel_fb::getTouchRaw(touch_point_t* tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Panel_fb
getTouchRaw	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  uint_fast8_t Panel_OpenCV::getTouchRaw(touch_point_t* tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Panel_OpenCV
getTouchRaw	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  uint_fast8_t Panel_sdl::getTouchRaw(touch_point_t* tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Panel_sdl
getTouchRaw	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  uint_fast8_t Touch_FT5x06::getTouchRaw(touch_point_t *tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Touch_FT5x06
getTouchRaw	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^  uint_fast8_t Touch_GSLx680::getTouchRaw(touch_point_t *tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Touch_GSLx680
getTouchRaw	src/lgfx/v1/touch/Touch_GT911.cpp	/^  uint_fast8_t Touch_GT911::getTouchRaw(touch_point_t* __restrict tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Touch_GT911
getTouchRaw	src/lgfx/v1/touch/Touch_NS2009.cpp	/^  uint_fast8_t Touch_NS2009::getTouchRaw(touch_point_t *tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Touch_NS2009
getTouchRaw	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^  uint_fast8_t Touch_STMPE610::getTouchRaw(touch_point_t* __restrict tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Touch_STMPE610
getTouchRaw	src/lgfx/v1/touch/Touch_TT21xxx.cpp	/^  uint_fast8_t Touch_TT21xxx::getTouchRaw(touch_point_t *tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Touch_TT21xxx
getTouchRaw	src/lgfx/v1/touch/Touch_XPT2046.cpp	/^  uint_fast8_t Touch_XPT2046::getTouchRaw(touch_point_t* __restrict tp, uint_fast8_t count)$/;"	f	class:lgfx::v1::Touch_XPT2046
getType	src/lgfx/v0/lgfx_fonts.hpp	/^    virtual font_type_t getType(void) const { return font_type_t::ft_unknown; }$/;"	f	struct:lgfx::v0::IFont
getType	src/lgfx/v1/lgfx_fonts.hpp	/^    virtual font_type_t getType(void) const { return font_type_t::ft_unknown; }$/;"	f	struct:lgfx::v1::IFont
getUnicodeIndex	src/lgfx/v0/lgfx_fonts.cpp	/^  bool VLWfont::getUnicodeIndex(uint16_t unicode, uint16_t *index) const$/;"	f	class:lgfx::v0::VLWfont
getUnicodeIndex	src/lgfx/v1/lgfx_fonts.cpp	/^  bool VLWfont::getUnicodeIndex(uint16_t unicode, uint16_t *index) const$/;"	f	class:lgfx::v1::VLWfont
getVCOM	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  uint16_t Panel_IT8951::getVCOM(void)$/;"	f	class:lgfx::v1::Panel_IT8951
getVersion	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^  int Touch_STMPE610::getVersion(void)$/;"	f	class:lgfx::v0::Touch_STMPE610
getVersion	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^  int Touch_STMPE610::getVersion(void)$/;"	f	class:lgfx::v1::Touch_STMPE610
getWidth	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t getWidth(void) const {$/;"	f	struct:lgfx::v0::PanelCommon
getWindowAddr16	src/lgfx/v0/panel/PanelCommon.hpp	/^    static uint32_t getWindowAddr16(uint_fast16_t H, uint_fast16_t L) { return H | L<<8; }$/;"	f	struct:lgfx::v0::PanelCommon
getWindowAddr32	src/lgfx/v0/panel/PanelCommon.hpp	/^    static uint32_t getWindowAddr32(uint_fast16_t H, uint_fast16_t L) { return (((uint8_t)H)<<8 | (H)>>8) | ((uint32_t)((L)<<8 | (L)>>8))<<16; }$/;"	f	struct:lgfx::v0::PanelCommon
getWriteDepth	src/lgfx/v1/Panel.hpp	/^    color_depth_t getWriteDepth(void) const { return _write_depth; }$/;"	f	struct:lgfx::v1::IPanel
get_depth_impl	src/lgfx/v0/lgfx_common.hpp	/^  struct get_depth_impl {$/;"	s	namespace:lgfx::v0
get_depth_impl	src/lgfx/v1/misc/colortype.hpp	/^  struct get_depth_impl {$/;"	s	namespace:lgfx::v1
get_dmabuffer	src/lgfx/v0/LGFX_Device.hpp	/^    uint8_t* get_dmabuffer(uint32_t length)$/;"	f	class:lgfx::v0::LGFX_Device
get_fastread_dir	src/lgfx/v1/panel/Panel_Device.hpp	/^    virtual fastread_dir_t get_fastread_dir(void) const { return fastread_nothing; }$/;"	f	struct:lgfx::v1::Panel_Device
get_gpio_hi_reg	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline volatile uint32_t* get_gpio_hi_reg(int_fast8_t pin) { return (pin & 32) ? &GPIO.out1_w1ts.val : &GPIO.out_w1ts; }$/;"	f	namespace:lgfx::v0
get_gpio_hi_reg	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline volatile uint32_t* get_gpio_hi_reg(int_fast8_t pin) { return &GPIO.out_w1ts.val; }$/;"	f	namespace:lgfx::v1
get_gpio_hi_reg	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline volatile uint32_t* get_gpio_hi_reg(int_fast8_t pin) { return (pin & 32) ? &GPIO.out1_w1ts.val : &GPIO.out_w1ts; }$/;"	f	namespace:lgfx::v1
get_gpio_in_reg	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline volatile uint32_t* get_gpio_in_reg(int_fast8_t pin)$/;"	f	namespace:lgfx::v1
get_gpio_lo_reg	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline volatile uint32_t* get_gpio_lo_reg(int_fast8_t pin) { return (pin & 32) ? &GPIO.out1_w1tc.val : &GPIO.out_w1tc; }$/;"	f	namespace:lgfx::v0
get_gpio_lo_reg	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline volatile uint32_t* get_gpio_lo_reg(int_fast8_t pin) { return &GPIO.out_w1tc.val; }$/;"	f	namespace:lgfx::v1
get_gpio_lo_reg	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline volatile uint32_t* get_gpio_lo_reg(int_fast8_t pin) { return (pin & 32) ? &GPIO.out1_w1tc.val : &GPIO.out_w1tc; }$/;"	f	namespace:lgfx::v1
get_gpio_out_reg	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline volatile uint32_t* get_gpio_out_reg(int_fast8_t pin)$/;"	f	namespace:lgfx::v1
get_gpio_regaddr	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  static uintptr_t get_gpio_regaddr(uint32_t pin)$/;"	f	namespace:lgfx::v1
get_pkg_ver	src/lgfx/v1/platforms/esp32/common.cpp	/^  uint32_t get_pkg_ver(void)$/;"	f	namespace:lgfx::v1
get_signed_bits	src/lgfx/v0/lgfx_fonts.cpp	/^    int_fast8_t get_signed_bits(uint_fast8_t cnt)$/;"	f	struct:lgfx::v0::u8g2_font_decode_t
get_signed_bits	src/lgfx/v1/lgfx_fonts.cpp	/^    int_fast8_t get_signed_bits(uint_fast8_t cnt)$/;"	f	struct:lgfx::v1::u8g2_font_decode_t
get_unsigned_bits	src/lgfx/v0/lgfx_fonts.cpp	/^    uint_fast8_t get_unsigned_bits(uint_fast8_t cnt)$/;"	f	struct:lgfx::v0::u8g2_font_decode_t
get_unsigned_bits	src/lgfx/v1/lgfx_fonts.cpp	/^    uint_fast8_t get_unsigned_bits(uint_fast8_t cnt)$/;"	f	struct:lgfx::v1::u8g2_font_decode_t
gfx	src/lgfx/v0/LGFXBase.cpp	/^    LGFXBase* gfx;$/;"	m	struct:lgfx::v0::image_info_t	file:
gfx	src/lgfx/v0/LGFXBase.cpp	/^    LGFXBase* gfx;$/;"	m	struct:lgfx::v0::png_encoder_t	file:
gfx	src/lgfx/v1/LGFXBase.cpp	/^    LGFXBase* gfx;$/;"	m	struct:lgfx::v1::image_info_t	file:
gfx	src/lgfx/v1/LGFXBase.cpp	/^    LGFXBase* gfx;$/;"	m	struct:lgfx::v1::png_encoder_t	file:
gh	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t gh:3;$/;"	m	struct:lgfx::v0::swap565_t::__anon494::__anon495
gh	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t gh:3;$/;"	m	struct:lgfx::v1::swap565_t::__anon36::__anon37
gl	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t gl:3;$/;"	m	struct:lgfx::v0::swap565_t::__anon494::__anon495
gl	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t gl:3;$/;"	m	struct:lgfx::v1::swap565_t::__anon36::__anon37
glcd_fontinfo_t	src/lgfx/v0/lgfx_fonts.cpp	/^  struct glcd_fontinfo_t$/;"	s	namespace:lgfx::v0	file:
glcd_fontinfo_t	src/lgfx/v1/lgfx_fonts.cpp	/^  struct glcd_fontinfo_t$/;"	s	namespace:lgfx::v1	file:
glyph	src/lgfx/v0/lgfx_fonts.hpp	/^    GFXglyph *glyph;            \/\/ Glyph array$/;"	m	struct:lgfx::v0::GFXfont
glyph	src/lgfx/v1/lgfx_fonts.hpp	/^    GFXglyph *glyph;            \/\/ Glyph array$/;"	m	struct:lgfx::v1::GFXfont
glyph_cnt	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t glyph_cnt (void) const { return _font[0]; }$/;"	f	struct:lgfx::v0::U8g2font
glyph_cnt	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t glyph_cnt (void) const { return pgm_read_byte(&_font[0]); }$/;"	f	struct:lgfx::v1::U8g2font
gpio_bl	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t gpio_bl   = -1;      \/\/ backlight pin number$/;"	m	struct:lgfx::v0::PanelCommon
gpio_busy	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t gpio_busy = -1;      \/\/ busy check pin number$/;"	m	struct:lgfx::v0::PanelCommon
gpio_hi	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline void gpio_hi(int_fast8_t pin) { if (pin >= 0) *get_gpio_hi_reg(pin) = 1 << (pin & 31); }$/;"	f	namespace:lgfx::v0
gpio_hi	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void gpio_hi(uint32_t pin) { PORT->Group[pin>>8].OUTSET.reg = (1ul << (pin & 0xFF)); }$/;"	f	namespace:lgfx::v0
gpio_hi	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline void gpio_hi(uint32_t pin) { digitalWrite(pin, HIGH); }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline void gpio_hi(int_fast8_t pin) { if (pin >= 0) *get_gpio_hi_reg(pin) = 1 << (pin & 31); } \/\/ ESP_LOGI("LGFX", "gpio_hi: %d", pin); }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline void gpio_hi(int_fast8_t pin) { if (pin & 16) { if (pin == 16) *(volatile uint32_t*)(0x60000768) |=  1; } else { *(volatile uint32_t*)(0x60000304) = 1 << (pin & 15); } }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static inline void gpio_hi(uint32_t pin) { }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/opencv/common.hpp	/^  static inline void gpio_hi(uint32_t pin) { }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline void gpio_hi(uint32_t pin) { sio_hw->gpio_set = 1 << pin; }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline void gpio_hi(uint32_t pin) { if (pin > 255) return;              PORT->Group[pin >> samd21::PORT_SHIFT].OUTSET.reg = (1ul << (pin & samd21::PIN_MASK)); }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline void gpio_hi(uint32_t pin) {        PORT->Group[pin >> samd51::PORT_SHIFT].OUTSET.reg = (1ul << (pin & samd51::PIN_MASK)); }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/sdl/common.cpp	/^  void gpio_hi(uint32_t pin) { _gpio_dummy_values[pin & (EMULATED_GPIO_MAX - 1)] = 1; }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline void gpio_hi(uint32_t pin) { digitalWrite(pin, HIGH); }$/;"	f	namespace:lgfx::v1
gpio_hi	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline void gpio_hi(int_fast8_t pin) { if (pin >= 0) *get_gpio_out_reg(pin) = 1ul <<  (pin & 15); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline bool gpio_in(int_fast8_t pin) { return ((pin & 32) ? GPIO.in1.data : GPIO.in) & (1 << (pin & 31)); }$/;"	f	namespace:lgfx::v0
gpio_in	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline bool gpio_in(uint32_t pin) { return PORT->Group[pin>>8].IN.reg & (1ul << (pin & 0xFF)); }$/;"	f	namespace:lgfx::v0
gpio_in	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline bool gpio_in(uint32_t pin) { return digitalRead(pin); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline bool gpio_in(int_fast8_t pin) { return ((pin & 32) ? GPIO.in1.data : GPIO.in) & (1 << (pin & 31)); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline bool gpio_in(int_fast8_t pin) { return GPIO.in.val & (1 << (pin & 31)); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline bool gpio_in(int_fast8_t pin)$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static inline bool gpio_in(uint32_t pin) { return false; }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/opencv/common.hpp	/^  static inline bool gpio_in(uint32_t pin) { return false; }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline bool gpio_in(uint32_t pin) { return digitalRead(pin); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline bool gpio_in(uint32_t pin) { if (pin > 255) return false; return PORT->Group[pin >> samd21::PORT_SHIFT].IN.reg     & (1ul << (pin & samd21::PIN_MASK)); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline bool gpio_in(uint32_t pin) { return PORT->Group[pin >> samd51::PORT_SHIFT].IN.reg     & (1ul << (pin & samd51::PIN_MASK)); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/sdl/common.cpp	/^  bool gpio_in(uint32_t pin) { return _gpio_dummy_values[pin & (EMULATED_GPIO_MAX - 1)]; }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline bool gpio_in(uint32_t pin) { return digitalRead(pin); }$/;"	f	namespace:lgfx::v1
gpio_in	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline bool gpio_in(int_fast8_t pin) {         return *get_gpio_in_reg(pin) & (1ul << (pin & 0x0F));  }$/;"	f	namespace:lgfx::v1
gpio_int	src/lgfx/v0/touch/TouchCommon.hpp	/^    int_fast16_t gpio_int = -1;$/;"	m	struct:lgfx::v0::TouchCommon
gpio_lo	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline void gpio_lo(int_fast8_t pin) { if (pin >= 0) *get_gpio_lo_reg(pin) = 1 << (pin & 31); }$/;"	f	namespace:lgfx::v0
gpio_lo	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void gpio_lo(uint32_t pin) { PORT->Group[pin>>8].OUTCLR.reg = (1ul << (pin & 0xFF)); }$/;"	f	namespace:lgfx::v0
gpio_lo	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline void gpio_lo(uint32_t pin) { digitalWrite(pin, LOW); }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline void gpio_lo(int_fast8_t pin) { if (pin >= 0) *get_gpio_lo_reg(pin) = 1 << (pin & 31); } \/\/ ESP_LOGI("LGFX", "gpio_lo: %d", pin); }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline void gpio_lo(int_fast8_t pin) { if (pin & 16) { if (pin == 16) *(volatile uint32_t*)(0x60000768) &= ~1; } else { *(volatile uint32_t*)(0x60000308) = 1 << (pin & 15); } }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static inline void gpio_lo(uint32_t pin) { }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/opencv/common.hpp	/^  static inline void gpio_lo(uint32_t pin) { }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline void gpio_lo(uint32_t pin) { sio_hw->gpio_clr = 1 << pin; }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline void gpio_lo(uint32_t pin) { if (pin > 255) return;              PORT->Group[pin >> samd21::PORT_SHIFT].OUTCLR.reg = (1ul << (pin & samd21::PIN_MASK)); }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline void gpio_lo(uint32_t pin) {        PORT->Group[pin >> samd51::PORT_SHIFT].OUTCLR.reg = (1ul << (pin & samd51::PIN_MASK)); }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/sdl/common.cpp	/^  void gpio_lo(uint32_t pin) { _gpio_dummy_values[pin & (EMULATED_GPIO_MAX - 1)] = 0; }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline void gpio_lo(uint32_t pin) { digitalWrite(pin, LOW); }$/;"	f	namespace:lgfx::v1
gpio_lo	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline void gpio_lo(int_fast8_t pin) { if (pin >= 0) *get_gpio_out_reg(pin) = 1ul << ((pin & 15) + 16); }$/;"	f	namespace:lgfx::v1
gpio_reset	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  static void gpio_reset(size_t pin)$/;"	f	namespace:lgfx::v1
gpio_rst	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t gpio_rst  = -1;      \/\/ hardware reset pin number$/;"	m	struct:lgfx::v0::PanelCommon
grayscale_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr grayscale_t(uint8_t gray8) : raw(gray8) {}$/;"	f	struct:lgfx::v0::grayscale_t
grayscale_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr grayscale_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw((r8 + (g8 << 1) + b8) >> 2) {}$/;"	f	struct:lgfx::v0::grayscale_t
grayscale_t	src/lgfx/v0/lgfx_common.hpp	/^    grayscale_t() : raw{0} {};$/;"	f	struct:lgfx::v0::grayscale_t
grayscale_t	src/lgfx/v0/lgfx_common.hpp	/^  struct grayscale_t {$/;"	s	namespace:lgfx::v0
grayscale_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr grayscale_t(uint8_t gray8) : raw(gray8) {}$/;"	f	struct:lgfx::v1::grayscale_t
grayscale_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr grayscale_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw((r8 + (g8 << 1) + b8) >> 2) {}$/;"	f	struct:lgfx::v1::grayscale_t
grayscale_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr grayscale_t(void) : raw{0} {};$/;"	f	struct:lgfx::v1::grayscale_t
grayscale_t	src/lgfx/v1/misc/colortype.hpp	/^  struct grayscale_t$/;"	s	namespace:lgfx::v1
gsl_fw_data	src/lgfx/v1/touch/gslx680/Touch_GSLx680_FW.h	/^struct __attribute__((packed)) gsl_fw_data$/;"	s
gt911cmd_getdata	src/lgfx/v0/touch/Touch_GT911.cpp	/^  static constexpr uint8_t gt911cmd_getdata[] = { 0x81, 0x4E, 0x00 };$/;"	m	namespace:lgfx::v0	file:
gt911cmd_getdata	src/lgfx/v1/touch/Touch_GT911.cpp	/^  static constexpr uint8_t gt911cmd_getdata[] = { 0x81, 0x4E, 0x00 };$/;"	m	namespace:lgfx::v1	file:
gxAdvance	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t*  gxAdvance = nullptr;  \/\/setWidth$/;"	m	struct:lgfx::v0::VLWfont
gxAdvance	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t*  gxAdvance = nullptr;  \/\/setWidth$/;"	m	struct:lgfx::v1::VLWfont
h	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      info_t h;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::video_timing_t
hConnect	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      HINTERNET hSession, hConnect, hRequest;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
hRequest	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      HINTERNET hSession, hConnect, hRequest;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
hSession	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      HINTERNET hSession, hConnect, hRequest;$/;"	m	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
h_branking_total	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint16_t h_branking_total = 128;$/;"	m	struct:lgfx::v1::timing_params_t
half_psram	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^      half_psram,$/;"	e	enum:lgfx::v1::DividedFrameBuffer::psram_setting_t
halfwidth	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t halfwidth;$/;"	m	struct:lgfx::v0::BDFfont
halfwidth	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t halfwidth;$/;"	m	struct:lgfx::v1::BDFfont
handle	src/lgfx/v0/platforms/samd51_common.hpp	/^    SYS_FS_HANDLE handle = SYS_FS_HANDLE_INVALID;$/;"	m	struct:lgfx::v0::FileWrapper
handle	src/lgfx/v1/platforms/samd51/common.hpp	/^    SYS_FS_HANDLE handle = SYS_FS_HANDLE_INVALID;$/;"	m	struct:lgfx::v1::FileWrapper
hasPalette	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline bool          hasPalette       (void) const { return _palette_count; }$/;"	f	class:lgfx::v0::LGFXBase
hasPalette	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool hasPalette (void) const { return _palette_count; }$/;"	f	class:lgfx::v1::LGFXBase
hasParent	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline bool hasParent(void) const { return parent; }$/;"	f	struct:lgfx::DataWrapper
hasParent	src/lgfx/v1/misc/DataWrapper.hpp	/^    LGFX_INLINE bool hasParent(void) const { return parent; }$/;"	f	struct:lgfx::v1::DataWrapper
hash	src/lgfx/utility/result.hpp	/^  struct hash<::RESULT_NS_IMPL::result<T,E>>$/;"	s	namespace:std
hash	src/lgfx/utility/result.hpp	/^  struct hash<::RESULT_NS_IMPL::result<void,E>>$/;"	s	namespace:std
hdr	src/lgfx/utility/lgfx_pngle.c	/^  pngle_ihdr_t hdr;$/;"	m	struct:_pngle_t	file:
heap_alloc	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline void* heap_alloc(      size_t length) { return heap_caps_malloc(length, MALLOC_CAP_8BIT);  }$/;"	f	namespace:lgfx::v0
heap_alloc	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v0
heap_alloc	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return heap_caps_malloc(length, MALLOC_CAP_8BIT);  }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/opencv/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/sdl/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline void* heap_alloc(      size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return heap_caps_malloc((length + 3) & ~3, MALLOC_CAP_DMA);  }$/;"	f	namespace:lgfx::v0
heap_alloc_dma	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return memalign(16, length); }$/;"	f	namespace:lgfx::v0
heap_alloc_dma	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return malloc(length); } \/\/ aligned_alloc(16, length);$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return heap_caps_malloc((length + 3) & ~3, MALLOC_CAP_DMA);  }$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return malloc(length); } \/\/ aligned_alloc(16, length);$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return malloc(length); } \/\/ aligned_alloc(16, length);$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/opencv/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return malloc(length); } \/\/ aligned_alloc(16, length);$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return malloc(length); } \/\/ aligned_alloc(16, length);$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return memalign(16, length); }$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return memalign(16, length); }$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/sdl/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return malloc(length); } \/\/ aligned_alloc(16, length);$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return malloc(length); } \/\/ aligned_alloc(16, length);$/;"	f	namespace:lgfx::v1
heap_alloc_dma	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline void* heap_alloc_dma(  size_t length) { return memalign(16, length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return heap_caps_malloc(length, MALLOC_CAP_SPIRAM | MALLOC_CAP_8BIT);  }$/;"	f	namespace:lgfx::v0
heap_alloc_psram	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v0
heap_alloc_psram	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return heap_caps_malloc((length + 3) & ~3, MALLOC_CAP_SPIRAM | MALLOC_CAP_8BIT);  }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/opencv/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/sdl/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_alloc_psram	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline void* heap_alloc_psram(size_t length) { return malloc(length); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v0/platforms/esp32_common.hpp	/^  static inline void heap_free(void* buf) { heap_caps_free(buf); }$/;"	f	namespace:lgfx::v0
heap_free	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v0
heap_free	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline void heap_free(void* buf) { heap_caps_free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/opencv/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/sdl/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
heap_free	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline void heap_free(void* buf) { free(buf); }$/;"	f	namespace:lgfx::v1
height	src/lgfx/utility/lgfx_pngle.h	/^  uint32_t height;$/;"	m	struct:_pngle_ihdr_t
height	src/lgfx/utility/lgfx_qoi.c	/^  unsigned int height;$/;"	m	struct:_qoi_desc_t	file:
height	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast16_t width, height;\/* Size of the input image (pixel) *\/$/;"	m	struct:lgfxJdec
height	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline int32_t       height           (void) const { return _height; }$/;"	f	class:lgfx::v0::LGFXBase
height	src/lgfx/v0/lgfx_common.hpp	/^    int32_t height(void) const { return bottom - top + 1; }$/;"	f	struct:lgfx::range_rect_t
height	src/lgfx/v0/lgfx_fonts.hpp	/^    const uint8_t height;$/;"	m	struct:lgfx::v0::BaseFont
height	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t height;$/;"	m	struct:lgfx::v0::FontMetrics
height	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t  width, height;    \/\/ Bitmap dimensions in pixels$/;"	m	struct:lgfx::v0::GFXglyph
height	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   int32_t height(void) const { return _panel->height(); }$/;"	f	class:lgfx::v1::LGFXBase
height	src/lgfx/v1/Panel.hpp	/^    uint16_t height(void) const { return _height; }$/;"	f	struct:lgfx::v1::IPanel
height	src/lgfx/v1/lgfx_fonts.hpp	/^    const uint8_t height;$/;"	m	struct:lgfx::v1::BaseFont
height	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t height;$/;"	m	struct:lgfx::v1::FontMetrics
height	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t  width, height;    \/\/ Bitmap dimensions in pixels$/;"	m	struct:lgfx::v1::GFXglyph
height	src/lgfx/v1/misc/range.hpp	/^    LGFX_INLINE int_fast16_t height(void) const { return bottom - top + 1; }$/;"	f	struct:lgfx::v1::range_rect_t
horizon	src/lgfx/v0/lgfx_common.hpp	/^      range_t horizon;$/;"	m	union:lgfx::range_rect_t::__anon507
horizon	src/lgfx/v1/misc/range.hpp	/^        range_t horizon;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon49
hps	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint16_t hps = 46;$/;"	m	struct:lgfx::v1::timing_params_t
hpw	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint8_t  hpw = 48;$/;"	m	struct:lgfx::v1::timing_params_t
hsync_back_porch	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t hsync_back_porch = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
hsync_front_porch	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t hsync_front_porch = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
hsync_long	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t hsync_long;          \/\/ 垂直同期期間のSYNC幅;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
hsync_polarity	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      bool hsync_polarity = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
hsync_pulse_width	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t hsync_pulse_width = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
hsync_serration	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t hsync_serration;      \/\/ 切り込みパルス幅;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
hsync_short	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t hsync_short;          \/\/ 水平同期期間のSYNC幅;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
hub75Draw332_asm	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static void hub75Draw332_asm(asm_work_t* work)$/;"	f	namespace:lgfx::v1
hub75Draw565_asm	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static void hub75Draw565_asm(asm_work_t* work)$/;"	f	namespace:lgfx::v1
huffbits	src/lgfx/utility/lgfx_tjpgd.h	/^	uint8_t* huffbits[2][2];	\/* Huffman bit distribution tables [id][dcac] *\/$/;"	m	struct:lgfxJdec
huffcode	src/lgfx/utility/lgfx_tjpgd.h	/^	uint16_t* huffcode[2][2];	\/* Huffman code word tables [id][dcac] *\/$/;"	m	struct:lgfxJdec
huffdata	src/lgfx/utility/lgfx_tjpgd.h	/^	uint8_t* huffdata[2][2];	\/* Huffman decoded data tables [id][dcac] *\/$/;"	m	struct:lgfxJdec
huffext	src/lgfx/utility/lgfx_tjpgd.c	/^static int32_t huffext (	\/* >=0: decoded data, <0: error code *\/$/;"	f	file:
i2c	src/lgfx/v0/lgfx_common.hpp	/^  namespace i2c$/;"	n	namespace:lgfx
i2c	src/lgfx/v0/platforms/esp32_common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v0	file:
i2c	src/lgfx/v0/platforms/samd51_common.cpp	/^  namespace i2c \/\/ TODO: implement.$/;"	n	namespace:lgfx::v0	file:
i2c	src/lgfx/v1/platforms/arduino_default/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/common.hpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1
i2c	src/lgfx/v1/platforms/esp32/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/esp32/common.hpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1
i2c	src/lgfx/v1/platforms/esp8266/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/framebuffer/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/opencv/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/rp2040/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/samd21/common.cpp	/^  namespace i2c \/\/ TODO: implement.$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/samd51/common.cpp	/^  namespace i2c \/\/ TODO: implement.$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/sdl/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/sdl/common.hpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1
i2c	src/lgfx/v1/platforms/spresense/common.cpp	/^  namespace i2c$/;"	n	namespace:lgfx::v1	file:
i2c	src/lgfx/v1/platforms/stm32/common.cpp	/^  namespace i2c \/\/ TODO: implement.$/;"	n	namespace:lgfx::v1	file:
i2c0_sck_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t i2c0_sck_pinlist[] = {  1,  5,  9, 13, 17, 21, 25, 29, UINT8_MAX };$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
i2c0_sda_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t i2c0_sda_pinlist[] = {  0,  4,  8, 12, 16, 20, 24, 28, UINT8_MAX };$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
i2c1_sck_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t i2c1_sck_pinlist[] = {  3,  7, 11, 15, 19, 23, 27,     UINT8_MAX };$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
i2c1_sda_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t i2c1_sda_pinlist[] = {  2,  6, 10, 14, 18, 22, 26,     UINT8_MAX };$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
i2c_addr	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast16_t i2c_addr;$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon457
i2c_addr	src/lgfx/v1/Touch.hpp	/^          int16_t i2c_addr;$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon261
i2c_addr	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      uint8_t i2c_addr = 0x3C;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_addr	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      uint8_t i2c_addr = 0x3C;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_addr	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      uint8_t i2c_addr = 0x3C;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_addr	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      uint8_t i2c_addr = 0x3C;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_addr	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      uint8_t i2c_addr ;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_cmd_end	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_end   = 4;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_cmd_read	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_read  = 2;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_cmd_read	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_read  = 3;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_cmd_start	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_start = 0;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_cmd_start	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_start = 6;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_cmd_stop	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_stop  = 2;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_cmd_stop	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_stop  = 3;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_cmd_write	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int i2c_cmd_write = 1;$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_context	src/lgfx/v1/platforms/esp32/common.cpp	/^    i2c_context_t i2c_context[I2C_NUM_MAX];$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_context	src/lgfx/v1/platforms/esp8266/common.cpp	/^    i2c_context_t i2c_context[I2C_NUM_MAX];$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_context	src/lgfx/v1/platforms/samd51/common.cpp	/^    i2c_context_t i2c_context[SERCOM_INST_NUM];$/;"	m	namespace:lgfx::v1::i2c	file:
i2c_context_t	src/lgfx/v1/platforms/esp32/common.cpp	/^    struct i2c_context_t$/;"	s	namespace:lgfx::v1::i2c	file:
i2c_context_t	src/lgfx/v1/platforms/esp8266/common.cpp	/^    struct i2c_context_t$/;"	s	namespace:lgfx::v1::i2c	file:
i2c_context_t	src/lgfx/v1/platforms/samd51/common.cpp	/^    struct i2c_context_t$/;"	s	namespace:lgfx::v1::i2c	file:
i2c_dev	src/lgfx/v1/platforms/rp2040/common.cpp	/^      volatile i2c_hw_t * const i2c_dev[] = {$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
i2c_freq	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static constexpr int32_t i2c_freq = 400000;$/;"	m	namespace:lgfx::v1::m5stack
i2c_freq	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int32_t i2c_freq = 400000;$/;"	m	namespace:lgfx::v1::m5stack
i2c_freq	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int i2c_freq = 400000;$/;"	m	struct:lgfx::v1::Panel_ESPboy
i2c_freq	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int i2c_freq = 400000;$/;"	m	struct:LGFX::Panel_ESPboy
i2c_info	src/lgfx/v1/platforms/rp2040/common.cpp	/^      i2c_info_str i2c_info[n_i2c];$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
i2c_info_str	src/lgfx/v1/platforms/rp2040/common.cpp	/^      struct i2c_info_str {$/;"	s	namespace:lgfx::v1::i2c::__anon57	file:
i2c_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      } i2c_pinlist[] = {$/;"	m	namespace:lgfx::v1::i2c::__anon57	typeref:struct:lgfx::v1::i2c::__anon57::i2c_pinlist_str	file:
i2c_pinlist_str	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr struct i2c_pinlist_str {$/;"	s	namespace:lgfx::v1::i2c::__anon57	file:
i2c_port	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast8_t i2c_port; \/\/ ESP32:i2c_port_t I2C_NUM_0 or I2C_NUM_1$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon457
i2c_port	src/lgfx/v1/Touch.hpp	/^          int8_t i2c_port; \/\/ ESP32:i2c_port_t I2C_NUM_0 or I2C_NUM_1$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon261
i2c_port	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      uint8_t i2c_port = 0;      \/\/ e.g. ESP32 0=I2C_NUM_0 \/ 1=I2C_NUM_1$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_port	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      uint8_t i2c_port = 0;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_port	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      uint8_t i2c_port = 0;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_port	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      uint8_t i2c_port ;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
i2c_port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static constexpr int_fast16_t i2c_port = I2C_NUM_1;$/;"	m	namespace:lgfx::v1::m5stack
i2c_port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t i2c_port = I2C_NUM_1;$/;"	m	namespace:lgfx::v1::m5stack
i2c_scl	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast16_t i2c_scl;$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon457
i2c_scl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static constexpr int_fast16_t i2c_scl = GPIO_NUM_11;$/;"	m	namespace:lgfx::v1::m5stack
i2c_scl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t i2c_scl = GPIO_NUM_11;$/;"	m	namespace:lgfx::v1::m5stack
i2c_sda	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast16_t i2c_sda;$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon457
i2c_sda	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static constexpr int_fast16_t i2c_sda = GPIO_NUM_12;$/;"	m	namespace:lgfx::v1::m5stack
i2c_sda	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr int_fast16_t i2c_sda = GPIO_NUM_12;$/;"	m	namespace:lgfx::v1::m5stack
i2c_set_cmd	src/lgfx/v1/platforms/esp32/common.cpp	/^    static void i2c_set_cmd(i2c_dev_t* dev, uint8_t index, uint8_t op_code, uint8_t byte_num)$/;"	f	namespace:lgfx::v1::i2c
i2c_stop	src/lgfx/v1/platforms/esp32/common.cpp	/^    static void i2c_stop(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
i2c_wait	src/lgfx/v1/platforms/esp32/common.cpp	/^    static cpp::result<void, error_t> i2c_wait(int i2c_port, bool flg_stop = false)$/;"	f	namespace:lgfx::v1::i2c
i2c_wait	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> i2c_wait(int sercom_index, bool flg_stop = false)$/;"	f	namespace:lgfx::v1::i2c
i2s_intr_handler_hub75	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void IRAM_ATTR Bus_HUB75::i2s_intr_handler_hub75(void *arg)$/;"	f	class:lgfx::v1::Bus_HUB75
i2s_intr_handler_video	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void IRAM_ATTR i2s_intr_handler_video(void *arg)$/;"	f	namespace:lgfx::v1
i2s_port	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        i2s_port_t i2s_port = I2S_NUM_0;$/;"	m	union:lgfx::v1::Bus_HUB75::config_t::__anon241
i2s_port	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^      i2s_port_t i2s_port = I2S_NUM_0;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
i2s_port	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^        i2s_port_t i2s_port = I2S_NUM_0;$/;"	m	union:lgfx::v1::Bus_Parallel16::config_t::__anon253
i2s_port	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^        i2s_port_t i2s_port = I2S_NUM_0;$/;"	m	union:lgfx::v1::Bus_Parallel8::config_t::__anon256
id	src/lgfx/v0/lgfx_common.hpp	/^    int16_t id;$/;"	m	struct:lgfx::touch_point_t
id	src/lgfx/v1/Touch.hpp	/^    uint16_t id   = 0;$/;"	m	struct:lgfx::v1::touch_point_t
id	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        std::uint8_t id[3];$/;"	m	struct:lgfx::v1::Panel_M5HDMI::HDMI_Trans::ChipID
id_cmd	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      uint16_t id_cmd;$/;"	m	struct:lgfx::v1::LGFX::_detector_t
id_core	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint8_t   id_core;$/;"	m	struct:lgfx::v0::__anon274
id_core	src/lgfx/v1/platforms/samd51/common.hpp	/^      uint8_t   id_core;$/;"	m	struct:lgfx::v1::samd51::sercom_data_t
id_mask	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      uint32_t id_mask;$/;"	m	struct:lgfx::v1::LGFX::_detector_t
id_slow	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint8_t   id_slow;$/;"	m	struct:lgfx::v0::__anon274
id_slow	src/lgfx/v1/platforms/samd51/common.hpp	/^      uint8_t   id_slow;$/;"	m	struct:lgfx::v1::samd51::sercom_data_t
id_value	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      uint32_t id_value;$/;"	m	struct:lgfx::v1::LGFX::_detector_t
ili9341_colors	src/LGFX_TFT_eSPI.hpp	/^  namespace ili9341_colors  \/\/ Color definitions for backwards compatibility with old sketches$/;"	n	namespace:lgfx
image1280x960x1	examples/Sprite/FlashMemSprite/image1280x960x1.h	/^static constexpr unsigned char image1280x960x1[] = {$/;"	v
image320x240x16	examples/Sprite/FlashMemSprite/image320x240x16.h	/^static constexpr unsigned char image320x240x16[] = {$/;"	v
image480x320x8	examples/Sprite/FlashMemSprite/image480x320x8.h	/^static constexpr unsigned char image480x320x8[] = {$/;"	v
image640x480x4	examples/Sprite/FlashMemSprite/image640x480x4.h	/^static constexpr unsigned char image640x480x4[] = {$/;"	v
image_decoder_t	src/lgfx/v0/LGFXBase.cpp	/^  struct image_decoder_t : public image_info_t$/;"	s	namespace:lgfx::v0	file:
image_decoder_t	src/lgfx/v1/LGFXBase.cpp	/^  struct image_decoder_t : public image_info_t$/;"	s	namespace:lgfx::v1	file:
image_info_t	src/lgfx/v0/LGFXBase.cpp	/^  struct image_info_t$/;"	s	namespace:lgfx::v0	file:
image_info_t	src/lgfx/v1/LGFXBase.cpp	/^  struct image_info_t$/;"	s	namespace:lgfx::v1	file:
img16	src/lgfx/v0/LGFX_Sprite.hpp	/^      uint16_t* img16() const { return reinterpret_cast<uint16_t*>(_buffer); }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
img16	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    uint16_t* img16() const { return reinterpret_cast<uint16_t*>(_buffer); }$/;"	f	class:lgfx::v1::SpriteBuffer
img24	src/lgfx/v0/LGFX_Sprite.hpp	/^      bgr888_t* img24() const { return reinterpret_cast<bgr888_t*>(_buffer); }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
img24	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    bgr888_t* img24() const { return reinterpret_cast<bgr888_t*>(_buffer); }$/;"	f	class:lgfx::v1::SpriteBuffer
img32	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    uint32_t* img32() const { return reinterpret_cast<uint32_t*>(_buffer); }$/;"	f	class:lgfx::v1::SpriteBuffer
img8	src/lgfx/v0/LGFX_Sprite.hpp	/^      uint8_t* img8() const { return _buffer; }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
img8	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    uint8_t* img8() const { return _buffer; }$/;"	f	class:lgfx::v1::SpriteBuffer
imshowall	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::imshowall(void)$/;"	f	class:lgfx::v1::Panel_OpenCV
in_place_error	src/lgfx/utility/result.hpp	/^  RESULT_CPP17_INLINE constexpr auto in_place_error = in_place_error_t{};$/;"	m	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
in_place_error_t	src/lgfx/utility/result.hpp	/^  struct in_place_error_t$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
inbuf	src/lgfx/utility/lgfx_tjpgd.h	/^	uint8_t* inbuf;				\/* Bit stream input buffer *\/$/;"	m	struct:lgfxJdec
index	src/lgfx/utility/lgfx_qoi.c	/^  qoi_rgba_t index[64];$/;"	m	struct:_qoi_t	file:
indexsize	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t indexsize;$/;"	m	struct:lgfx::v0::BDFfont
indexsize	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t indexsize;$/;"	m	struct:lgfx::v1::BDFfont
indextbl	src/lgfx/v0/lgfx_fonts.hpp	/^    const uint16_t *indextbl;$/;"	m	struct:lgfx::v0::BDFfont
indextbl	src/lgfx/v1/lgfx_fonts.hpp	/^    const uint16_t *indextbl;$/;"	m	struct:lgfx::v1::BDFfont
inflate	src/lgfx/utility/miniz.c	/^  #define inflate /;"	d	file:
inflateEnd	src/lgfx/utility/miniz.c	/^  #define inflateEnd /;"	d	file:
inflateInit	src/lgfx/utility/miniz.c	/^  #define inflateInit /;"	d	file:
inflateInit2	src/lgfx/utility/miniz.c	/^  #define inflateInit2 /;"	d	file:
inflate_state	src/lgfx/utility/miniz.c	/^} inflate_state;$/;"	t	typeref:struct:__anon537	file:
inflator	src/lgfx/utility/lgfx_pngle.c	/^  tinfl_decompressor inflator; \/\/ 11000 bytes$/;"	m	struct:_pngle_t	file:
info_t	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      struct info_t$/;"	s	struct:lgfx::v1::Panel_M5HDMI::video_timing_t
infunc	src/lgfx/utility/lgfx_tjpgd.h	/^	uint32_t (*infunc)(void*, uint8_t*, uint32_t);\/* Pointer to jpeg stream input function *\/$/;"	m	struct:lgfxJdec
init	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual void init(bool use_reset)$/;"	f	struct:lgfx::v0::PanelCommon
init	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void init(void) { init_impl(); }$/;"	f	class:lgfx::v0::LGFX_PARALLEL
init	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void init(void) { init_impl(); }$/;"	f	class:lgfx::v0::LGFX_SPI
init	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void init(int sclk, int miso, int mosi, spi_host_device_t host = LGFX_SPI_DEFAULT)$/;"	f	class:lgfx::v0::LGFX_SPI
init	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void init(void) { init_impl(); }$/;"	f	class:lgfx::v0::LGFX_SPI
init	src/lgfx/v0/platforms/esp32_common.cpp	/^    void init(int i2c_port, int pin_sda, int pin_scl, int freq)$/;"	f	namespace:lgfx::v0::i2c
init	src/lgfx/v0/platforms/esp32_common.cpp	/^    void init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi)$/;"	f	namespace:lgfx::v0::spi
init	src/lgfx/v0/platforms/esp32_common.cpp	/^    void init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi, int dma_channel)$/;"	f	namespace:lgfx::v0::spi
init	src/lgfx/v0/platforms/samd51_common.cpp	/^    void init(int, int, int, int) {}$/;"	f	namespace:lgfx::v0::i2c
init	src/lgfx/v0/platforms/samd51_common.cpp	/^    void init(int, int, int, int) {}$/;"	f	namespace:lgfx::v0::spi
init	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  bool Touch_FT5x06::init(void)$/;"	f	class:lgfx::v0::Touch_FT5x06
init	src/lgfx/v0/touch/Touch_GT911.cpp	/^  bool Touch_GT911::init(void)$/;"	f	class:lgfx::v0::Touch_GT911
init	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^  bool Touch_STMPE610::init(void)$/;"	f	class:lgfx::v0::Touch_STMPE610
init	src/lgfx/v0/touch/Touch_XPT2046.cpp	/^  bool Touch_XPT2046::init(void)$/;"	f	class:lgfx::v0::Touch_XPT2046
init	src/lgfx/v1/LGFXBase.hpp	/^    bool init(void)               { return init_impl(true , true); };$/;"	f	class:lgfx::v1::LGFX_Device
init	src/lgfx/v1/panel/Panel_Device.cpp	/^  bool Panel_Device::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_Device
init	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  bool Panel_FlexibleFrameBuffer::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
init	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  bool Panel_FrameBufferBase::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
init	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  bool Panel_GDEW0154M09::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
init	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  bool Panel_HUB75::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_HUB75
init	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  bool Panel_HUB75_Multi::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_HUB75_Multi
init	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  bool Panel_HasBuffer::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_HasBuffer
init	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  bool Panel_IT8951::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_IT8951
init	src/lgfx/v1/panel/Panel_LCD.cpp	/^  bool Panel_LCD::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_LCD
init	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::HDMI_Trans::init(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
init	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_M5HDMI
init	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  bool Panel_M5UnitLCD::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
init	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  bool Panel_NT35510::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_NT35510
init	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  bool Panel_RA8875::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_RA8875
init	src/lgfx/v1/panel/Panel_RM68120.cpp	/^  bool Panel_RM68120::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_RM68120
init	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  bool Panel_1bitOLED::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_1bitOLED
init	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  bool Panel_SSD1306::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_SSD1306
init	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  bool Panel_SSD1327::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_SSD1327
init	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^  bool Panel_SSD1963::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_SSD1963
init	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port, int pin_sda, int pin_scl) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  bool Bus_HUB75::init(void)$/;"	f	class:lgfx::v1::Bus_HUB75
init	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  bool Bus_I2C::init(void)$/;"	f	class:lgfx::v1::Bus_I2C
init	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::init(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
init	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/esp32/Light_PWM.cpp	/^  bool Light_PWM::init(uint8_t brightness)$/;"	f	class:lgfx::v1::Light_PWM
init	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  bool Panel_CVBS::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_CVBS
init	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port, int pin_sda, int pin_scl)$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi)$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi, int dma_channel)$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::init(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
init	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::init(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
init	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::init(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
init	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::init(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
init	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::init(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
init	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  bool Bus_RGB::init(void)$/;"	f	class:lgfx::v1::Bus_RGB
init	src/lgfx/v1/platforms/esp32s3/Panel_RGB.cpp	/^  bool Panel_RGB::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_RGB
init	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  bool Bus_I2C::init(void)$/;"	f	class:lgfx::v1::Bus_I2C
init	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port, int pin_sda, int pin_scl)$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi)$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  bool Panel_fb::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_fb
init	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port, int pin_sda, int pin_scl) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  bool Panel_OpenCV::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_OpenCV
init	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port, int pin_sda, int pin_scl) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  bool Bus_I2C::init(void)$/;"	f	class:lgfx::v1::Bus_I2C
init	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/rp2040/Light_PWM.cpp	/^  bool Light_PWM::init( uint8_t brightness )$/;"	f	class:lgfx::v1::Light_PWM
init	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port, int pin_sda, int pin_scl)$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> init(int spi_port, int pin_sclk, int pin_miso, int pin_mosi)$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  bool Bus_I2C::init(void)$/;"	f	class:lgfx::v1::Bus_I2C
init	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> init(int sercom_index, int pin_sclk, int pin_miso, int pin_mosi)$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> init(int sercom_index, int pin_sda, int pin_scl)$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  bool Bus_I2C::init(void)$/;"	f	class:lgfx::v1::Bus_I2C
init	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> init(int sercom_index, int pin_sclk, int pin_miso, int pin_mosi)$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> init(int sercom_index, int pin_sda, int pin_scl)$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  bool Panel_sdl::init(bool use_reset)$/;"	f	class:lgfx::v1::Panel_sdl
init	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> init(int i2c_port, int pin_sda, int pin_scl) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> init(int spi_host, int spi_sclk, int spi_miso, int spi_mosi)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/sdl/common.hpp	/^    static inline cpp::result<void, error_t> init(int i2c_port) { return {}; }$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> init(int , int , int ) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> init(int , int , int , int )  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  bool Bus_SPI::init(void)$/;"	f	class:lgfx::v1::Bus_SPI
init	src/lgfx/v1/platforms/stm32/common.cpp	/^    void init(int, int, int, int) {}$/;"	f	namespace:lgfx::v1::i2c
init	src/lgfx/v1/platforms/stm32/common.cpp	/^    void init(int, int, int, int) {}$/;"	f	namespace:lgfx::v1::spi
init	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  bool Touch_FT5x06::init(void)$/;"	f	class:lgfx::v1::Touch_FT5x06
init	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^  bool Touch_GSLx680::init(void)$/;"	f	class:lgfx::v1::Touch_GSLx680
init	src/lgfx/v1/touch/Touch_GT911.cpp	/^  bool Touch_GT911::init(void)$/;"	f	class:lgfx::v1::Touch_GT911
init	src/lgfx/v1/touch/Touch_NS2009.cpp	/^  bool Touch_NS2009::init(void)$/;"	f	class:lgfx::v1::Touch_NS2009
init	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^  bool Touch_STMPE610::init(void)$/;"	f	class:lgfx::v1::Touch_STMPE610
init	src/lgfx/v1/touch/Touch_TT21xxx.cpp	/^  bool Touch_TT21xxx::init(void)$/;"	f	class:lgfx::v1::Touch_TT21xxx
init	src/lgfx/v1/touch/Touch_XPT2046.cpp	/^  bool Touch_XPT2046::init(void)$/;"	f	class:lgfx::v1::Touch_XPT2046
init	src/lgfx_user/M5UnitLCD.hpp	/^  bool init(uint8_t pin_sda, uint8_t pin_scl, uint32_t i2c_freq = M5UNITLCD_FREQ, int8_t i2c_port = -1, uint8_t i2c_addr = M5UNITLCD_ADDR)$/;"	f	class:M5UnitLCD
init	src/lgfx_user/M5UnitOLED.hpp	/^  bool init(uint8_t pin_sda, uint8_t pin_scl, uint32_t i2c_freq = M5UNITOLED_FREQ, int8_t i2c_port = -1, uint8_t i2c_addr = M5UNITOLED_ADDR)$/;"	f	class:M5UnitOLED
initBus	src/lgfx/v1/LGFXBase.cpp	/^  void LGFX_Device::initBus(void)$/;"	f	class:lgfx::v1::LGFX_Device
initBus	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::initBus(void)$/;"	f	class:lgfx::v1::Panel_Device
initButton	src/lgfx/v1/LGFX_Button.hpp	/^    void initButton( LovyanGFX *gfx, int16_t x, int16_t y, uint16_t w, uint16_t h$/;"	f	class:lgfx::v1::LGFX_Button
initButtonUL	src/lgfx/v1/LGFX_Button.hpp	/^    void initButtonUL( LovyanGFX *gfx, int16_t x, int16_t y, uint16_t w, uint16_t h$/;"	f	class:lgfx::v1::LGFX_Button
initClockNVIC	src/lgfx/v1/platforms/samd21/common.cpp	/^    void initClockNVIC(size_t sercom_index)$/;"	f	namespace:lgfx::v1::samd21
initDMA	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void initDMA(void) { initDMA_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
initDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void initDMA(void) { _panel->initDMA(); }$/;"	f	class:lgfx::v1::LGFXBase
initDMA	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::initDMA(void)$/;"	f	class:lgfx::v1::Panel_Device
initDMA	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
initDMA	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
initDMA	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::initDMA(void)$/;"	f	class:lgfx::v1::Bus_SPI
initDMA	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
initDMA	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
initDMA	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
initDMA	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
initDMA	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
initDMA	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
initDMA	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_I2C
initDMA	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
initDMA	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
initDMA	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void initDMA(void) {}$/;"	f	class:lgfx::v1::Bus_SPI
initFrameBuffer	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  bool Panel_CVBS::initFrameBuffer(size_t width, size_t height, uint8_t use_psram)$/;"	f	class:lgfx::v1::Panel_CVBS
initFrameBuffer	src/lgfx/v1/platforms/esp32s3/Panel_RGB.cpp	/^  bool Panel_RGB::initFrameBuffer(uint_fast16_t w, uint_fast16_t h, color_depth_t depth, uint8_t chunk_lines, uint8_t use_psram)$/;"	f	class:lgfx::v1::Panel_RGB
initPWM	src/lgfx/v0/platforms/esp32_common.cpp	/^  void initPWM(int_fast8_t pin, uint32_t pwm_ch, uint32_t freq, uint8_t duty)$/;"	f	namespace:lgfx::v0
initPWM	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void initPWM(uint32_t , uint32_t , uint32_t , uint8_t = 0) {$/;"	f	namespace:lgfx::v0
initPanel	src/lgfx/v0/LGFX_Device.hpp	/^    void initPanel(bool use_reset = true)$/;"	f	class:lgfx::v0::LGFX_Device
initTouch	src/lgfx/v0/LGFX_Device.hpp	/^    void initTouch(void)$/;"	f	class:lgfx::v0::LGFX_Device
initTouch	src/lgfx/v1/panel/Panel_Device.cpp	/^  bool Panel_Device::initTouch(void)$/;"	f	class:lgfx::v1::Panel_Device
init_cs	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::init_cs(void)$/;"	f	class:lgfx::v1::Panel_Device
init_font_file	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    void init_font_file(void)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
init_font_file	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void init_font_file(Tfs &fs)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
init_font_file	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void init_font_file(void)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
init_impl	src/lgfx/v0/LGFX_Device.hpp	/^    virtual void init_impl(bool use_reset = true)$/;"	f	class:lgfx::v0::LGFX_Device
init_impl	src/lgfx/v1/LGFXBase.cpp	/^  bool LGFX_Device::init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX_Device
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_FrameBuffer.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_OpenCV.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_impl	src/lgfx/v1_autodetect/LGFX_AutoDetect_sdl.hpp	/^    bool init_impl(bool use_reset, bool use_clear)$/;"	f	class:lgfx::v1::LGFX
init_rst	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::init_rst(void)$/;"	f	class:lgfx::v1::Panel_Device
init_without_reset	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    void init_without_reset(void)$/;"	f	class:lgfx::v0::LGFX
init_without_reset	src/lgfx/v1/LGFXBase.hpp	/^    bool init_without_reset(void) { return init_impl(false, false); };$/;"	f	class:lgfx::v1::LGFX_Device
initialize_fm6124	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        initialize_fm6124,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::initialize_mode_t
initialize_mode	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        initialize_mode_t initialize_mode;$/;"	m	union:lgfx::v1::Bus_HUB75::config_t::__anon242
initialize_mode_t	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      enum initialize_mode_t$/;"	g	struct:lgfx::v1::Bus_HUB75::config_t
initialize_none	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        initialize_none,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::initialize_mode_t
initialized	src/lgfx/v1/platforms/esp32/common.cpp	/^      bool initialized = false;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
input	src/lgfx/v0/platforms/esp32_common.hpp	/^  , input$/;"	e	enum:lgfx::v0::pin_mode_t
input	src/lgfx/v0/platforms/samd51_common.hpp	/^  , input$/;"	e	enum:lgfx::v0::pin_mode_t
input	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/esp32/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/esp8266/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/opencv/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/rp2040/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/samd21/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/samd51/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/sdl/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/spresense/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input	src/lgfx/v1/platforms/stm32/common.hpp	/^  , input$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v0/platforms/esp32_common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v0::pin_mode_t
input_pulldown	src/lgfx/v0/platforms/samd51_common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v0::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/esp32/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/esp8266/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/opencv/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/rp2040/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/samd21/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/samd51/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/sdl/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/spresense/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pulldown	src/lgfx/v1/platforms/stm32/common.hpp	/^  , input_pulldown$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v0/platforms/esp32_common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v0::pin_mode_t
input_pullup	src/lgfx/v0/platforms/samd51_common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v0::pin_mode_t
input_pullup	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/esp32/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/esp8266/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/opencv/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/rp2040/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/samd21/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/samd51/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/sdl/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/spresense/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
input_pullup	src/lgfx/v1/platforms/stm32/common.hpp	/^  , input_pullup$/;"	e	enum:lgfx::v1::pin_mode_t
int16_t	src/lgfx/utility/lgfx_tjpgd.h	/^ typedef short			int16_t;$/;"	t
int32_t	src/lgfx/utility/lgfx_tjpgd.h	/^ typedef long			int32_t;$/;"	t
int32_t	src/lgfx/v0/lgfx_common.hpp	/^    static auto get_fp_copy_palette_affine(color_depth_t dst_depth) -> int32_t(*)(void*, int32_t, int32_t, pixelcopy_t*)$/;"	f	struct:lgfx::pixelcopy_t
int32_t	src/lgfx/v0/lgfx_common.hpp	/^    static auto get_fp_copy_rgb_affine(color_depth_t dst_depth) -> int32_t(*)(void*, int32_t, int32_t, pixelcopy_t*)$/;"	f	struct:lgfx::pixelcopy_t
int32_t	src/lgfx/v0/lgfx_common.hpp	/^    static auto get_fp_copy_rgb_affine_dst(color_depth_t src_depth) -> int32_t(*)(void*, int32_t, int32_t, pixelcopy_t*)$/;"	f	struct:lgfx::pixelcopy_t
interlace	src/lgfx/utility/lgfx_pngle.h	/^  uint8_t interlace;$/;"	m	struct:_pngle_ihdr_t
interlace_div_x	src/lgfx/utility/lgfx_pngle.c	/^static const uint8_t* interlace_div_x = &interlace_div_y[1];$/;"	v	file:
interlace_off_x	src/lgfx/utility/lgfx_pngle.c	/^static const uint8_t* interlace_off_x = &interlace_off_y[1];$/;"	v	file:
interlace_pass	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t interlace_pass;$/;"	m	struct:_pngle_t	file:
internal	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static internal_t internal;$/;"	m	namespace:lgfx::v1	file:
internal_state	src/lgfx/utility/miniz.c	/^  #define internal_state /;"	d	file:
internal_t	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  struct internal_t$/;"	s	namespace:lgfx::v1	file:
intersectsWith	src/lgfx/v0/lgfx_common.hpp	/^    bool intersectsWith(const range_rect_t& r) const { return horizon.intersectsWith(r.horizon) && vertical.intersectsWith(r.vertical); }$/;"	f	struct:lgfx::range_rect_t
intersectsWith	src/lgfx/v0/lgfx_common.hpp	/^    bool intersectsWith(const range_t& r) const { return (r.first <= last) && (first <= r.last); }$/;"	f	struct:lgfx::range_t
intersectsWith	src/lgfx/v0/lgfx_common.hpp	/^    bool intersectsWith(int32_t f, int32_t l) const { return (f <= last) && (first <= l); }$/;"	f	struct:lgfx::range_t
intersectsWith	src/lgfx/v1/misc/range.hpp	/^    bool intersectsWith(const range_t& r) const { return (r.first <= last) && (first <= r.last); }$/;"	f	struct:lgfx::v1::range_t
intersectsWith	src/lgfx/v1/misc/range.hpp	/^    bool intersectsWith(int_fast16_t f, int_fast16_t l) const { return (f <= last) && (first <= l); }$/;"	f	struct:lgfx::v1::range_t
intf	src/lgfx/utility/miniz.c	/^  typedef int intf;$/;"	t	file:
invalid_arg	src/lgfx/v1/misc/enum.hpp	/^  , invalid_arg         \/\/ 引数が範囲外等でinvalidな場合のエラー;$/;"	e	enum:lgfx::v1::error_t
invert	src/lgfx/v0/panel/PanelCommon.hpp	/^    bool invert    = false;           \/\/ panel invert$/;"	m	struct:lgfx::v0::PanelCommon
invert	src/lgfx/v1/panel/Panel_Device.hpp	/^      bool invert = false;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
invert	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^      bool invert = false;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
invert	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^      bool invert = false;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
invertDisplay	src/lgfx/v0/LGFX_Device.hpp	/^    void invertDisplay(bool i)$/;"	f	class:lgfx::v0::LGFX_Device
invertDisplay	src/lgfx/v1/LGFXBase.hpp	/^    inline void invertDisplay(bool i) { _panel->setInvert(i); }$/;"	f	class:lgfx::v1::LGFX_Device
invoke_result_t	src/lgfx/utility/result.hpp	/^      && -> detail::invoke_result_t<Fn, E&&>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
invoke_result_t	src/lgfx/utility/result.hpp	/^      const & -> detail::invoke_result_t<Fn, const E&>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
invoke_result_t	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto flat_map(Fn&& fn) && -> detail::invoke_result_t<Fn, T&&>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
invoke_result_t	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto flat_map(Fn&& fn) && -> detail::invoke_result_t<Fn>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
invoke_result_t	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto flat_map_error(Fn&& fn) && -> detail::invoke_result_t<Fn, E&&>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
invoke_result_t	src/lgfx/utility/result.hpp	/^    constexpr auto flat_map(Fn&& fn) const & -> detail::invoke_result_t<Fn, const T&>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
invoke_result_t	src/lgfx/utility/result.hpp	/^    constexpr auto flat_map(Fn&& fn) const & -> detail::invoke_result_t<Fn>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
invoke_result_t	src/lgfx/utility/result.hpp	/^    constexpr auto flat_map_error(Fn&& fn) const & -> detail::invoke_result_t<Fn, const E&>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::detail
irq	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    IRQn_Type irq[4];$/;"	m	struct:lgfx::v0::__anon274
irqn	src/lgfx/v1/platforms/samd21/common.hpp	/^      IRQn_Type irqn;$/;"	m	struct:lgfx::v1::samd21::sercom_data_t
is18bit_FRC	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      is18bit_FRC = 0x18,$/;"	m	struct:lgfx::v1::Panel_SSD1963	typeref:enum:lgfx::v1::Panel_SSD1963::
is18bit_dithering	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      is18bit_dithering = 0x10,$/;"	m	struct:lgfx::v1::Panel_SSD1963	typeref:enum:lgfx::v1::Panel_SSD1963::
is24bit	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      is24bit = 0x20,$/;"	m	struct:lgfx::v1::Panel_SSD1963	typeref:enum:lgfx::v1::Panel_SSD1963::
isAlphanumeric	src/lgfx/utility/lgfx_qrcode.c	/^static bool isAlphanumeric(const char *text, uint16_t length) {$/;"	f	file:
isBusIdleWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static bool isBusIdleWIRE(SercomI2cm *i2cm)$/;"	f	namespace:lgfx::v1::i2c
isBusOwnerWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static bool inline isBusOwnerWIRE(SercomI2cm *i2cm)$/;"	f	namespace:lgfx::v1::i2c
isBusShared	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool isBusShared(void) const { return _panel->isBusShared(); }$/;"	f	class:lgfx::v1::LGFXBase
isEPD	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline bool isEPD(void) const { return _panel != nullptr && _panel->isEPD(); }$/;"	f	class:lgfx::v0::LGFX_Device
isEPD	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual bool isEPD(void) const { return false; }$/;"	f	struct:lgfx::v0::PanelCommon
isEPD	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool isEPD(void) const { return _panel->isEpd(); }$/;"	f	class:lgfx::v1::LGFXBase
isEmbeddedMemory	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline bool isEmbeddedMemory(const void* ptr) { return (((uintptr_t)ptr & 0x3FF80000u) == 0x3FC80000u); }$/;"	f	namespace:lgfx::v1
isEmbeddedMemory	src/lgfx/v1/platforms/esp32/common.hpp	/^  static inline bool isEmbeddedMemory(const void* ptr) { return (((uintptr_t)ptr & 0x3FF80000u) == 0x3FF00000u); }$/;"	f	namespace:lgfx::v1
isEnable	src/lgfx/v1/Touch.hpp	/^    virtual bool isEnable(void) { return true; };$/;"	f	struct:lgfx::v1::ITouch
isEpd	src/lgfx/v1/Panel.hpp	/^    bool isEpd(void) const { return _epd_mode; }$/;"	f	struct:lgfx::v1::IPanel
isIPS	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^    bool isIPS = false;$/;"	m	struct:lgfx::Panel_M5Stack
isInitialized	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    inline bool isInitialized(void) const { return _block_array != nullptr; }$/;"	f	class:lgfx::v1::DividedFrameBuffer
isNumeric	src/lgfx/utility/lgfx_qrcode.c	/^static bool isNumeric(const char *text, uint16_t length) {$/;"	f	file:
isPressed	src/lgfx/v1/LGFX_Button.hpp	/^    bool isPressed(void) const { return _pressed; }$/;"	f	class:lgfx::v1::LGFX_Button
isReadable	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline bool          isReadable       (void) const { return isReadable_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
isReadable	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool isReadable(void) const { return _panel->isReadable(); }$/;"	f	class:lgfx::v1::LGFXBase
isSPI	src/lgfx/v0/touch/TouchCommon.hpp	/^    inline bool isSPI(void) const { return spi_cs >= 0; }$/;"	f	struct:lgfx::v0::TouchCommon
isSPI	src/lgfx/v1/Touch.hpp	/^    inline bool isSPI(void) const { return _cfg.pin_cs >= 0; }$/;"	f	struct:lgfx::v1::ITouch
isSPIShared	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline bool          isSPIShared      (void) const { return _spi_shared; }$/;"	f	class:lgfx::v0::LGFXBase
isSPIShared	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   bool isSPIShared(void) const { return _panel->isBusShared(); }$/;"	f	class:lgfx::v1::LGFXBase
isSRAM	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static inline bool IRAM_ATTR isSRAM(const void* ptr)$/;"	f	namespace:lgfx::v1
is_busy	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline bool is_busy()              const { return ((_spi_regs->sr & SPI_SSPSR_BSY_BITS) != 0);}$/;"	f	class:lgfx::v1::Bus_SPI
is_failure	src/lgfx/utility/result.hpp	/^  struct is_failure : std::false_type{};$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
is_failure	src/lgfx/utility/result.hpp	/^  struct is_failure<failure<E>> : std::true_type{};$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
is_master_not_idle	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline bool is_master_not_idle(volatile i2c_hw_t * i2c_regs)$/;"	f	namespace:lgfx::v1::i2c::__anon58
is_result	src/lgfx/utility/result.hpp	/^  struct is_result : std::false_type{};$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
is_result	src/lgfx/utility/result.hpp	/^  struct is_result<result<T,E>> : std::true_type{};$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
is_rx_fifo_full	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline bool is_rx_fifo_full()      const { return ((_spi_regs->sr & SPI_SSPSR_RFF_BITS)  != 0); }$/;"	f	class:lgfx::v1::Bus_SPI
is_rx_fifo_full	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline bool is_rx_fifo_full(volatile i2c_hw_t * i2c_regs)$/;"	f	namespace:lgfx::v1::i2c::__anon58
is_rx_fifo_not_empty	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline bool is_rx_fifo_not_empty() const { return ((_spi_regs->sr & SPI_SSPSR_RNE_BITS)  != 0); }$/;"	f	class:lgfx::v1::Bus_SPI
is_rx_fifo_not_empty	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline bool is_rx_fifo_not_empty(volatile i2c_hw_t * i2c_regs)$/;"	f	namespace:lgfx::v1::i2c::__anon58
is_tx_fifo_empty	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline bool is_tx_fifo_empty()     const { return ((_spi_regs->sr & SPI_SSPSR_TFE_BITS)  != 0); }$/;"	f	class:lgfx::v1::Bus_SPI
is_tx_fifo_empty	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline bool is_tx_fifo_empty(volatile i2c_hw_t * i2c_regs)$/;"	f	namespace:lgfx::v1::i2c::__anon58
is_tx_fifo_not_full	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline bool is_tx_fifo_not_full()  const { return ((_spi_regs->sr & SPI_SSPSR_TNF_BITS)  != 0); }$/;"	f	class:lgfx::v1::Bus_SPI
is_tx_fifo_not_full	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline bool is_tx_fifo_not_full(volatile i2c_hw_t * i2c_regs)$/;"	f	namespace:lgfx::v1::i2c::__anon58
isr_handle	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    intr_handle_t isr_handle = nullptr;$/;"	m	struct:lgfx::v1::internal_t	file:
jpeg_div	src/lgfx/v0/lgfx_common.hpp	/^  namespace jpeg_div$/;"	n	namespace:lgfx::v0
jpeg_div	src/lgfx/v1/misc/enum.hpp	/^  namespace jpeg_div$/;"	n	namespace:lgfx::v1
jpeg_div_t	src/lgfx/v0/lgfx_common.hpp	/^    enum jpeg_div_t$/;"	g	namespace:lgfx::v0::jpeg_div
jpeg_div_t	src/lgfx/v1/misc/enum.hpp	/^    enum jpeg_div_t$/;"	g	namespace:lgfx::v1::jpeg_div
jpg_push_image	src/lgfx/v0/LGFXBase.cpp	/^  static uint32_t jpg_push_image(void *device, void *bitmap, JRECT *rect)$/;"	f	namespace:lgfx::v0
jpg_push_image	src/lgfx/v1/LGFXBase.cpp	/^  static uint32_t jpg_push_image(void *device, void *bitmap, JRECT *rect)$/;"	f	namespace:lgfx::v1
jpg_push_image_affine	src/lgfx/v0/LGFXBase.cpp	/^  static uint32_t jpg_push_image_affine(void *device, void *bitmap, JRECT *rect)$/;"	f	namespace:lgfx::v0
jpg_push_image_affine	src/lgfx/v1/LGFXBase.cpp	/^  static uint32_t jpg_push_image_affine(void *device, void *bitmap, JRECT *rect)$/;"	f	namespace:lgfx::v1
judgement	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      virtual bool judgement(IBus* bus, int pin_cs) const$/;"	f	struct:lgfx::v1::LGFX::_detector_t
justPressed	src/lgfx/v1/LGFX_Button.hpp	/^    bool justPressed(void) const { return (_pressed && !_last_press); }$/;"	f	class:lgfx::v1::LGFX_Button
justReleased	src/lgfx/v1/LGFX_Button.hpp	/^    bool justReleased(void) const { return (!_pressed && _last_press); }$/;"	f	class:lgfx::v1::LGFX_Button
key_digests	src/lgfx/v1/platforms/esp32/common.cpp	/^     const void *key_digests[MAX_KEY_DIGESTS];$/;"	m	struct:ets_secure_boot_key_digests	file:
l	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t l;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon51
last	src/lgfx/v0/lgfx_common.hpp	/^    int32_t last;$/;"	m	struct:lgfx::range_t
last	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t  first, last; \/\/ ASCII extents$/;"	m	struct:lgfx::v0::GFXfont
last	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t  first, last; \/\/ ASCII extents$/;"	m	struct:lgfx::v1::GFXfont
last	src/lgfx/v1/misc/range.hpp	/^    int_fast16_t last;$/;"	m	struct:lgfx::v1::range_t
last_data	src/lgfx/v1/platforms/rp2040/common.cpp	/^        uint8_t last_data;$/;"	m	struct:lgfx::v1::i2c::__anon57::i2c_info_str	file:
lcd_default_isr_handler	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  IRAM_ATTR void Bus_RGB::lcd_default_isr_handler(void *args)$/;"	f	class:lgfx::v1::Bus_RGB
led_driver	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_t led_driver = led_driver_standard;$/;"	m	union:lgfx::v1::Bus_HUB75::config_t::__anon242
led_driver_FM6047	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_FM6047,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::led_driver_t
led_driver_FM6124	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_FM6124,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::led_driver_t
led_driver_ICN2038	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_ICN2038, \/\/ MBI5038 clone ?$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::led_driver_t
led_driver_ICN2053	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_ICN2053, \/\/ MBI5153 clone ?$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::led_driver_t
led_driver_MBI5038	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_MBI5038,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::led_driver_t
led_driver_MBI5153	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_MBI5153,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::led_driver_t
led_driver_standard	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        led_driver_standard,$/;"	e	enum:lgfx::v1::Bus_HUB75::config_t::led_driver_t
led_driver_t	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      enum led_driver_t$/;"	g	struct:lgfx::v1::Bus_HUB75::config_t
left	src/lgfx/utility/lgfx_tjpgd.h	/^	uint32_t left, right, top, bottom;$/;"	m	struct:__anon552
left	src/lgfx/v0/lgfx_common.hpp	/^        int32_t left;$/;"	m	struct:lgfx::range_rect_t::__anon507::__anon508
left	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t left;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon50
leftside_index	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t leftside_index;$/;"	m	struct:lgfx::v1::internal_t	file:
len32	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t len32;           \/\/ 24$/;"	m	struct:lgfx::v1::asm_work_t	file:
len_dummy_read_pixel	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t len_dummy_read_pixel = 8;$/;"	m	struct:lgfx::v0::PanelCommon
len_dummy_read_rddid	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t len_dummy_read_rddid = 1;$/;"	m	struct:lgfx::v0::PanelCommon
len_setwindow	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint8_t len_setwindow = 32;$/;"	m	struct:lgfx::v0::PanelCommon
length	src/lgfx/v0/LGFX_Device.hpp	/^      uint32_t length = 0;$/;"	m	struct:lgfx::v0::LGFX_Device::_dmabufs_t
length	src/lgfx/v1/misc/range.hpp	/^    int_fast16_t length(void) const { return last - first + 1; }$/;"	f	struct:lgfx::v1::range_t
lfgx_qoi_writer_func	src/lgfx/utility/lgfx_qoi.h	/^typedef int (*lfgx_qoi_writer_func)(uint8_t* buf, size_t buf_len);$/;"	t
lgfx	src/LGFX_TFT_eSPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/boards.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/LGFXBase.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/LGFXBase.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/LGFX_Device.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/LGFX_Sprite.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/lgfx_common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/lgfx_filesystem_support.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/lgfx_fonts.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/lgfx_fonts.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/PanelCommon.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_HX8357.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_IT8951.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/panel/Panel_IT8951.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ST7735.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ST7789.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/panel/Panel_ST7796.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/platforms/esp32_common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/platforms/esp32_common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/platforms/samd51_common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/platforms/samd51_common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/touch/TouchCommon.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/touch/Touch_GT911.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/touch/Touch_GT911.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v0/touch/Touch_XPT2046.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/Bus.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/LGFXBase.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/LGFXBase.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/LGFX_Button.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/LGFX_Button.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/LGFX_Sprite.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/LGFX_Sprite.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/Light.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/Panel.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/Touch.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/lgfx_filesystem_support.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/lgfx_fonts.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/lgfx_fonts.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/DataWrapper.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/DividedFrameBuffer.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/SpriteBuffer.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/misc/SpriteBuffer.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/bitmap.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/colortype.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/common_function.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/misc/common_function.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/enum.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/pixelcopy.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/misc/pixelcopy.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/misc/range.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_Device.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_Device.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_GC9A01.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_HUB75.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_HUB75.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_IT8951.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_IT8951.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_LCD.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_LCD.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_NT35510.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_NT35510.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_R61529.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_RA8875.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_RA8875.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_RM68120.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_RM68120.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_S6D04K1.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ST7735.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ST7789.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/panel/Panel_ST7796.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/arduino_default/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/arduino_default/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32/Light_PWM.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp32s3/Panel_RGB.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/esp8266/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/esp8266/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/framebuffer/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/framebuffer/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/opencv/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/opencv/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/rp2040/Light_PWM.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/rp2040/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/rp2040/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/samd21/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/samd21/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/samd51/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/samd51/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/sdl/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/sdl/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/spresense/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/spresense/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/platforms/stm32/common.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/platforms/stm32/common.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/touch/Touch_GT911.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/touch/Touch_GT911.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/touch/Touch_NS2009.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/touch/Touch_NS2009.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/touch/Touch_TT21xxx.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/touch/Touch_TT21xxx.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1/touch/Touch_XPT2046.cpp	/^namespace lgfx$/;"	n	file:
lgfx	src/lgfx/v1/touch/Touch_XPT2046.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_FrameBuffer.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_OpenCV.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^namespace lgfx$/;"	n
lgfx	src/lgfx/v1_autodetect/LGFX_AutoDetect_sdl.hpp	/^namespace lgfx$/;"	n
lgfxJapanGothicP_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_12 = { lgfx_font_japan_gothic_p_12 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_12 = { lgfx_font_japan_gothic_p_12 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_16 = { lgfx_font_japan_gothic_p_16 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_16 = { lgfx_font_japan_gothic_p_16 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_20	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_20 = { lgfx_font_japan_gothic_p_20 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_20	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_20 = { lgfx_font_japan_gothic_p_20 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_24 = { lgfx_font_japan_gothic_p_24 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_24 = { lgfx_font_japan_gothic_p_24 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_28	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_28 = { lgfx_font_japan_gothic_p_28 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_28	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_28 = { lgfx_font_japan_gothic_p_28 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_32	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_32 = { lgfx_font_japan_gothic_p_32 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_32	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_32 = { lgfx_font_japan_gothic_p_32 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_36	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_36 = { lgfx_font_japan_gothic_p_36 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_36	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_36 = { lgfx_font_japan_gothic_p_36 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_40	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_40 = { lgfx_font_japan_gothic_p_40 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_40	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_40 = { lgfx_font_japan_gothic_p_40 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothicP_8	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothicP_8  = { lgfx_font_japan_gothic_p_8  };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothicP_8	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothicP_8  = { lgfx_font_japan_gothic_p_8  };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_12  = { lgfx_font_japan_gothic_12   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_12  = { lgfx_font_japan_gothic_12   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_16  = { lgfx_font_japan_gothic_16   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_16  = { lgfx_font_japan_gothic_16   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_20	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_20  = { lgfx_font_japan_gothic_20   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_20	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_20  = { lgfx_font_japan_gothic_20   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_24  = { lgfx_font_japan_gothic_24   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_24  = { lgfx_font_japan_gothic_24   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_28	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_28  = { lgfx_font_japan_gothic_28   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_28	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_28  = { lgfx_font_japan_gothic_28   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_32	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_32  = { lgfx_font_japan_gothic_32   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_32	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_32  = { lgfx_font_japan_gothic_32   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_36	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_36  = { lgfx_font_japan_gothic_36   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_36	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_36  = { lgfx_font_japan_gothic_36   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_40	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_40  = { lgfx_font_japan_gothic_40   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_40	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_40  = { lgfx_font_japan_gothic_40   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanGothic_8	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanGothic_8   = { lgfx_font_japan_gothic_8    };$/;"	m	namespace:fonts::v0	file:
lgfxJapanGothic_8	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanGothic_8   = { lgfx_font_japan_gothic_8    };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_12 = { lgfx_font_japan_mincho_p_12 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_12 = { lgfx_font_japan_mincho_p_12 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_16 = { lgfx_font_japan_mincho_p_16 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_16 = { lgfx_font_japan_mincho_p_16 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_20	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_20 = { lgfx_font_japan_mincho_p_20 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_20	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_20 = { lgfx_font_japan_mincho_p_20 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_24 = { lgfx_font_japan_mincho_p_24 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_24 = { lgfx_font_japan_mincho_p_24 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_28	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_28 = { lgfx_font_japan_mincho_p_28 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_28	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_28 = { lgfx_font_japan_mincho_p_28 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_32	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_32 = { lgfx_font_japan_mincho_p_32 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_32	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_32 = { lgfx_font_japan_mincho_p_32 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_36	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_36 = { lgfx_font_japan_mincho_p_36 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_36	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_36 = { lgfx_font_japan_mincho_p_36 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_40	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_40 = { lgfx_font_japan_mincho_p_40 };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_40	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_40 = { lgfx_font_japan_mincho_p_40 };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMinchoP_8	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMinchoP_8  = { lgfx_font_japan_mincho_p_8  };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMinchoP_8	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMinchoP_8  = { lgfx_font_japan_mincho_p_8  };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_12	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_12  = { lgfx_font_japan_mincho_12   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_12	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_12  = { lgfx_font_japan_mincho_12   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_16	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_16  = { lgfx_font_japan_mincho_16   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_16	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_16  = { lgfx_font_japan_mincho_16   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_20	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_20  = { lgfx_font_japan_mincho_20   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_20	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_20  = { lgfx_font_japan_mincho_20   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_24	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_24  = { lgfx_font_japan_mincho_24   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_24	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_24  = { lgfx_font_japan_mincho_24   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_28	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_28  = { lgfx_font_japan_mincho_28   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_28	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_28  = { lgfx_font_japan_mincho_28   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_32	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_32  = { lgfx_font_japan_mincho_32   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_32	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_32  = { lgfx_font_japan_mincho_32   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_36	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_36  = { lgfx_font_japan_mincho_36   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_36	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_36  = { lgfx_font_japan_mincho_36   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_40	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_40  = { lgfx_font_japan_mincho_40   };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_40	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_40  = { lgfx_font_japan_mincho_40   };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJapanMincho_8	src/lgfx/v0/lgfx_fonts.cpp	/^  const U8g2font lgfxJapanMincho_8   = { lgfx_font_japan_mincho_8    };$/;"	m	namespace:fonts::v0	file:
lgfxJapanMincho_8	src/lgfx/v1/lgfx_fonts.cpp	/^    const U8g2font lgfxJapanMincho_8   = { lgfx_font_japan_mincho_8    };$/;"	m	namespace:lgfx::v1::fonts	file:
lgfxJdec	src/lgfx/utility/lgfx_tjpgd.h	/^struct lgfxJdec {$/;"	s
lgfxJdec	src/lgfx/utility/lgfx_tjpgd.h	/^typedef struct lgfxJdec lgfxJdec;$/;"	t	typeref:struct:lgfxJdec
lgfxPinMode	src/lgfx/v0/platforms/esp32_common.cpp	/^  void lgfxPinMode(int_fast8_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v0
lgfxPinMode	src/lgfx/v0/platforms/samd51_common.cpp	/^  void lgfxPinMode(uint32_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v0
lgfxPinMode	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/esp32/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/esp8266/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static void lgfxPinMode(int_fast16_t pin, pin_mode_t mode) {}$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/opencv/common.hpp	/^  __attribute__((unused)) static void lgfxPinMode(int_fast16_t pin, pin_mode_t mode) {}$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/rp2040/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/samd21/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/samd51/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/sdl/common.cpp	/^  void lgfxPinMode(int_fast16_t pin, pin_mode_t mode) {}$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/spresense/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfxPinMode	src/lgfx/v1/platforms/stm32/common.hpp	/^  inline void lgfxPinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
lgfx_efont_cn_10	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_10[158417] = $/;"	v
lgfx_efont_cn_10_b	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_10_b[159551] = $/;"	v
lgfx_efont_cn_10_bi	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_10_bi[174904] = $/;"	v
lgfx_efont_cn_10_i	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_10_i[170008] = $/;"	v
lgfx_efont_cn_12	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_12[213444] = $/;"	v
lgfx_efont_cn_12_b	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_12_b[211952] = $/;"	v
lgfx_efont_cn_12_bi	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_12_bi[235895] = $/;"	v
lgfx_efont_cn_12_i	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_12_i[232931] = $/;"	v
lgfx_efont_cn_14	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_14[262233] = $/;"	v
lgfx_efont_cn_14_b	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_14_b[267590] = $/;"	v
lgfx_efont_cn_14_bi	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_14_bi[293038] = $/;"	v
lgfx_efont_cn_14_i	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_14_i[288018] = $/;"	v
lgfx_efont_cn_16	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_16[318199] = $/;"	v
lgfx_efont_cn_16_b	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_16_b[320446] = $/;"	v
lgfx_efont_cn_16_bi	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_16_bi[357031] = $/;"	v
lgfx_efont_cn_16_i	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_16_i[346363] = $/;"	v
lgfx_efont_cn_24	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_24[550804] = $/;"	v
lgfx_efont_cn_24_b	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_24_b[564226] = $/;"	v
lgfx_efont_cn_24_bi	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_24_bi[601696] = $/;"	v
lgfx_efont_cn_24_i	src/lgfx/Fonts/efont/lgfx_efont_cn.c	/^PROGMEM const uint8_t lgfx_efont_cn_24_i[576487] = $/;"	v
lgfx_efont_ja_10	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_10[225686] = $/;"	v
lgfx_efont_ja_10_b	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_10_b[228860] = $/;"	v
lgfx_efont_ja_10_bi	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_10_bi[252574] = $/;"	v
lgfx_efont_ja_10_i	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_10_i[247765] = $/;"	v
lgfx_efont_ja_12	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_12[308265] = $/;"	v
lgfx_efont_ja_12_b	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_12_b[308338] = $/;"	v
lgfx_efont_ja_12_bi	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_12_bi[342343] = $/;"	v
lgfx_efont_ja_12_i	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_12_i[342422] = $/;"	v
lgfx_efont_ja_14	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_14[383747] = $/;"	v
lgfx_efont_ja_14_b	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_14_b[394509] = $/;"	v
lgfx_efont_ja_14_bi	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_14_bi[436983] = $/;"	v
lgfx_efont_ja_14_i	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_14_i[425832] = $/;"	v
lgfx_efont_ja_16	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_16[467155] = $/;"	v
lgfx_efont_ja_16_b	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_16_b[476657] = $/;"	v
lgfx_efont_ja_16_bi	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_16_bi[530475] = $/;"	v
lgfx_efont_ja_16_i	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_16_i[517470] = $/;"	v
lgfx_efont_ja_24	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_24[743624] = $/;"	v
lgfx_efont_ja_24_b	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_24_b[751620] = $/;"	v
lgfx_efont_ja_24_bi	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_24_bi[812886] = $/;"	v
lgfx_efont_ja_24_i	src/lgfx/Fonts/efont/lgfx_efont_ja.c	/^PROGMEM const uint8_t lgfx_efont_ja_24_i[780763] = $/;"	v
lgfx_efont_kr_10	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_10[165524] = $/;"	v
lgfx_efont_kr_10_b	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_10_b[168439] = $/;"	v
lgfx_efont_kr_10_bi	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_10_bi[184146] = $/;"	v
lgfx_efont_kr_10_i	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_10_i[179543] = $/;"	v
lgfx_efont_kr_12	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_12[226287] = $/;"	v
lgfx_efont_kr_12_b	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_12_b[225373] = $/;"	v
lgfx_efont_kr_12_bi	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_12_bi[247805] = $/;"	v
lgfx_efont_kr_12_i	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_12_i[245051] = $/;"	v
lgfx_efont_kr_14	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_14[265704] = $/;"	v
lgfx_efont_kr_14_b	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_14_b[272713] = $/;"	v
lgfx_efont_kr_14_bi	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_14_bi[296011] = $/;"	v
lgfx_efont_kr_14_i	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_14_i[290613] = $/;"	v
lgfx_efont_kr_16	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_16[324224] = $/;"	v
lgfx_efont_kr_16_b	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_16_b[329916] = $/;"	v
lgfx_efont_kr_16_bi	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_16_bi[360384] = $/;"	v
lgfx_efont_kr_16_i	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_16_i[350959] = $/;"	v
lgfx_efont_kr_24	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_24[554193] = $/;"	v
lgfx_efont_kr_24_b	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_24_b[574904] = $/;"	v
lgfx_efont_kr_24_bi	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_24_bi[606680] = $/;"	v
lgfx_efont_kr_24_i	src/lgfx/Fonts/efont/lgfx_efont_kr.c	/^PROGMEM const uint8_t lgfx_efont_kr_24_i[581031] = $/;"	v
lgfx_efont_tw_10	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_10[279667] = $/;"	v
lgfx_efont_tw_10_b	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_10_b[280633] = $/;"	v
lgfx_efont_tw_10_bi	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_10_bi[308772] = $/;"	v
lgfx_efont_tw_10_i	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_10_i[303374] = $/;"	v
lgfx_efont_tw_12	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_12[385663] = $/;"	v
lgfx_efont_tw_12_b	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_12_b[379272] = $/;"	v
lgfx_efont_tw_12_bi	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_12_bi[421545] = $/;"	v
lgfx_efont_tw_12_i	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_12_i[422674] = $/;"	v
lgfx_efont_tw_14	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_14[482503] = $/;"	v
lgfx_efont_tw_14_b	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_14_b[485263] = $/;"	v
lgfx_efont_tw_14_bi	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_14_bi[539812] = $/;"	v
lgfx_efont_tw_14_i	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_14_i[531358] = $/;"	v
lgfx_efont_tw_16	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_16[592105] = $/;"	v
lgfx_efont_tw_16_b	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_16_b[597841] = $/;"	v
lgfx_efont_tw_16_bi	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_16_bi[666793] = $/;"	v
lgfx_efont_tw_16_i	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_16_i[656029] = $/;"	v
lgfx_efont_tw_24	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_24[1099129] = $/;"	v
lgfx_efont_tw_24_b	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_24_b[1104434] = $/;"	v
lgfx_efont_tw_24_bi	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_24_bi[1200908] = $/;"	v
lgfx_efont_tw_24_i	src/lgfx/Fonts/efont/lgfx_efont_tw.c	/^PROGMEM const uint8_t lgfx_efont_tw_24_i[1154653] = $/;"	v
lgfx_font_japan_gothic_12	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_12[108977] = $/;"	v
lgfx_font_japan_gothic_16	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_16[159271] = $/;"	v
lgfx_font_japan_gothic_20	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_20[217424] = $/;"	v
lgfx_font_japan_gothic_24	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_24[278669] = $/;"	v
lgfx_font_japan_gothic_28	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_28[335355] = $/;"	v
lgfx_font_japan_gothic_32	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_32[396778] = $/;"	v
lgfx_font_japan_gothic_36	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_36[466993] = $/;"	v
lgfx_font_japan_gothic_40	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_40[534168] = $/;"	v
lgfx_font_japan_gothic_8	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_8[69135] = $/;"	v
lgfx_font_japan_gothic_p_12	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_12[108154] = $/;"	v
lgfx_font_japan_gothic_p_16	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_16[161079] = $/;"	v
lgfx_font_japan_gothic_p_20	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_20[219504] = $/;"	v
lgfx_font_japan_gothic_p_24	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_24[276933] = $/;"	v
lgfx_font_japan_gothic_p_28	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_28[337028] = $/;"	v
lgfx_font_japan_gothic_p_32	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_32[398291] = $/;"	v
lgfx_font_japan_gothic_p_36	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_36[465779] = $/;"	v
lgfx_font_japan_gothic_p_40	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_40[535570] = $/;"	v
lgfx_font_japan_gothic_p_8	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_gothic_p_8[66290] = $/;"	v
lgfx_font_japan_mincho_12	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_12[115975] = $/;"	v
lgfx_font_japan_mincho_16	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_16[167032] = $/;"	v
lgfx_font_japan_mincho_20	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_20[224645] = $/;"	v
lgfx_font_japan_mincho_24	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_24[290295] = $/;"	v
lgfx_font_japan_mincho_28	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_28[345045] = $/;"	v
lgfx_font_japan_mincho_32	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_32[402594] = $/;"	v
lgfx_font_japan_mincho_36	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_36[470213] = $/;"	v
lgfx_font_japan_mincho_40	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_40[545361] = $/;"	v
lgfx_font_japan_mincho_8	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_8[72228] = $/;"	v
lgfx_font_japan_mincho_p_12	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_12[110736] = $/;"	v
lgfx_font_japan_mincho_p_16	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_16[163059] = $/;"	v
lgfx_font_japan_mincho_p_20	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_20[221992] = $/;"	v
lgfx_font_japan_mincho_p_24	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_24[284616] = $/;"	v
lgfx_font_japan_mincho_p_28	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_28[338556] = $/;"	v
lgfx_font_japan_mincho_p_32	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_32[396757] = $/;"	v
lgfx_font_japan_mincho_p_36	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_36[460233] = $/;"	v
lgfx_font_japan_mincho_p_40	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_40[537573] = $/;"	v
lgfx_font_japan_mincho_p_8	src/lgfx/Fonts/IPA/lgfx_font_japan.c	/^PROGMEM const uint8_t lgfx_font_japan_mincho_p_8[65160] = $/;"	v
lgfx_gpio_disable_pulls	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__ ((always_inline)) inline void lgfx_gpio_disable_pulls(int_fast16_t pin)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_get	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__ ((always_inline)) inline bool lgfx_gpio_get(int_fast16_t pin)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_init	src/lgfx/v1/platforms/rp2040/common.cpp	/^    bool lgfx_gpio_init(int_fast16_t pin)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_mode	src/lgfx/v1/platforms/rp2040/common.cpp	/^    bool lgfx_gpio_mode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_pull_down	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__ ((always_inline)) inline void lgfx_gpio_pull_down(int_fast16_t pin)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_pull_up	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__ ((always_inline)) inline void lgfx_gpio_pull_up(int_fast16_t pin)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_put	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__ ((always_inline)) inline void lgfx_gpio_put(int_fast16_t pin, bool value)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_set_dir	src/lgfx/v1/platforms/rp2040/common.cpp	/^    bool lgfx_gpio_set_dir(int_fast16_t pin, bool out)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_set_function	src/lgfx/v1/platforms/rp2040/common.cpp	/^    bool lgfx_gpio_set_function(int_fast16_t pin, enum gpio_function fn)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_gpio_set_pulls	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__ ((always_inline)) inline void lgfx_gpio_set_pulls(int_fast16_t pin, bool up, bool down)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_i2c_deinit	src/lgfx/v1/platforms/rp2040/common.cpp	/^      void lgfx_i2c_deinit(volatile i2c_hw_t * i2c_regs)$/;"	f	namespace:lgfx::v1::i2c::__anon58
lgfx_i2c_init	src/lgfx/v1/platforms/rp2040/common.cpp	/^      bool lgfx_i2c_init(volatile i2c_hw_t * i2c_regs, uint32_t baudrate)$/;"	f	namespace:lgfx::v1::i2c::__anon58
lgfx_i2c_reset	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void lgfx_i2c_reset(volatile i2c_hw_t *i2c_regs) {$/;"	f	namespace:lgfx::v1::i2c::__anon58
lgfx_i2c_set_baudrate	src/lgfx/v1/platforms/rp2040/common.cpp	/^      bool lgfx_i2c_set_baudrate(volatile i2c_hw_t * i2c_regs, uint32_t baudrate)$/;"	f	namespace:lgfx::v1::i2c::__anon58
lgfx_i2c_unreset	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void lgfx_i2c_unreset(volatile i2c_hw_t *i2c_regs) {$/;"	f	namespace:lgfx::v1::i2c::__anon58
lgfx_jd_decomp	src/lgfx/utility/lgfx_tjpgd.c	/^JRESULT lgfx_jd_decomp ($/;"	f
lgfx_jd_prepare	src/lgfx/utility/lgfx_tjpgd.c	/^JRESULT lgfx_jd_prepare ($/;"	f
lgfx_pngle_decomp	src/lgfx/utility/lgfx_pngle.c	/^int lgfx_pngle_decomp(pngle_t *pngle, lgfx_pngle_draw_callback_t draw_cb)$/;"	f
lgfx_pngle_destroy	src/lgfx/utility/lgfx_pngle.c	/^void lgfx_pngle_destroy(pngle_t *pngle)$/;"	f
lgfx_pngle_draw_callback_t	src/lgfx/utility/lgfx_pngle.h	/^typedef void (*lgfx_pngle_draw_callback_t)(void *user_data, uint32_t x, uint32_t y, uint_fast8_t div_x, size_t len, const uint8_t* argb);$/;"	t
lgfx_pngle_get_height	src/lgfx/utility/lgfx_pngle.c	/^uint32_t lgfx_pngle_get_height(pngle_t *pngle)$/;"	f
lgfx_pngle_get_ihdr	src/lgfx/utility/lgfx_pngle.c	/^pngle_ihdr_t *lgfx_pngle_get_ihdr(pngle_t *pngle)$/;"	f
lgfx_pngle_get_width	src/lgfx/utility/lgfx_pngle.c	/^uint32_t lgfx_pngle_get_width(pngle_t *pngle)$/;"	f
lgfx_pngle_new	src/lgfx/utility/lgfx_pngle.c	/^pngle_t *lgfx_pngle_new()$/;"	f
lgfx_pngle_prepare	src/lgfx/utility/lgfx_pngle.c	/^int lgfx_pngle_prepare(pngle_t *pngle, lgfx_pngle_read_callback_t read_cb, void* user_data)$/;"	f
lgfx_pngle_read_callback_t	src/lgfx/utility/lgfx_pngle.h	/^typedef uint32_t (*lgfx_pngle_read_callback_t)(void *user_data, uint8_t *buf, uint32_t len);$/;"	t
lgfx_qoi_decomp	src/lgfx/utility/lgfx_qoi.c	/^int lgfx_qoi_decomp(qoi_t *qoi, lgfx_qoi_draw_callback_t draw_cb)$/;"	f
lgfx_qoi_destroy	src/lgfx/utility/lgfx_qoi.c	/^void lgfx_qoi_destroy(qoi_t *qoi)$/;"	f
lgfx_qoi_draw_callback_t	src/lgfx/utility/lgfx_qoi.h	/^typedef void (*lgfx_qoi_draw_callback_t)(void *user_data, uint32_t x, uint32_t y, uint_fast8_t div_x, size_t len, const uint8_t* argb);$/;"	t
lgfx_qoi_encode	src/lgfx/utility/lgfx_qoi.c	/^size_t lgfx_qoi_encode(const void *lineBuffer, const qoi_desc_t *desc, int flip, lgfx_qoi_encoder_get_row_func get_row, lfgx_qoi_writer_func write_bytes, void *qoienc)$/;"	f
lgfx_qoi_encoder_get_row_func	src/lgfx/utility/lgfx_qoi.h	/^typedef uint8_t *(*lgfx_qoi_encoder_get_row_func)(uint8_t *lineBuffer, int flip, int w, int h, int y, void *qoienc);$/;"	t
lgfx_qoi_encoder_write_cb	src/lgfx/utility/lgfx_qoi.c	/^size_t lgfx_qoi_encoder_write_cb(const void *lineBuffer, uint32_t bufferLen, int w, int h, int num_chans, int flip, lgfx_qoi_encoder_get_row_func get_row, lfgx_qoi_writer_func write_bytes, void *qoienc)$/;"	f
lgfx_qoi_encoder_write_fb	src/lgfx/utility/lgfx_qoi.c	/^void *lgfx_qoi_encoder_write_fb(const void *lineBuffer, int w, int h, int num_chans, size_t *out_len, int flip, lgfx_qoi_encoder_get_row_func get_row, void *qoienc)$/;"	f
lgfx_qoi_get_height	src/lgfx/utility/lgfx_qoi.c	/^uint32_t lgfx_qoi_get_height(qoi_t *qoi)$/;"	f
lgfx_qoi_get_width	src/lgfx/utility/lgfx_qoi.c	/^uint32_t lgfx_qoi_get_width(qoi_t *qoi)$/;"	f
lgfx_qoi_new	src/lgfx/utility/lgfx_qoi.c	/^qoi_t *lgfx_qoi_new()$/;"	f
lgfx_qoi_prepare	src/lgfx/utility/lgfx_qoi.c	/^int lgfx_qoi_prepare(qoi_t *qoi, lgfx_qoi_read_callback_t read_cb, void* user_data)$/;"	f
lgfx_qoi_read_callback_t	src/lgfx/utility/lgfx_qoi.h	/^typedef uint32_t (*lgfx_qoi_read_callback_t)(void *user_data, uint8_t *buf, uint32_t len);$/;"	t
lgfx_qoi_reset	src/lgfx/utility/lgfx_qoi.c	/^void lgfx_qoi_reset(qoi_t *qoi)$/;"	f
lgfx_qrcode_getBufferSize	src/lgfx/utility/lgfx_qrcode.c	/^uint16_t lgfx_qrcode_getBufferSize(uint8_t version) {$/;"	f
lgfx_qrcode_getModule	src/lgfx/utility/lgfx_qrcode.c	/^bool lgfx_qrcode_getModule(QRCode *qrcode, uint_fast8_t x, uint_fast8_t y) {$/;"	f
lgfx_qrcode_initBytes	src/lgfx/utility/lgfx_qrcode.c	/^int8_t lgfx_qrcode_initBytes(QRCode *qrcode, uint8_t *modules, uint8_t version, uint8_t ecc, uint8_t *data, uint16_t length) {$/;"	f
lgfx_qrcode_initText	src/lgfx/utility/lgfx_qrcode.c	/^int8_t lgfx_qrcode_initText(QRCode *qrcode, uint8_t *modules, uint8_t version, uint8_t ecc, const char *data) {$/;"	f
lgfx_reset_block	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__((always_inline)) inline void lgfx_reset_block(uint32_t bits)$/;"	f	namespace:lgfx::v1::__anon54
lgfx_spi_deinit	src/lgfx/v1/platforms/rp2040/common.cpp	/^      void lgfx_spi_deinit(volatile spi_hw_t * spi_regs)$/;"	f	namespace:lgfx::v1::spi::__anon56
lgfx_spi_init	src/lgfx/v1/platforms/rp2040/common.cpp	/^      bool lgfx_spi_init(volatile spi_hw_t * spi_regs)$/;"	f	namespace:lgfx::v1::spi::__anon56
lgfx_spi_reset	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void lgfx_spi_reset(volatile spi_hw_t * spi_regs)$/;"	f	namespace:lgfx::v1::spi::__anon56
lgfx_spi_set_baudrate	src/lgfx/v1/platforms/rp2040/common.cpp	/^      bool lgfx_spi_set_baudrate(volatile spi_hw_t * spi_regs, uint32_t baudrate)$/;"	f	namespace:lgfx::v1::spi::__anon56
lgfx_spi_set_format	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void lgfx_spi_set_format(volatile spi_hw_t * spi_regs, uint data_bits, spi_cpol_t cpol, spi_cpha_t cpha, [[maybe_unused]]spi_order_t order)$/;"	f	namespace:lgfx::v1::spi::__anon56
lgfx_spi_set_frequency	src/lgfx/v1/platforms/rp2040/common.cpp	/^    bool lgfx_spi_set_frequency(int spi_port, uint32_t baudrate)$/;"	f	namespace:lgfx::v1::spi
lgfx_spi_set_pin_function	src/lgfx/v1/platforms/rp2040/common.cpp	/^      bool lgfx_spi_set_pin_function(int mosi, int miso, int sclk)$/;"	f	namespace:lgfx::v1::spi::__anon56
lgfx_spi_unreset	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void lgfx_spi_unreset(volatile spi_hw_t * spi_regs)$/;"	f	namespace:lgfx::v1::spi::__anon56
lgfx_unreset_block_wait	src/lgfx/v1/platforms/rp2040/common.cpp	/^    __attribute__((always_inline)) inline void lgfx_unreset_block_wait(uint32_t bits)$/;"	f	namespace:lgfx::v1::__anon54
light	src/lgfx/v1/LGFXBase.hpp	/^    inline ILight* light(void) const { return _panel ? panel()->light() : nullptr; }$/;"	f	class:lgfx::v1::LGFX_Device
light	src/lgfx/v1/panel/Panel_Device.hpp	/^    ILight* light(void) const { return _light; }$/;"	f	struct:lgfx::v1::Panel_Device
light	src/lgfx/v1/panel/Panel_Device.hpp	/^    void light(ILight* light) { _light = light; }$/;"	f	struct:lgfx::v1::Panel_Device
lineBuffer	src/lgfx/v0/LGFXBase.cpp	/^    bgra8888_t* lineBuffer;$/;"	m	struct:lgfx::v0::png_file_decoder_t	file:
lineBuffer	src/lgfx/v1/LGFXBase.cpp	/^    bgra8888_t* lineBuffer;$/;"	m	struct:lgfx::v1::png_file_decoder_t	file:
lines	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t** lines = nullptr;        \/\/ フレームバッファ配列ポインタ;$/;"	m	struct:lgfx::v1::internal_t	file:
linesPerChunk	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static constexpr uint8_t linesPerChunk = 8;$/;"	m	namespace:lgfx::v1	file:
loadFont	src/lgfx/v0/LGFXBase.cpp	/^    bool LGFXBase::loadFont(const uint8_t* array)$/;"	f	class:lgfx::v0::LGFXBase
loadFont	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    bool loadFont(const char *path)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    void loadFont(const char *path, fs::FS &fs)$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v0/lgfx_fonts.cpp	/^  bool VLWfont::loadFont(DataWrapper* data) {$/;"	f	class:lgfx::v0::VLWfont
loadFont	src/lgfx/v1/LGFXBase.cpp	/^  bool LGFXBase::loadFont(const uint8_t* array)$/;"	f	class:lgfx::v1::LGFXBase
loadFont	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void loadFont(LGFX_SDFAT_TYPE &fs, const char *path)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void loadFont(StorageClass &fs, const char *path)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void loadFont(const char *path, LGFX_SDFAT_TYPE &fs)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void loadFont(const char *path, StorageClass &fs)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void loadFont(const char *path, fs::FS &fs$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    void loadFont(fs::FS &fs, const char *path)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
loadFont	src/lgfx/v1/lgfx_fonts.cpp	/^  bool VLWfont::loadFont(DataWrapper* data) {$/;"	f	class:lgfx::v1::VLWfont
load_bmp_header	src/lgfx/v0/lgfx_common.hpp	/^    bool load_bmp_header(DataWrapper* data)$/;"	f	struct:lgfx::bitmap_header_t
load_bmp_header	src/lgfx/v1/misc/bitmap.hpp	/^    bool load_bmp_header(DataWrapper* data)$/;"	f	struct:lgfx::v1::bitmap_header_t
load_bmp_rle4	src/lgfx/v0/lgfx_common.hpp	/^    static bool load_bmp_rle4(DataWrapper* data, uint8_t* linebuf, uint_fast16_t width)$/;"	f	struct:lgfx::bitmap_header_t
load_bmp_rle4	src/lgfx/v1/misc/bitmap.hpp	/^    static bool load_bmp_rle4(DataWrapper* data, uint8_t* linebuf, uint_fast16_t width)$/;"	f	struct:lgfx::v1::bitmap_header_t
load_bmp_rle8	src/lgfx/v0/lgfx_common.hpp	/^    static bool load_bmp_rle8(DataWrapper* data, uint8_t* linebuf, uint_fast16_t width)$/;"	f	struct:lgfx::bitmap_header_t
load_bmp_rle8	src/lgfx/v1/misc/bitmap.hpp	/^    static bool load_bmp_rle8(DataWrapper* data, uint8_t* linebuf, uint_fast16_t width)$/;"	f	struct:lgfx::v1::bitmap_header_t
load_font	src/lgfx/v1/LGFXBase.cpp	/^  bool LGFXBase::load_font(lgfx::DataWrapper* data)$/;"	f	class:lgfx::v1::LGFXBase
load_font_with_path	src/lgfx/v1/lgfx_filesystem_support.hpp	/^    bool load_font_with_path(const char *path)$/;"	f	class:lgfx::v1::LGFX_FILESYSTEM_Support
load_reg	src/lgfx/v1/platforms/esp32/common.cpp	/^      void load_reg(i2c_dev_t* dev)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
load_reg	src/lgfx/v1/platforms/samd51/common.cpp	/^      void load_reg(SercomI2cm* dev)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
logical_height	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint16_t logical_height = 0;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::config_resolution_t
logical_width	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint16_t logical_width  = 0;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::config_resolution_t
loop	examples/Test/build_test/main/main.cpp	/^void loop(void)$/;"	f
loop	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^void loop()$/;"	f
loop	examples_for_PC/CMake_OpenCV/user_code.cpp	/^void loop()$/;"	f
loop	examples_for_PC/CMake_SDL/user_code.cpp	/^void loop()$/;"	f
loopTask	examples/Test/build_test/main/main.cpp	/^  void loopTask(void*)$/;"	f
loopThread	examples_for_PC/CMake_FrameBuffer/LGFX_LINUX_FB.cpp	/^void loopThread(void)$/;"	f
loopThread	examples_for_PC/CMake_OpenCV/LGFXOpenCV.cpp	/^void loopThread(void)$/;"	f
loopThread	examples_for_PC/CMake_SDL/LGFX_SDL.cpp	/^static void loopThread(void)$/;"	f	file:
lps	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint16_t lps = 15;$/;"	m	struct:lgfx::v1::timing_params_t
lpspp	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint8_t  lpspp = 0;$/;"	m	struct:lgfx::v1::timing_params_t
lx	src/lgfx/v0/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v0::paint_point_t	file:
lx	src/lgfx/v1/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v1::paint_point_t	file:
lz_buf	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t lz_buf[TINFL_LZ_DICT_SIZE]; \/\/ 32768 bytes$/;"	m	struct:_pngle_t	file:
m5stack	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^  namespace m5stack$/;"	n	namespace:lgfx::v1
m5stack	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^  namespace m5stack$/;"	n	namespace:lgfx::v1
m5stack	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^  namespace m5stack$/;"	n	namespace:lgfx::v1
m_adler32	src/lgfx/utility/miniz.c	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon536	file:
m_archive_size	src/lgfx/utility/miniz.c	/^  mz_uint64 m_archive_size;$/;"	m	struct:mz_zip_archive_tag	file:
m_bit_buf	src/lgfx/utility/miniz.c	/^  tinfl_bit_buf_t m_bit_buf;$/;"	m	struct:tinfl_decompressor_tag	file:
m_bit_buffer	src/lgfx/utility/miniz.c	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon536	file:
m_bit_flag	src/lgfx/utility/miniz.c	/^  mz_uint16 m_bit_flag;$/;"	m	struct:__anon522	file:
m_bits_in	src/lgfx/utility/miniz.c	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon536	file:
m_block_index	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_capacity	src/lgfx/utility/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon540	file:
m_capacity	src/lgfx/utility/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon542	file:
m_central_dir	src/lgfx/utility/miniz.c	/^  mz_zip_array m_central_dir;$/;"	m	struct:mz_zip_internal_state_tag	file:
m_central_dir_offsets	src/lgfx/utility/miniz.c	/^  mz_zip_array m_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	file:
m_central_dir_ofs	src/lgfx/utility/miniz.c	/^  mz_uint32 m_central_dir_ofs;$/;"	m	struct:__anon522	file:
m_central_directory_file_ofs	src/lgfx/utility/miniz.c	/^  mz_uint64 m_central_directory_file_ofs;$/;"	m	struct:mz_zip_archive_tag	file:
m_check_adler32	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_code_size	src/lgfx/utility/miniz.c	/^  mz_uint8 m_code_size[TINFL_MAX_HUFF_SYMBOLS_0];$/;"	m	struct:__anon528	file:
m_comment	src/lgfx/utility/miniz.c	/^  char m_comment[MZ_ZIP_MAX_ARCHIVE_FILE_COMMENT_SIZE];$/;"	m	struct:__anon522	file:
m_comment_size	src/lgfx/utility/miniz.c	/^  mz_uint32 m_comment_size;$/;"	m	struct:__anon522	file:
m_comp_size	src/lgfx/utility/miniz.c	/^  mz_uint64 m_comp_size;$/;"	m	struct:__anon522	file:
m_comp_size	src/lgfx/utility/miniz.c	/^  mz_uint64 m_comp_size;$/;"	m	struct:__anon543	file:
m_counter	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_crc32	src/lgfx/utility/miniz.c	/^  mz_uint32 m_crc32;$/;"	m	struct:__anon522	file:
m_cur_archive_file_ofs	src/lgfx/utility/miniz.c	/^  mz_uint64 m_cur_archive_file_ofs;$/;"	m	struct:__anon543	file:
m_decomp	src/lgfx/utility/miniz.c	/^  tinfl_decompressor m_decomp;$/;"	m	struct:__anon537	file:
m_dict	src/lgfx/utility/miniz.c	/^  mz_uint8 m_dict[TDEFL_LZ_DICT_SIZE + TDEFL_MAX_MATCH_LEN - 1];$/;"	m	struct:__anon536	file:
m_dict	src/lgfx/utility/miniz.c	/^  mz_uint8 m_dict[TINFL_LZ_DICT_SIZE];$/;"	m	struct:__anon537	file:
m_dict_avail	src/lgfx/utility/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon537	file:
m_dict_ofs	src/lgfx/utility/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon537	file:
m_dict_size	src/lgfx/utility/miniz.c	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon536	file:
m_dist	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_dist_from_out_buf_start	src/lgfx/utility/miniz.c	/^  size_t m_dist_from_out_buf_start;$/;"	m	struct:tinfl_decompressor_tag	file:
m_element_size	src/lgfx/utility/miniz.c	/^  mz_uint m_element_size;$/;"	m	struct:__anon542	file:
m_empty	src/lgfx/utility/result.hpp	/^        unit m_empty;$/;"	m	union:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union::__anon546
m_empty	src/lgfx/utility/result.hpp	/^        unit m_empty;$/;"	m	union:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union::__anon547
m_error	src/lgfx/utility/result.hpp	/^        underlying_error_type m_error;$/;"	m	union:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union::__anon546
m_error	src/lgfx/utility/result.hpp	/^        underlying_error_type m_error;$/;"	m	union:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union::__anon547
m_error	src/lgfx/utility/result.hpp	/^    E m_error;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::bad_result_access
m_expandable	src/lgfx/utility/miniz.c	/^  mz_bool m_expandable;$/;"	m	struct:__anon540	file:
m_external_attr	src/lgfx/utility/miniz.c	/^  mz_uint32 m_external_attr;$/;"	m	struct:__anon522	file:
m_failure	src/lgfx/utility/result.hpp	/^    underlying_type m_failure;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::failure
m_file_index	src/lgfx/utility/miniz.c	/^  mz_uint32 m_file_index;$/;"	m	struct:__anon522	file:
m_file_offset_alignment	src/lgfx/utility/miniz.c	/^  mz_uint m_file_offset_alignment;$/;"	m	struct:mz_zip_archive_tag	file:
m_filename	src/lgfx/utility/miniz.c	/^  char m_filename[MZ_ZIP_MAX_ARCHIVE_FILENAME_SIZE];$/;"	m	struct:__anon522	file:
m_final	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_finished	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_first_call	src/lgfx/utility/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon537	file:
m_flags	src/lgfx/utility/miniz.c	/^  mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon536	file:
m_flush	src/lgfx/utility/miniz.c	/^  tdefl_flush m_flush;$/;"	m	struct:__anon536	file:
m_greedy_parsing	src/lgfx/utility/miniz.c	/^  int m_greedy_parsing;$/;"	m	struct:__anon536	file:
m_has_flushed	src/lgfx/utility/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon537	file:
m_has_value	src/lgfx/utility/result.hpp	/^      bool m_has_value;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union
m_hash	src/lgfx/utility/miniz.c	/^  mz_uint16 m_hash[TDEFL_LZ_HASH_SIZE];$/;"	m	struct:__anon536	file:
m_huff_code_sizes	src/lgfx/utility/miniz.c	/^  mz_uint8 m_huff_code_sizes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon536	file:
m_huff_codes	src/lgfx/utility/miniz.c	/^  mz_uint16 m_huff_codes[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon536	file:
m_huff_count	src/lgfx/utility/miniz.c	/^  mz_uint16 m_huff_count[TDEFL_MAX_HUFF_TABLES][TDEFL_MAX_HUFF_SYMBOLS];$/;"	m	struct:__anon536	file:
m_internal_attr	src/lgfx/utility/miniz.c	/^  mz_uint16 m_internal_attr;$/;"	m	struct:__anon522	file:
m_key	src/lgfx/utility/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	m	struct:__anon538	file:
m_last_status	src/lgfx/utility/miniz.c	/^  tinfl_status m_last_status;$/;"	m	struct:__anon537	file:
m_len_codes	src/lgfx/utility/miniz.c	/^  mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + 137];$/;"	m	struct:tinfl_decompressor_tag	file:
m_local_header_ofs	src/lgfx/utility/miniz.c	/^  mz_uint64 m_local_header_ofs;$/;"	m	struct:__anon522	file:
m_look_up	src/lgfx/utility/miniz.c	/^  mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon528	file:
m_lookahead_pos	src/lgfx/utility/miniz.c	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon536	file:
m_lookahead_size	src/lgfx/utility/miniz.c	/^  mz_uint m_adler32, m_lookahead_pos, m_lookahead_size, m_dict_size;$/;"	m	struct:__anon536	file:
m_lz_code_buf	src/lgfx/utility/miniz.c	/^  mz_uint8 m_lz_code_buf[TDEFL_LZ_CODE_BUF_SIZE];$/;"	m	struct:__anon536	file:
m_lz_code_buf_dict_pos	src/lgfx/utility/miniz.c	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon536	file:
m_max_probes	src/lgfx/utility/miniz.c	/^  mz_uint m_flags, m_max_probes[2];$/;"	m	struct:__anon536	file:
m_mem_capacity	src/lgfx/utility/miniz.c	/^  size_t m_mem_capacity;$/;"	m	struct:mz_zip_internal_state_tag	file:
m_mem_size	src/lgfx/utility/miniz.c	/^  size_t m_mem_size;$/;"	m	struct:mz_zip_internal_state_tag	file:
m_method	src/lgfx/utility/miniz.c	/^  mz_uint16 m_method;$/;"	m	struct:__anon522	file:
m_next	src/lgfx/utility/miniz.c	/^  mz_uint16 m_next[TDEFL_LZ_DICT_SIZE];$/;"	m	struct:__anon536	file:
m_num_bits	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_num_extra	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_num_flags_left	src/lgfx/utility/miniz.c	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon536	file:
m_out_buf_ofs	src/lgfx/utility/miniz.c	/^  size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon536	file:
m_output_buf	src/lgfx/utility/miniz.c	/^  mz_uint8 m_output_buf[TDEFL_OUT_BUF_SIZE];$/;"	m	struct:__anon536	file:
m_output_flush_ofs	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_output_flush_remaining	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_p	src/lgfx/utility/miniz.c	/^  void *m_p;$/;"	m	struct:__anon542	file:
m_pAlloc	src/lgfx/utility/miniz.c	/^  mz_alloc_func m_pAlloc;$/;"	m	struct:mz_zip_archive_tag	file:
m_pAlloc_opaque	src/lgfx/utility/miniz.c	/^  void *m_pAlloc_opaque;$/;"	m	struct:mz_zip_archive_tag	file:
m_pBuf	src/lgfx/utility/miniz.c	/^  mz_uint8 *m_pBuf;$/;"	m	struct:__anon540	file:
m_pFile	src/lgfx/utility/miniz.c	/^  MZ_FILE *m_pFile;$/;"	m	struct:mz_zip_internal_state_tag	file:
m_pFree	src/lgfx/utility/miniz.c	/^  mz_free_func m_pFree;$/;"	m	struct:mz_zip_archive_tag	file:
m_pIO_opaque	src/lgfx/utility/miniz.c	/^  void *m_pIO_opaque;$/;"	m	struct:mz_zip_archive_tag	file:
m_pIn_buf	src/lgfx/utility/miniz.c	/^  const void *m_pIn_buf;$/;"	m	struct:__anon536	file:
m_pIn_buf_size	src/lgfx/utility/miniz.c	/^  size_t *m_pIn_buf_size, *m_pOut_buf_size;$/;"	m	struct:__anon536	file:
m_pLZ_code_buf	src/lgfx/utility/miniz.c	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon536	file:
m_pLZ_flags	src/lgfx/utility/miniz.c	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon536	file:
m_pMem	src/lgfx/utility/miniz.c	/^  void *m_pMem;$/;"	m	struct:mz_zip_internal_state_tag	file:
m_pOut_buf	src/lgfx/utility/miniz.c	/^  void *m_pOut_buf;$/;"	m	struct:__anon536	file:
m_pOut_buf_size	src/lgfx/utility/miniz.c	/^  size_t *m_pIn_buf_size, *m_pOut_buf_size;$/;"	m	struct:__anon536	file:
m_pOutput_buf	src/lgfx/utility/miniz.c	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon536	file:
m_pOutput_buf_end	src/lgfx/utility/miniz.c	/^  mz_uint8 *m_pLZ_code_buf, *m_pLZ_flags, *m_pOutput_buf, *m_pOutput_buf_end;$/;"	m	struct:__anon536	file:
m_pPut_buf_func	src/lgfx/utility/miniz.c	/^  tdefl_put_buf_func_ptr m_pPut_buf_func;$/;"	m	struct:__anon536	file:
m_pPut_buf_user	src/lgfx/utility/miniz.c	/^  void *m_pPut_buf_user;$/;"	m	struct:__anon536	file:
m_pRead	src/lgfx/utility/miniz.c	/^  mz_file_read_func m_pRead;$/;"	m	struct:mz_zip_archive_tag	file:
m_pRealloc	src/lgfx/utility/miniz.c	/^  mz_realloc_func m_pRealloc;$/;"	m	struct:mz_zip_archive_tag	file:
m_pSrc	src/lgfx/utility/miniz.c	/^  const mz_uint8 *m_pSrc;$/;"	m	struct:__anon536	file:
m_pState	src/lgfx/utility/miniz.c	/^  mz_zip_internal_state *m_pState;$/;"	m	struct:mz_zip_archive_tag	file:
m_pWrite	src/lgfx/utility/miniz.c	/^  mz_file_write_func m_pWrite;$/;"	m	struct:mz_zip_archive_tag	file:
m_pZip	src/lgfx/utility/miniz.c	/^  mz_zip_archive *m_pZip;$/;"	m	struct:__anon543	file:
m_prev_return_status	src/lgfx/utility/miniz.c	/^  tdefl_status m_prev_return_status;$/;"	m	struct:__anon536	file:
m_raw_header	src/lgfx/utility/miniz.c	/^  mz_uint8 m_raw_header[4], m_len_codes[TINFL_MAX_HUFF_SYMBOLS_0 + TINFL_MAX_HUFF_SYMBOLS_1 + 137];$/;"	m	struct:tinfl_decompressor_tag	file:
m_saved_lit	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_saved_match_dist	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_saved_match_len	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_size	src/lgfx/utility/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon540	file:
m_size	src/lgfx/utility/miniz.c	/^  size_t m_size, m_capacity;$/;"	m	struct:__anon542	file:
m_sorted_central_dir_offsets	src/lgfx/utility/miniz.c	/^  mz_zip_array m_sorted_central_dir_offsets;$/;"	m	struct:mz_zip_internal_state_tag	file:
m_src_buf_left	src/lgfx/utility/miniz.c	/^  size_t m_src_buf_left, m_out_buf_ofs;$/;"	m	struct:__anon536	file:
m_state	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_storage	src/lgfx/utility/result.hpp	/^    detail::result_storage<T,E> m_storage;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
m_storage	src/lgfx/utility/result.hpp	/^    detail::result_storage<detail::unit,E> m_storage;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
m_storage	src/lgfx/utility/result.hpp	/^  : m_storage(in_place)$/;"	f
m_sym_index	src/lgfx/utility/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	m	struct:__anon538	file:
m_table_sizes	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_tables	src/lgfx/utility/miniz.c	/^  tinfl_huff_table m_tables[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_time	src/lgfx/utility/miniz.c	/^  time_t m_time;$/;"	m	struct:__anon522	file:
m_total_files	src/lgfx/utility/miniz.c	/^  mz_uint m_total_files;$/;"	m	struct:mz_zip_archive_tag	file:
m_total_lz_bytes	src/lgfx/utility/miniz.c	/^  mz_uint m_num_flags_left, m_total_lz_bytes, m_lz_code_buf_dict_pos, m_bits_in, m_bit_buffer;$/;"	m	struct:__anon536	file:
m_tree	src/lgfx/utility/miniz.c	/^  mz_int16 m_look_up[TINFL_FAST_LOOKUP_SIZE], m_tree[TINFL_MAX_HUFF_SYMBOLS_0 * 2];$/;"	m	struct:__anon528	file:
m_type	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_uncomp_size	src/lgfx/utility/miniz.c	/^  mz_uint64 m_uncomp_size;$/;"	m	struct:__anon522	file:
m_value	src/lgfx/utility/result.hpp	/^        underlying_value_type m_value;$/;"	m	union:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union::__anon546
m_value	src/lgfx/utility/result.hpp	/^        underlying_value_type m_value;$/;"	m	union:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union::__anon547
m_version_made_by	src/lgfx/utility/miniz.c	/^  mz_uint16 m_version_made_by;$/;"	m	struct:__anon522	file:
m_version_needed	src/lgfx/utility/miniz.c	/^  mz_uint16 m_version_needed;$/;"	m	struct:__anon522	file:
m_wants_to_finish	src/lgfx/utility/miniz.c	/^  mz_uint m_saved_match_dist, m_saved_match_len, m_saved_lit, m_output_flush_ofs, m_output_flush_remaining, m_finished, m_block_index, m_wants_to_finish;$/;"	m	struct:__anon536	file:
m_window_bits	src/lgfx/utility/miniz.c	/^  mz_uint m_dict_ofs, m_dict_avail, m_first_call, m_has_flushed; int m_window_bits;$/;"	m	struct:__anon537	file:
m_z_adler32	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_zhdr0	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_zhdr1	src/lgfx/utility/miniz.c	/^  mz_uint32 m_state, m_num_bits, m_zhdr0, m_zhdr1, m_z_adler32, m_final, m_type, m_check_adler32, m_dist, m_counter, m_num_extra, m_table_sizes[TINFL_MAX_HUFF_TABLES];$/;"	m	struct:tinfl_decompressor_tag	file:
m_zip_mode	src/lgfx/utility/miniz.c	/^  mz_zip_mode m_zip_mode;$/;"	m	struct:mz_zip_archive_tag	file:
mad_t	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^    enum mad_t$/;"	g	struct:lgfx::v0::PanelIlitekCommon
mad_t	src/lgfx/v1/panel/Panel_LCD.hpp	/^    enum mad_t$/;"	g	struct:lgfx::v1::Panel_LCD
magni	src/lgfx/utility/lgfx_pngle.c	/^  uint32_t magni;$/;"	m	struct:_pngle_t	file:
main	examples_for_PC/CMake_FrameBuffer/LGFX_LINUX_FB.cpp	/^int main(int, char**)$/;"	f
main	examples_for_PC/CMake_OpenCV/LGFXOpenCV.cpp	/^int main(int, char**)$/;"	f
main	examples_for_PC/CMake_SDL/LGFX_SDL.cpp	/^int main(int, char**)$/;"	f
make_invert_affine32	src/lgfx/v0/LGFXBase.cpp	/^  static bool make_invert_affine32(int32_t* __restrict result, const float* __restrict matrix)$/;"	f	namespace:lgfx::v0
make_invert_affine32	src/lgfx/v1/LGFXBase.cpp	/^  static bool make_invert_affine32(int32_t* __restrict result, const float* __restrict matrix)$/;"	f	namespace:lgfx::v1
make_pixels	src/lgfx/utility/lgfx_pngle.c	/^static void make_pixels(pngle_t *pngle, const uint8_t* buf, uint32_t* rgbbuf, size_t len)$/;"	f	file:
make_rotation_matrix	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::make_rotation_matrix(float* result, float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y)$/;"	f	class:lgfx::v0::LGFXBase
make_rotation_matrix	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::make_rotation_matrix(float* result, float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y)$/;"	f	class:lgfx::v1::LGFXBase
mask	src/lgfx/utility/lgfx_qrcode.h	/^    uint8_t mask;$/;"	m	struct:QRCode
mask3bit	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t mask3bit;        \/\/ 36$/;"	m	struct:lgfx::v1::asm_work_t	file:
max	src/lgfx/internal/algorithm.h	/^  #undef max$/;"	d
max	src/lgfx/internal/limits.h	/^  #undef max$/;"	d
max	src/lgfx/utility/lgfx_qrcode.c	/^#undef max$/;"	d	file:
max	src/lgfx/utility/lgfx_qrcode.c	/^static int max(int a, int b) {$/;"	f	file:
max	src/lgfx/v0/LGFX_Sprite.hpp	/^#undef max$/;"	d
max	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^#undef max$/;"	d
max	src/lgfx/v1/LGFXBase.cpp	/^#undef max$/;"	d	file:
max	src/lgfx/v1/LGFX_Sprite.cpp	/^#undef max$/;"	d	file:
max	src/lgfx/v1/lgfx_fonts.cpp	/^#undef max$/;"	d	file:
max	src/lgfx/v1/panel/Panel_IT8951.cpp	/^#undef max$/;"	d	file:
max	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^#undef max$/;"	d	file:
max	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^#undef max$/;"	d	file:
maxAscent	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t maxAscent;  \/\/ Maximum ascent found in font$/;"	m	struct:lgfx::v0::VLWfont
maxAscent	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t maxAscent;  \/\/ Maximum ascent found in font$/;"	m	struct:lgfx::v1::VLWfont
maxBrightness	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    uint8_t maxBrightness = 255;$/;"	m	struct:lgfx::Panel_WioTerminal
maxDescent	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t maxDescent; \/\/ Maximum descent found in font$/;"	m	struct:lgfx::v0::VLWfont
maxDescent	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t maxDescent; \/\/ Maximum descent found in font$/;"	m	struct:lgfx::v1::VLWfont
maxHeight	src/lgfx/v0/LGFXBase.cpp	/^    int32_t maxHeight;$/;"	m	struct:lgfx::v0::image_info_t	file:
maxHeight	src/lgfx/v1/LGFXBase.cpp	/^    int32_t maxHeight;$/;"	m	struct:lgfx::v1::image_info_t	file:
maxWidth	src/lgfx/v0/LGFXBase.cpp	/^    int32_t maxWidth;$/;"	m	struct:lgfx::v0::image_info_t	file:
maxWidth	src/lgfx/v1/LGFXBase.cpp	/^    int32_t maxWidth;$/;"	m	struct:lgfx::v1::image_info_t	file:
max_char_height	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t max_char_height(void) const { return _font[10]; } \/* overall height, NOT ascent. Instead ascent = max_char_height + y_offset *\/$/;"	f	struct:lgfx::v0::U8g2font
max_char_height	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t max_char_height(void) const { return pgm_read_byte(&_font[10]); } \/* overall height, NOT ascent. Instead ascent = max_char_height + y_offset *\/$/;"	f	struct:lgfx::v1::U8g2font
max_char_width	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t max_char_width (void) const { return _font[ 9]; }$/;"	f	struct:lgfx::v0::U8g2font
max_char_width	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t max_char_width (void) const { return pgm_read_byte(&_font[ 9]); }$/;"	f	struct:lgfx::v1::U8g2font
max_touch_points	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^      max_touch_points = 5$/;"	e	enum:lgfx::v1::Touch_FT5x06::__anon262
max_touch_points	src/lgfx/v1/touch/Touch_GT911.hpp	/^      max_touch_points = 5$/;"	e	enum:lgfx::v1::Touch_GT911::__anon263
mblen	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) int	mblen(const char*, size_t) { return 0; }$/;"	f
mbstowcs	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) size_t mbstowcs(wchar_t*, const char*, size_t) { return 0; }$/;"	f
mbtowc	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) int	mbtowc(wchar_t*, const char*, size_t) { return 0; }$/;"	f
mcu_load	src/lgfx/utility/lgfx_tjpgd.c	/^static JRESULT mcu_load ($/;"	f	file:
mcu_output	src/lgfx/utility/lgfx_tjpgd.c	/^static JRESULT mcu_output ($/;"	f	file:
mcubuf	src/lgfx/utility/lgfx_tjpgd.h	/^	int16_t* mcubuf;			\/* Working buffer for the MCU *\/$/;"	m	struct:lgfxJdec
memcmp_P	src/lgfx/utility/pgmspace.h	/^ static inline int memcmp_P(const void* __restrict dst, const void* __restrict src, size_t len) { return memcmp(dst, src, len); }$/;"	f
memcpy_P	src/lgfx/utility/pgmspace.h	/^ static inline void* memcpy_P(void* __restrict dst, const void* __restrict src, size_t len) { return memcpy(dst, src, len); }$/;"	f
memory_height	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t memory_height = 240; \/\/ height of driver VRAM$/;"	m	struct:lgfx::v0::PanelCommon
memory_height	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint16_t memory_height = 240;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
memory_height	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t memory_height;$/;"	m	struct:lgfx::v1::internal_t	file:
memory_width	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t memory_width  = 240; \/\/ width of driver VRAM$/;"	m	struct:lgfx::v0::PanelCommon
memory_width	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint16_t memory_width = 240;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
memset_multi	src/lgfx/v0/LGFX_Sprite.hpp	/^    static void memset_multi(uint8_t* buf, uint32_t c, size_t size, size_t length)$/;"	f	class:lgfx::v0::LGFX_Sprite
memset_multi	src/lgfx/v1/misc/common_function.cpp	/^  void memset_multi(uint8_t* buf, uint32_t c, size_t size, size_t length)$/;"	f	namespace:lgfx::v1
memset_multi	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  static void memset_multi(uint8_t* buf, uint32_t c, size_t size, size_t length)$/;"	f	namespace:lgfx::v1
memset_multi	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  static void memset_multi(uint8_t* buf, uint32_t c, size_t size, size_t length)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v0/platforms/esp32_common.hpp	/^  __attribute__ ((unused)) static inline unsigned long micros(void) { return (unsigned long) (esp_timer_get_time()); }$/;"	f
micros	src/lgfx/v0/platforms/esp32_common.hpp	/^  inline unsigned long micros(void) { return ::micros(); }$/;"	f	namespace:lgfx::v0
micros	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v0
micros	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/esp32/common.hpp	/^  __attribute__ ((unused)) static inline unsigned long micros(void) { return (unsigned long) (esp_timer_get_time()); }$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/framebuffer/common.cpp	/^  unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/opencv/common.cpp	/^  unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/sdl/common.cpp	/^  unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v1
micros	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline unsigned long micros(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v0/platforms/esp32_common.hpp	/^  __attribute__ ((unused)) static inline unsigned long millis(void) { return (unsigned long) (esp_timer_get_time() \/ 1000ULL); }$/;"	f
millis	src/lgfx/v0/platforms/esp32_common.hpp	/^  inline unsigned long millis(void) { return ::millis(); }$/;"	f	namespace:lgfx::v0
millis	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v0
millis	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/esp32/common.hpp	/^  __attribute__ ((unused)) static inline unsigned long millis(void) { return (unsigned long) (esp_timer_get_time() \/ 1000ULL); }$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/esp8266/common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/framebuffer/common.cpp	/^  unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/opencv/common.cpp	/^  unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/rp2040/common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/samd21/common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/samd51/common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/sdl/common.cpp	/^  unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/spresense/common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v1
millis	src/lgfx/v1/platforms/stm32/common.hpp	/^  static inline unsigned long millis(void)$/;"	f	namespace:lgfx::v1
min	src/lgfx/internal/algorithm.h	/^  #undef min$/;"	d
min	src/lgfx/internal/limits.h	/^  #undef min$/;"	d
min	src/lgfx/v0/LGFX_Sprite.hpp	/^#undef min$/;"	d
min	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^#undef min$/;"	d
min	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^#undef min$/;"	d
min	src/lgfx/v1/LGFXBase.cpp	/^#undef min$/;"	d	file:
min	src/lgfx/v1/LGFX_Sprite.cpp	/^#undef min$/;"	d	file:
min	src/lgfx/v1/lgfx_fonts.cpp	/^#undef min$/;"	d	file:
min	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^#undef min$/;"	d	file:
min	src/lgfx/v1/panel/Panel_IT8951.cpp	/^#undef min$/;"	d	file:
min	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^#undef min$/;"	d	file:
min	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^#undef min$/;"	d	file:
misakiUTF16FontData_h	examples/HowToUse/4_unicode_fonts/arduino_misaki/misakiUTF16FontData.h	/^#define misakiUTF16FontData_h$/;"	d
miso_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^        const uint8_t *miso_pinlist;$/;"	m	struct:lgfx::v1::spi::__anon55::spi_pinlist_str	file:
mix_value	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t mix_value;       \/\/ 40$/;"	m	struct:lgfx::v1::asm_work_t	file:
mixdata	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t* mixdata;        \/\/ 16$/;"	m	struct:lgfx::v1::asm_work_t	file:
mode	src/lgfx/utility/lgfx_qrcode.h	/^    uint8_t mode;$/;"	m	struct:QRCode
mode_mismatch	src/lgfx/v1/misc/enum.hpp	/^  , mode_mismatch       \/\/ I2C通信が書込みモード時に読込みを指示するなど不一致な操作を行った場合のエラー;$/;"	e	enum:lgfx::v1::error_t
modules	src/lgfx/utility/lgfx_qrcode.h	/^    uint8_t *modules;$/;"	m	struct:QRCode
monitor	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    monitor_t monitor;$/;"	m	struct:lgfx::v1::Panel_sdl
monitor_t	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^  struct monitor_t$/;"	s	namespace:lgfx::v1
mosi_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^        const uint8_t *mosi_pinlist;$/;"	m	struct:lgfx::v1::spi::__anon55::spi_pinlist_str	file:
msg	src/lgfx/utility/miniz.c	/^  char *msg;                        \/\/ error msg (unused)$/;"	m	struct:mz_stream_s	file:
msx	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast8_t msx, msy;		\/* MCU size in unit of block (width, height) *\/$/;"	m	struct:lgfxJdec
msy	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast8_t msx, msy;		\/* MCU size in unit of block (width, height) *\/$/;"	m	struct:lgfxJdec
mz_adler32	src/lgfx/utility/miniz.c	/^mz_ulong mz_adler32(mz_ulong adler, const unsigned char *ptr, size_t buf_len)$/;"	f
mz_alloc_func	src/lgfx/utility/miniz.c	/^typedef void *(*mz_alloc_func)(void *opaque, size_t items, size_t size);$/;"	t	file:
mz_bitmasks	src/lgfx/utility/miniz.c	/^static const mz_uint mz_bitmasks[17] = { 0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F, 0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF, 0x07FF, 0x0FFF, 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF };$/;"	v	file:
mz_bool	src/lgfx/utility/miniz.c	/^typedef int mz_bool;$/;"	t	file:
mz_compress	src/lgfx/utility/miniz.c	/^int mz_compress(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)$/;"	f
mz_compress2	src/lgfx/utility/miniz.c	/^int mz_compress2(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len, int level)$/;"	f
mz_compressBound	src/lgfx/utility/miniz.c	/^mz_ulong mz_compressBound(mz_ulong source_len)$/;"	f
mz_crc32	src/lgfx/utility/miniz.c	/^mz_ulong mz_crc32(mz_ulong crc, const mz_uint8 *ptr, size_t buf_len)$/;"	f
mz_deflate	src/lgfx/utility/miniz.c	/^int mz_deflate(mz_streamp pStream, int flush)$/;"	f
mz_deflateBound	src/lgfx/utility/miniz.c	/^mz_ulong mz_deflateBound(mz_streamp pStream, mz_ulong source_len)$/;"	f
mz_deflateEnd	src/lgfx/utility/miniz.c	/^int mz_deflateEnd(mz_streamp pStream)$/;"	f
mz_deflateInit	src/lgfx/utility/miniz.c	/^int mz_deflateInit(mz_streamp pStream, int level)$/;"	f
mz_deflateInit2	src/lgfx/utility/miniz.c	/^int mz_deflateInit2(mz_streamp pStream, int level, int method, int window_bits, int mem_level, int strategy)$/;"	f
mz_deflateReset	src/lgfx/utility/miniz.c	/^int mz_deflateReset(mz_streamp pStream)$/;"	f
mz_error	src/lgfx/utility/miniz.c	/^const char *mz_error(int err)$/;"	f
mz_file_read_func	src/lgfx/utility/miniz.c	/^typedef size_t (*mz_file_read_func)(void *pOpaque, mz_uint64 file_ofs, void *pBuf, size_t n);$/;"	t	file:
mz_file_write_func	src/lgfx/utility/miniz.c	/^typedef size_t (*mz_file_write_func)(void *pOpaque, mz_uint64 file_ofs, const void *pBuf, size_t n);$/;"	t	file:
mz_fopen	src/lgfx/utility/miniz.c	/^    static FILE *mz_fopen(const char *pFilename, const char *pMode)$/;"	f	file:
mz_free	src/lgfx/utility/miniz.c	/^void mz_free(void *p)$/;"	f
mz_free_func	src/lgfx/utility/miniz.c	/^typedef void (*mz_free_func)(void *opaque, void *address);$/;"	t	file:
mz_freopen	src/lgfx/utility/miniz.c	/^    static FILE *mz_freopen(const char *pPath, const char *pMode, FILE *pStream)$/;"	f	file:
mz_inflate	src/lgfx/utility/miniz.c	/^int mz_inflate(mz_streamp pStream, int flush)$/;"	f
mz_inflateEnd	src/lgfx/utility/miniz.c	/^int mz_inflateEnd(mz_streamp pStream)$/;"	f
mz_inflateInit	src/lgfx/utility/miniz.c	/^int mz_inflateInit(mz_streamp pStream)$/;"	f
mz_inflateInit2	src/lgfx/utility/miniz.c	/^int mz_inflateInit2(mz_streamp pStream, int window_bits)$/;"	f
mz_int16	src/lgfx/utility/miniz.c	/^typedef signed short mz_int16;$/;"	t	file:
mz_int64	src/lgfx/utility/miniz.c	/^typedef long long mz_int64;$/;"	t	file:
mz_realloc_func	src/lgfx/utility/miniz.c	/^typedef void *(*mz_realloc_func)(void *opaque, void *address, size_t items, size_t size);$/;"	t	file:
mz_stream	src/lgfx/utility/miniz.c	/^} mz_stream;$/;"	t	typeref:struct:mz_stream_s	file:
mz_stream_s	src/lgfx/utility/miniz.c	/^typedef struct mz_stream_s$/;"	s	file:
mz_streamp	src/lgfx/utility/miniz.c	/^typedef mz_stream *mz_streamp;$/;"	t	file:
mz_uint	src/lgfx/utility/miniz.c	/^typedef unsigned int mz_uint;$/;"	t	file:
mz_uint16	src/lgfx/utility/miniz.c	/^typedef unsigned short mz_uint16;$/;"	t	file:
mz_uint32	src/lgfx/utility/miniz.c	/^typedef unsigned int mz_uint32;$/;"	t	file:
mz_uint64	src/lgfx/utility/miniz.c	/^typedef unsigned long long mz_uint64;$/;"	t	file:
mz_uint8	src/lgfx/utility/miniz.c	/^typedef unsigned char mz_uint8;$/;"	t	file:
mz_ulong	src/lgfx/utility/miniz.c	/^typedef unsigned long mz_ulong;$/;"	t	file:
mz_uncompress	src/lgfx/utility/miniz.c	/^int mz_uncompress(unsigned char *pDest, mz_ulong *pDest_len, const unsigned char *pSource, mz_ulong source_len)$/;"	f
mz_validate_uint16	src/lgfx/utility/miniz.c	/^typedef unsigned char mz_validate_uint16[sizeof(mz_uint16)==2 ? 1 : -1];$/;"	t	file:
mz_validate_uint32	src/lgfx/utility/miniz.c	/^typedef unsigned char mz_validate_uint32[sizeof(mz_uint32)==4 ? 1 : -1];$/;"	t	file:
mz_validate_uint64	src/lgfx/utility/miniz.c	/^typedef unsigned char mz_validate_uint64[sizeof(mz_uint64)==8 ? 1 : -1];$/;"	t	file:
mz_version	src/lgfx/utility/miniz.c	/^const char *mz_version(void)$/;"	f
mz_write_le16	src/lgfx/utility/miniz.c	/^static void mz_write_le16(mz_uint8 *p, mz_uint16 v) { p[0] = (mz_uint8)v; p[1] = (mz_uint8)(v >> 8); }$/;"	f	file:
mz_write_le32	src/lgfx/utility/miniz.c	/^static void mz_write_le32(mz_uint8 *p, mz_uint32 v) { p[0] = (mz_uint8)v; p[1] = (mz_uint8)(v >> 8); p[2] = (mz_uint8)(v >> 16); p[3] = (mz_uint8)(v >> 24); }$/;"	f	file:
mz_zip_add_mem_to_archive_file_in_place	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_add_mem_to_archive_file_in_place(const char *pZip_filename, const char *pArchive_name, const void *pBuf, size_t buf_size, const void *pComment, mz_uint16 comment_size, mz_uint level_and_flags)$/;"	f
mz_zip_archive	src/lgfx/utility/miniz.c	/^} mz_zip_archive;$/;"	t	typeref:struct:mz_zip_archive_tag	file:
mz_zip_archive_file_stat	src/lgfx/utility/miniz.c	/^} mz_zip_archive_file_stat;$/;"	t	typeref:struct:__anon522	file:
mz_zip_archive_tag	src/lgfx/utility/miniz.c	/^typedef struct mz_zip_archive_tag$/;"	s	file:
mz_zip_array	src/lgfx/utility/miniz.c	/^} mz_zip_array;$/;"	t	typeref:struct:__anon542	file:
mz_zip_array_clear	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE void mz_zip_array_clear(mz_zip_archive *pZip, mz_zip_array *pArray)$/;"	f	file:
mz_zip_array_ensure_capacity	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_array_ensure_capacity(mz_zip_archive *pZip, mz_zip_array *pArray, size_t min_new_capacity, mz_uint growing)$/;"	f	file:
mz_zip_array_ensure_room	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE mz_bool mz_zip_array_ensure_room(mz_zip_archive *pZip, mz_zip_array *pArray, size_t n)$/;"	f	file:
mz_zip_array_push_back	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE mz_bool mz_zip_array_push_back(mz_zip_archive *pZip, mz_zip_array *pArray, const void *pElements, size_t n)$/;"	f	file:
mz_zip_array_reserve	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE mz_bool mz_zip_array_reserve(mz_zip_archive *pZip, mz_zip_array *pArray, size_t new_capacity, mz_uint growing)$/;"	f	file:
mz_zip_array_resize	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE mz_bool mz_zip_array_resize(mz_zip_archive *pZip, mz_zip_array *pArray, size_t new_size, mz_uint growing)$/;"	f	file:
mz_zip_dos_to_time_t	src/lgfx/utility/miniz.c	/^static time_t mz_zip_dos_to_time_t(int dos_time, int dos_date)$/;"	f	file:
mz_zip_extract_archive_file_to_heap	src/lgfx/utility/miniz.c	/^void *mz_zip_extract_archive_file_to_heap(const char *pZip_filename, const char *pArchive_name, size_t *pSize, mz_uint flags)$/;"	f
mz_zip_file_read_func	src/lgfx/utility/miniz.c	/^static size_t mz_zip_file_read_func(void *pOpaque, mz_uint64 file_ofs, void *pBuf, size_t n)$/;"	f	file:
mz_zip_file_write_callback	src/lgfx/utility/miniz.c	/^static size_t mz_zip_file_write_callback(void *pOpaque, mz_uint64 ofs, const void *pBuf, size_t n)$/;"	f	file:
mz_zip_file_write_func	src/lgfx/utility/miniz.c	/^static size_t mz_zip_file_write_func(void *pOpaque, mz_uint64 file_ofs, const void *pBuf, size_t n)$/;"	f	file:
mz_zip_flags	src/lgfx/utility/miniz.c	/^} mz_zip_flags;$/;"	t	typeref:enum:__anon524	file:
mz_zip_get_file_modified_time	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_get_file_modified_time(const char *pFilename, mz_uint16 *pDOS_time, mz_uint16 *pDOS_date)$/;"	f	file:
mz_zip_heap_write_func	src/lgfx/utility/miniz.c	/^static size_t mz_zip_heap_write_func(void *pOpaque, mz_uint64 file_ofs, const void *pBuf, size_t n)$/;"	f	file:
mz_zip_internal_state	src/lgfx/utility/miniz.c	/^typedef struct mz_zip_internal_state_tag mz_zip_internal_state;$/;"	t	typeref:struct:mz_zip_internal_state_tag	file:
mz_zip_internal_state_tag	src/lgfx/utility/miniz.c	/^struct mz_zip_internal_state_tag$/;"	s	file:
mz_zip_mem_read_func	src/lgfx/utility/miniz.c	/^static size_t mz_zip_mem_read_func(void *pOpaque, mz_uint64 file_ofs, void *pBuf, size_t n)$/;"	f	file:
mz_zip_mode	src/lgfx/utility/miniz.c	/^} mz_zip_mode;$/;"	t	typeref:enum:__anon523	file:
mz_zip_reader_end	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_end(mz_zip_archive *pZip)$/;"	f
mz_zip_reader_extract_file_to_callback	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_file_to_callback(mz_zip_archive *pZip, const char *pFilename, mz_file_write_func pCallback, void *pOpaque, mz_uint flags)$/;"	f
mz_zip_reader_extract_file_to_file	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_file_to_file(mz_zip_archive *pZip, const char *pArchive_filename, const char *pDst_filename, mz_uint flags)$/;"	f
mz_zip_reader_extract_file_to_heap	src/lgfx/utility/miniz.c	/^void *mz_zip_reader_extract_file_to_heap(mz_zip_archive *pZip, const char *pFilename, size_t *pSize, mz_uint flags)$/;"	f
mz_zip_reader_extract_file_to_mem	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_file_to_mem(mz_zip_archive *pZip, const char *pFilename, void *pBuf, size_t buf_size, mz_uint flags)$/;"	f
mz_zip_reader_extract_file_to_mem_no_alloc	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_file_to_mem_no_alloc(mz_zip_archive *pZip, const char *pFilename, void *pBuf, size_t buf_size, mz_uint flags, void *pUser_read_buf, size_t user_read_buf_size)$/;"	f
mz_zip_reader_extract_to_callback	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_to_callback(mz_zip_archive *pZip, mz_uint file_index, mz_file_write_func pCallback, void *pOpaque, mz_uint flags)$/;"	f
mz_zip_reader_extract_to_file	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_to_file(mz_zip_archive *pZip, mz_uint file_index, const char *pDst_filename, mz_uint flags)$/;"	f
mz_zip_reader_extract_to_heap	src/lgfx/utility/miniz.c	/^void *mz_zip_reader_extract_to_heap(mz_zip_archive *pZip, mz_uint file_index, size_t *pSize, mz_uint flags)$/;"	f
mz_zip_reader_extract_to_mem	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_to_mem(mz_zip_archive *pZip, mz_uint file_index, void *pBuf, size_t buf_size, mz_uint flags)$/;"	f
mz_zip_reader_extract_to_mem_no_alloc	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_extract_to_mem_no_alloc(mz_zip_archive *pZip, mz_uint file_index, void *pBuf, size_t buf_size, mz_uint flags, void *pUser_read_buf, size_t user_read_buf_size)$/;"	f
mz_zip_reader_file_stat	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_file_stat(mz_zip_archive *pZip, mz_uint file_index, mz_zip_archive_file_stat *pStat)$/;"	f
mz_zip_reader_filename_compare	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE int mz_zip_reader_filename_compare(const mz_zip_array *pCentral_dir_array, const mz_zip_array *pCentral_dir_offsets, mz_uint l_index, const char *pR, mz_uint r_len)$/;"	f	file:
mz_zip_reader_filename_less	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE mz_bool mz_zip_reader_filename_less(const mz_zip_array *pCentral_dir_array, const mz_zip_array *pCentral_dir_offsets, mz_uint l_index, mz_uint r_index)$/;"	f	file:
mz_zip_reader_get_cdh	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE const mz_uint8 *mz_zip_reader_get_cdh(mz_zip_archive *pZip, mz_uint file_index)$/;"	f	file:
mz_zip_reader_get_filename	src/lgfx/utility/miniz.c	/^mz_uint mz_zip_reader_get_filename(mz_zip_archive *pZip, mz_uint file_index, char *pFilename, mz_uint filename_buf_size)$/;"	f
mz_zip_reader_get_num_files	src/lgfx/utility/miniz.c	/^mz_uint mz_zip_reader_get_num_files(mz_zip_archive *pZip)$/;"	f
mz_zip_reader_init	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_init(mz_zip_archive *pZip, mz_uint64 size, mz_uint32 flags)$/;"	f
mz_zip_reader_init_file	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_init_file(mz_zip_archive *pZip, const char *pFilename, mz_uint32 flags)$/;"	f
mz_zip_reader_init_internal	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_reader_init_internal(mz_zip_archive *pZip, mz_uint32 flags)$/;"	f	file:
mz_zip_reader_init_mem	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_init_mem(mz_zip_archive *pZip, const void *pMem, size_t size, mz_uint32 flags)$/;"	f
mz_zip_reader_is_file_a_directory	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_is_file_a_directory(mz_zip_archive *pZip, mz_uint file_index)$/;"	f
mz_zip_reader_is_file_encrypted	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_reader_is_file_encrypted(mz_zip_archive *pZip, mz_uint file_index)$/;"	f
mz_zip_reader_locate_file	src/lgfx/utility/miniz.c	/^int mz_zip_reader_locate_file(mz_zip_archive *pZip, const char *pName, const char *pComment, mz_uint flags)$/;"	f
mz_zip_reader_locate_file_binary_search	src/lgfx/utility/miniz.c	/^static int mz_zip_reader_locate_file_binary_search(mz_zip_archive *pZip, const char *pFilename)$/;"	f	file:
mz_zip_reader_read_central_dir	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_reader_read_central_dir(mz_zip_archive *pZip, mz_uint32 flags)$/;"	f	file:
mz_zip_reader_sort_central_dir_offsets_by_filename	src/lgfx/utility/miniz.c	/^static void mz_zip_reader_sort_central_dir_offsets_by_filename(mz_zip_archive *pZip)$/;"	f	file:
mz_zip_reader_string_equal	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE mz_bool mz_zip_reader_string_equal(const char *pA, const char *pB, mz_uint len, mz_uint flags)$/;"	f	file:
mz_zip_set_file_times	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_set_file_times(const char *pFilename, time_t access_time, time_t modified_time)$/;"	f	file:
mz_zip_time_to_dos_time	src/lgfx/utility/miniz.c	/^static void mz_zip_time_to_dos_time(time_t time, mz_uint16 *pDOS_time, mz_uint16 *pDOS_date)$/;"	f	file:
mz_zip_writer_add_file	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_add_file(mz_zip_archive *pZip, const char *pArchive_name, const char *pSrc_filename, const void *pComment, mz_uint16 comment_size, mz_uint level_and_flags)$/;"	f
mz_zip_writer_add_from_zip_reader	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_add_from_zip_reader(mz_zip_archive *pZip, mz_zip_archive *pSource_zip, mz_uint file_index)$/;"	f
mz_zip_writer_add_mem	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_add_mem(mz_zip_archive *pZip, const char *pArchive_name, const void *pBuf, size_t buf_size, mz_uint level_and_flags)$/;"	f
mz_zip_writer_add_mem_ex	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_add_mem_ex(mz_zip_archive *pZip, const char *pArchive_name, const void *pBuf, size_t buf_size, const void *pComment, mz_uint16 comment_size, mz_uint level_and_flags, mz_uint64 uncomp_size, mz_uint32 uncomp_crc32)$/;"	f
mz_zip_writer_add_put_buf_callback	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_writer_add_put_buf_callback(const void* pBuf, int len, void *pUser)$/;"	f	file:
mz_zip_writer_add_state	src/lgfx/utility/miniz.c	/^} mz_zip_writer_add_state;$/;"	t	typeref:struct:__anon543	file:
mz_zip_writer_add_to_central_dir	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_writer_add_to_central_dir(mz_zip_archive *pZip, const char *pFilename, mz_uint16 filename_size, const void *pExtra, mz_uint16 extra_size, const void *pComment, mz_uint16 comment_size, mz_uint64 uncomp_size, mz_uint64 comp_size, mz_uint32 uncomp_crc32, mz_uint16 method, mz_uint16 bit_flags, mz_uint16 dos_time, mz_uint16 dos_date, mz_uint64 local_header_ofs, mz_uint32 ext_attributes)$/;"	f	file:
mz_zip_writer_compute_padding_needed_for_file_alignment	src/lgfx/utility/miniz.c	/^static mz_uint mz_zip_writer_compute_padding_needed_for_file_alignment(mz_zip_archive *pZip)$/;"	f	file:
mz_zip_writer_create_central_dir_header	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_writer_create_central_dir_header(mz_zip_archive *pZip, mz_uint8 *pDst, mz_uint16 filename_size, mz_uint16 extra_size, mz_uint16 comment_size, mz_uint64 uncomp_size, mz_uint64 comp_size, mz_uint32 uncomp_crc32, mz_uint16 method, mz_uint16 bit_flags, mz_uint16 dos_time, mz_uint16 dos_date, mz_uint64 local_header_ofs, mz_uint32 ext_attributes)$/;"	f	file:
mz_zip_writer_create_local_dir_header	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_writer_create_local_dir_header(mz_zip_archive *pZip, mz_uint8 *pDst, mz_uint16 filename_size, mz_uint16 extra_size, mz_uint64 uncomp_size, mz_uint64 comp_size, mz_uint32 uncomp_crc32, mz_uint16 method, mz_uint16 bit_flags, mz_uint16 dos_time, mz_uint16 dos_date)$/;"	f	file:
mz_zip_writer_end	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_end(mz_zip_archive *pZip)$/;"	f
mz_zip_writer_finalize_archive	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_finalize_archive(mz_zip_archive *pZip)$/;"	f
mz_zip_writer_finalize_heap_archive	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_finalize_heap_archive(mz_zip_archive *pZip, void **pBuf, size_t *pSize)$/;"	f
mz_zip_writer_init	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_init(mz_zip_archive *pZip, mz_uint64 existing_size)$/;"	f
mz_zip_writer_init_file	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_init_file(mz_zip_archive *pZip, const char *pFilename, mz_uint64 size_to_reserve_at_beginning)$/;"	f
mz_zip_writer_init_from_reader	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_init_from_reader(mz_zip_archive *pZip, const char *pFilename)$/;"	f
mz_zip_writer_init_heap	src/lgfx/utility/miniz.c	/^mz_bool mz_zip_writer_init_heap(mz_zip_archive *pZip, size_t size_to_reserve_at_beginning, size_t initial_allocation_size)$/;"	f
mz_zip_writer_validate_archive_name	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_writer_validate_archive_name(const char *pArchive_name)$/;"	f	file:
mz_zip_writer_write_zeros	src/lgfx/utility/miniz.c	/^static mz_bool mz_zip_writer_write_zeros(mz_zip_archive *pZip, mz_uint64 cur_file_ofs, mz_uint32 n)$/;"	f	file:
n_i2c	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr int n_i2c = std::extent<decltype(i2c_dev), 0>::value;$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
n_palettes	src/lgfx/utility/lgfx_pngle.c	/^  size_t n_palettes;$/;"	m	struct:_pngle_t	file:
n_spi	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr int n_spi = std::extent<decltype(spi_dev), 0>::value;$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
need_transaction	src/lgfx/v0/lgfx_common.hpp	/^    bool need_transaction = false;$/;"	m	struct:lgfx::DataWrapper
need_transaction	src/lgfx/v1/misc/DataWrapper.hpp	/^    bool need_transaction = false;$/;"	m	struct:lgfx::v1::DataWrapper
next_in	src/lgfx/utility/miniz.c	/^  const unsigned char *next_in;     \/\/ pointer to next byte to read$/;"	m	struct:mz_stream_s	file:
next_out	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t *next_out; \/\/ NULL indicates IDAT hasn't been processed yet$/;"	m	struct:_pngle_t	file:
next_out	src/lgfx/utility/miniz.c	/^  unsigned char *next_out;          \/\/ pointer to next byte to write$/;"	m	struct:mz_stream_s	file:
no_convert	src/lgfx/v0/lgfx_common.hpp	/^    bool no_convert = false;$/;"	m	struct:lgfx::pixelcopy_t
no_convert	src/lgfx/v0/lgfx_common.hpp	/^  static constexpr uint32_t no_convert(uint32_t c)                 { return c; }$/;"	f	namespace:lgfx::v0
no_convert	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t no_convert(uint32_t c) { return c; }$/;"	f	namespace:lgfx::v1
no_convert	src/lgfx/v1/misc/pixelcopy.hpp	/^    bool no_convert = false;$/;"	m	struct:lgfx::v1::pixelcopy_t
no_psram	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^      no_psram,$/;"	e	enum:lgfx::v1::DividedFrameBuffer::psram_setting_t
noexcept	src/lgfx/utility/result.hpp	/^      result_construct_base(unit) noexcept;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_construct_base
noexcept	src/lgfx/utility/result.hpp	/^      result_union(unit) noexcept;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union
noexcept	src/lgfx/utility/result.hpp	/^    constexpr explicit operator bool() const noexcept;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
noexcept	src/lgfx/utility/result.hpp	/^    constexpr explicit result(in_place_t) noexcept;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
noexcept	src/lgfx/utility/result.hpp	/^    constexpr result() noexcept;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<E, Args...>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<E, std::initializer_list<U>, Args...>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<E,E2&&>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<E,E2>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<E,const E2&>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<T, Args...>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<T,T2&&>::value &&$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<T,U>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<T,const T2&>::value &&$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_constructible<U>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_copy_constructible<T>::value &&$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_destructible<T>::value && std::is_nothrow_destructible<E>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^  noexcept(std::is_nothrow_move_constructible<T>::value &&$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^) noexcept(std::is_nothrow_constructible<E, Args...>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^) noexcept(std::is_nothrow_constructible<E, std::initializer_list<U>, Args...>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^) noexcept(std::is_nothrow_constructible<T, Args...>::value)$/;"	f
noexcept	src/lgfx/utility/result.hpp	/^) noexcept(std::is_nothrow_constructible<T, std::initializer_list<U>, Args...>::value)$/;"	f
nopwait	src/lgfx/v1/platforms/esp8266/common.cpp	/^      int nopwait = 26;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
nr_chrs_f16	src/lgfx/Fonts/Font16.h	/^#define nr_chrs_f16 /;"	d
nr_chrs_f32	src/lgfx/Fonts/Font32rle.h	/^#define nr_chrs_f32 /;"	d
nr_chrs_f64	src/lgfx/Fonts/Font64rle.h	/^#define nr_chrs_f64 /;"	d
nr_chrs_f72	src/lgfx/Fonts/Font72rle.h	/^#define nr_chrs_f72 /;"	d
nr_chrs_f72	src/lgfx/Fonts/Font72x53rle.h	/^#define nr_chrs_f72 /;"	d
nr_chrs_f7s	src/lgfx/Fonts/Font7srle.h	/^#define nr_chrs_f7s /;"	d
nrst	src/lgfx/utility/lgfx_tjpgd.h	/^	uint16_t nrst;				\/* Restart inverval *\/$/;"	m	struct:lgfxJdec
numberToStr	src/lgfx/v0/LGFXBase.cpp	/^    static char* numberToStr(long n, char* buf, size_t buflen, uint8_t base)$/;"	f	namespace:lgfx::v0
numberToStr	src/lgfx/v0/LGFXBase.cpp	/^    static char* numberToStr(unsigned long n, char* buf, size_t buflen, uint8_t base)$/;"	f	namespace:lgfx::v0
numberToStr	src/lgfx/v1/LGFXBase.cpp	/^  static char* numberToStr(long n, char* buf, size_t buflen, uint8_t base)$/;"	f	namespace:lgfx::v1
numberToStr	src/lgfx/v1/LGFXBase.cpp	/^  static char* numberToStr(unsigned long n, char* buf, size_t buflen, uint8_t base)$/;"	f	namespace:lgfx::v1
offX	src/lgfx/v0/LGFXBase.cpp	/^    int32_t offX;$/;"	m	struct:lgfx::v0::image_info_t	file:
offX	src/lgfx/v1/LGFXBase.cpp	/^    int32_t offX;$/;"	m	struct:lgfx::v1::image_info_t	file:
offY	src/lgfx/v0/LGFXBase.cpp	/^    int32_t offY;$/;"	m	struct:lgfx::v0::image_info_t	file:
offY	src/lgfx/v1/LGFXBase.cpp	/^    int32_t offY;$/;"	m	struct:lgfx::v1::image_info_t	file:
offset	src/lgfx/v1/touch/gslx680/Touch_GSLx680_FW.h	/^  uint8_t offset;$/;"	m	struct:gsl_fw_data
offset_rotation	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast8_t offset_rotation = 0;  \/\/ rotation offset (0~3)$/;"	m	struct:lgfx::v0::PanelCommon
offset_rotation	src/lgfx/v1/Touch.hpp	/^      uint8_t offset_rotation = 0;$/;"	m	struct:lgfx::v1::ITouch::config_t
offset_rotation	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint8_t offset_rotation = 0;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
offset_x	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t offset_x      = 0;   \/\/ panel offset x axis$/;"	m	struct:lgfx::v0::PanelCommon
offset_x	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint16_t offset_x = 0;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
offset_y	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t offset_y      = 0;   \/\/ panel offset y axis$/;"	m	struct:lgfx::v0::PanelCommon
offset_y	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint16_t offset_y = 0;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
offset_y	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    int16_t offset_y;$/;"	m	struct:lgfx::v1::internal_t	file:
opaque	src/lgfx/utility/miniz.c	/^  void *opaque;                     \/\/ heap alloc function user pointer$/;"	m	struct:mz_stream_s	file:
open	src/lgfx/v0/lgfx_filesystem_support.hpp	/^      bool open(const char* url) {$/;"	f	struct:lgfx::v0::LGFX_FILESYSTEM_Support::HttpWrapper
open	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool open(const char* path, const char* mode) { return (_fp = fopen(path, mode)); }$/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool open(const char* path, const char* mode) { return false; }$/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool open(const char* path, const char* mode) {$/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool open(fs::FS& fs, const char* path, const char* mode) {$/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v0/platforms/samd51_common.hpp	/^    bool open(const char* path, const char* mode) $/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v0/platforms/samd51_common.hpp	/^    bool open(const char* path, const char* mode) { $/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v0/platforms/samd51_common.hpp	/^    bool open(const char*, const char*) { return false; }$/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v0/platforms/samd51_common.hpp	/^    bool open(fs::FS& fs, const char* path, const char* mode) {$/;"	f	struct:lgfx::v0::FileWrapper
open	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      bool open(const char* url) {$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
open	src/lgfx/v1/misc/DataWrapper.hpp	/^    bool open(LGFX_SDFAT_TYPE &fs, const char* path)$/;"	f	struct:lgfx::v1::SdFatWrapper
open	src/lgfx/v1/misc/DataWrapper.hpp	/^    virtual bool open(const char* path) { (void)path;  return true; };$/;"	f	struct:lgfx::v1::DataWrapper
open	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    bool open(fs::FS& fs, const char* path) {$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/esp32/common.hpp	/^    bool open(const char* path, const char* mode) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/esp32/common.hpp	/^    bool open(fs::FS& fs, const char* path)$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/esp8266/common.hpp	/^    bool open(const char*, const char*) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/esp8266/common.hpp	/^    bool open(fs::FS& fs, const char* path)$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/rp2040/common.hpp	/^    bool open(fs::FS& fs, const char* path)$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/samd21/common.hpp	/^    bool open(fs::FS& fs, const char* path) {$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/samd51/common.hpp	/^    bool open(fs::FS& fs, const char* path) {$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/spresense/common.hpp	/^    bool open(StorageClass& fs, const char* path)$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/spresense/common.hpp	/^    bool open(const char* , const char* ) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
open	src/lgfx/v1/platforms/stm32/common.hpp	/^    bool open(fs::FS& fs, const char* path) {$/;"	f	struct:lgfx::v1::FileWrapper
operator !=	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator!=(const raw_color_t& lhs, const raw_color_t& rhs) { return *reinterpret_cast<const uint32_t*>(&lhs) != *reinterpret_cast<const uint32_t*>(&rhs); }$/;"	f	namespace:lgfx
operator !=	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator!=(const raw_color_t& lhs, const raw_color_t& rhs) { return *reinterpret_cast<const uint32_t*>(&lhs) != *reinterpret_cast<const uint32_t*>(&rhs); }$/;"	f	namespace:lgfx::v1
operator ()	src/lgfx/v1/misc/colortype.hpp	/^    void operator() (int32_t x, int32_t y, TDstColor& dst)$/;"	f	struct:lgfx::effect_fill_alpha
operator ()	src/lgfx/v1/misc/colortype.hpp	/^    void operator() (int32_t x, int32_t y, TDstColor& dst, TSrcColor& src)$/;"	f	struct:lgfx::effect_fill_alpha
operator =	src/lgfx/v0/LGFX_Sprite.hpp	/^      SpriteBuffer& operator=(SpriteBuffer&& rhs)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
operator =	src/lgfx/v0/LGFX_Sprite.hpp	/^      SpriteBuffer& operator=(const SpriteBuffer& rhs)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline argb8888_t& operator=(uint32_t argb8888) { *reinterpret_cast<uint32_t*>(this) = argb8888; return *this; }$/;"	f	struct:lgfx::v0::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline bgr666_t& operator=(uint32_t rhs) { r = rhs; g = rhs>>8 ; b = rhs>>16; return *this; }$/;"	f	struct:lgfx::v0::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline bgr888_t& operator=(uint32_t rhs) { r = rhs; g = rhs>>8 ; b = rhs>>16; return *this; }$/;"	f	struct:lgfx::v0::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline bgra8888_t& operator=(uint32_t bgra8888) { *reinterpret_cast<uint32_t*>(this) = bgra8888; return *this; }$/;"	f	struct:lgfx::v0::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline grayscale_t& operator=(uint8_t gray8) { raw = gray8; return *this; }$/;"	f	struct:lgfx::v0::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline rgb332_t& operator=(uint8_t rgb332) { *reinterpret_cast<uint8_t*>(this) = rgb332; return *this; }$/;"	f	struct:lgfx::v0::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline rgb565_t& operator=(uint16_t rgb565) { *reinterpret_cast<uint16_t*>(this) = rgb565; return *this; }$/;"	f	struct:lgfx::v0::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline rgb888_t& operator=(uint32_t rgb888) { r = rgb888>>16; g = rgb888>>8; b = rgb888; return *this; }$/;"	f	struct:lgfx::v0::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^    inline swap565_t& operator=(uint16_t rhs) { *reinterpret_cast<uint16_t*>(this) = rhs; return *this; }$/;"	f	struct:lgfx::v0::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const bgr666_t&  rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const bgr888_t&  rhs) { a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const bgra8888_t& rhs){ a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const grayscale_t& rhs){a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const rgb332_t&  rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const rgb565_t&  rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const rgb888_t&  rhs) { a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline argb8888_t& argb8888_t::operator=(const swap565_t& rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::argb8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const argb8888_t& rhs) { r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const bgr888_t&   rhs) { r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const bgra8888_t& rhs) { r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const grayscale_t& rhs){ r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const rgb332_t&   rhs) { r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const rgb565_t&   rhs) { r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const rgb888_t&   rhs) { r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr666_t& bgr666_t::operator=(const swap565_t&  rhs) { r = rhs.R6(); g = rhs.G6(); b = rhs.B6(); return *this; }$/;"	f	class:lgfx::bgr666_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const argb8888_t& rhs) { r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const bgr666_t&   rhs) { r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const bgra8888_t& rhs) { r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const grayscale_t& rhs){ r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const rgb332_t&   rhs) { r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const rgb565_t&   rhs) { rg = rhs.R8() | rhs.G8()<<8; b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const rgb888_t&   rhs) { r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgr888_t& bgr888_t::operator=(const swap565_t&  rhs) { rg = rhs.R8() | rhs.G8()<<8; b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgr888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const argb8888_t& rhs){ a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const bgr666_t&  rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const bgr888_t&  rhs) { a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const grayscale_t& rhs){a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const rgb332_t&  rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const rgb565_t&  rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const rgb888_t&  rhs) { a = 255; r = rhs.r   ; g = rhs.g   ; b = rhs.b   ; return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline bgra8888_t& bgra8888_t::operator=(const swap565_t& rhs) { a = 255; r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::bgra8888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const argb8888_t& rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const bgr666_t&   rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const bgr888_t&   rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const bgra8888_t& rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const rgb332_t&   rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const rgb565_t&   rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const rgb888_t&   rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline grayscale_t& grayscale_t::operator=(const swap565_t&  rhs) { raw = (rhs.R8() + (rhs.G8()<<1) + rhs.B8()) >> 2; return *this; }$/;"	f	class:lgfx::grayscale_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const argb8888_t& rhs) { raw = color332(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const bgr666_t&   rhs) { raw = ((rhs.r<<2)&0xE0) | ((rhs.g>>1)&0x1C) | (rhs.b>>4); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const bgr888_t&   rhs) { raw = color332(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const bgra8888_t& rhs) { raw = color332(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const grayscale_t& rhs){ raw = color332(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const rgb565_t&   rhs) { raw = ((rhs.r<<3)&0xE0) | ((rhs.g>>1)&0x1C) | (rhs.b>>3); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const rgb888_t&   rhs) { raw = color332(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb332_t& rgb332_t::operator=(const swap565_t&  rhs) { raw = ((rhs.r<<3)&0xE0) | ((rhs.gh<<2) + (rhs.b>>3)); return *this; }$/;"	f	class:lgfx::rgb332_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const argb8888_t& rhs) { raw = color565(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const bgr666_t&   rhs) { raw = color565(rhs.R8(), rhs.G8(), rhs.B8()); return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const bgr888_t&   rhs) { raw = color565(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const bgra8888_t& rhs) { raw = color565(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const grayscale_t& rhs){ raw = color565(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const rgb332_t&   rhs) { raw = color565(rhs.R8(), rhs.G8(), rhs.B8()); return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const rgb888_t&   rhs) { raw = color565(rhs.r, rhs.g, rhs.b); return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb565_t& rgb565_t::operator=(const swap565_t&  rhs) { raw = __builtin_bswap16(rhs.raw);   return *this; }$/;"	f	class:lgfx::rgb565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const argb8888_t& rhs) { r = rhs.r;    g = rhs.g;    b = rhs.b;    return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const bgr666_t&   rhs) { r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const bgr888_t&   rhs) { r = rhs.r;    g = rhs.g;    b = rhs.b;    return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const bgra8888_t& rhs) { r = rhs.r;    g = rhs.g;    b = rhs.b;    return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const grayscale_t& rhs){ r = rhs.r;    g = rhs.g;    b = rhs.b;    return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const rgb332_t&   rhs) { r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const rgb565_t&   rhs) { r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline rgb888_t& rgb888_t::operator=(const swap565_t&  rhs) { r = rhs.R8(); g = rhs.G8(); b = rhs.B8(); return *this; }$/;"	f	class:lgfx::rgb888_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const argb8888_t& rhs) { *reinterpret_cast<uint16_t*>(this) = swap565(rhs.r, rhs.g, rhs.b);   return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const bgr666_t&   rhs) { raw = (rhs.b>>1)<<8 | rhs.g << 13 | rhs.g >> 3 | (rhs.r >> 1) << 3; return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const bgr888_t&   rhs) { *reinterpret_cast<uint16_t*>(this) = swap565(rhs.r, rhs.g, rhs.b);   return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const bgra8888_t& rhs) { *reinterpret_cast<uint16_t*>(this) = swap565(rhs.r, rhs.g, rhs.b);   return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const grayscale_t& rhs){ *reinterpret_cast<uint16_t*>(this) = swap565(rhs.r, rhs.g, rhs.b);   return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const rgb332_t&   rhs) { *reinterpret_cast<uint16_t*>(this) = ((rhs.b * 0x15)>>1)<<8 | rhs.g << 13 | rhs.g | ((rhs.r * 0x09) >> 1) << 3; return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const rgb565_t&   rhs) { raw = __builtin_bswap16(rhs.raw);            return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v0/lgfx_common.hpp	/^  inline swap565_t& swap565_t::operator=(const rgb888_t&   rhs) { raw = swap565(rhs.r,    rhs.g,    rhs.b);    return *this; }$/;"	f	class:lgfx::swap565_t
operator =	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  SpriteBuffer& SpriteBuffer::operator=(SpriteBuffer&& rhs)$/;"	f	class:lgfx::v1::SpriteBuffer
operator =	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  SpriteBuffer& SpriteBuffer::operator=(const SpriteBuffer& rhs)$/;"	f	class:lgfx::v1::SpriteBuffer
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline argb8888_t& operator=(uint32_t argb8888) { *reinterpret_cast<uint32_t*>(this) = argb8888; return *this; }$/;"	f	struct:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline bgr666_t& operator=(uint32_t bgr666) { r6 = bgr666; g6 = bgr666 >> 8 ; b6 = bgr666 >> 16; return *this; }$/;"	f	struct:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline bgr888_t& operator=(uint32_t bgr888) { r = bgr888; g = bgr888>>8 ; b = bgr888>>16; return *this; }$/;"	f	struct:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline bgra8888_t& operator=(uint32_t rhs) { *reinterpret_cast<uint32_t*>(this) = rhs; return *this; }$/;"	f	struct:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline grayscale_t& operator=(uint8_t gray8) { *reinterpret_cast<uint8_t*>(this) = gray8; return *this; }$/;"	f	struct:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline rgb332_t& operator=(uint8_t rgb332) { *reinterpret_cast<uint8_t*>(this) = rgb332; return *this; }$/;"	f	struct:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline rgb565_t& operator=(uint16_t rgb565) { *reinterpret_cast<uint16_t*>(this) = rgb565; return *this; }$/;"	f	struct:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline rgb888_t& operator=(uint32_t rgb888) { r = rgb888>>16; g = rgb888>>8; b = rgb888; return *this; }$/;"	f	struct:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^    inline swap565_t& operator=(uint16_t swap565) { *reinterpret_cast<uint16_t*>(this) = swap565; return *this; }$/;"	f	struct:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const bgr666_t&    c) { set(color_convert<argb8888_t , bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const bgr888_t&    c) { set(color_convert<argb8888_t , bgr888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const bgra8888_t&  c) { set(getSwap32                              (c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const grayscale_t& c) { set(color_convert<argb8888_t , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const rgb332_t&    c) { set(color_convert<argb8888_t , rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const rgb565_t&    c) { set(color_convert<argb8888_t , rgb565_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const rgb888_t&    c) { set(color_convert<argb8888_t , rgb888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE argb8888_t&  argb8888_t ::operator=(const swap565_t&   c) { set(color_convert<argb8888_t , swap565_t  >(c.get())); return *this; }$/;"	f	class:lgfx::v1::argb8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const argb8888_t&  c) { set(color_convert<bgr666_t   , argb8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const bgr888_t&    c) { set(color_convert<bgr666_t   , bgr888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const bgra8888_t&  c) { set(color_convert<bgr666_t   , bgra8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const grayscale_t& c) { set(color_convert<bgr666_t   , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const rgb332_t&    c) { set(color_convert<bgr666_t   , rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const rgb565_t&    c) { set(color_convert<bgr666_t   , rgb565_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const rgb888_t&    c) { set(color_convert<bgr666_t   , rgb888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr666_t&    bgr666_t   ::operator=(const swap565_t&   c) { set(color_convert<bgr666_t   , swap565_t  >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr666_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const argb8888_t&  c) { set(color_convert<bgr888_t   , argb8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const bgr666_t&    c) { set(color_convert<bgr888_t   , bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const bgra8888_t&  c) { set(color_convert<bgr888_t   , bgra8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const grayscale_t& c) { set(color_convert<bgr888_t   , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const rgb332_t&    c) { set(color_convert<bgr888_t   , rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const rgb565_t&    c) { set(color_convert<bgr888_t   , rgb565_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const rgb888_t&    c) { set(getSwap24                              (c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgr888_t&    bgr888_t   ::operator=(const swap565_t&   c) { set(color_convert<bgr888_t   , swap565_t  >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgr888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const argb8888_t&  c) { set(getSwap32                              (c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const bgr666_t&    c) { set(color_convert<bgra8888_t , bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const bgr888_t&    c) { set(color_convert<bgra8888_t , bgr888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const grayscale_t& c) { set(color_convert<bgra8888_t , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const rgb332_t&    c) { set(color_convert<bgra8888_t , rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const rgb565_t&    c) { set(color_convert<bgra8888_t , rgb565_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const rgb888_t&    c) { set(color_convert<bgra8888_t , rgb888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bgra8888_t&  bgra8888_t ::operator=(const swap565_t&   c) { set(color_convert<bgra8888_t , swap565_t  >(c.get())); return *this; }$/;"	f	class:lgfx::v1::bgra8888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const argb8888_t&  c) { set(color_convert<grayscale_t, argb8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const bgr666_t&    c) { set(color_convert<grayscale_t, bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const bgr888_t&    c) { set(color_convert<grayscale_t, bgr888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const bgra8888_t&  c) { set(color_convert<grayscale_t, bgra8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const rgb332_t&    c) { set(color_convert<grayscale_t, rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const rgb565_t&    c) { set(color_convert<grayscale_t, rgb565_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const rgb888_t&    c) { set(color_convert<grayscale_t, rgb888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE grayscale_t& grayscale_t::operator=(const swap565_t&   c) { set(color_convert<grayscale_t, swap565_t  >(c.get())); return *this; }$/;"	f	class:lgfx::v1::grayscale_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const argb8888_t&  c) { set(color_convert<rgb332_t   , argb8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const bgr666_t&    c) { set(color_convert<rgb332_t   , bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const bgr888_t&    c) { set(color_convert<rgb332_t   , bgr888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const bgra8888_t&  c) { set(color_convert<rgb332_t   , bgra8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const grayscale_t& c) { set(color_convert<rgb332_t   , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const rgb565_t&    c) { set(color_convert<rgb332_t   , rgb565_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const rgb888_t&    c) { set(color_convert<rgb332_t   , rgb888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb332_t&    rgb332_t   ::operator=(const swap565_t&   c) { set(color_convert<rgb332_t   , swap565_t  >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb332_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const argb8888_t&  c) { set(color_convert<rgb565_t   , argb8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const bgr666_t&    c) { set(color_convert<rgb565_t   , bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const bgr888_t&    c) { set(color_convert<rgb565_t   , bgr888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const bgra8888_t&  c) { set(color_convert<rgb565_t   , bgra8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const grayscale_t& c) { set(color_convert<rgb565_t   , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const rgb332_t&    c) { set(color_convert<rgb565_t   , rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const rgb888_t&    c) { set(color_convert<rgb565_t   , rgb888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb565_t&    rgb565_t   ::operator=(const swap565_t&   c) { set(getSwap16                              (c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const argb8888_t&  c) { set(color_convert<rgb888_t   , argb8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const bgr666_t&    c) { set(color_convert<rgb888_t   , bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const bgr888_t&    c) { set(getSwap24                              (c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const bgra8888_t&  c) { set(color_convert<rgb888_t   , bgra8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const grayscale_t& c) { set(color_convert<rgb888_t   , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const rgb332_t&    c) { set(color_convert<rgb888_t   , rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const rgb565_t&    c) { set(color_convert<rgb888_t   , rgb565_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE rgb888_t&    rgb888_t   ::operator=(const swap565_t&   c) { set(color_convert<rgb888_t   , swap565_t  >(c.get())); return *this; }$/;"	f	class:lgfx::v1::rgb888_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const argb8888_t&  c) { set(color_convert<swap565_t  , argb8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const bgr666_t&    c) { set(color_convert<swap565_t  , bgr666_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const bgr888_t&    c) { set(color_convert<swap565_t  , bgr888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const bgra8888_t&  c) { set(color_convert<swap565_t  , bgra8888_t >(c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const grayscale_t& c) { set(color_convert<swap565_t  , grayscale_t>(c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const rgb332_t&    c) { set(color_convert<swap565_t  , rgb332_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const rgb565_t&    c) { set(getSwap16(                              c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator =	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE swap565_t&   swap565_t  ::operator=(const rgb888_t&    c) { set(color_convert<swap565_t  , rgb888_t   >(c.get())); return *this; }$/;"	f	class:lgfx::v1::swap565_t
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const argb8888_t& lhs, const argb8888_t& rhs) { return lhs.raw == rhs.raw; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const argb8888_t& lhs, uint32_t rhs) { return  *reinterpret_cast<const uint32_t*>(&lhs) == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const bgr666_t&   lhs, const bgr666_t&   rhs) { return (*reinterpret_cast<const uint32_t*>(&lhs) << 8) == (*reinterpret_cast<const uint32_t*>(&rhs) << 8); }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const bgr666_t&   lhs, uint32_t rhs) { return (*reinterpret_cast<const uint32_t*>(&lhs) << 8) >> 8 == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const bgr888_t&   lhs, const bgr888_t&   rhs) { return (*reinterpret_cast<const uint32_t*>(&lhs) << 8) == (*reinterpret_cast<const uint32_t*>(&rhs) << 8); }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const bgr888_t&   lhs, uint32_t rhs) { return (*reinterpret_cast<const uint32_t*>(&lhs) << 8) >> 8 == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const bgra8888_t& lhs, const bgra8888_t& rhs) { return lhs.raw == rhs.raw; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const bgra8888_t& lhs, uint32_t rhs) { return  *reinterpret_cast<const uint32_t*>(&lhs) == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const grayscale_t& lhs,const grayscale_t& rhs){ return lhs.r == rhs.r; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const grayscale_t& lhs,uint32_t rhs) { return  *reinterpret_cast<const uint8_t* >(&lhs) == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const raw_color_t& lhs, const raw_color_t& rhs) { return *reinterpret_cast<const uint32_t*>(&lhs) == *reinterpret_cast<const uint32_t*>(&rhs); }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const rgb332_t&   lhs, const rgb332_t&   rhs) { return lhs.raw == rhs.raw; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const rgb332_t&   lhs, uint32_t rhs) { return  *reinterpret_cast<const uint8_t* >(&lhs) == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const rgb565_t&   lhs, const rgb565_t&   rhs) { return lhs.raw == rhs.raw; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const rgb565_t&   lhs, uint32_t rhs) { return  *reinterpret_cast<const uint16_t*>(&lhs) == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const rgb888_t&   lhs, const rgb888_t&   rhs) { return (*reinterpret_cast<const uint32_t*>(&lhs) << 8) == (*reinterpret_cast<const uint32_t*>(&rhs) << 8); }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const rgb888_t&   lhs, uint32_t rhs) { return (*reinterpret_cast<const uint32_t*>(&lhs) << 8) >> 8 == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const swap565_t&  lhs, const swap565_t&  rhs) { return lhs.raw == rhs.raw; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v0/lgfx_common.hpp	/^  inline constexpr bool operator==(const swap565_t&  lhs, uint32_t rhs) { return  *reinterpret_cast<const uint16_t*>(&lhs) == rhs; }$/;"	f	namespace:lgfx
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const argb8888_t&  lhs, const argb8888_t&  rhs) { return pgm_read_dword          (&lhs) == pgm_read_dword          (&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const argb8888_t&  lhs, uint32_t rhs) { return pgm_read_dword          (&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const bgr666_t&    lhs, const bgr666_t&    rhs) { return pgm_read_3byte_unaligned(&lhs) == pgm_read_3byte_unaligned(&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const bgr666_t&    lhs, uint32_t rhs) { return pgm_read_3byte_unaligned(&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const bgr888_t&    lhs, const bgr888_t&    rhs) { return pgm_read_3byte_unaligned(&lhs) == pgm_read_3byte_unaligned(&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const bgr888_t&    lhs, uint32_t rhs) { return pgm_read_3byte_unaligned(&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const bgra8888_t&  lhs, uint32_t rhs) { return pgm_read_dword          (&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const grayscale_t& lhs, const grayscale_t& rhs) { return pgm_read_byte           (&lhs) == pgm_read_byte           (&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const grayscale_t& lhs, uint32_t rhs) { return pgm_read_byte           (&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const raw_color_t& lhs, const raw_color_t& rhs) { return *reinterpret_cast<const uint32_t*>(&lhs) == *reinterpret_cast<const uint32_t*>(&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const rgb332_t&    lhs, const rgb332_t&    rhs) { return pgm_read_byte           (&lhs) == pgm_read_byte           (&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const rgb332_t&    lhs, uint32_t rhs) { return pgm_read_byte           (&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const rgb565_t&    lhs, const rgb565_t&    rhs) { return pgm_read_word           (&lhs) == pgm_read_word           (&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const rgb565_t&    lhs, uint32_t rhs) { return pgm_read_word           (&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const rgb888_t&    lhs, const rgb888_t&    rhs) { return pgm_read_3byte_unaligned(&lhs) == pgm_read_3byte_unaligned(&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const rgb888_t&    lhs, uint32_t rhs) { return pgm_read_3byte_unaligned(&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const swap565_t&   lhs, const swap565_t&   rhs) { return pgm_read_word           (&lhs) == pgm_read_word           (&rhs); }$/;"	f	namespace:lgfx::v1
operator ==	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE bool operator==(const swap565_t&   lhs, uint32_t rhs) { return pgm_read_word           (&lhs) == rhs; }$/;"	f	namespace:lgfx::v1
operator bool	src/lgfx/v0/LGFX_Sprite.hpp	/^      operator bool() const { return _buffer != nullptr; }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return raw; }$/;"	f	struct:lgfx::v0::argb8888_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return raw; }$/;"	f	struct:lgfx::v0::bgra8888_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return raw; }$/;"	f	struct:lgfx::v0::grayscale_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return raw; }$/;"	f	struct:lgfx::v0::rgb332_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return raw; }$/;"	f	struct:lgfx::v0::rgb565_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return raw; }$/;"	f	struct:lgfx::v0::swap565_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return rg||b; }$/;"	f	struct:lgfx::v0::bgr888_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return r||g||b; }$/;"	f	struct:lgfx::v0::bgr666_t
operator bool	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator bool() const { return r||g||b; }$/;"	f	struct:lgfx::v0::rgb888_t
operator bool	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    operator bool() const { return _buffer != nullptr; }$/;"	f	class:lgfx::v1::SpriteBuffer
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::bgr666_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::bgr888_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::rgb888_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_byte(this); }$/;"	f	struct:lgfx::v1::grayscale_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_byte(this); }$/;"	f	struct:lgfx::v1::rgb332_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_dword(this); }$/;"	f	struct:lgfx::v1::argb8888_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_dword(this); }$/;"	f	struct:lgfx::v1::bgra8888_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_word(this); }$/;"	f	struct:lgfx::v1::rgb565_t
operator bool	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator bool(void) const { return pgm_read_word(this); }$/;"	f	struct:lgfx::v1::swap565_t
operator uint16_t	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator uint16_t() const { return raw; }$/;"	f	struct:lgfx::v0::rgb565_t
operator uint16_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint16_t(void) const { return pgm_read_word(this); }$/;"	f	struct:lgfx::v1::rgb565_t
operator uint16_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint16_t(void) const { return pgm_read_word(this); }$/;"	f	struct:lgfx::v1::swap565_t
operator uint32_t	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator uint32_t() const { return *(uint32_t*)this & ((1<<24)-1); }$/;"	f	struct:lgfx::v0::bgr888_t
operator uint32_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint32_t(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::bgr666_t
operator uint32_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint32_t(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::bgr888_t
operator uint32_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint32_t(void) const { return pgm_read_3byte_unaligned(this); }$/;"	f	struct:lgfx::v1::rgb888_t
operator uint32_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint32_t(void) const { return pgm_read_dword(this); }$/;"	f	struct:lgfx::v1::argb8888_t
operator uint32_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint32_t(void) const { return pgm_read_dword(this); }$/;"	f	struct:lgfx::v1::bgra8888_t
operator uint8_t	src/lgfx/v0/lgfx_common.hpp	/^    explicit inline constexpr operator uint8_t() const { return raw; }$/;"	f	struct:lgfx::v0::rgb332_t
operator uint8_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint8_t(void) const { return pgm_read_byte(this); }$/;"	f	struct:lgfx::v1::grayscale_t
operator uint8_t	src/lgfx/v1/misc/colortype.hpp	/^    explicit inline operator uint8_t(void) const { return pgm_read_byte(this); }$/;"	f	struct:lgfx::v1::rgb332_t
operator uint8_t*	src/lgfx/v0/LGFX_Sprite.hpp	/^      operator uint8_t*() const { return _buffer; }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
operator uint8_t*	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    operator uint8_t*() const { return _buffer; }$/;"	f	class:lgfx::v1::SpriteBuffer
other	src/lgfx/utility/result.hpp	/^      disable_copy_assignment(disable_copy_assignment&& other) = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_copy_assignment
other	src/lgfx/utility/result.hpp	/^      disable_copy_ctor(disable_copy_ctor&& other) = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_copy_ctor
other	src/lgfx/utility/result.hpp	/^      disable_move_assignment(disable_move_assignment&& other) = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_move_assignment
other	src/lgfx/utility/result.hpp	/^      disable_move_ctor(disable_move_ctor&& other) = delete;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::disable_move_ctor
other	src/lgfx/utility/result.hpp	/^      result_trivial_copy_assign_base_impl(result_trivial_copy_assign_base_impl&& other) = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_copy_assign_base_impl
other	src/lgfx/utility/result.hpp	/^      result_trivial_copy_ctor_base_impl(result_trivial_copy_ctor_base_impl&& other) = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_copy_ctor_base_impl
other	src/lgfx/utility/result.hpp	/^      result_trivial_move_assign_base_impl(result_trivial_move_assign_base_impl&& other) = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_move_assign_base_impl
other	src/lgfx/utility/result.hpp	/^    \/* implicit *\/ failure(const failure& other) = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::failure
other	src/lgfx/utility/result.hpp	/^    \/* implicit *\/ failure(failure&& other) = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::failure
other	src/lgfx/utility/result.hpp	/^    bad_result_access(bad_result_access&& other) = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::bad_result_access
other	src/lgfx/utility/result.hpp	/^    bad_result_access(const bad_result_access& other) = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::bad_result_access
other	src/lgfx/utility/result.hpp	/^    constexpr result(const result& other) = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
other	src/lgfx/utility/result.hpp	/^    constexpr result(result&& other) = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
out_buf	src/lgfx/utility/lgfx_pngle.c	/^  uint32_t out_buf[LGFX_PNGLE_OUTBUF_LEN >> 2]; \/\/ out_buf + read_buf (Do not change the order)$/;"	m	struct:_pngle_t	file:
output	src/lgfx/v0/platforms/esp32_common.hpp	/^  { output$/;"	e	enum:lgfx::v0::pin_mode_t
output	src/lgfx/v0/platforms/samd51_common.hpp	/^  { output$/;"	e	enum:lgfx::v0::pin_mode_t
output	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/esp32/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/esp8266/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/opencv/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/rp2040/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/samd21/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/samd51/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/sdl/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/spresense/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output	src/lgfx/v1/platforms/stm32/common.hpp	/^  { output$/;"	e	enum:lgfx::v1::pin_mode_t
output_height	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint16_t output_height  = 0;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::config_resolution_t
output_level	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^      uint8_t output_level = 128;$/;"	m	struct:lgfx::v1::Panel_CVBS::config_detail_t
output_width	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint16_t output_width   = 0;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::config_resolution_t
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool unloadFont(void) override;$/;"	m	struct:lgfx::v0::VLWfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v0::BDFfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v0::BMPfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v0::FixedBMPfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v0::GFXfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v0::GLCDfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v0::U8g2font
override	src/lgfx/v0/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v0::VLWfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::BDFfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::BMPfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::FixedBMPfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::GFXfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::GLCDfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::RLEfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::U8g2font
override	src/lgfx/v0/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style) const override;$/;"	m	struct:lgfx::v0::VLWfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v0::BDFfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v0::BaseFont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v0::GFXfont
override	src/lgfx/v0/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v0::U8g2font
override	src/lgfx/v0/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v0::VLWfont
override	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    void post_init(LGFX_Device* gfx, bool use_reset) override;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
override	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    void sleep(LGFX_Device* gfx) override;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
override	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^    void wakeup(LGFX_Device* gfx) override;$/;"	m	struct:lgfx::v0::Panel_GDEW0154M09
override	src/lgfx/v0/panel/Panel_IT8951.hpp	/^    void post_init(LGFX_Device* gfx, bool use_reset) override;$/;"	m	struct:lgfx::v0::Panel_IT8951
override	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v0::Touch_FT5x06
override	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^    uint_fast8_t getTouch(touch_point_t* tp, int_fast8_t number) override;$/;"	m	struct:lgfx::v0::Touch_FT5x06
override	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^    void sleep(void) override;$/;"	m	struct:lgfx::v0::Touch_FT5x06
override	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^    void wakeup(void) override;$/;"	m	struct:lgfx::v0::Touch_FT5x06
override	src/lgfx/v0/touch/Touch_GT911.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v0::Touch_GT911
override	src/lgfx/v0/touch/Touch_GT911.hpp	/^    uint_fast8_t getTouch(touch_point_t* tp, int_fast8_t number) override;$/;"	m	struct:lgfx::v0::Touch_GT911
override	src/lgfx/v0/touch/Touch_GT911.hpp	/^    void sleep(void) override;$/;"	m	struct:lgfx::v0::Touch_GT911
override	src/lgfx/v0/touch/Touch_GT911.hpp	/^    void wakeup(void) override;$/;"	m	struct:lgfx::v0::Touch_GT911
override	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v0::Touch_STMPE610
override	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^    uint_fast8_t getTouch(touch_point_t* tp, int_fast8_t number) override;$/;"	m	struct:lgfx::v0::Touch_STMPE610
override	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v0::Touch_XPT2046
override	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^    uint_fast8_t getTouch(touch_point_t* tp, int_fast8_t number) override;$/;"	m	struct:lgfx::v0::Touch_XPT2046
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t len) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t raw_color) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/LGFX_Sprite.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_Sprite
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool loadFont(DataWrapper* data) override;$/;"	m	struct:lgfx::v1::VLWfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool unloadFont(void) override;$/;"	m	struct:lgfx::v1::VLWfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v1::BDFfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v1::BMPfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v1::FixedBMPfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v1::GFXfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v1::GLCDfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v1::U8g2font
override	src/lgfx/v1/lgfx_fonts.hpp	/^    bool updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const override;$/;"	m	struct:lgfx::v1::VLWfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::BDFfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::BMPfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::FixedBMPfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::GFXfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::GLCDfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::RLEfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::U8g2font
override	src/lgfx/v1/lgfx_fonts.hpp	/^    size_t drawChar(LGFXBase* gfx, int32_t x, int32_t y, uint16_t c, const TextStyle* style, FontMetrics* metrics, int32_t& filled_x) const override;$/;"	m	struct:lgfx::v1::VLWfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v1::BDFfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v1::BaseFont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v1::GFXfont
override	src/lgfx/v1/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v1::U8g2font
override	src/lgfx/v1/lgfx_fonts.hpp	/^    void getDefaultMetric(FontMetrics *metrics) const override;$/;"	m	struct:lgfx::v1::VLWfont
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    bool dmaBusy(void) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void initDMA(void) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void waitDMA(void) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void writeCommand(uint32_t data, uint_fast8_t length) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void writeData(uint32_t data, uint_fast8_t length) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_Device.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_Device
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t length) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_FlexibleFrameBuffer
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t length) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_FrameBufferBase
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    bool displayBusy(void) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    size_t _get_buffer_length(void) const override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void waitDisplay(void) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_GDEW0154M09
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_HUB75
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_HUB75
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint32_t _read_pixel_inner(uint_fast16_t x, uint_fast16_t y) override;$/;"	m	struct:lgfx::v1::Panel_HUB75
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    uint32_t _read_pixel_inner(uint_fast16_t x, uint_fast16_t y) override;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    void _draw_pixel_inner(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_HUB75
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    void _draw_pixel_inner(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi
override	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_HUB75
override	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
override	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
override	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
override	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
override	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
override	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
override	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t length) override;$/;"	m	struct:lgfx::v1::Panel_HasBuffer
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void update_madctl(void) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_ILI9225
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    bool displayBusy(void) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void waitDisplay(void) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t len) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_IT8951.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_IT8951
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    int32_t getScanLine(void) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    uint32_t readCommand(uint_fast16_t cmd, uint_fast8_t index, uint_fast8_t len) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    uint32_t readData(uint_fast8_t index, uint_fast8_t len) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t len) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_LCD.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_LCD
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    bool displayBusy(void) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void waitDisplay(void) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t len) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void writeFillRectAlphaPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t argb8888) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_M5HDMI
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t len) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void writeFillRectAlphaPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t argb8888) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_M5UnitLCD
override	src/lgfx/v1/panel/Panel_NT35510.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_NT35510
override	src/lgfx/v1/panel/Panel_NT35510.hpp	/^    const uint8_t* getInitCommands(uint8_t listno) const override;$/;"	m	struct:lgfx::v1::Panel_NT35510
override	src/lgfx/v1/panel/Panel_NT35510.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_NT35510
override	src/lgfx/v1/panel/Panel_NT35510.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_NT35510
override	src/lgfx/v1/panel/Panel_NT35510.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_NT35510
override	src/lgfx/v1/panel/Panel_NT35510.hpp	/^    void update_madctl(void) override;$/;"	m	struct:lgfx::v1::Panel_NT35510
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    bool displayBusy(void) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    const uint8_t* getInitCommands(uint8_t listno) const override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void waitDisplay(void) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t len) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void writeCommand(uint32_t, uint_fast8_t) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void writeData(uint32_t, uint_fast8_t) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RA8875.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_RA8875
override	src/lgfx/v1/panel/Panel_RM68120.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_RM68120
override	src/lgfx/v1/panel/Panel_RM68120.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_RM68120
override	src/lgfx/v1/panel/Panel_RM68120.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_RM68120
override	src/lgfx/v1/panel/Panel_RM68120.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_RM68120
override	src/lgfx/v1/panel/Panel_RM68120.hpp	/^    void update_madctl(void) override;$/;"	m	struct:lgfx::v1::Panel_RM68120
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    bool displayBusy(void) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_SSD1306
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    size_t _get_buffer_length(void) const override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_SH110x
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_SSD1306
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_SH110x
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_SSD1306
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void waitDisplay(void) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_1bitOLED
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    bool displayBusy(void) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    size_t _get_buffer_length(void) const override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void waitDisplay(void) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_SSD1327
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void setInvert(bool invert) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void setSleep(bool flg) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void update_madctl(void) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_SSD1331
override	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	class:lgfx::v1::Panel_SSD1351
override	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    void setInvert(bool invert) override;$/;"	m	class:lgfx::v1::Panel_SSD1351
override	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    void setPowerSave(bool flg) override;$/;"	m	class:lgfx::v1::Panel_SSD1351
override	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    void setSleep(bool flg) override;$/;"	m	class:lgfx::v1::Panel_SSD1351
override	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	class:lgfx::v1::Panel_SSD1351
override	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    void update_madctl(void) override;$/;"	m	class:lgfx::v1::Panel_SSD1351
override	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	class:lgfx::v1::Panel_SSD1351
override	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    bool init(bool use_reset) override;$/;"	m	namespace:lgfx::v1
override	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	namespace:lgfx::v1
override	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	namespace:lgfx::v1
override	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	namespace:lgfx::v1
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Stream
override	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Stream
override	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Stream
override	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Stream
override	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_Stream
override	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Stream
override	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_HUB75
override	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_HUB75
override	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_HUB75
override	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_HUB75
override	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^    void setImageBuffer(void* buffer, color_depth_t depth) override;$/;"	m	class:lgfx::v1::Bus_HUB75
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void flush(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void addDMAQueue(const uint8_t* data, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void beginRead(uint_fast8_t dummy_bits) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void execDMAQueue(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void initDMA(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* pc, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* pc, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^    bool init(uint8_t brightness) override;$/;"	m	class:lgfx::v1::Light_PWM
override	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	class:lgfx::v1::Light_PWM
override	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    bool init(bool) override;$/;"	m	struct:lgfx::v1::Panel_CVBS
override	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    int32_t getScanLine(void) override;$/;"	m	struct:lgfx::v1::Panel_CVBS
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void flush(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void flush(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel16
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_Parallel8
override	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_RGB
override	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    uint8_t* getDMABuffer(uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_RGB
override	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_RGB
override	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    bool init(bool) override;$/;"	m	struct:lgfx::v1::Panel_RGB
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t length) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_fb
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void beginTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void display(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void endTransaction(void) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t length) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_OpenCV
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^    bool init(uint8_t brightness) override;$/;"	m	class:lgfx::v1::Light_PWM
override	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^    void setBrightness(uint8_t brightness) override;$/;"	m	class:lgfx::v1::Light_PWM
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_I2C
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void beginRead(uint_fast8_t dummy_bits) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    bool init(bool use_reset) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    color_depth_t setColorDepth(color_depth_t depth) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void copyRect(uint_fast16_t dst_x, uint_fast16_t dst_y, uint_fast16_t w, uint_fast16_t h, uint_fast16_t src_x, uint_fast16_t src_y) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void drawPixelPreclipped(uint_fast16_t x, uint_fast16_t y, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void setRotation(uint_fast8_t r) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void writeBlock(uint32_t rawcolor, uint32_t length) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t len, bool use_dma) override;$/;"	m	struct:lgfx::v1::Panel_sdl
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    bool busy(void) const override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    bool init(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    bool readBytes(uint8_t* dst, uint32_t length, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    bool writeCommand(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    uint32_t readData(uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void beginRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void beginTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void endRead(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void endTransaction(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void readPixels(void* dst, pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void release(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void wait(void) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void writeData(uint32_t data, uint_fast8_t bit_length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    void writePixels(pixelcopy_t* param, uint32_t length) override;$/;"	m	class:lgfx::v1::Bus_SPI
override	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v1::Touch_FT5x06
override	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Touch_FT5x06
override	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^    void sleep(void) override;$/;"	m	struct:lgfx::v1::Touch_FT5x06
override	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^    void wakeup(void) override;$/;"	m	struct:lgfx::v1::Touch_FT5x06
override	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v1::Touch_GSLx680
override	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Touch_GSLx680
override	src/lgfx/v1/touch/Touch_GT911.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v1::Touch_GT911
override	src/lgfx/v1/touch/Touch_GT911.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t *tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Touch_GT911
override	src/lgfx/v1/touch/Touch_GT911.hpp	/^    void sleep(void) override;$/;"	m	struct:lgfx::v1::Touch_GT911
override	src/lgfx/v1/touch/Touch_GT911.hpp	/^    void wakeup(void) override;$/;"	m	struct:lgfx::v1::Touch_GT911
override	src/lgfx/v1/touch/Touch_NS2009.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v1::Touch_NS2009
override	src/lgfx/v1/touch/Touch_NS2009.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Touch_NS2009
override	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v1::Touch_STMPE610
override	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Touch_STMPE610
override	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    void sleep(void) override;$/;"	m	struct:lgfx::v1::Touch_STMPE610
override	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    void wakeup(void) override;$/;"	m	struct:lgfx::v1::Touch_STMPE610
override	src/lgfx/v1/touch/Touch_TT21xxx.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v1::Touch_TT21xxx
override	src/lgfx/v1/touch/Touch_TT21xxx.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Touch_TT21xxx
override	src/lgfx/v1/touch/Touch_XPT2046.hpp	/^    bool init(void) override;$/;"	m	struct:lgfx::v1::Touch_XPT2046
override	src/lgfx/v1/touch/Touch_XPT2046.hpp	/^    uint_fast8_t getTouchRaw(touch_point_t* tp, uint_fast8_t count) override;$/;"	m	struct:lgfx::v1::Touch_XPT2046
oy	src/lgfx/v0/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v0::paint_point_t	file:
oy	src/lgfx/v1/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v1::paint_point_t	file:
pad_miso	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr SercomRXPad    pad_miso = SERCOM_RX_PAD_2;  \/\/ PAD_SPI3_RX;$/;"	m	struct:lgfx::LGFX_Config
pad_mosi	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr SercomSpiTXPad pad_mosi = SPI_PAD_3_SCK_1;  \/\/ PAD_SPI3_TX;$/;"	m	struct:lgfx::LGFX_Config
padding_x	src/lgfx/v1/lgfx_fonts.hpp	/^    int32_t padding_x = 0;$/;"	m	struct:lgfx::v1::TextStyle
paeth	src/lgfx/utility/lgfx_pngle.c	/^static inline int paeth(int a, int b, int c)$/;"	f	file:
paint	src/lgfx/v0/LGFXBase.hpp	/^                         inline void paint    ( int32_t x, int32_t y                ) {                  floodFill(x, y); }$/;"	f	class:lgfx::v0::LGFXBase
paint	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void paint    ( int32_t x, int32_t y, const T& color) { setColor(color); floodFill(x, y); }$/;"	f	class:lgfx::v0::LGFXBase
paint	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void paint    ( int32_t x, int32_t y                ) {                  floodFill(x, y); }$/;"	f	class:lgfx::v1::LGFXBase
paint	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void paint    ( int32_t x, int32_t y, const T& color) { setColor(color); floodFill(x, y); }$/;"	f	class:lgfx::v1::LGFXBase
paint_add_points	src/lgfx/v0/LGFXBase.cpp	/^  static void paint_add_points(std::list<paint_point_t>& points, int lx, int rx, int y, int oy, bool* linebuf)$/;"	f	namespace:lgfx::v0
paint_add_points	src/lgfx/v1/LGFXBase.cpp	/^  static void paint_add_points(std::list<paint_point_t>& points, int32_t lx, int32_t rx, int32_t y, int32_t oy, uint8_t* linebuf)$/;"	f	namespace:lgfx::v1
paint_point_t	src/lgfx/v0/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	s	namespace:lgfx::v0	file:
paint_point_t	src/lgfx/v1/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	s	namespace:lgfx::v1	file:
palette	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t *palette;$/;"	m	struct:_pngle_t	file:
palette	src/lgfx/v0/lgfx_common.hpp	/^    const void* palette = nullptr;$/;"	m	struct:lgfx::pixelcopy_t
palette	src/lgfx/v1/misc/pixelcopy.hpp	/^    const void* palette = nullptr;$/;"	m	struct:lgfx::v1::pixelcopy_t
palette	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint32_t* palette = nullptr;   \/\/ RGB332から波形に変換するためのテーブル;$/;"	m	struct:lgfx::v1::internal_t	file:
palette_num_256	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t palette_num_256;      \/\/ パレット面数 (palはODD_EVENで2倍使用する);$/;"	m	struct:lgfx::v1::signal_setup_info_t	file:
panel	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline PanelCommon* panel(void) const { return _panel; }$/;"	f	class:lgfx::v0::LGFX_Device
panel	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline void panel(PanelCommon* panel) { _panel = panel; postSetPanel(); }$/;"	f	class:lgfx::v0::LGFX_Device
panel	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^  lgfx::Panel_ILI9342 panel;$/;"	m	class:LGFX
panel	src/lgfx/v1/LGFXBase.hpp	/^    inline Panel_Device* panel(void) const { return reinterpret_cast<Panel_Device*>(_panel); }$/;"	f	class:lgfx::v1::LGFX_Device
panel	src/lgfx/v1/LGFXBase.hpp	/^    inline void panel(Panel_Device* panel) { setPanel(panel); }$/;"	f	class:lgfx::v1::LGFX_Device
panel	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      Panel_FrameBufferBase* panel = nullptr;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
panel	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^    Panel_OpenCV* panel;$/;"	m	struct:lgfx::v1::cvmat_info_t	file:
panel	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    Panel_sdl* panel = nullptr;$/;"	m	struct:lgfx::v1::monitor_t
panel	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      Panel_Device* panel;$/;"	m	struct:lgfx::v1::LGFX::_detector_result_t
panel_count	src/lgfx/v1/panel/Panel_HUB75.hpp	/^      uint8_t panel_count = 1;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi::config_detail_t
panel_height	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t panel_height  = 240; \/\/ height of panel$/;"	m	struct:lgfx::v0::PanelCommon
panel_height	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint16_t panel_height = 240;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
panel_height	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t panel_height;$/;"	m	struct:lgfx::v1::internal_t	file:
panel_position_t	src/lgfx/v1/panel/Panel_HUB75.hpp	/^    struct panel_position_t$/;"	s	struct:lgfx::v1::Panel_HUB75_Multi
panel_width	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t panel_width   = 240; \/\/ width of panel$/;"	m	struct:lgfx::v0::PanelCommon
panel_width	src/lgfx/v1/panel/Panel_Device.hpp	/^      uint16_t panel_width = 240;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
panel_width	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t panel_width;$/;"	m	struct:lgfx::v1::internal_t	file:
parent	src/lgfx/v0/lgfx_common.hpp	/^    void* parent = nullptr;$/;"	m	struct:lgfx::DataWrapper
parent	src/lgfx/v1/misc/DataWrapper.hpp	/^    LGFXBase* parent = nullptr;$/;"	m	struct:lgfx::v1::DataWrapper
parseHttpHeader	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      void parseHttpHeader(void)$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
partialOff	src/lgfx/v0/LGFX_Device.hpp	/^    void partialOff(void) { powerSaveOff(); }$/;"	f	class:lgfx::v0::LGFX_Device
partialOn	src/lgfx/v0/LGFX_Device.hpp	/^    void partialOn(void) { powerSaveOn(); }$/;"	f	class:lgfx::v0::LGFX_Device
patchpropertyfiles	.github/scripts/semver.sh	/^function patchpropertyfiles {$/;"	f
pc	src/lgfx/v0/LGFXBase.cpp	/^    pixelcopy_t *pc;$/;"	m	struct:lgfx::v0::draw_jpg_info_t	file:
pc	src/lgfx/v0/LGFXBase.cpp	/^    pixelcopy_t *pc;$/;"	m	struct:lgfx::v0::png_file_decoder_t	file:
pc	src/lgfx/v1/LGFXBase.cpp	/^    pixelcopy_t *pc;$/;"	m	struct:lgfx::v1::draw_jpg_info_t	file:
pc	src/lgfx/v1/LGFXBase.cpp	/^    pixelcopy_t *pc;$/;"	m	struct:lgfx::v1::png_file_decoder_t	file:
pclk_active_neg	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      bool pclk_active_neg = 1;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
pclk_idle_high	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      bool pclk_idle_high = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
performErrorCorrection	src/lgfx/utility/lgfx_qrcode.c	/^static bool performErrorCorrection(uint8_t version, uint8_t ecc, BitBucket *data) {$/;"	f	file:
periph_device_err	src/lgfx/v1/misc/enum.hpp	/^  , periph_device_err   \/\/ ペリフェラルが動作していない等のエラー;$/;"	e	enum:lgfx::v1::error_t
pgm_read_3byte_unaligned	src/lgfx/utility/pgmspace.h	/^  #define pgm_read_3byte_unaligned(/;"	d
pgm_read_3byte_unaligned	src/lgfx/utility/pgmspace.h	/^ #define pgm_read_3byte_unaligned(/;"	d
pgm_read_byte	src/lgfx/utility/pgmspace.h	/^ #define pgm_read_byte(/;"	d
pgm_read_dword	src/lgfx/utility/pgmspace.h	/^ #define pgm_read_dword(/;"	d
pgm_read_dword_unaligned	src/lgfx/utility/pgmspace.h	/^  #define pgm_read_dword_unaligned(/;"	d
pgm_read_ptr	src/lgfx/utility/pgmspace.h	/^ #define pgm_read_ptr(/;"	d
pgm_read_ptr	src/lgfx/utility/pgmspace.h	/^ #undef pgm_read_ptr$/;"	d
pgm_read_word	src/lgfx/utility/pgmspace.h	/^ #define pgm_read_word(/;"	d
pgm_read_word_unaligned	src/lgfx/utility/pgmspace.h	/^  #define pgm_read_word_unaligned(/;"	d
pin	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      uint8_t pin = 0;$/;"	m	struct:lgfx::v1::Light_TC::config_t
pin	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      uint8_t pin = 0;$/;"	m	struct:lgfx::v1::Light_TCC::config_t
pin	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^      uint8_t pin = 0;$/;"	m	struct:lgfx::v1::Light_TC::config_t
pinAssignPeriph	src/lgfx/v1/platforms/samd21/common.cpp	/^  void pinAssignPeriph(int pin_and_port, int type)$/;"	f	namespace:lgfx::v1
pinAssignPeriph	src/lgfx/v1/platforms/samd51/common.cpp	/^  void pinAssignPeriph(int pin_and_port, int type)$/;"	f	namespace:lgfx::v1
pinAssignSercom	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void pinAssignSercom(int cfgport, int type = 3) {$/;"	f	class:lgfx::v0::LGFX_SPI
pinMode	src/lgfx/v1/platforms/arduino_default/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/esp32/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/esp8266/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  static void pinMode(int_fast16_t pin, pin_mode_t mode) {}$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/opencv/common.hpp	/^  __attribute__((unused)) static void pinMode(int_fast16_t pin, pin_mode_t mode) {}$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/rp2040/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/samd21/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/samd51/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/sdl/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode) {}$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/spresense/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pinMode	src/lgfx/v1/platforms/stm32/common.cpp	/^  void pinMode(int_fast16_t pin, pin_mode_t mode)$/;"	f	namespace:lgfx::v1
pin_addr_a	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_addr_a;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_addr_b	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_addr_b;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_addr_c	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_addr_c;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_addr_d	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_addr_d;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_addr_e	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_addr_e;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_b1	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_b1;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_b2	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_b2;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_bl	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^      int16_t pin_bl = -1;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
pin_bl	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^      int16_t pin_bl = -1;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
pin_busy	src/lgfx/v1/panel/Panel_Device.hpp	/^      int16_t pin_busy = -1;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
pin_check	src/lgfx/v1/platforms/rp2040/common.cpp	/^    static bool pin_check(int pin, const uint8_t *pinlist)$/;"	f	namespace:lgfx::v1::rp2040
pin_clk	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_clk;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_cs	src/lgfx/v1/Touch.hpp	/^      int16_t pin_cs = -1;$/;"	m	struct:lgfx::v1::ITouch::config_t
pin_cs	src/lgfx/v1/panel/Panel_Device.hpp	/^      int16_t pin_cs = -1;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
pin_cs	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_cs;$/;"	m	struct:lgfx::v1::LGFX::_detector_parallel16_t::__anon515::__anon516
pin_cs	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_cs;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t::__anon513::__anon514
pin_d0	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d0;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d0	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d0;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d0	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d0;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d0	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d0;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d0	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d0;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d0	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d0;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d0	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d1	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d1	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d1	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d1;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d1	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d1	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d1;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d1	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d1	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d1;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d10	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d10;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d10	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d10;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d10	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d10;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d11	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d11;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d11	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d11;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d11	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d11;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d12	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d12;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d12	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d12;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d12	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d12;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d13	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d13;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d13	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d13;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d13	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d13;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d14	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d14;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d14	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d14;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d14	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d14;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d15	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d15;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d15	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d15;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d15	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d15;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d2	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d2;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d2	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d2;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d2	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d2;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d2	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d2;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d2	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d2;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d2	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d2;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d2	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d2;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d3	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d3;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d3	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d3;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d3	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d3;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d3	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d3;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d3	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d3;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d3	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d3;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d3	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d3;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d4	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d4;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d4	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d4;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d4	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d4;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d4	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d4;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d4	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d4;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d4	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d4;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d4	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d4;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d5	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d5;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d5	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d5;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d5	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d5;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d5	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d5;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d5	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d5;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d5	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d5;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d5	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d5;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d6	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d6;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d6	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d6;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d6	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d6;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d6	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d6;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d6	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d6;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d6	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d6;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d6	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d6;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d7	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^          int8_t pin_d7;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon245::__anon246
pin_d7	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^          int8_t pin_d7;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon59::__anon60
pin_d7	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d7;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d7	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^          int8_t pin_d7;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon257::__anon258
pin_d7	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d7;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d7	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^          int8_t pin_d7;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t::__anon251::__anon252
pin_d7	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d7;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d8	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d8;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d8	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d8;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d8	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d8;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_d9	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^          int8_t pin_d9;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon254::__anon255
pin_d9	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^          int8_t pin_d9;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t::__anon249::__anon250
pin_d9	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^          int8_t pin_d9;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t::__anon247::__anon248
pin_dac	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^      int8_t pin_dac = 26;$/;"	m	struct:lgfx::v1::Panel_CVBS::config_detail_t
pin_data	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        int8_t pin_data[14] = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1  };$/;"	m	union:lgfx::v1::Bus_HUB75::config_t::__anon243
pin_data	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^        int8_t pin_data[8];$/;"	m	union:lgfx::v1::Bus_Parallel8::config_t::__anon245
pin_data	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^        int8_t pin_data[8];$/;"	m	union:lgfx::v1::Bus_Parallel8::config_t::__anon59
pin_data	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^        int8_t pin_data[16];$/;"	m	union:lgfx::v1::Bus_Parallel16::config_t::__anon254
pin_data	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^        int8_t pin_data[8];$/;"	m	union:lgfx::v1::Bus_Parallel8::config_t::__anon257
pin_data	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^        int8_t pin_data[16];$/;"	m	union:lgfx::v1::Bus_Parallel16::config_t::__anon249
pin_data	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^        int8_t pin_data[8];$/;"	m	union:lgfx::v1::Bus_Parallel8::config_t::__anon251
pin_data	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^        int8_t pin_data[16];$/;"	m	union:lgfx::v1::Bus_RGB::config_t::__anon247
pin_data	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_data[16];$/;"	m	struct:lgfx::v1::LGFX::_detector_parallel16_t::__anon515::__anon516
pin_dc	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      int16_t pin_dc   = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_dc	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_dc;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t::__anon513::__anon514
pin_g1	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_g1;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_g2	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_g2;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_henable	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t pin_henable = -1;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
pin_hsync	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t pin_hsync = -1;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
pin_int	src/lgfx/v1/Touch.hpp	/^      int16_t pin_int = -1;$/;"	m	struct:lgfx::v1::ITouch::config_t
pin_lat	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_lat;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_miso	src/lgfx/v1/Touch.hpp	/^          int16_t pin_miso;$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon260
pin_miso	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^      int16_t pin_miso = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      int16_t pin_miso = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      int16_t pin_miso = -1;  \/\/ 12 or 7$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      int16_t pin_miso = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      int16_t pin_miso = samd21::PORT_B | 18;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      int16_t pin_miso = samd51::PORT_B | 18;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      int16_t pin_miso = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      int16_t pin_miso = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_miso	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_miso;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t::__anon513::__anon514
pin_miso_dc	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^    static constexpr gpio_num_t pin_miso_dc = GPIO_NUM_35;$/;"	m	struct:lgfx::v1::Panel_M5StackCoreS3
pin_miso_dc	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^    static constexpr gpio_num_t pin_miso_dc = GPIO_NUM_35;$/;"	m	struct:lgfx::v1::Panel_M5StackCoreS3
pin_mode_t	src/lgfx/v0/platforms/esp32_common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v0
pin_mode_t	src/lgfx/v0/platforms/samd51_common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v0
pin_mode_t	src/lgfx/v1/platforms/arduino_default/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/esp32/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/esp8266/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/framebuffer/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/opencv/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/rp2040/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/samd21/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/samd51/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/sdl/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/spresense/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mode_t	src/lgfx/v1/platforms/stm32/common.hpp	/^  enum pin_mode_t$/;"	g	namespace:lgfx::v1
pin_mosi	src/lgfx/v1/Touch.hpp	/^          int16_t pin_mosi;$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon260
pin_mosi	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^      int16_t pin_mosi = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      int16_t pin_mosi = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      int16_t pin_mosi = -1;  \/\/ 13 or 8$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      int16_t pin_mosi = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      int16_t pin_mosi = samd21::PORT_B | 19;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      int16_t pin_mosi = samd51::PORT_B | 19;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      int16_t pin_mosi = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      int16_t pin_mosi = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_mosi	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_mosi;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t::__anon513::__anon514
pin_oe	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_oe;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_pclk	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t pin_pclk = -1;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
pin_port	src/lgfx/v0/platforms/samd51_common.hpp	/^    enum pin_port$/;"	g	namespace:lgfx::v0::samd51
pin_port	src/lgfx/v1/platforms/samd21/common.hpp	/^    enum pin_port$/;"	g	namespace:lgfx::v1::samd21
pin_port	src/lgfx/v1/platforms/samd51/common.hpp	/^    enum pin_port$/;"	g	namespace:lgfx::v1::samd51
pin_port	src/lgfx/v1/platforms/stm32/common.hpp	/^    enum pin_port$/;"	g	namespace:lgfx::v1::stm32
pin_r1	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_r1;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_r2	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^          int8_t pin_r2;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t::__anon243::__anon244
pin_rd	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^      int8_t pin_rd = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rd	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^      int8_t pin_rd = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rd	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^      int8_t pin_rd = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
pin_rd	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^      int8_t pin_rd = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rd	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^      int8_t pin_rd = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
pin_rd	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^      int8_t pin_rd = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rd	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_rd;$/;"	m	struct:lgfx::v1::LGFX::_detector_parallel16_t::__anon515::__anon516
pin_rs	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^      int8_t pin_rs = -1;  \/\/ D\/C$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rs	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^      int8_t pin_rs = -1;  \/\/ D\/C$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rs	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^      int8_t pin_rs = -1;  \/\/ D\/C$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
pin_rs	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^      int8_t pin_rs = -1;  \/\/ D\/C$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rs	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^      int8_t pin_rs = -1;  \/\/ D\/C$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
pin_rs	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^      int8_t pin_rs = -1;  \/\/ D\/C$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_rs	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_rs;$/;"	m	struct:lgfx::v1::LGFX::_detector_parallel16_t::__anon515::__anon516
pin_rst	src/lgfx/v1/Touch.hpp	/^      int16_t pin_rst = -1;$/;"	m	struct:lgfx::v1::ITouch::config_t
pin_rst	src/lgfx/v1/panel/Panel_Device.hpp	/^      int16_t pin_rst = -1;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
pin_rst	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_rst;$/;"	m	struct:lgfx::v1::LGFX::_detector_parallel16_t::__anon515::__anon516
pin_rst	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_rst;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t::__anon513::__anon514
pin_scl	src/lgfx/v1/Touch.hpp	/^          int16_t pin_scl;$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon261
pin_scl	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      int16_t pin_scl = 22;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_scl	src/lgfx/v1/platforms/esp32/common.cpp	/^      gpio_num_t pin_scl = (gpio_num_t)-1;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
pin_scl	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      int16_t pin_scl = 22;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_scl	src/lgfx/v1/platforms/esp8266/common.cpp	/^      uint8_t pin_scl = -1;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
pin_scl	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      int16_t pin_scl = 22;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_scl	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      int16_t pin_scl = samd21::PORT_A | 9;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_scl	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      int16_t pin_scl ;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_scl	src/lgfx/v1/platforms/samd51/common.cpp	/^      uint_fast16_t pin_scl = -1;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
pin_scl	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int pin_scl = 5;$/;"	m	struct:lgfx::v1::Panel_ESPboy
pin_scl	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int pin_scl = 5;$/;"	m	struct:LGFX::Panel_ESPboy
pin_sclk	src/lgfx/v1/Touch.hpp	/^          int16_t pin_sclk;$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon260
pin_sclk	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^      int16_t pin_sclk = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      int16_t pin_sclk = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      int16_t pin_sclk = -1;  \/\/ 14 or 6$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      int16_t pin_sclk = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      int16_t pin_sclk = samd21::PORT_B | 20;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      int16_t pin_sclk = samd51::PORT_B | 20;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      int16_t pin_sclk = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      int16_t pin_sclk = -1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
pin_sclk	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_sclk;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t::__anon513::__anon514
pin_sda	src/lgfx/v1/Touch.hpp	/^          int16_t pin_sda;$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon261
pin_sda	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      int16_t pin_sda = 21;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_sda	src/lgfx/v1/platforms/esp32/common.cpp	/^      gpio_num_t pin_sda = (gpio_num_t)-1;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
pin_sda	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      int16_t pin_sda = 21;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_sda	src/lgfx/v1/platforms/esp8266/common.cpp	/^      uint8_t pin_sda = -1;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
pin_sda	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      int16_t pin_sda = 21;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_sda	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      int16_t pin_sda = samd21::PORT_A | 8;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_sda	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      int16_t pin_sda ;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
pin_sda	src/lgfx/v1/platforms/samd51/common.cpp	/^      uint_fast16_t pin_sda = -1;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
pin_sda	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int pin_sda = 4;$/;"	m	struct:lgfx::v1::Panel_ESPboy
pin_sda	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int pin_sda = 4;$/;"	m	struct:LGFX::Panel_ESPboy
pin_tfcard_cs	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_tfcard_cs;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t::__anon513::__anon514
pin_vsync	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t pin_vsync = -1;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
pin_wr	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^      int8_t pin_wr = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_wr	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^      int8_t pin_wr = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_wr	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^      int8_t pin_wr = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
pin_wr	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^      int8_t pin_wr = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_wr	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^      int8_t pin_wr = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
pin_wr	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^      int8_t pin_wr = -1;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
pin_wr	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^          int8_t pin_wr;$/;"	m	struct:lgfx::v1::LGFX::_detector_parallel16_t::__anon515::__anon516
pins	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        int8_t pins[21];$/;"	m	union:lgfx::v1::LGFX::_detector_parallel16_t::__anon515
pins	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        int8_t pins[7];$/;"	m	union:lgfx::v1::LGFX::_detector_spi_t::__anon513
pixelBuffer	src/lgfx/utility/lgfx_qoi.c	/^  qoi_rgba_t* pixelBuffer;$/;"	m	struct:_qoi_t	file:
pixel_tbl	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t* pixel_tbl;      \/\/ 12$/;"	m	struct:lgfx::v1::asm_work_t	file:
pixelcopy_t	src/lgfx/v0/lgfx_common.hpp	/^    pixelcopy_t( const void* src_data$/;"	f	struct:lgfx::pixelcopy_t
pixelcopy_t	src/lgfx/v0/lgfx_common.hpp	/^  struct pixelcopy_t$/;"	s	namespace:lgfx
pixelcopy_t	src/lgfx/v1/misc/pixelcopy.cpp	/^    pixelcopy_t::pixelcopy_t( const void* src_data_$/;"	f	class:lgfx::v1::pixelcopy_t
pixelcopy_t	src/lgfx/v1/misc/pixelcopy.hpp	/^  struct pixelcopy_t$/;"	s	namespace:lgfx::v1
pll_clock	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint32_t pll_clock = 120000000;$/;"	m	struct:lgfx::v1::timing_params_t
png_draw_alpha_callback	src/lgfx/v0/LGFXBase.cpp	/^  static void png_draw_alpha_callback(void *user_data, uint32_t x, uint32_t y, uint_fast8_t div_x, size_t len, const uint8_t* argb)$/;"	f	namespace:lgfx::v0
png_draw_alpha_callback	src/lgfx/v1/LGFXBase.cpp	/^  static void png_draw_alpha_callback(void *user_data, uint32_t x, uint32_t y, uint_fast8_t div_x, size_t len, const uint8_t* argb)$/;"	f	namespace:lgfx::v1
png_draw_alpha_scale_callback	src/lgfx/v0/LGFXBase.cpp	/^  static void png_draw_alpha_scale_callback(void *user_data, uint32_t x, uint32_t y, uint_fast8_t div_x, size_t len, const uint8_t* argb)$/;"	f	namespace:lgfx::v0
png_draw_alpha_scale_callback	src/lgfx/v1/LGFXBase.cpp	/^  static void png_draw_alpha_scale_callback(void *user_data, uint32_t x, uint32_t y, uint_fast8_t div_x, size_t len, const uint8_t* argb)$/;"	f	namespace:lgfx::v1
png_encoder_get_row	src/lgfx/v0/LGFXBase.cpp	/^  static uint8_t *png_encoder_get_row( uint8_t *pImage, int flip, int w, int h, int y, int, void *target )$/;"	f	namespace:lgfx::v0
png_encoder_get_row	src/lgfx/v1/LGFXBase.cpp	/^  static uint8_t *png_encoder_get_row( uint8_t *pImage, int flip, int w, int h, int y, int, void *target )$/;"	f	namespace:lgfx::v1
png_encoder_t	src/lgfx/v0/LGFXBase.cpp	/^  struct png_encoder_t$/;"	s	namespace:lgfx::v0	file:
png_encoder_t	src/lgfx/v1/LGFXBase.cpp	/^  struct png_encoder_t$/;"	s	namespace:lgfx::v1	file:
png_file_decoder_t	src/lgfx/v0/LGFXBase.cpp	/^  struct png_file_decoder_t : public image_decoder_t$/;"	s	namespace:lgfx::v0	file:
png_file_decoder_t	src/lgfx/v1/LGFXBase.cpp	/^  struct png_file_decoder_t : public image_decoder_t$/;"	s	namespace:lgfx::v1	file:
pngle_chunk_t	src/lgfx/utility/lgfx_pngle.c	/^} pngle_chunk_t;$/;"	t	typeref:enum:__anon545	file:
pngle_ihdr_t	src/lgfx/utility/lgfx_pngle.h	/^} pngle_ihdr_t;$/;"	t	typeref:struct:_pngle_ihdr_t
pngle_on_data	src/lgfx/utility/lgfx_pngle.c	/^static int pngle_on_data(pngle_t *pngle, uint8_t *lzbuf, size_t len, size_t outbuf_len)$/;"	f	file:
pngle_state_t	src/lgfx/utility/lgfx_pngle.c	/^} pngle_state_t;$/;"	t	typeref:enum:__anon544	file:
pngle_t	src/lgfx/utility/lgfx_pngle.h	/^typedef struct _pngle_t pngle_t;$/;"	t	typeref:struct:_pngle_t
pool	src/lgfx/utility/lgfx_tjpgd.h	/^	uint8_t* pool;				\/* Pointer to available memory pool *\/$/;"	m	struct:lgfxJdec
port	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^        int port;$/;"	m	union:lgfx::v1::Bus_HUB75::config_t::__anon241
port	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^        int port;$/;"	m	union:lgfx::v1::Bus_Parallel16::config_t::__anon253
port	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^        int port;$/;"	m	union:lgfx::v1::Bus_Parallel8::config_t::__anon256
port	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^      int port = 0;$/;"	m	struct:lgfx::v1::Bus_Parallel16::config_t
port	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^      int port = 0;$/;"	m	struct:lgfx::v1::Bus_Parallel8::config_t
port	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t port = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      int8_t port;$/;"	m	struct:lgfx::v1::LGFX::_detector_parallel16_t
port	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^    static constexpr int port = 0;$/;"	m	struct:lgfx::v1::Panel_ESPboy
port	src/lgfx_user/LGFX_ESP8266_ESPboy.hpp	/^    static constexpr int port = 0;$/;"	m	struct:LGFX::Panel_ESPboy
positions	src/lgfx/v0/lgfx_common.hpp	/^      uint32_t positions[4] = {0};$/;"	m	union:lgfx::pixelcopy_t::__anon504
positions	src/lgfx/v1/misc/pixelcopy.hpp	/^      uint32_t positions[4] = {0};$/;"	m	union:lgfx::v1::pixelcopy_t::__anon1
postCommandList	src/lgfx/v0/LGFX_Device.hpp	/^    virtual void postCommandList(void) {}$/;"	f	class:lgfx::v0::LGFX_Device
postRead	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline void postRead(void) { if (fp_post_read) fp_post_read(parent); }$/;"	f	struct:lgfx::DataWrapper
postRead	src/lgfx/v1/misc/DataWrapper.hpp	/^    LGFX_INLINE void postRead(void) { if (fp_post_read) fp_post_read(parent); }$/;"	f	struct:lgfx::v1::DataWrapper
postSetColorDepth	src/lgfx/v0/LGFX_Device.hpp	/^    void postSetColorDepth(void)$/;"	f	class:lgfx::v0::LGFX_Device
postSetPanel	src/lgfx/v0/LGFX_Device.hpp	/^    virtual void postSetPanel(void) {}$/;"	f	class:lgfx::v0::LGFX_Device
postSetRotation	src/lgfx/v0/LGFX_Device.hpp	/^    virtual void postSetRotation(void) {}$/;"	f	class:lgfx::v0::LGFX_Device
postSetRotation	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void postSetRotation(void)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
postSetTouch	src/lgfx/v0/LGFX_Device.hpp	/^    virtual void postSetTouch(void)$/;"	f	class:lgfx::v0::LGFX_Device
post_init	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual void post_init(LGFX_Device*, bool use_reset) { (void)use_reset; }$/;"	f	struct:lgfx::v0::PanelCommon
post_init	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::post_init(LGFX_Device* gfx, bool use_reset)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
post_init	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::post_init(LGFX_Device* gfx, bool use_reset)$/;"	f	class:lgfx::v0::Panel_IT8951
powerSave	src/lgfx/v0/LGFX_Device.hpp	/^    void powerSave(bool flg)$/;"	f	class:lgfx::v0::LGFX_Device
powerSave	src/lgfx/v1/LGFXBase.hpp	/^    inline void powerSave(bool flg) { _panel->setPowerSave(flg); }$/;"	f	class:lgfx::v1::LGFX_Device
powerSaveOff	src/lgfx/v0/LGFX_Device.hpp	/^    void powerSaveOff(void) { powerSave(false); }$/;"	f	class:lgfx::v0::LGFX_Device
powerSaveOff	src/lgfx/v1/LGFXBase.hpp	/^    inline void powerSaveOff(void) { _panel->setPowerSave(false); }$/;"	f	class:lgfx::v1::LGFX_Device
powerSaveOn	src/lgfx/v0/LGFX_Device.hpp	/^    void powerSaveOn( void) { powerSave(true ); }$/;"	f	class:lgfx::v0::LGFX_Device
powerSaveOn	src/lgfx/v1/LGFXBase.hpp	/^    inline void powerSaveOn(void) { _panel->setPowerSave(true); }$/;"	f	class:lgfx::v1::LGFX_Device
preCommandList	src/lgfx/v0/LGFX_Device.hpp	/^    virtual void preCommandList(void) {}$/;"	f	class:lgfx::v0::LGFX_Device
preInit	src/lgfx/v0/LGFX_Device.hpp	/^    virtual void preInit(void) {}$/;"	f	class:lgfx::v0::LGFX_Device
preInit	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void preInit(void)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
preRead	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline void preRead(void) { if (fp_pre_read) fp_pre_read(parent); }$/;"	f	struct:lgfx::DataWrapper
preRead	src/lgfx/v1/misc/DataWrapper.hpp	/^    LGFX_INLINE void preRead(void) { if (fp_pre_read) fp_pre_read(parent); }$/;"	f	struct:lgfx::v1::DataWrapper
prefix_cmd	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      uint32_t prefix_cmd = 0x00;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_cmd	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      uint32_t prefix_cmd = 0x00;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_cmd	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      uint32_t prefix_cmd = 0x00;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_cmd	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      uint32_t prefix_cmd = 0x00;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_cmd	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      uint32_t prefix_cmd = 0x00;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_data	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      uint32_t prefix_data = 0x40;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_data	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      uint32_t prefix_data = 0x40;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_data	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      uint32_t prefix_data = 0x40;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_data	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      uint32_t prefix_data = 0x40;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_data	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      uint32_t prefix_data = 0x40;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_len	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      uint32_t prefix_len = 1;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_len	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      uint32_t prefix_len = 1;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_len	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      uint32_t prefix_len = 1;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_len	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      uint32_t prefix_len = 1;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prefix_len	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      uint32_t prefix_len = 1;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
prepare	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    inline bool IRAM_ATTR prepare(const uint8_t* ptr)$/;"	f	class:lgfx::v1::scanline_cache_t
prepareCommandBitsMasterWire	src/lgfx/v1/platforms/samd21/common.cpp	/^    static inline void prepareCommandBitsMasterWire(SercomI2cm *i2cm, uint8_t cmd)$/;"	f	namespace:lgfx::v1::i2c
prepareTmpTransaction	src/lgfx/v0/LGFXBase.hpp	/^    void prepareTmpTransaction(DataWrapper* data)$/;"	f	class:lgfx::v0::LGFXBase
prepareTmpTransaction	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::prepareTmpTransaction(DataWrapper* data)$/;"	f	class:lgfx::v1::LGFXBase
prescale_map	src/lgfx/v1/platforms/rp2040/common.cpp	/^      std::unordered_map<uint32_t, std::array<uint32_t, 3>> prescale_map;$/;"	m	namespace:lgfx::v1::i2c::__anon57	file:
press	src/lgfx/v1/LGFX_Button.hpp	/^    void press(bool p)$/;"	f	class:lgfx::v1::LGFX_Button
prev_index	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    int prev_index;$/;"	m	class:lgfx::v1::scanline_cache_t	file:
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(char c)                { return write(c); }$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(const char str[])      { return write(str); }$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(double        n, int digits= 2) { return printFloat(n, digits); }$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(int  n, int base = 10) { return print((long)n, base); }$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(long n, int base = 10)$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(unsigned char n, int base = 10) { return print((unsigned long)n, base); }$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(unsigned int  n, int base = 10) { return print((unsigned long)n, base); }$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v0/LGFXBase.hpp	/^    size_t print(unsigned long n, int base = 10) { return (base) ? printNumber(n, base) : write(n); }$/;"	f	class:lgfx::v0::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(char c)                { return write(c); }$/;"	f	class:lgfx::v1::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(const char str[])      { return write(str); }$/;"	f	class:lgfx::v1::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(double        n, int digits= 2) { return printFloat(n, digits); }$/;"	f	class:lgfx::v1::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(int  n, int base = 10) { return print((long)n, base); }$/;"	f	class:lgfx::v1::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(long n, int base = 10)$/;"	f	class:lgfx::v1::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(unsigned char n, int base = 10) { return print((unsigned long)n, base); }$/;"	f	class:lgfx::v1::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(unsigned int  n, int base = 10) { return print((unsigned long)n, base); }$/;"	f	class:lgfx::v1::LGFXBase
print	src/lgfx/v1/LGFXBase.hpp	/^    size_t print(unsigned long n, int base = 10) { return (base) ? printNumber(n, base) : write(n); }$/;"	f	class:lgfx::v1::LGFXBase
printFloat	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::printFloat(double number, uint8_t digits)$/;"	f	class:lgfx::v0::LGFXBase
printFloat	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::printFloat(double number, uint8_t digits)$/;"	f	class:lgfx::v1::LGFXBase
printNumber	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::printNumber(unsigned long n, uint8_t base)$/;"	f	class:lgfx::v0::LGFXBase
printNumber	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::printNumber(unsigned long n, uint8_t base)$/;"	f	class:lgfx::v1::LGFXBase
printf	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::printf(const char * format, ...)$/;"	f	class:lgfx::v0::LGFXBase
printf	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::printf(const char * __restrict format, ...)$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(char c        )                 { size_t t = print(c); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(const char c[])                 { size_t t = print(c); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(double        n, int digits= 2) { size_t t = print(n, digits); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(int  n, int base = 10)          { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(long n, int base = 10)          { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(unsigned char n, int base = 10) { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(unsigned int  n, int base = 10) { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(unsigned long n, int base = 10) { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v0/LGFXBase.hpp	/^    size_t println(void) { return print("\\r\\n"); }$/;"	f	class:lgfx::v0::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(char c        )                 { size_t t = print(c); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(const char c[])                 { size_t t = print(c); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(double        n, int digits= 2) { size_t t = print(n, digits); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(int  n, int base = 10)          { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(long n, int base = 10)          { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(unsigned char n, int base = 10) { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(unsigned int  n, int base = 10) { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(unsigned long n, int base = 10) { size_t t = print(n,base); return println() + t; }$/;"	f	class:lgfx::v1::LGFXBase
println	src/lgfx/v1/LGFXBase.hpp	/^    size_t println(void) { return print("\\r\\n"); }$/;"	f	class:lgfx::v1::LGFXBase
psram_setting_t	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^    enum psram_setting_t$/;"	g	class:lgfx::v1::DividedFrameBuffer
ptr_advance	src/lgfx/v0/LGFX_Sprite.hpp	/^    inline int32_t ptr_advance(int32_t length = 1) {$/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffine	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushAffine(                float matrix[6])                  { push_affine(_parent, matrix); } $/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffine	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushAffine(LovyanGFX* dst, float matrix[6])                  { push_affine(    dst, matrix); } $/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffine	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushAffine(                float matrix[6], const T& transp) { push_affine(_parent, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffine	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushAffine(LovyanGFX* dst, float matrix[6], const T& transp) { push_affine(    dst, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffine	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushAffine(                const float matrix[6])                  { push_affine(_parent, matrix); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushAffine	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushAffine(LovyanGFX* dst, const float matrix[6])                  { push_affine(    dst, matrix); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushAffine	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushAffine(                const float matrix[6], const T& transp) { push_affine(_parent, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushAffine	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushAffine(LovyanGFX* dst, const float matrix[6], const T& transp) { push_affine(    dst, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushAffineWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushAffineWithAA(                float matrix[6])                  { push_affine_aa(_parent, matrix); } $/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffineWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushAffineWithAA(LovyanGFX* dst, float matrix[6])                  { push_affine_aa(    dst, matrix); } $/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffineWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushAffineWithAA(                float matrix[6], const T& transp) { push_affine_aa(_parent, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffineWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushAffineWithAA(LovyanGFX* dst, float matrix[6], const T& transp) { push_affine_aa(    dst, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushAffineWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushAffineWithAA(                const float matrix[6])                  { push_affine_aa(_parent, matrix); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushAffineWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushAffineWithAA(LovyanGFX* dst, const float matrix[6])                  { push_affine_aa(    dst, matrix); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushAffineWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushAffineWithAA(                const float matrix[6], const T& transp) { push_affine_aa(_parent, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushAffineWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushAffineWithAA(LovyanGFX* dst, const float matrix[6], const T& transp) { push_affine_aa(    dst, matrix, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushBlock	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void pushBlock  ( const T& color, int32_t length) { if (0 >= length) return; setColor(color); startWrite(); pushBlock_impl(length); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushBlock	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::pushBlock(PanelCommon* panel, LGFX_Device* gfx, int32_t length, uint32_t rawcolor)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
pushBlock	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::pushBlock(PanelCommon* panel, LGFX_Device* gfx, int32_t length, uint32_t rawcolor)$/;"	f	class:lgfx::v0::Panel_IT8951
pushBlock	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void pushBlock       ( const T& color, uint32_t length) { if (0 == length) return; setColor(color); startWrite(); _panel->writeBlock(getRawColor(), length); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushColor	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushBlock")]] void pushColor(const T& color                     ) {                          setColor(color); startWrite(); pushBlock_impl(1);      endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColor	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushBlock")]] void pushColor(const T& color, int32_t length) { if (0 >= length) return; setColor(color); startWrite(); pushBlock_impl(length); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColor	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushBlock")]] void pushColor(const T& color                     ) {                     setColor(color); startWrite(); _panel->writeBlock(getRawColor(), 1);      endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushColor	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushBlock")]] void pushColor(const T& color, uint32_t length) { if (0 != length) { setColor(color); startWrite(); _panel->writeBlock(getRawColor(), length); endWrite(); } }$/;"	f	class:lgfx::v1::LGFXBase
pushColors	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(T*              data, int32_t len           ) { startWrite(); writePixels(data, len            ); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColors	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const uint16_t* data, int32_t len           ) { startWrite(); writePixels(data, len, _swapBytes); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColors	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const uint16_t* data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColors	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const uint8_t*  data, int32_t len           ) { startWrite(); writePixels((const rgb332_t*)data, len); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColors	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const void*     data, int32_t len           ) { startWrite(); writePixels(data, len, _swapBytes); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColors	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const void*     data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushColors	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(T*              data, int32_t len           ) { startWrite(); writePixels(data, len            ); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushColors	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const uint16_t* data, int32_t len           ) { startWrite(); writePixels(data, len, _swapBytes); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushColors	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const uint16_t* data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushColors	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const uint8_t*  data, int32_t len           ) { startWrite(); writePixels((const rgb332_t*)data, len); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushColors	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const void*     data, int32_t len           ) { startWrite(); writePixels(data, len, _swapBytes); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushColors	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushPixels")]] void pushColors(const void*     data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushGrayscaleImage	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void pushGrayscaleImage(int32_t x, int32_t y, int32_t w, int32_t h, const uint8_t* image, color_depth_t depth, const T& forecolor, const T& backcolor) { push_grayimage(x, y, w, h, image, depth, convert_to_rgb888(forecolor), convert_to_rgb888(backcolor)); }$/;"	f	class:lgfx::v1::LGFXBase
pushGrayscaleImageAffine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void pushGrayscaleImageAffine(const float matrix[6], int32_t w, int32_t h, const uint8_t* image, color_depth_t depth, const T& forecolor, const T& backcolor) { push_grayimage_affine(matrix, w, h, image, depth, convert_to_rgb888(forecolor), convert_to_rgb888(backcolor)); }$/;"	f	class:lgfx::v1::LGFXBase
pushGrayscaleImageRotateZoom	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void pushGrayscaleImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const uint8_t* image, color_depth_t depth, const T& forecolor, const T& backcolor) { push_grayimage_rotate_zoom(dst_x, dst_y, src_x, src_y, angle, zoom_x, zoom_y, w, h, image, depth, convert_to_rgb888(forecolor), convert_to_rgb888(backcolor)); }$/;"	f	class:lgfx::v1::LGFXBase
pushImage	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, pixelcopy_t *param, bool use_dma)$/;"	f	class:lgfx::v0::LGFXBase
pushImage	src/lgfx/v0/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v0::LGFXBase
pushImage	src/lgfx/v0/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v0::LGFXBase
pushImage	src/lgfx/v0/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImage	src/lgfx/v0/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImage	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::pushImage(PanelCommon* panel, LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
pushImage	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::pushImage(PanelCommon* panel, LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v0::Panel_IT8951
pushImage	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::pushImage(int32_t x, int32_t y, int32_t w, int32_t h, pixelcopy_t *param, bool use_dma)$/;"	f	class:lgfx::v1::LGFXBase
pushImage	src/lgfx/v1/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v1::LGFXBase
pushImage	src/lgfx/v1/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v1::LGFXBase
pushImage	src/lgfx/v1/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImage	src/lgfx/v1/LGFXBase.hpp	/^    void pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffine	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffine	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffine	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffine	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffine	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffine	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffine	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffine	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffine(const float matrix[6], int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffineWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffineWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffineWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffineWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageAffineWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffineWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffineWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageAffineWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageAffineWithAA(const float matrix[6], int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageDMA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageDMA(int32_t x, int32_t y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v0::LGFXBase
pushImageDMA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageDMA(int32_t x, int32_t y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageDMA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageDMA(int32_t x, int32_t y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v1::LGFXBase
pushImageDMA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageDMA(int32_t x, int32_t y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoom	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoom	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoom	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoom	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoom	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoom	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoom	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoom	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v0/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v0::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T* data)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const T1* data, const T2& transparent)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushImageRotateZoomWithAA	src/lgfx/v1/LGFXBase.hpp	/^    void pushImageRotateZoomWithAA(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const void* data, uint32_t transparent, color_depth_t depth, const T* palette)$/;"	f	class:lgfx::v1::LGFXBase
pushPixels	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void pushPixels(T*              data, int32_t len           ) { startWrite(); writePixels(data, len      ); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushPixels	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void pushPixels(const uint16_t* data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushPixels	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void pushPixels(const void*     data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushPixels	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void pushPixels(const uint16_t* data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushPixels	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void pushPixels(const void*     data, int32_t len, bool swap) { startWrite(); writePixels(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushPixels	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void pushPixels(T*              data, int32_t len           ) { startWrite(); writePixels(data, len      ); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushPixelsDMA	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void pushPixelsDMA( const void* data, int32_t len) { if (len < 0) return; startWrite(); writePixelsDMA_impl(data, len); endWrite(); }$/;"	f	class:lgfx::v0::LGFXBase
pushPixelsDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void pushPixelsDMA(const uint16_t* data, int32_t len, bool swap) { startWrite(); writePixelsDMA(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushPixelsDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void pushPixelsDMA(const void*     data, int32_t len, bool swap) { startWrite(); writePixelsDMA(data, len, swap); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushPixelsDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void pushPixelsDMA(T*              data, int32_t len           ) { startWrite(); writePixelsDMA(data, len      ); endWrite(); }$/;"	f	class:lgfx::v1::LGFXBase
pushRect	src/lgfx/v0/LGFXBase.hpp	/^    [[deprecated("use pushImage")]] void pushRect( int32_t x, int32_t y, int32_t w, int32_t h, const T* data) { pushImage(x, y, w, h, data); }$/;"	f	class:lgfx::v0::LGFXBase
pushRect	src/lgfx/v1/LGFXBase.hpp	/^    [[deprecated("use pushImage")]] void pushRect( int32_t x, int32_t y, int32_t w, int32_t h, const T* data) { pushImage(x, y, w, h, data); }$/;"	f	class:lgfx::v1::LGFXBase
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoom(                                          float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoom(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoom(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoom(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(                                          float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoom(                                          float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoom(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoom(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoom(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(                                          float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoom	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoom(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(                                          float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(                                          float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(                                          float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotateZoomWithAA(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y)                  { push_rotate_zoom_aa(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(                                          float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(                float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(_parent,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(LovyanGFX* dst                          , float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(    dst,     dst->getPivotX(),     dst->getPivotY(), angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotateZoomWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotateZoomWithAA(LovyanGFX* dst, float dst_x, float dst_y, float angle, float zoom_x, float zoom_y, const T& transp) { push_rotate_zoom_aa(    dst,                dst_x,                dst_y, angle, zoom_x, zoom_y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotated	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotated(                float angle                 ) { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotated	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotated(LovyanGFX* dst, float angle                 ) { push_rotate_zoom(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotated	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotated(                float angle, const T& transp) { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotated	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotated(LovyanGFX* dst, float angle, const T& transp) { push_rotate_zoom(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotated	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotated(                float angle                 ) { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotated	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotated(LovyanGFX* dst, float angle                 ) { push_rotate_zoom(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotated	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotated(                float angle, const T& transp) { push_rotate_zoom(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotated	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotated(LovyanGFX* dst, float angle, const T& transp) { push_rotate_zoom(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotatedWithAA(                float angle                 ) { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^                         void pushRotatedWithAA(LovyanGFX* dst, float angle                 ) { push_rotate_zoom_aa(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotatedWithAA(                float angle, const T& transp) { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v0/LGFX_Sprite.hpp	/^    template<typename T> void pushRotatedWithAA(LovyanGFX* dst, float angle, const T& transp) { push_rotate_zoom_aa(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotatedWithAA(                float angle                 ) { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^                         void pushRotatedWithAA(LovyanGFX* dst, float angle                 ) { push_rotate_zoom_aa(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotatedWithAA(                float angle, const T& transp) { push_rotate_zoom_aa(_parent, _parent->getPivotX(), _parent->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushRotatedWithAA	src/lgfx/v1/LGFX_Sprite.hpp	/^    template<typename T> void pushRotatedWithAA(LovyanGFX* dst, float angle, const T& transp) { push_rotate_zoom_aa(dst    , dst    ->getPivotX(), dst    ->getPivotY(), angle, 1.0f, 1.0f, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushSprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    __attribute__ ((always_inline)) inline void pushSprite(                int32_t x, int32_t y) { push_sprite(_parent, x, y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushSprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    __attribute__ ((always_inline)) inline void pushSprite(                int32_t x, int32_t y, const T& transp) { push_sprite(_parent, x, y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushSprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    __attribute__ ((always_inline)) inline void pushSprite(LovyanGFX* dst, int32_t x, int32_t y) { push_sprite(    dst, x, y); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushSprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    __attribute__ ((always_inline)) inline void pushSprite(LovyanGFX* dst, int32_t x, int32_t y, const T& transp) { push_sprite(    dst, x, y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v0::LGFX_Sprite
pushSprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void pushSprite(                int32_t x, int32_t y) { push_sprite(_parent, x, y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushSprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void pushSprite(                int32_t x, int32_t y, const T& transp) { push_sprite(_parent, x, y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushSprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void pushSprite(LovyanGFX* dst, int32_t x, int32_t y) { push_sprite(    dst, x, y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
pushSprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void pushSprite(LovyanGFX* dst, int32_t x, int32_t y, const T& transp) { push_sprite(    dst, x, y, _write_conv.convert(transp) & _write_conv.colormask); }$/;"	f	class:lgfx::v1::LGFX_Sprite
push_affine	src/lgfx/v0/LGFX_Sprite.hpp	/^    void push_affine(LovyanGFX* dst, float matrix[6], uint32_t transp = ~0)$/;"	f	class:lgfx::v0::LGFX_Sprite
push_affine	src/lgfx/v1/LGFX_Sprite.hpp	/^    void push_affine(LovyanGFX* dst, const float matrix[6], uint32_t transp = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFX_Sprite
push_affine_aa	src/lgfx/v0/LGFX_Sprite.hpp	/^    void push_affine_aa(LovyanGFX* dst, float matrix[6], uint32_t transp = ~0)$/;"	f	class:lgfx::v0::LGFX_Sprite
push_affine_aa	src/lgfx/v1/LGFX_Sprite.hpp	/^    void push_affine_aa(LovyanGFX* dst, const float matrix[6], uint32_t transp = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFX_Sprite
push_block	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void push_block(int32_t length, bool fillclock = false)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
push_block	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void push_block(int32_t length, bool fillclock = false)$/;"	f	class:lgfx::v0::LGFX_SPI
push_block	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void push_block(int32_t length, bool fillclock = false)$/;"	f	class:lgfx::v0::LGFX_SPI
push_grayimage	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_grayimage(int32_t x, int32_t y, int32_t w, int32_t h, const uint8_t *image, color_depth_t depth, uint32_t fore_rgb888, uint32_t back_rgb888)$/;"	f	class:lgfx::v1::LGFXBase
push_grayimage_affine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_grayimage_affine(const float* matrix, int32_t w, int32_t h, const uint8_t *image, color_depth_t depth, uint32_t fore_rgb888, uint32_t back_rgb888)$/;"	f	class:lgfx::v1::LGFXBase
push_grayimage_rotate_zoom	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_grayimage_rotate_zoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, const uint8_t* image, color_depth_t depth, uint32_t fore_rgb888, uint32_t back_rgb888)$/;"	f	class:lgfx::v1::LGFXBase
push_image	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void push_image(int32_t x, int32_t y, int32_t w, int32_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v0::LGFX_SPI
push_image_affine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::push_image_affine(const float* matrix, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v0::LGFXBase
push_image_affine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::push_image_affine(const float* matrix, pixelcopy_t* pc)$/;"	f	class:lgfx::v0::LGFXBase
push_image_affine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_image_affine(const float* matrix, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v1::LGFXBase
push_image_affine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_image_affine(const float* matrix, pixelcopy_t* pc)$/;"	f	class:lgfx::v1::LGFXBase
push_image_affine_aa	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::push_image_affine_aa(const float* matrix, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v0::LGFXBase
push_image_affine_aa	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::push_image_affine_aa(const float* matrix, pixelcopy_t* pc, pixelcopy_t* pc2)$/;"	f	class:lgfx::v0::LGFXBase
push_image_affine_aa	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_image_affine_aa(const float* matrix, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v1::LGFXBase
push_image_affine_aa	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_image_affine_aa(const float* matrix, pixelcopy_t* pc, pixelcopy_t* pc2)$/;"	f	class:lgfx::v1::LGFXBase
push_image_rotate_zoom	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::push_image_rotate_zoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v0::LGFXBase
push_image_rotate_zoom	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_image_rotate_zoom(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v1::LGFXBase
push_image_rotate_zoom_aa	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::push_image_rotate_zoom_aa(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v0::LGFXBase
push_image_rotate_zoom_aa	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::push_image_rotate_zoom_aa(float dst_x, float dst_y, float src_x, float src_y, float angle, float zoom_x, float zoom_y, int32_t w, int32_t h, pixelcopy_t* pc)$/;"	f	class:lgfx::v1::LGFXBase
push_rotate_zoom	src/lgfx/v0/LGFX_Sprite.hpp	/^    void push_rotate_zoom(LovyanGFX* dst, float x, float y, float angle, float zoom_x, float zoom_y, uint32_t transp = ~0)$/;"	f	class:lgfx::v0::LGFX_Sprite
push_rotate_zoom	src/lgfx/v1/LGFX_Sprite.hpp	/^    void push_rotate_zoom(LovyanGFX* dst, float x, float y, float angle, float zoom_x, float zoom_y, uint32_t transp = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFX_Sprite
push_rotate_zoom_aa	src/lgfx/v0/LGFX_Sprite.hpp	/^    void push_rotate_zoom_aa(LovyanGFX* dst, float x, float y, float angle, float zoom_x, float zoom_y, uint32_t transp = ~0)$/;"	f	class:lgfx::v0::LGFX_Sprite
push_rotate_zoom_aa	src/lgfx/v1/LGFX_Sprite.hpp	/^    void push_rotate_zoom_aa(LovyanGFX* dst, float x, float y, float angle, float zoom_x, float zoom_y, uint32_t transp = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFX_Sprite
push_sprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    void push_sprite(LovyanGFX* dst, int32_t x, int32_t y, uint32_t transp = ~0)$/;"	f	class:lgfx::v0::LGFX_Sprite
push_sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    void push_sprite(LovyanGFX* dst, int32_t x, int32_t y, uint32_t transp = pixelcopy_t::NON_TRANSP)$/;"	f	class:lgfx::v1::LGFX_Sprite
pwm_ch_bl	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast8_t pwm_ch_bl = -1;       \/\/ backlight PWM channel number$/;"	m	struct:lgfx::v0::PanelCommon
pwm_channel	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^      uint8_t pwm_channel = 7;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
pwm_channel	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^      uint8_t pwm_channel = 0;$/;"	m	struct:lgfx::v1::Light_PWM::config_t
pwm_freq	src/lgfx/v0/panel/PanelCommon.hpp	/^    uint_fast16_t pwm_freq = 12000;   \/\/ backlight PWM freq Hz$/;"	m	struct:lgfx::v0::PanelCommon
px	src/lgfx/utility/lgfx_qoi.c	/^  qoi_rgba_t px;$/;"	m	struct:_qoi_t	file:
qoi_desc_t	src/lgfx/utility/lgfx_qoi.c	/^} qoi_desc_t;$/;"	t	typeref:struct:_qoi_desc_t	file:
qoi_desc_t	src/lgfx/utility/lgfx_qoi.h	/^typedef struct _qoi_desc_t qoi_desc_t;$/;"	t	typeref:struct:_qoi_desc_t
qoi_flag_t	src/lgfx/utility/lgfx_qoi.c	/^} qoi_flag_t;$/;"	t	typeref:enum:__anon550	file:
qoi_padding	src/lgfx/utility/lgfx_qoi.c	/^static const uint8_t qoi_padding[8] = {0,0,0,0,0,0,0,1};$/;"	v	file:
qoi_rgba_t	src/lgfx/utility/lgfx_qoi.c	/^} qoi_rgba_t;$/;"	t	typeref:union:__anon548	file:
qoi_sig	src/lgfx/utility/lgfx_qoi.c	/^static const uint32_t qoi_sig = 0x716F6966; \/\/ {'q','o','i','f'};$/;"	v	file:
qoi_t	src/lgfx/utility/lgfx_qoi.h	/^typedef struct _qoi_t qoi_t;$/;"	t	typeref:struct:_qoi_t
qrcode	src/lgfx/v0/LGFXBase.cpp	/^    void LGFXBase::qrcode(const char *string, int32_t x, int32_t y, int32_t width, uint8_t version) {$/;"	f	class:lgfx::v0::LGFXBase
qrcode	src/lgfx/v0/LGFXBase.hpp	/^    void qrcode(const String &string, int32_t x = -1, int32_t y = -1, int32_t width = -1, uint8_t version = 1) {$/;"	f	class:lgfx::v0::LGFXBase
qrcode	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::qrcode(const char *string, int32_t x, int32_t y, int32_t w, uint8_t version) {$/;"	f	class:lgfx::v1::LGFXBase
qrcode	src/lgfx/v1/LGFXBase.hpp	/^    void qrcode(const String &string, int32_t x = -1, int32_t y = -1, int32_t width = -1, uint8_t version = 1) {$/;"	f	class:lgfx::v1::LGFXBase
qtid	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast8_t qtid[3];		\/* Quantization table ID of each component *\/$/;"	m	struct:lgfxJdec
qttbl	src/lgfx/utility/lgfx_tjpgd.h	/^	int32_t* qttbl[4];			\/* Dequantizer tables [id] *\/$/;"	m	struct:lgfxJdec
quit_filter	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  int quit_filter(void * userdata, SDL_Event * event)$/;"	f	namespace:lgfx::v1
r	src/lgfx/utility/lgfx_qoi.c	/^  struct { unsigned char a, r, g, b; } rgba;$/;"	m	struct:__anon548::__anon549	file:
r	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t r: 5;$/;"	m	struct:lgfx::v0::rgb565_t::__anon488::__anon489
r	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t r:5;$/;"	m	struct:lgfx::v0::swap565_t::__anon494::__anon495
r	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t r: 3;$/;"	m	struct:lgfx::v0::rgb332_t::__anon486::__anon487
r	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v0::argb8888_t::__anon492::__anon493
r	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v0::bgr888_t::__anon496::__anon497
r	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v0::bgra8888_t::__anon498::__anon499
r	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v0::rgb888_t::__anon490::__anon491
r	src/lgfx/v0/lgfx_common.hpp	/^      uint8_t r;$/;"	m	union:lgfx::v0::grayscale_t::__anon500
r	src/lgfx/v0/lgfx_common.hpp	/^    uint8_t r;$/;"	m	struct:lgfx::v0::bgr666_t
r	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v1::argb8888_t::__anon34::__anon35
r	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v1::bgr888_t::__anon40::__anon41
r	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v1::bgra8888_t::__anon42::__anon43
r	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t r;$/;"	m	struct:lgfx::v1::rgb888_t::__anon32::__anon33
r	src/lgfx/v1/misc/colortype.hpp	/^      uint8_t r;$/;"	m	union:lgfx::v1::grayscale_t::__anon44
r	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t r;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon51
r3	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t r3: 3;$/;"	m	struct:lgfx::v1::rgb332_t::__anon28::__anon29
r5	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t r5: 5;$/;"	m	struct:lgfx::v1::rgb565_t::__anon30::__anon31
r5	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t r5:5;$/;"	m	struct:lgfx::v1::swap565_t::__anon36::__anon37
r6	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t r6;$/;"	m	struct:lgfx::v1::bgr666_t::__anon38::__anon39
range	src/lgfx/v0/lgfx_fonts.hpp	/^    EncodeRange *range;         \/\/ Array ofEncodeRange$/;"	m	struct:lgfx::v0::GFXfont
range	src/lgfx/v1/lgfx_fonts.hpp	/^    EncodeRange *range;         \/\/ Array ofEncodeRange$/;"	m	struct:lgfx::v1::GFXfont
range_num	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t range_num;    \/\/ Number of EncodeRange$/;"	m	struct:lgfx::v0::GFXfont
range_num	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t range_num;    \/\/ Number of EncodeRange$/;"	m	struct:lgfx::v1::GFXfont
range_rect_t	src/lgfx/v0/lgfx_common.hpp	/^  struct range_rect_t$/;"	s	namespace:lgfx
range_rect_t	src/lgfx/v1/misc/range.hpp	/^  struct range_rect_t$/;"	s	namespace:lgfx::v1
range_t	src/lgfx/v0/lgfx_common.hpp	/^    range_t(const range_t& rhs) : first(rhs.first), last(rhs.last) {}$/;"	f	struct:lgfx::range_t
range_t	src/lgfx/v0/lgfx_common.hpp	/^  struct range_t$/;"	s	namespace:lgfx
range_t	src/lgfx/v1/misc/range.hpp	/^  struct range_t$/;"	s	namespace:lgfx::v1
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint16_t raw;$/;"	m	union:lgfx::v0::rgb565_t::__anon488
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint16_t raw;$/;"	m	union:lgfx::v0::swap565_t::__anon494
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint32_t raw;$/;"	m	union:lgfx::v0::argb8888_t::__anon492
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint32_t raw;$/;"	m	union:lgfx::v0::bgra8888_t::__anon498
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint32_t raw;$/;"	m	union:lgfx::v0::raw_color_t::__anon501
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint8_t raw;$/;"	m	union:lgfx::v0::grayscale_t::__anon500
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint8_t raw;$/;"	m	union:lgfx::v0::rgb332_t::__anon486
raw	src/lgfx/v0/lgfx_common.hpp	/^      uint8_t raw[54];$/;"	m	union:lgfx::bitmap_header_t::__anon511
raw	src/lgfx/v1/misc/bitmap.hpp	/^      uint8_t raw[54];$/;"	m	union:lgfx::v1::bitmap_header_t::__anon52
raw	src/lgfx/v1/misc/colortype.hpp	/^      uint16_t raw;$/;"	m	union:lgfx::v1::rgb565_t::__anon30
raw	src/lgfx/v1/misc/colortype.hpp	/^      uint16_t raw;$/;"	m	union:lgfx::v1::swap565_t::__anon36
raw	src/lgfx/v1/misc/colortype.hpp	/^      uint32_t raw;$/;"	m	union:lgfx::v1::argb8888_t::__anon34
raw	src/lgfx/v1/misc/colortype.hpp	/^      uint32_t raw;$/;"	m	union:lgfx::v1::bgra8888_t::__anon42
raw	src/lgfx/v1/misc/colortype.hpp	/^      uint32_t raw;$/;"	m	union:lgfx::v1::raw_color_t::__anon45
raw	src/lgfx/v1/misc/colortype.hpp	/^      uint8_t raw;$/;"	m	union:lgfx::v1::grayscale_t::__anon44
raw	src/lgfx/v1/misc/colortype.hpp	/^      uint8_t raw;$/;"	m	union:lgfx::v1::rgb332_t::__anon28
raw0	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t raw0;$/;"	m	struct:lgfx::v0::raw_color_t::__anon501::__anon502
raw0	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t raw0;$/;"	m	struct:lgfx::v1::raw_color_t::__anon45::__anon46
raw1	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t raw1;$/;"	m	struct:lgfx::v0::raw_color_t::__anon501::__anon502
raw1	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t raw1;$/;"	m	struct:lgfx::v1::raw_color_t::__anon45::__anon46
raw2	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t raw2;$/;"	m	struct:lgfx::v0::raw_color_t::__anon501::__anon502
raw2	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t raw2;$/;"	m	struct:lgfx::v1::raw_color_t::__anon45::__anon46
raw3	src/lgfx/v0/lgfx_common.hpp	/^        uint8_t raw3;$/;"	m	struct:lgfx::v0::raw_color_t::__anon501::__anon502
raw3	src/lgfx/v1/misc/colortype.hpp	/^        uint8_t raw3;$/;"	m	struct:lgfx::v1::raw_color_t::__anon45::__anon46
rawH	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t rawH;$/;"	m	struct:lgfx::v0::raw_color_t::__anon501::__anon503
rawH	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t rawH;$/;"	m	struct:lgfx::v1::raw_color_t::__anon45::__anon47
rawL	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t rawL;$/;"	m	struct:lgfx::v0::raw_color_t::__anon501::__anon503
rawL	src/lgfx/v1/misc/colortype.hpp	/^        uint16_t rawL;$/;"	m	struct:lgfx::v1::raw_color_t::__anon45::__anon47
raw_color_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr raw_color_t() : raw(0) {}$/;"	f	struct:lgfx::v0::raw_color_t
raw_color_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr raw_color_t(const uint32_t& rhs) : raw(rhs) {}$/;"	f	struct:lgfx::v0::raw_color_t
raw_color_t	src/lgfx/v0/lgfx_common.hpp	/^  struct raw_color_t$/;"	s	namespace:lgfx::v0
raw_color_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr raw_color_t() : raw(0) {}$/;"	f	struct:lgfx::v1::raw_color_t
raw_color_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr raw_color_t(const uint32_t& rhs) : raw(rhs) {}$/;"	f	struct:lgfx::v1::raw_color_t
raw_color_t	src/lgfx/v1/misc/colortype.hpp	/^  struct raw_color_t$/;"	s	namespace:lgfx::v1
read	src/lgfx/v1/misc/DataWrapper.hpp	/^    virtual int read(uint8_t *buf, uint32_t maximum_len, uint32_t required_len) { return read(buf, maximum_len); }$/;"	f	struct:lgfx::v1::DataWrapper
read16	src/lgfx/v0/lgfx_common.hpp	/^    uint16_t read16(void) {$/;"	f	struct:lgfx::DataWrapper
read16	src/lgfx/v1/misc/DataWrapper.hpp	/^    uint16_t read16(void)$/;"	f	struct:lgfx::v1::DataWrapper
read16swap	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline uint16_t read16swap(void) { return __builtin_bswap16(read16()); }$/;"	f	struct:lgfx::DataWrapper
read16swap	src/lgfx/v1/misc/DataWrapper.hpp	/^    LGFX_INLINE uint16_t read16swap(void) { auto r = read16(); return (r<<8)+(r>>8); }$/;"	f	struct:lgfx::v1::DataWrapper
read32	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t read32(void) {$/;"	f	struct:lgfx::DataWrapper
read32	src/lgfx/v1/misc/DataWrapper.hpp	/^    uint32_t read32(void) {$/;"	f	struct:lgfx::v1::DataWrapper
read32swap	src/lgfx/v0/lgfx_common.hpp	/^    __attribute__ ((always_inline)) inline uint32_t read32swap(void) { return __builtin_bswap32(read32()); }$/;"	f	struct:lgfx::DataWrapper
read32swap	src/lgfx/v1/misc/DataWrapper.hpp	/^    LGFX_INLINE uint32_t read32swap(void) { auto r = read32(); return r = (r >> 16) + (r << 16); return ((r >> 8) & 0xFF00FF) + ((r & 0xFF00FF) << 8); }$/;"	f	struct:lgfx::v1::DataWrapper
read8	src/lgfx/v1/misc/DataWrapper.hpp	/^    uint8_t read8(void)$/;"	f	struct:lgfx::v1::DataWrapper
readBytes	src/lgfx/v0/LGFX_Device.hpp	/^    void readBytes(uint8_t* dst, int32_t length) { readBytes_impl(dst, length); }$/;"	f	class:lgfx::v0::LGFX_Device
readBytes	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readBytes	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  bool Bus_Stream::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Stream
readBytes	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> readBytes(int i2c_port, uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    void readBytes(int spi_host, uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  bool Bus_I2C::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
readBytes	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
readBytes	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readBytes	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> readBytes(int i2c_port, uint8_t *readdata, size_t length)$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/esp32/common.cpp	/^    void readBytes(int spi_host, uint8_t* data, size_t len)$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
readBytes	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel16
readBytes	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
readBytes	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel16
readBytes	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
readBytes	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  bool Bus_I2C::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
readBytes	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readBytes	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> readBytes(int i2c_port, uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/esp8266/common.cpp	/^    void readBytes(int spi_host, uint8_t* data, size_t length)$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> readBytes(int i2c_port, uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    void readBytes(int spi_host, uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> readBytes(int i2c_port, uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/opencv/common.cpp	/^    void readBytes(int spi_host, uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  bool Bus_I2C::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
readBytes	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, [[maybe_unused]]bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readBytes	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> readBytes(int i2c_port, uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  bool Bus_I2C::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
readBytes	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readBytes	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> readBytes(int sercom_index, uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/samd21/common.cpp	/^    void readBytes(int sercom_index, uint8_t* data, size_t length)$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  bool Bus_I2C::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
readBytes	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readBytes	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> readBytes(int sercom_index, uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/samd51/common.cpp	/^    void readBytes(int sercom_index, uint8_t* data, size_t length)$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> readBytes(int i2c_port, uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/sdl/common.cpp	/^    void readBytes(int spi_host, uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readBytes	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> readBytes(int , uint8_t *, size_t ) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readBytes	src/lgfx/v1/platforms/spresense/common.cpp	/^    void readBytes(int , uint8_t* , size_t ) {}$/;"	f	namespace:lgfx::v1::spi
readBytes	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  bool Bus_SPI::readBytes(uint8_t* dst, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
readChipID	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  Panel_M5HDMI::HDMI_Trans::ChipID Panel_M5HDMI::HDMI_Trans::readChipID(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
readCommand	src/lgfx/v1/panel/Panel_LCD.cpp	/^  uint32_t Panel_LCD::readCommand(uint_fast16_t cmd, uint_fast8_t index, uint_fast8_t length)$/;"	f	class:lgfx::v1::Panel_LCD
readCommand16	src/lgfx/v0/LGFX_Device.hpp	/^    uint16_t readCommand16(uint_fast8_t cmd, uint_fast8_t index=0) { return __builtin_bswap16(readCommand(cmd, index, 2)); }$/;"	f	class:lgfx::v0::LGFX_Device
readCommand32	src/lgfx/v0/LGFX_Device.hpp	/^    uint32_t readCommand32(uint_fast8_t cmd, uint_fast8_t index=0) { return __builtin_bswap32(readCommand(cmd, index, 4)); }$/;"	f	class:lgfx::v0::LGFX_Device
readCommand8	src/lgfx/v0/LGFX_Device.hpp	/^    uint8_t  readCommand8( uint_fast8_t cmd, uint_fast8_t index=0) { return readCommand(cmd, index, 1); }$/;"	f	class:lgfx::v0::LGFX_Device
readData	src/lgfx/v0/platforms/esp32_common.cpp	/^    void readData(int spi_host, uint8_t* data, uint32_t len)$/;"	f	namespace:lgfx::v0::spi
readData	src/lgfx/v0/platforms/samd51_common.cpp	/^    void readData(int, uint8_t*, uint32_t) {}$/;"	f	namespace:lgfx::v0::spi
readData	src/lgfx/v1/panel/Panel_LCD.cpp	/^  uint32_t Panel_LCD::readData(uint_fast8_t index, uint_fast8_t len)$/;"	f	class:lgfx::v1::Panel_LCD
readData	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  uint32_t Bus_Stream::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Stream
readData	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  uint32_t Bus_I2C::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
readData	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  uint32_t Bus_Parallel8::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readData	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  uint32_t Bus_Parallel8::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readData	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  uint32_t Bus_Parallel16::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel16
readData	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  uint32_t Bus_Parallel8::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readData	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  uint32_t Bus_Parallel16::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel16
readData	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  uint32_t Bus_Parallel8::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readData	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  uint32_t Bus_I2C::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
readData	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  uint32_t Bus_I2C::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
readData	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  uint32_t Bus_I2C::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
readData	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  uint32_t Bus_I2C::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
readData	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  uint32_t Bus_SPI::readData(uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
readData	src/lgfx/v1/platforms/stm32/common.cpp	/^    void readData(int, uint8_t*, uint32_t) {}$/;"	f	namespace:lgfx::v1::spi
readData16	src/lgfx/v0/LGFX_Device.hpp	/^    uint16_t readData16(uint_fast8_t index=0) { return __builtin_bswap16(readData(index, 2)); }$/;"	f	class:lgfx::v0::LGFX_Device
readData16	src/lgfx/v1/LGFXBase.hpp	/^    inline uint16_t readData16(uint8_t index=0) { auto r = _panel->readData(index, 2); return (r<<8)+(r>>8); }$/;"	f	class:lgfx::v1::LGFX_Device
readData32	src/lgfx/v0/LGFX_Device.hpp	/^    uint32_t readData32(uint_fast8_t index=0) { return __builtin_bswap32(readData(index, 4)); }$/;"	f	class:lgfx::v0::LGFX_Device
readData32	src/lgfx/v1/LGFXBase.hpp	/^    inline uint32_t readData32(uint8_t index=0) { auto r = _panel->readData(index, 4); r=(r<<16)+(r>>16); return ((r>>8)&0xFF00FF)+((r&0xFF00FF)<<8); }$/;"	f	class:lgfx::v1::LGFX_Device
readData8	src/lgfx/v0/LGFX_Device.hpp	/^    uint8_t  readData8( uint_fast8_t index=0) { return readData(index, 1); }$/;"	f	class:lgfx::v0::LGFX_Device
readData8	src/lgfx/v1/LGFXBase.hpp	/^    inline uint8_t  readData8( uint8_t index=0) { return                   _panel->readData(index, 1) ; }$/;"	f	class:lgfx::v1::LGFX_Device
readDataMasterWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static inline uint8_t readDataMasterWIRE(SercomI2cm *i2cm)$/;"	f	namespace:lgfx::v1::i2c
readEDID	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  size_t Panel_M5HDMI::HDMI_Trans::readEDID(uint8_t* EDID, size_t len)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
readEDID	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  size_t Panel_M5HDMI::readEDID(uint8_t* EDID, size_t len)$/;"	f	class:lgfx::v1::Panel_M5HDMI
readPanelID	src/lgfx/v0/LGFX_Device.hpp	/^    uint32_t readPanelID(void) { return readCommand(_panel->getCmdRddid()); }$/;"	f	class:lgfx::v0::LGFX_Device
readPixel	src/lgfx/v0/LGFXBase.hpp	/^    uint16_t readPixel(int32_t x, int32_t y)$/;"	f	class:lgfx::v0::LGFXBase
readPixel	src/lgfx/v1/LGFXBase.hpp	/^    uint16_t readPixel(int32_t x, int32_t y)$/;"	f	class:lgfx::v1::LGFXBase
readPixelPreclipped	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  uint32_t Panel_FlexibleFrameBuffer::readPixelPreclipped(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
readPixelRGB	src/lgfx/v0/LGFXBase.hpp	/^    RGBColor readPixelRGB(int32_t x, int32_t y)$/;"	f	class:lgfx::v0::LGFXBase
readPixelRGB	src/lgfx/v1/LGFXBase.hpp	/^    RGBColor readPixelRGB(int32_t x, int32_t y)$/;"	f	class:lgfx::v1::LGFXBase
readPixelValue	src/lgfx/v0/LGFX_Sprite.hpp	/^    uint32_t readPixelValue(int32_t x, int32_t y)$/;"	f	class:lgfx::v0::LGFX_Sprite
readPixelValue	src/lgfx/v1/LGFX_Sprite.cpp	/^  uint32_t Panel_Sprite::readPixelValue(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_Sprite
readPixelValue	src/lgfx/v1/LGFX_Sprite.hpp	/^    uint32_t readPixelValue(int32_t x, int32_t y) { return _panel_sprite.readPixelValue(x, y); }$/;"	f	class:lgfx::v1::LGFX_Sprite
readPixels	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readPixels	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  void Bus_Stream::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Stream
readPixels	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
readPixels	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readPixels	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readPixels	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readPixels	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel16
readPixels	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readPixels	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel16
readPixels	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
readPixels	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
readPixels	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readPixels	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
readPixels	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readPixels	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
readPixels	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readPixels	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
readPixels	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readPixels	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readPixels	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::readPixels(void* dst, pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
readRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::readRect(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t* data)$/;"	f	class:lgfx::v0::LGFXBase
readRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::readRect(int32_t x, int32_t y, int32_t w, int32_t h, uint8_t* data)$/;"	f	class:lgfx::v0::LGFXBase
readRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::readRect(int32_t x, int32_t y, int32_t w, int32_t h, void* data)$/;"	f	class:lgfx::v0::LGFXBase
readRect	src/lgfx/v0/LGFXBase.hpp	/^    void readRect( int32_t x, int32_t y, int32_t w, int32_t h, T* data)$/;"	f	class:lgfx::v0::LGFXBase
readRect	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::readRect(PanelCommon* panel, LGFX_Device*, int32_t x, int32_t y, int32_t w, int32_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
readRect	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::readRect(PanelCommon* panel, LGFX_Device* gfx, int32_t x, int32_t y, int32_t w, int32_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v0::Panel_IT8951
readRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::readRect(int32_t x, int32_t y, int32_t w, int32_t h, uint16_t* data)$/;"	f	class:lgfx::v1::LGFXBase
readRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::readRect(int32_t x, int32_t y, int32_t w, int32_t h, uint8_t* data)$/;"	f	class:lgfx::v1::LGFXBase
readRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::readRect(int32_t x, int32_t y, int32_t w, int32_t h, void* data)$/;"	f	class:lgfx::v1::LGFXBase
readRect	src/lgfx/v1/LGFXBase.hpp	/^    void readRect( int32_t x, int32_t y, int32_t w, int32_t h, T* data)$/;"	f	class:lgfx::v1::LGFXBase
readRect	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_Sprite
readRect	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
readRect	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
readRect	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
readRect	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* __restrict dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_IT8951
readRect	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_LCD
readRect	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_M5HDMI
readRect	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
readRect	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  void Panel_NT35510::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_NT35510
readRect	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_RA8875
readRect	src/lgfx/v1/panel/Panel_RM68120.cpp	/^  void Panel_RM68120::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_RM68120
readRect	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_1bitOLED
readRect	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_SSD1327
readRect	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_fb
readRect	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_OpenCV
readRect	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::readRect(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_sdl
readRectRGB	src/lgfx/v0/LGFXBase.hpp	/^    void readRectRGB( int32_t x, int32_t y, int32_t w, int32_t h, RGBColor* data)$/;"	f	class:lgfx::v0::LGFXBase
readRectRGB	src/lgfx/v0/LGFXBase.hpp	/^    void readRectRGB( int32_t x, int32_t y, int32_t w, int32_t h, uint8_t* data) { readRectRGB(x, y, w, h, (bgr888_t*)data); }$/;"	f	class:lgfx::v0::LGFXBase
readRectRGB	src/lgfx/v1/LGFXBase.hpp	/^    void readRectRGB( int32_t x, int32_t y, int32_t w, int32_t h, RGBColor* data)$/;"	f	class:lgfx::v1::LGFXBase
readRectRGB	src/lgfx/v1/LGFXBase.hpp	/^    void readRectRGB( int32_t x, int32_t y, int32_t w, int32_t h, uint8_t* data) { readRectRGB(x, y, w, h, (bgr888_t*)data); }$/;"	f	class:lgfx::v1::LGFXBase
readRegister	src/lgfx/v0/platforms/esp32_common.cpp	/^    bool readRegister(int i2c_port, uint16_t addr, uint8_t reg, uint8_t *data, uint8_t len)$/;"	f	namespace:lgfx::v0::i2c
readRegister	src/lgfx/v0/platforms/samd51_common.cpp	/^    bool readRegister(int, uint16_t, uint8_t, uint8_t*, uint8_t)$/;"	f	namespace:lgfx::v0::i2c
readRegister	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  std::uint8_t Panel_M5HDMI::HDMI_Trans::readRegister(std::uint8_t register_address)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
readRegister	src/lgfx/v1/platforms/common.hpp	/^    inline cpp::result<void, error_t> readRegister(int i2c_port, int addr, uint8_t reg, uint8_t* data, size_t len, uint32_t freq = I2C_DEFAULT_FREQ)$/;"	f	namespace:lgfx::v1::i2c
readRegister	src/lgfx/v1/platforms/stm32/common.cpp	/^    bool readRegister(int, uint16_t, uint8_t, uint8_t*, uint8_t)$/;"	f	namespace:lgfx::v1::i2c
readRegister16	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  std::uint16_t Panel_M5HDMI::HDMI_Trans::readRegister16(std::uint8_t register_address)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
readRegister8	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^  uint8_t Touch_STMPE610::readRegister8(uint8_t reg)$/;"	f	class:lgfx::v0::Touch_STMPE610
readRegister8	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int i2c_port, int addr, uint8_t reg, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int i2c_port, int addr, uint8_t reg, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int i2c_port, int addr, uint8_t reg, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int i2c_port, int addr, uint8_t reg, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int i2c_port, int addr, uint8_t reg, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int i2c_port, int addr, uint8_t reg, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int sercom_index, int addr, uint8_t reg, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int sercom_index, int addr, uint8_t reg, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int i2c_port, int addr, uint8_t reg, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<uint8_t, error_t> readRegister8(int , int , uint8_t , uint32_t )  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
readRegister8	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^  uint8_t Touch_STMPE610::readRegister8(uint8_t reg)$/;"	f	class:lgfx::v1::Touch_STMPE610
read_bits	src/lgfx/v1/panel/Panel_LCD.cpp	/^  uint32_t Panel_LCD::read_bits(uint_fast8_t bit_index, uint_fast8_t bit_len)$/;"	f	class:lgfx::v1::Panel_LCD
read_buf	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t read_buf[LGFX_PNGLE_READBUF_LEN];$/;"	m	struct:_pngle_t	file:
read_buf	src/lgfx/utility/lgfx_qoi.c	/^  uint8_t read_buf[LGFX_QOI_READBUF_LEN];$/;"	m	struct:_qoi_t	file:
read_byte	src/lgfx/v1/platforms/esp8266/common.cpp	/^      uint8_t read_byte(bool nack)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
read_bytes	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void read_bytes(uint8_t* dst, int32_t length)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
read_bytes	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void read_bytes(uint8_t* dst, int32_t length, bool use_dma = false)$/;"	f	class:lgfx::v0::LGFX_SPI
read_bytes	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void read_bytes(uint8_t* dst, int32_t length)$/;"	f	class:lgfx::v0::LGFX_SPI
read_callback	src/lgfx/utility/lgfx_pngle.c	/^  lgfx_pngle_read_callback_t read_callback;$/;"	m	struct:_pngle_t	file:
read_cb	src/lgfx/utility/lgfx_qoi.c	/^  lgfx_qoi_read_callback_t read_cb;$/;"	m	struct:_qoi_t	file:
read_command	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t read_command(uint_fast8_t command, uint32_t bitindex = 0, uint32_t bitlen = 8)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
read_command	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t read_command(uint_fast8_t command, uint32_t bitindex = 0, uint32_t bitlen = 8)$/;"	f	class:lgfx::v0::LGFX_SPI
read_command	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t read_command(uint_fast8_t command, uint32_t bitindex = 0, uint32_t bitlen = 8)$/;"	f	class:lgfx::v0::LGFX_SPI
read_data	src/lgfx/v0/LGFXBase.cpp	/^    static uint32_t read_data(void* self, uint8_t* buf, uint32_t len)$/;"	f	struct:lgfx::v0::image_decoder_t
read_data	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    uint32_t read_data(uint32_t length)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
read_data	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    uint32_t read_data(uint32_t length)$/;"	f	class:lgfx::v0::LGFX_SPI
read_data	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uint32_t read_data(uint32_t length)$/;"	f	class:lgfx::v0::LGFX_SPI
read_data	src/lgfx/v1/LGFXBase.cpp	/^    static uint32_t read_data(void* self, uint8_t* buf, uint32_t len)$/;"	f	struct:lgfx::v1::image_decoder_t
read_depth	src/lgfx/v0/panel/PanelCommon.hpp	/^    color_depth_t read_depth  = rgb888_3Byte;$/;"	m	struct:lgfx::v0::PanelCommon
read_pixels	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void read_pixels(void* dst, int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
read_pixels	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void read_pixels(void* dst, int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::LGFX_SPI
read_pixels	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void read_pixels(void* dst, int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::LGFX_SPI
read_rect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::read_rect(int32_t x, int32_t y, int32_t w, int32_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v0::LGFXBase
read_rect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::read_rect(int32_t x, int32_t y, int32_t w, int32_t h, void* dst, pixelcopy_t* param)$/;"	f	class:lgfx::v1::LGFXBase
read_uint32	src/lgfx/utility/lgfx_pngle.c	/^static inline uint32_t read_uint32(const uint8_t *p)$/;"	f	file:
read_uint32	src/lgfx/utility/lgfx_qoi.c	/^static uint32_t read_uint32(const uint8_t *p)$/;"	f	file:
read_uint8	src/lgfx/utility/lgfx_qoi.c	/^static uint8_t read_uint8(const uint8_t *p)$/;"	f	file:
readable	src/lgfx/v1/panel/Panel_Device.hpp	/^      bool readable = true;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
readcommand16	src/lgfx/v0/LGFX_Device.hpp	/^    uint16_t readcommand16(uint_fast8_t cmd, uint_fast8_t index=0) { return __builtin_bswap16(readCommand(cmd, index, 2)); }$/;"	f	class:lgfx::v0::LGFX_Device
readcommand32	src/lgfx/v0/LGFX_Device.hpp	/^    uint32_t readcommand32(uint_fast8_t cmd, uint_fast8_t index=0) { return __builtin_bswap32(readCommand(cmd, index, 4)); }$/;"	f	class:lgfx::v0::LGFX_Device
readcommand8	src/lgfx/v0/LGFX_Device.hpp	/^    uint8_t  readcommand8( uint_fast8_t cmd, uint_fast8_t index=0) { return readCommand(cmd, index, 1); }$/;"	f	class:lgfx::v0::LGFX_Device
readdata16	src/lgfx/v0/LGFX_Device.hpp	/^    uint16_t readdata16(uint_fast8_t index=0) { return __builtin_bswap16(readData(index, 2)); }$/;"	f	class:lgfx::v0::LGFX_Device
readdata32	src/lgfx/v0/LGFX_Device.hpp	/^    uint32_t readdata32(uint_fast8_t index=0) { return __builtin_bswap32(readData(index, 4)); }$/;"	f	class:lgfx::v0::LGFX_Device
readdata8	src/lgfx/v0/LGFX_Device.hpp	/^    uint8_t  readdata8( uint_fast8_t index=0) { return readData(index, 1); }$/;"	f	class:lgfx::v0::LGFX_Device
recv16	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline uint16_t recv16()           const { return static_cast<uint16_t>(_spi_regs->dr); }$/;"	f	class:lgfx::v1::Bus_SPI
recv8	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline uint8_t  recv8()            const { return static_cast<uint8_t>(_spi_regs->dr); }$/;"	f	class:lgfx::v1::Bus_SPI
recv_data	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline uint8_t recv_data(volatile i2c_hw_t * i2c_regs, bool is_restart, bool is_stop)$/;"	f	namespace:lgfx::v1::i2c::__anon58
refresh_rate	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      float refresh_rate      = 0.0f;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::config_resolution_t
refresh_rate	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint8_t refresh_rate = 60;$/;"	m	struct:lgfx::v1::timing_params_t
reg	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) const { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	class:lgfx::v0::LGFX_PARALLEL
reg	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	class:lgfx::v0::LGFX_SPI
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon320
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon352
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon377
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon385
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon441
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon445
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon277
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon280
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon282
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon295
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon297
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon299
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon301
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon303
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon310
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon315
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon322
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon325
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon328
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon331
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon341
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon345
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon374
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon379
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon387
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon397
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon399
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon401
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon403
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon405
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon407
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon409
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon411
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon413
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon415
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon417
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon419
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon427
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon429
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon431
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon443
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon447
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon449
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon275
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon285
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon287
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon289
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon291
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon293
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon306
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon308
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon313
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon318
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon333
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon335
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon337
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon339
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon348
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon350
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon355
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon358
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon361
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon364
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon367
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon369
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon372
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon381
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon383
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon389
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon391
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon393
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon421
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon423
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon433
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon435
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon437
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon439
reg	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon451
reg	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	class:lgfx::v1::Bus_SPI
reg	src/lgfx/v1/platforms/esp32/common.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  static __attribute__ ((always_inline)) inline volatile uint32_t* reg(uint32_t addr) { return (volatile uint32_t *)ETS_UNCACHED_ADDR(addr); }$/;"	f	namespace:lgfx::v1
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon106
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon138
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon163
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon171
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon227
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint16_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon231
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon101
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon108
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon111
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon114
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon117
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon127
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon131
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon160
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon165
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon173
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon183
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon185
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon187
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon189
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon191
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon193
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon195
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon197
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon199
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon201
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon203
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon205
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon213
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon215
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon217
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon229
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon233
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon235
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon63
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon66
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon68
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon81
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon83
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon85
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon87
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon89
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint32_t reg;                \/*!< Type      used for register access              *\/$/;"	m	union:__anon96
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon104
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon119
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon121
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon123
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon125
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon134
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon136
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon141
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon144
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon147
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon150
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon153
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon155
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon158
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon167
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon169
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon175
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon177
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon179
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon207
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon209
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon219
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon221
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon223
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon225
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon237
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon61
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon71
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon73
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon75
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon77
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon79
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon92
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon94
reg	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  uint8_t reg;                 \/*!< Type      used for register access              *\/$/;"	m	union:__anon99
reg_to_value	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    static uint_fast8_t reg_to_value(uint32_t raw_value)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
release	src/lgfx/v0/LGFX_Sprite.hpp	/^      void release() {$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
release	src/lgfx/v0/platforms/esp32_common.cpp	/^    void release(int spi_host)$/;"	f	namespace:lgfx::v0::spi
release	src/lgfx/v0/platforms/samd51_common.cpp	/^    void release(int) {}$/;"	f	namespace:lgfx::v0::spi
release	src/lgfx/v1/misc/DividedFrameBuffer.cpp	/^  void DividedFrameBuffer::release(void)$/;"	f	class:lgfx::v1::DividedFrameBuffer
release	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  void SpriteBuffer::release(void) {$/;"	f	class:lgfx::v1::SpriteBuffer
release	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> release(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    void release(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::release(void)$/;"	f	class:lgfx::v1::Bus_HUB75
release	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::release(void)$/;"	f	class:lgfx::v1::Bus_I2C
release	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::release(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
release	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> release(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/esp32/common.cpp	/^    void release(int spi_host)$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::release(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
release	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::release(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
release	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::release(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
release	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::release(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
release	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^  void Bus_RGB::release(void)$/;"	f	class:lgfx::v1::Bus_RGB
release	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::release(void)$/;"	f	class:lgfx::v1::Bus_I2C
release	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> release(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/esp8266/common.cpp	/^    void release(int spi_host)$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> release(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    void release(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> release(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/opencv/common.cpp	/^    void release(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::release(void)$/;"	f	class:lgfx::v1::Bus_I2C
release	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> release(int i2c_port)$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/rp2040/common.cpp	/^    void release(int spi_port)$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::release(void)$/;"	f	class:lgfx::v1::Bus_I2C
release	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> release(int sercom_index)$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/samd21/common.cpp	/^    void release(int sercom_index)$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::release(void)$/;"	f	class:lgfx::v1::Bus_I2C
release	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> release(int sercom_index)$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/samd51/common.cpp	/^    void release(int sercom_index)$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> release(int i2c_port) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/sdl/common.cpp	/^    void release(int spi_host) {}$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> release(int ) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
release	src/lgfx/v1/platforms/spresense/common.cpp	/^    void release(int ) {}$/;"	f	namespace:lgfx::v1::spi
release	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::release(void)$/;"	f	class:lgfx::v1::Bus_SPI
release	src/lgfx/v1/platforms/stm32/common.cpp	/^    void release(int) {}$/;"	f	namespace:lgfx::v1::spi
releaseBus	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void releaseBus(void)$/;"	f	class:lgfx::v0::LGFX_SPI
releaseBus	src/lgfx/v1/LGFXBase.cpp	/^  void LGFX_Device::releaseBus(void)$/;"	f	class:lgfx::v1::LGFX_Device
releaseBus	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::releaseBus(void)$/;"	f	class:lgfx::v1::Panel_Device
renderer	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    SDL_Renderer* renderer = nullptr;$/;"	m	struct:lgfx::v1::monitor_t
repeat	src/lgfx/utility/lgfx_qoi.c	/^  uint8_t repeat;$/;"	m	struct:_qoi_t	file:
reserved	src/lgfx/utility/miniz.c	/^  mz_ulong reserved;                \/\/ not used$/;"	m	struct:mz_stream_s	file:
reset	src/lgfx/v0/LGFX_Sprite.hpp	/^      void reset(size_t length, AllocationSource source)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
reset	src/lgfx/v0/LGFX_Sprite.hpp	/^      void reset(void* buffer)$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
reset	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  void SpriteBuffer::reset(size_t length, AllocationSource source)$/;"	f	class:lgfx::v1::SpriteBuffer
reset	src/lgfx/v1/misc/SpriteBuffer.cpp	/^  void SpriteBuffer::reset(void* buffer)$/;"	f	class:lgfx::v1::SpriteBuffer
reset	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::reset(void)$/;"	f	class:lgfx::v1::Panel_Device
reset	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::HDMI_Trans::reset(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
resetPanel	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    void resetPanel(void)$/;"	f	struct:lgfx::v0::Panel_M5StackCore2
resetSPI	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^void resetSPI()$/;"	f	class:lgfx::v0::LGFX_SPI
resetSPI	src/lgfx/v1/platforms/samd51/common.cpp	/^    static void resetSPI(SercomSpi* spi)$/;"	f	namespace:lgfx::v1::spi
resetWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static inline void resetWIRE(SercomI2cm *i2cm)$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/utility/lgfx_tjpgd.c	/^static JRESULT restart ($/;"	f	file:
restart	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> restart(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> restart(int i2c_port, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> restart(int i2c_port, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> restart(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> restart(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> restart(int i2c_port, int i2c_addr, uint32_t freq, [[maybe_unused]]bool read)$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> restart(int sercom_index, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> restart(int sercom_index, int i2c_addr, uint32_t freq, bool read)$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> restart(int i2c_port, int i2c_addr, uint32_t freq, bool read) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
restart	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> restart(int , int , uint32_t , bool ) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
restore	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^        void restore(void) const$/;"	f	class:lgfx::v1::LGFX::_detector_base_t::_pin_backup_t
result	src/lgfx/utility/result.hpp	/^               std::is_nothrow_assignable<E,E2&&>::value) -> result&;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^               std::is_nothrow_assignable<E,const E2&>::value) -> result&;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^      && -> result<T, detail::invoke_result_t<Fn,E&&>>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^      const & -> result<T, detail::invoke_result_t<Fn,const E&>>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^      noexcept(std::is_nothrow_assignable<E, E2&&>::value) -> result&;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^      noexcept(std::is_nothrow_assignable<E, const E2&>::value) -> result&;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^      noexcept(std::is_nothrow_assignable<T,U>::value) -> result&;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto map(Fn&& fn) && -> result<detail::invoke_result_t<Fn,T&&>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto map(Fn&& fn) && -> result<detail::invoke_result_t<Fn>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto map_impl(std::false_type, Fn&& fn) && -> result<detail::invoke_result_t<Fn,T&&>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto map_impl(std::false_type, Fn&& fn) && -> result<detail::invoke_result_t<Fn>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    RESULT_CPP14_CONSTEXPR auto map_impl(std::true_type, Fn&& fn) && -> result<void,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    auto map_error(Fn&& fn) && -> result<void, detail::invoke_result_t<Fn,E&&>>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    auto operator=(const result& other) -> result& = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    auto operator=(result&& other) -> result& = default;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    constexpr auto and_then(U&& value) const -> result<typename std::decay<U>::type,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    constexpr auto map(Fn&& fn) const & -> result<detail::invoke_result_t<Fn,const T&>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    constexpr auto map(Fn&& fn) const & -> result<detail::invoke_result_t<Fn>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    constexpr auto map_error(Fn&& fn) const & -> result<void, detail::invoke_result_t<Fn,const E&>>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    constexpr auto map_impl(std::false_type, Fn&& fn) const & -> result<detail::invoke_result_t<Fn,const T&>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    constexpr auto map_impl(std::false_type, Fn&& fn) const & -> result<detail::invoke_result_t<Fn>,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^    constexpr auto map_impl(std::true_type, Fn&& fn) const & -> result<void,E>;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result
result	src/lgfx/utility/result.hpp	/^  class RESULT_NODISCARD result$/;"	c	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
result	src/lgfx/utility/result.hpp	/^  class RESULT_NODISCARD result<void,E>$/;"	c	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift
result_construct_base	src/lgfx/utility/result.hpp	/^      auto operator=(const result_construct_base&) -> result_construct_base& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_construct_base
result_construct_base	src/lgfx/utility/result.hpp	/^      auto operator=(result_construct_base&&) -> result_construct_base& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_construct_base
result_construct_base	src/lgfx/utility/result.hpp	/^    struct result_construct_base$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
result_error_extractor	src/lgfx/utility/result.hpp	/^    struct result_error_extractor$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
result_trivial_copy_assign_base_impl	src/lgfx/utility/result.hpp	/^        -> result_trivial_copy_assign_base_impl& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_copy_assign_base_impl
result_trivial_copy_assign_base_impl	src/lgfx/utility/result.hpp	/^        -> result_trivial_copy_assign_base_impl&;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_copy_assign_base_impl
result_trivial_copy_assign_base_impl	src/lgfx/utility/result.hpp	/^    struct result_trivial_copy_assign_base_impl$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
result_trivial_copy_ctor_base_impl	src/lgfx/utility/result.hpp	/^      auto operator=(const result_trivial_copy_ctor_base_impl& other) -> result_trivial_copy_ctor_base_impl& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_copy_ctor_base_impl
result_trivial_copy_ctor_base_impl	src/lgfx/utility/result.hpp	/^      auto operator=(result_trivial_copy_ctor_base_impl&& other) -> result_trivial_copy_ctor_base_impl& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_copy_ctor_base_impl
result_trivial_copy_ctor_base_impl	src/lgfx/utility/result.hpp	/^    struct result_trivial_copy_ctor_base_impl : result_construct_base<T,E>$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
result_trivial_move_assign_base_impl	src/lgfx/utility/result.hpp	/^        -> result_trivial_move_assign_base_impl& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_move_assign_base_impl
result_trivial_move_assign_base_impl	src/lgfx/utility/result.hpp	/^        -> result_trivial_move_assign_base_impl&;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_move_assign_base_impl
result_trivial_move_assign_base_impl	src/lgfx/utility/result.hpp	/^    struct result_trivial_move_assign_base_impl$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
result_trivial_move_ctor_base_impl	src/lgfx/utility/result.hpp	/^      auto operator=(const result_trivial_move_ctor_base_impl& other) -> result_trivial_move_ctor_base_impl& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_move_ctor_base_impl
result_trivial_move_ctor_base_impl	src/lgfx/utility/result.hpp	/^      auto operator=(result_trivial_move_ctor_base_impl&& other) -> result_trivial_move_ctor_base_impl& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_trivial_move_ctor_base_impl
result_trivial_move_ctor_base_impl	src/lgfx/utility/result.hpp	/^    struct result_trivial_move_ctor_base_impl : result_trivial_copy_ctor_base<T,E>$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
result_union	src/lgfx/utility/result.hpp	/^      auto operator=(const result_union&) -> result_union& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union
result_union	src/lgfx/utility/result.hpp	/^      auto operator=(result_union&&) -> result_union& = default;$/;"	m	struct:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail::result_union
result_union	src/lgfx/utility/result.hpp	/^    struct result_union$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
result_union	src/lgfx/utility/result.hpp	/^    struct result_union<T, E, false>$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
reverse_invert	src/lgfx/v0/panel/PanelCommon.hpp	/^    bool reverse_invert = false;           \/\/ Reverse the effect of the invert command.$/;"	m	struct:lgfx::v0::PanelCommon
rg	src/lgfx/v0/lgfx_common.hpp	/^      uint16_t rg;$/;"	m	union:lgfx::v0::bgr888_t::__anon496
rg	src/lgfx/v1/misc/colortype.hpp	/^      uint16_t rg;$/;"	m	union:lgfx::v1::bgr666_t::__anon38
rg	src/lgfx/v1/misc/colortype.hpp	/^      uint16_t rg;$/;"	m	union:lgfx::v1::bgr888_t::__anon40
rgb332_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr rgb332_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw(color332(r8,g8,b8)) {}$/;"	f	struct:lgfx::v0::rgb332_t
rgb332_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr rgb332_t(uint8_t rgb332) : raw(rgb332) {}$/;"	f	struct:lgfx::v0::rgb332_t
rgb332_t	src/lgfx/v0/lgfx_common.hpp	/^    rgb332_t() : raw(0) {}$/;"	f	struct:lgfx::v0::rgb332_t
rgb332_t	src/lgfx/v0/lgfx_common.hpp	/^  struct rgb332_t {$/;"	s	namespace:lgfx::v0
rgb332_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb332_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw(color332(r8, g8, b8)) {}$/;"	f	struct:lgfx::v1::rgb332_t
rgb332_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb332_t(uint8_t rgb332) : raw(rgb332) {}$/;"	f	struct:lgfx::v1::rgb332_t
rgb332_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb332_t(void) : raw(0) {}$/;"	f	struct:lgfx::v1::rgb332_t
rgb332_t	src/lgfx/v1/misc/colortype.hpp	/^  struct rgb332_t$/;"	s	namespace:lgfx::v1
rgb565_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr rgb565_t(uint16_t rgb565) : raw(rgb565) {}$/;"	f	struct:lgfx::v0::rgb565_t
rgb565_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr rgb565_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw(color565(r8,g8,b8)) {}$/;"	f	struct:lgfx::v0::rgb565_t
rgb565_t	src/lgfx/v0/lgfx_common.hpp	/^    rgb565_t() : raw(0) {}$/;"	f	struct:lgfx::v0::rgb565_t
rgb565_t	src/lgfx/v0/lgfx_common.hpp	/^  struct rgb565_t {$/;"	s	namespace:lgfx::v0
rgb565_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb565_t(uint16_t rgb565) : raw(rgb565) {}$/;"	f	struct:lgfx::v1::rgb565_t
rgb565_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb565_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw(color565(r8, g8, b8)) {}$/;"	f	struct:lgfx::v1::rgb565_t
rgb565_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb565_t(void) : raw(0) {}$/;"	f	struct:lgfx::v1::rgb565_t
rgb565_t	src/lgfx/v1/misc/colortype.hpp	/^  struct rgb565_t$/;"	s	namespace:lgfx::v1
rgb888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr rgb888_t(uint32_t rgb888) : b(rgb888), g(rgb888>>8), r(rgb888>>16) {}$/;"	f	struct:lgfx::v0::rgb888_t
rgb888_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr rgb888_t(uint8_t r8, uint8_t g8, uint8_t b8) : b(b8),g(g8),r(r8) {}$/;"	f	struct:lgfx::v0::rgb888_t
rgb888_t	src/lgfx/v0/lgfx_common.hpp	/^    rgb888_t() : b(0), g(0), r(0) {}$/;"	f	struct:lgfx::v0::rgb888_t
rgb888_t	src/lgfx/v0/lgfx_common.hpp	/^  struct rgb888_t {$/;"	s	namespace:lgfx::v0
rgb888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb888_t(uint32_t rgb888) : b(rgb888), g(rgb888>>8), r(rgb888>>16) {}$/;"	f	struct:lgfx::v1::rgb888_t
rgb888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb888_t(uint8_t r8, uint8_t g8, uint8_t b8) : b(b8), g(g8), r(r8) {}$/;"	f	struct:lgfx::v1::rgb888_t
rgb888_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr rgb888_t(void) : b(0), g(0), r(0) {}$/;"	f	struct:lgfx::v1::rgb888_t
rgb888_t	src/lgfx/v1/misc/colortype.hpp	/^  struct rgb888_t$/;"	s	namespace:lgfx::v1
rgb_order	src/lgfx/v0/panel/PanelCommon.hpp	/^    bool rgb_order = false;           \/\/ true:RGB \/ false: BGR$/;"	m	struct:lgfx::v0::PanelCommon
rgb_order	src/lgfx/v1/panel/Panel_Device.hpp	/^      bool rgb_order = false;$/;"	m	struct:lgfx::v1::Panel_Device::config_t
rgba	src/lgfx/utility/lgfx_qoi.c	/^  struct { unsigned char a, r, g, b; } rgba;$/;"	m	union:__anon548	typeref:struct:__anon548::__anon549	file:
right	src/lgfx/utility/lgfx_tjpgd.h	/^	uint32_t left, right, top, bottom;$/;"	m	struct:__anon552
right	src/lgfx/v0/lgfx_common.hpp	/^        int32_t right;$/;"	m	struct:lgfx::range_rect_t::__anon507::__anon508
right	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t right;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon50
rleEncode	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  static size_t rleEncode(uint8_t* dest, const uint8_t* src, size_t bytelen, size_t bytes)$/;"	f	namespace:lgfx::v1
rotation	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast8_t rotation  = 0;        \/\/ default rotation (0~3)$/;"	m	struct:lgfx::v0::PanelCommon
rotation	src/lgfx/v1/panel/Panel_HUB75.hpp	/^      uint8_t rotation;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi::panel_position_t
rp2040	src/lgfx/v1/platforms/rp2040/common.cpp	/^  namespace rp2040$/;"	n	namespace:lgfx::v1	file:
rs_getRemainder	src/lgfx/utility/lgfx_qrcode.c	/^static void rs_getRemainder(uint8_t degree, uint8_t *coeff, uint8_t *data, uint8_t length, uint8_t *result, uint8_t stride) {$/;"	f	file:
rs_init	src/lgfx/utility/lgfx_qrcode.c	/^static void rs_init(uint8_t degree, uint8_t *coeff) {$/;"	f	file:
rs_multiply	src/lgfx/utility/lgfx_qrcode.c	/^static uint8_t rs_multiply(uint_fast8_t x, uint_fast8_t y) {$/;"	f	file:
rx	src/lgfx/v0/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v0::paint_point_t	file:
rx	src/lgfx/v1/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v1::paint_point_t	file:
s32h	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t* s32h;           \/\/  4$/;"	m	struct:lgfx::v1::asm_work_t	file:
s32l	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t* s32l;           \/\/  8$/;"	m	struct:lgfx::v1::asm_work_t	file:
s_tdefl_large_dist_extra	src/lgfx/utility/miniz.c	/^static const mz_uint8 s_tdefl_large_dist_extra[128] = {$/;"	v	file:
s_tdefl_large_dist_sym	src/lgfx/utility/miniz.c	/^static const mz_uint8 s_tdefl_large_dist_sym[128] = {$/;"	v	file:
s_tdefl_len_extra	src/lgfx/utility/miniz.c	/^static const mz_uint8 s_tdefl_len_extra[256] = {$/;"	v	file:
s_tdefl_len_sym	src/lgfx/utility/miniz.c	/^static const mz_uint16 s_tdefl_len_sym[256] = {$/;"	v	file:
s_tdefl_num_probes	src/lgfx/utility/miniz.c	/^static const mz_uint s_tdefl_num_probes[11] = { 0, 1, 6, 32,  16, 32, 128, 256,  512, 768, 1500 };$/;"	v	file:
s_tdefl_packed_code_size_syms_swizzle	src/lgfx/utility/miniz.c	/^static mz_uint8 s_tdefl_packed_code_size_syms_swizzle[] = { 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 };$/;"	v	file:
s_tdefl_small_dist_extra	src/lgfx/utility/miniz.c	/^static const mz_uint8 s_tdefl_small_dist_extra[512] = {$/;"	v	file:
s_tdefl_small_dist_sym	src/lgfx/utility/miniz.c	/^static const mz_uint8 s_tdefl_small_dist_sym[512] = {$/;"	v	file:
samd21	src/lgfx/v1/platforms/samd21/common.cpp	/^  namespace samd21$/;"	n	namespace:lgfx::v1	file:
samd21	src/lgfx/v1/platforms/samd21/common.hpp	/^  namespace samd21$/;"	n	namespace:lgfx::v1
samd51	src/lgfx/v0/platforms/samd51_common.hpp	/^  namespace samd51$/;"	n	namespace:lgfx::v0
samd51	src/lgfx/v1/platforms/samd51/common.cpp	/^  namespace samd51$/;"	n	namespace:lgfx::v1	file:
samd51	src/lgfx/v1/platforms/samd51/common.hpp	/^  namespace samd51$/;"	n	namespace:lgfx::v1
save_reg	src/lgfx/v1/platforms/esp32/common.cpp	/^      void save_reg(i2c_dev_t* dev)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
save_reg	src/lgfx/v1/platforms/samd51/common.cpp	/^      void save_reg(SercomI2cm* dev)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
scale	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast8_t scale;			\/* Output scaling ratio *\/$/;"	m	struct:lgfxJdec
scale_h	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint8_t scale_h         = 0;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::config_resolution_t
scale_w	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      uint8_t scale_w         = 0;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::config_resolution_t
scaling_x	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    int scaling_x = 1;$/;"	m	struct:lgfx::v1::monitor_t
scaling_y	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    int scaling_y = 1;$/;"	m	struct:lgfx::v1::monitor_t
scanline_buf	src/lgfx/utility/lgfx_pngle.c	/^  uint8_t *scanline_buf;$/;"	m	struct:_pngle_t	file:
scanline_cache_t	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  class scanline_cache_t$/;"	c	namespace:lgfx::v1	file:
scanline_pixels	src/lgfx/utility/lgfx_pngle.c	/^  size_t scanline_pixels;$/;"	m	struct:_pngle_t	file:
scanline_remain_bytes_to_render	src/lgfx/utility/lgfx_pngle.c	/^  size_t scanline_remain_bytes_to_render;$/;"	m	struct:_pngle_t	file:
scanline_stride	src/lgfx/utility/lgfx_pngle.c	/^  size_t scanline_stride;$/;"	m	struct:_pngle_t	file:
scanline_width	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t scanline_width;      \/\/ 走査線内のサンプル数 (カラークロック数 x4);$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
scl_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^        const uint8_t *scl_pinlist;$/;"	m	struct:lgfx::v1::i2c::__anon57::i2c_pinlist_str	file:
sclk_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^        const uint8_t *sclk_pinlist;$/;"	m	struct:lgfx::v1::spi::__anon55::spi_pinlist_str	file:
scroll	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::scroll(int_fast16_t dx, int_fast16_t dy)$/;"	f	class:lgfx::v0::LGFXBase
scroll	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::scroll(int_fast16_t dx, int_fast16_t dy)$/;"	f	class:lgfx::v1::LGFXBase
sda_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^        const uint8_t *sda_pinlist;$/;"	m	struct:lgfx::v1::i2c::__anon57::i2c_pinlist_str	file:
sdlVersion	.github/scripts/installSDL2.bat	/^set sdlVersion=2.0.22$/;"	v
sdl_create	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::sdl_create(monitor_t * m)$/;"	f	class:lgfx::v1::Panel_sdl
sdl_event_handler	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::sdl_event_handler(void)$/;"	f	class:lgfx::v1::Panel_sdl
sdl_quit	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::sdl_quit(void)$/;"	f	class:lgfx::v1::Panel_sdl
sdl_refr_qry	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    volatile bool sdl_refr_qry;$/;"	m	struct:lgfx::v1::monitor_t
sdl_update	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::sdl_update(const monitor_t* const m)$/;"	f	class:lgfx::v1::Panel_sdl
sdl_update_handler	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::sdl_update_handler(void)$/;"	f	class:lgfx::v1::Panel_sdl
search_dma_out_ch	src/lgfx/v1/platforms/esp32/common.cpp	/^  int32_t search_dma_out_ch(int peripheral_select)$/;"	f	namespace:lgfx::v1
seek	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v0::FileWrapper
seek	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool seek(uint32_t offset, int origin) { return false; }$/;"	f	struct:lgfx::v0::FileWrapper
seek	src/lgfx/v0/platforms/esp32_common.hpp	/^    bool seek(uint32_t offset, int origin) { return fseek(_fp, offset, origin); }$/;"	f	struct:lgfx::v0::FileWrapper
seek	src/lgfx/v0/platforms/samd51_common.hpp	/^    bool seek(uint32_t offset, SYS_FS_FILE_SEEK_CONTROL mode) $/;"	f	struct:lgfx::v0::FileWrapper
seek	src/lgfx/v0/platforms/samd51_common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v0::FileWrapper
seek	src/lgfx/v0/platforms/samd51_common.hpp	/^    bool seek(uint32_t, int) { return false; }$/;"	f	struct:lgfx::v0::FileWrapper
seek	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      bool seek(uint32_t offset) { return false; }$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
seek	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    bool seek(uint32_t, int) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/esp32/common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/esp32/common.hpp	/^    bool seek(uint32_t offset, int origin) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/esp32/common.hpp	/^    bool seek(uint32_t offset, int origin) { return fseek(_fp, offset, origin); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/esp8266/common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/esp8266/common.hpp	/^    bool seek(uint32_t offset, int origin) { return fseek(_fp, offset, origin); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/esp8266/common.hpp	/^    bool seek(uint32_t, int) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/framebuffer/common.hpp	/^    bool seek(uint32_t offset, int origin) { return fseek(_fp, offset, origin); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/opencv/common.hpp	/^    bool seek(uint32_t offset, int origin) { return fseek(_fp, offset, origin); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/rp2040/common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/samd21/common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/samd21/common.hpp	/^    bool seek(uint32_t, int) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/samd51/common.hpp	/^    bool seek(uint32_t offset, SYS_FS_FILE_SEEK_CONTROL mode)$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/samd51/common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/samd51/common.hpp	/^    bool seek(uint32_t, int) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/sdl/common.hpp	/^    bool seek(uint32_t offset, int origin) { return fseek(_fp, offset, origin); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/spresense/common.hpp	/^    bool seek(uint32_t , int ) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/stm32/common.hpp	/^    bool seek(uint32_t offset, SeekMode mode) { return _fp->seek(offset, mode); }$/;"	f	struct:lgfx::v1::FileWrapper
seek	src/lgfx/v1/platforms/stm32/common.hpp	/^    bool seek(uint32_t, int) { return false; }$/;"	f	struct:lgfx::v1::FileWrapper
send16	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void send16(uint16_t data)  const { _spi_regs->dr = data; }$/;"	f	class:lgfx::v1::Bus_SPI
send8	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void send8(uint8_t data)    const { _spi_regs->dr = data; }$/;"	f	class:lgfx::v1::Bus_SPI
sendDataMasterWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static inline bool sendDataMasterWIRE(SercomI2cm *i2cm, uint8_t data)$/;"	f	namespace:lgfx::v1::i2c
send_data	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void send_data(volatile i2c_hw_t * i2c_regs, uint8_t data, bool is_restart, bool is_stop)$/;"	f	namespace:lgfx::v1::i2c::__anon58
send_led_driver_command	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::send_led_driver_command(uint8_t latcycle, uint16_t r, uint16_t g, uint16_t b)$/;"	f	class:lgfx::v1::Bus_HUB75
send_led_driver_latch	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::send_led_driver_latch(uint8_t latcycle)$/;"	f	class:lgfx::v1::Bus_HUB75
sercom0_c_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom0_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom0_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom0_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom0_d_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom0_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom0_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom0_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom1_c_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom1_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom1_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom1_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom1_d_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom1_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom1_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom1_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom2_c_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom2_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom2_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom2_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom2_d_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom2_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom2_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom2_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom3_c_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom3_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom3_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom3_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom3_d_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom3_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom3_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom3_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom4_c_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom4_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom4_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom4_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom4_d_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom4_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom4_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom4_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom5_c_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom5_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom5_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom5_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom5_d_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom5_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom5_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom5_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom6_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom6_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom6_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom6_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom7_c_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom7_c_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom7_d_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom7_d_pin_list[] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercomData	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^  } sercomData[] = {$/;"	m	namespace:lgfx::v0	typeref:struct:lgfx::v0::__anon274
sercomPtr	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    uintptr_t sercomPtr;$/;"	m	struct:lgfx::v0::__anon274
sercomPtr	src/lgfx/v1/platforms/samd21/common.hpp	/^      uintptr_t sercomPtr;$/;"	m	struct:lgfx::v1::samd21::sercom_data_t
sercomPtr	src/lgfx/v1/platforms/samd51/common.hpp	/^      uintptr_t sercomPtr;$/;"	m	struct:lgfx::v1::samd51::sercom_data_t
sercom_clkfreq	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr int sercom_clkfreq = F_CPU;$/;"	m	struct:lgfx::LGFX_Config
sercom_clkfreq	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      uint32_t sercom_clkfreq = F_CPU;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
sercom_clkfreq	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      uint32_t sercom_clkfreq = F_CPU;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
sercom_clksrc	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr int sercom_clksrc = 0;   \/\/ -1=notchange \/ 0=select GCLK0$/;"	m	struct:lgfx::LGFX_Config
sercom_clksrc	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      int8_t  sercom_clksrc = 0;   \/\/ -1=notchange \/ 0=select GCLK0$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
sercom_clksrc	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      int8_t  sercom_clksrc = 0;   \/\/ -1=notchange \/ 0=select GCLK0$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
sercom_data	src/lgfx/v1/platforms/samd21/common.cpp	/^    static const sercom_data_t sercom_data[SERCOM_INST_NUM] = {$/;"	m	namespace:lgfx::v1::samd21	file:
sercom_data	src/lgfx/v1/platforms/samd51/common.cpp	/^    static const sercom_data_t sercom_data[] = {$/;"	m	namespace:lgfx::v1::samd51	file:
sercom_data_t	src/lgfx/v1/platforms/samd21/common.hpp	/^    struct sercom_data_t {$/;"	s	namespace:lgfx::v1::samd21
sercom_data_t	src/lgfx/v1/platforms/samd51/common.hpp	/^    struct sercom_data_t$/;"	s	namespace:lgfx::v1::samd51
sercom_index	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr int sercom_index = 7;$/;"	m	struct:lgfx::LGFX_Config
sercom_index	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      uint8_t sercom_index = 0;$/;"	m	struct:lgfx::v1::Bus_I2C::config_t
sercom_index	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      uint8_t sercom_index = 7;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
sercom_index	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      uint8_t sercom_index = 7;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
sercom_mux_pin_list	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr const int8_t* sercom_mux_pin_list[2][SERCOM_INST_NUM] =$/;"	m	namespace:lgfx::v1::samd21	file:
sercom_mux_pin_list	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr const int8_t* sercom_mux_pin_list[2][SERCOM_INST_NUM] =$/;"	m	namespace:lgfx::v1::samd51	file:
sercom_pin_list_end	src/lgfx/v1/platforms/samd21/common.cpp	/^    static constexpr int8_t sercom_pin_list_end = 0;$/;"	m	namespace:lgfx::v1::samd21	file:
sercom_pin_list_end	src/lgfx/v1/platforms/samd51/common.cpp	/^    static constexpr int8_t sercom_pin_list_end = 0;$/;"	m	namespace:lgfx::v1::samd51	file:
sercom_ref_count	src/lgfx/v1/platforms/samd21/common.cpp	/^    static uint32_t sercom_ref_count[SERCOM_INST_NUM] = {$/;"	m	namespace:lgfx::v1::samd21	file:
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t a8, uint8_t r8, uint8_t g8, uint8_t b8) { a = a8; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v0::argb8888_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t a8, uint8_t r8, uint8_t g8, uint8_t b8) { a = a8; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v0::bgra8888_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { *reinterpret_cast<uint16_t*>(this) = color565(r8,g8,b8); }$/;"	f	struct:lgfx::v0::rgb565_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { *reinterpret_cast<uint16_t*>(this) = swap565(r8,g8,b8); }$/;"	f	struct:lgfx::v0::swap565_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { *reinterpret_cast<uint8_t*>(this) = color332(r8,g8,b8); }$/;"	f	struct:lgfx::v0::rgb332_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { a = 255; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v0::argb8888_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { a = 255; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v0::bgra8888_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { r = (r8 + (g8 << 1) + b8) >> 2; }$/;"	f	struct:lgfx::v0::grayscale_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v0::bgr888_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v0::rgb888_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { r = r8>>2; g = g8>>2; b = b8>>2; }$/;"	f	struct:lgfx::v0::bgr666_t
set	src/lgfx/v0/lgfx_common.hpp	/^    inline void set(uint_fast32_t c) { *reinterpret_cast<uint32_t*>(this) = c; }$/;"	f	struct:lgfx::v0::bgra8888_t
set	src/lgfx/v0/lgfx_common.hpp	/^    void set(const uint8_t* src, uint32_t length = ~0) { _ptr = src; _length = length; _index = 0; }$/;"	f	struct:lgfx::PointerWrapper
set	src/lgfx/v0/platforms/esp32_common.hpp	/^    void set(Stream* src, uint32_t length = ~0) { _stream = src; _length = length; _index = 0; }$/;"	f	struct:lgfx::v0::StreamWrapper
set	src/lgfx/v0/platforms/samd51_common.hpp	/^    void set(Stream* src, uint32_t length = ~0u) { _stream = src; _length = length; _index = 0; }$/;"	f	struct:lgfx::v0::StreamWrapper
set	src/lgfx/v1/misc/DataWrapper.hpp	/^    void set(Stream* src, uint32_t length = ~0u) { _stream = src; _length = length; _index = 0; }$/;"	f	struct:lgfx::v1::StreamWrapper
set	src/lgfx/v1/misc/DataWrapper.hpp	/^    void set(const uint8_t* src, uint32_t length = ~0) { _ptr = src; _length = length; _index = 0; }$/;"	f	struct:lgfx::v1::PointerWrapper
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t a8, uint8_t r8, uint8_t g8, uint8_t b8) { a = a8; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v1::argb8888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t a8, uint8_t r8, uint8_t g8, uint8_t b8) { a = a8; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v1::bgra8888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { *reinterpret_cast<uint16_t*>(this) = color565(r8, g8, b8); }$/;"	f	struct:lgfx::v1::rgb565_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { *reinterpret_cast<uint16_t*>(this) = swap565(r8, g8, b8); }$/;"	f	struct:lgfx::v1::swap565_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { *reinterpret_cast<uint8_t*>(this) = color332(r8, g8, b8); }$/;"	f	struct:lgfx::v1::rgb332_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { a = 255; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v1::argb8888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { a = 255; r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v1::bgra8888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v1::bgr888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { r = r8; g = g8; b = b8; }$/;"	f	struct:lgfx::v1::rgb888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { r6 = r8>>2; g6 = g8>>2; b6 = b8>>2; }$/;"	f	struct:lgfx::v1::bgr666_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint8_t r8, uint8_t g8, uint8_t b8) { raw = (r8 + (g8 << 1) + b8) >> 2; }$/;"	f	struct:lgfx::v1::grayscale_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast16_t c) { *reinterpret_cast<uint16_t*>(this) = c; }$/;"	f	struct:lgfx::v1::rgb565_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast16_t c) { *reinterpret_cast<uint16_t*>(this) = c; }$/;"	f	struct:lgfx::v1::swap565_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast32_t c) { *reinterpret_cast<uint32_t*>(this) = c; }$/;"	f	struct:lgfx::v1::argb8888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast32_t c) { *reinterpret_cast<uint32_t*>(this) = c; }$/;"	f	struct:lgfx::v1::bgra8888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast32_t c) { *reinterpret_cast<uint8_t*>(this) = c; }$/;"	f	struct:lgfx::v1::grayscale_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast32_t c) { write_3byte_unaligned(this, c); }$/;"	f	struct:lgfx::v1::bgr666_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast32_t c) { write_3byte_unaligned(this, c); }$/;"	f	struct:lgfx::v1::bgr888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast32_t c) { write_3byte_unaligned(this, c); }$/;"	f	struct:lgfx::v1::rgb888_t
set	src/lgfx/v1/misc/colortype.hpp	/^    inline void set(uint_fast8_t c) { *reinterpret_cast<uint8_t*>(this) = c; }$/;"	f	struct:lgfx::v1::rgb332_t
set	src/lgfx/v1/misc/colortype.hpp	/^    void set(argb8888_t src)$/;"	f	struct:lgfx::effect_fill_alpha
set	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    void set(Stream* src, uint32_t length = ~0u) { _stream = src; _length = length; _index = 0; }$/;"	f	struct:lgfx::v1::StreamWrapper
setAddrWindow	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::setAddrWindow(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
setAddrWindow	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::setAddrWindow(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
setAttribute	src/lgfx/v0/LGFXBase.cpp	/^    void LGFXBase::setAttribute(attribute_t attr_id, uint8_t param) {$/;"	f	class:lgfx::v0::LGFXBase
setAttribute	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::setAttribute(attribute_t attr_id, uint8_t param) {$/;"	f	class:lgfx::v1::LGFXBase
setAutoDisplay	src/lgfx/v0/LGFX_Device.hpp	/^    void setAutoDisplay(bool flg)$/;"	f	class:lgfx::v0::LGFX_Device
setAutoDisplay	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void setAutoDisplay(bool flg) { _panel->setAutoDisplay(flg); }$/;"	f	class:lgfx::v1::LGFXBase
setAutoDisplay	src/lgfx/v1/Panel.hpp	/^    void setAutoDisplay(bool auto_display) { _auto_display = auto_display; }$/;"	f	struct:lgfx::v1::IPanel
setBaseColor	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> __attribute__ ((always_inline)) inline void setBaseColor(T c) { _base_rgb888 = hasPalette() ? c : convert_to_rgb888(c); }$/;"	f	class:lgfx::v0::LGFXBase
setBaseColor	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void setBaseColor(T c) { _base_rgb888 = hasPalette() ? c : convert_to_rgb888(c); }$/;"	f	class:lgfx::v1::LGFXBase
setBitmapColor	src/lgfx/v0/LGFX_Sprite.hpp	/^    void setBitmapColor(uint16_t fgcolor, uint16_t bgcolor)  \/\/ For 1bpp sprites$/;"	f	class:lgfx::v0::LGFX_Sprite
setBitmapColor	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setBitmapColor(uint16_t fgcolor, uint16_t bgcolor)  \/\/ For 1bpp sprites$/;"	f	class:lgfx::v1::LGFX_Sprite
setBrightness	src/lgfx/v0/LGFX_Device.hpp	/^    void setBrightness(uint8_t brightness) {$/;"	f	class:lgfx::v0::LGFX_Device
setBrightness	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual void setBrightness(uint8_t brightness)$/;"	f	struct:lgfx::v0::PanelCommon
setBrightness	src/lgfx/v1/Bus.hpp	/^    virtual void setBrightness(uint8_t brightness) {}$/;"	f	struct:lgfx::v1::Bus_ImagePush
setBrightness	src/lgfx/v1/LGFXBase.hpp	/^    inline void setBrightness(uint8_t brightness) { _brightness = brightness; if (_panel) { _panel->setBrightness(brightness); } }$/;"	f	class:lgfx::v1::LGFX_Device
setBrightness	src/lgfx/v1/Panel.hpp	/^    virtual void setBrightness(uint8_t brightness) { (void)brightness; };$/;"	f	struct:lgfx::v1::IPanel
setBrightness	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_Device
setBrightness	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  void Panel_HUB75::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_HUB75
setBrightness	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setBrightness	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
setBrightness	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_SH110x::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_SH110x
setBrightness	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_SSD1306::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_SSD1306
setBrightness	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_SSD1327
setBrightness	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Panel_SSD1331
setBrightness	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Bus_HUB75
setBrightness	src/lgfx/v1/platforms/esp32/Light_PWM.cpp	/^  void Light_PWM::setBrightness(uint8_t brightness)$/;"	f	class:lgfx::v1::Light_PWM
setBrightness	src/lgfx/v1/platforms/rp2040/Light_PWM.cpp	/^  void Light_PWM::setBrightness( uint8_t brightness )$/;"	f	class:lgfx::v1::Light_PWM
setBuffer	src/lgfx/v0/LGFX_Sprite.hpp	/^    void setBuffer(void* buffer, int32_t w, int32_t h, uint8_t bpp = 0)$/;"	f	class:lgfx::v0::LGFX_Sprite
setBuffer	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::setBuffer(void* buffer, int32_t w, int32_t h, color_conv_t* conv)$/;"	f	class:lgfx::v1::Panel_Sprite
setBuffer	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setBuffer(void* buffer, int32_t w, int32_t h, uint8_t bpp = 0)$/;"	f	class:lgfx::v1::LGFX_Sprite
setBus	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::setBus(IBus* bus)$/;"	f	class:lgfx::v1::Panel_Device
setCalibrate	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::setCalibrate(uint16_t *parameters)$/;"	f	class:lgfx::v1::Panel_Device
setCalibrateAffine	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::setCalibrateAffine(float affine[6])$/;"	f	class:lgfx::v1::Panel_Device
setChromaLevel	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void Panel_CVBS::setChromaLevel(uint8_t chroma)$/;"	f	class:lgfx::v1::Panel_CVBS
setClipRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::setClipRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
setClipRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::setClipRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
setClock	src/lgfx/v1/Bus.hpp	/^    virtual void setClock(uint32_t) {};$/;"	f	struct:lgfx::v1::IBus
setClock	src/lgfx/v1/platforms/samd21/common.cpp	/^    static void inline setClock(SercomI2cm *i2cm, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
setColor	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void setColor(uint8_t r, uint8_t g, uint8_t b) { _color.raw = _write_conv.convert(lgfx::color888(r,g,b)); }$/;"	f	class:lgfx::v0::LGFXBase
setColor	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> __attribute__ ((always_inline)) inline void setColor(T color) { _color.raw = _write_conv.convert(color); }$/;"	f	class:lgfx::v0::LGFXBase
setColor	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void setColor(uint8_t r, uint8_t g, uint8_t b) { setColor(lgfx::color888(r,g,b)); }$/;"	f	class:lgfx::v1::LGFXBase
setColor	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void setColor(T color) { setRawColor(_write_conv.convert(color)); }$/;"	f	class:lgfx::v1::LGFXBase
setColorDepth	src/lgfx/v0/LGFX_Device.hpp	/^    void setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v0::LGFX_Device
setColorDepth	src/lgfx/v0/LGFX_Device.hpp	/^    void setColorDepth(uint8_t bpp) { setColorDepth((color_depth_t)bpp); }$/;"	f	class:lgfx::v0::LGFX_Device
setColorDepth	src/lgfx/v0/LGFX_Sprite.hpp	/^    __attribute__ ((always_inline)) inline void* setColorDepth(uint8_t bpp) { return setColorDepth((color_depth_t)bpp); }$/;"	f	class:lgfx::v0::LGFX_Sprite
setColorDepth	src/lgfx/v0/LGFX_Sprite.hpp	/^    void* setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v0::LGFX_Sprite
setColorDepth	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::LGFXBase
setColorDepth	src/lgfx/v1/LGFXBase.hpp	/^    void setColorDepth(int bits) { setColorDepth((color_depth_t)(bits & color_depth_t::bit_mask));}$/;"	f	class:lgfx::v1::LGFXBase
setColorDepth	src/lgfx/v1/LGFX_Sprite.cpp	/^  color_depth_t Panel_Sprite::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_Sprite
setColorDepth	src/lgfx/v1/LGFX_Sprite.hpp	/^    LGFX_INLINE void* setColorDepth(uint8_t bpp)$/;"	f	class:lgfx::v1::LGFX_Sprite
setColorDepth	src/lgfx/v1/LGFX_Sprite.hpp	/^    void* setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::LGFX_Sprite
setColorDepth	src/lgfx/v1/misc/colortype.hpp	/^    void setColorDepth(color_depth_t depth_)$/;"	f	namespace:lgfx::v1
setColorDepth	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  color_depth_t Panel_GDEW0154M09::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
setColorDepth	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  color_depth_t Panel_HUB75::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_HUB75
setColorDepth	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  color_depth_t Panel_ILI9225::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_ILI9225
setColorDepth	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  color_depth_t Panel_IT8951::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_IT8951
setColorDepth	src/lgfx/v1/panel/Panel_LCD.cpp	/^  color_depth_t Panel_LCD::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_LCD
setColorDepth	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  color_depth_t Panel_M5HDMI::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setColorDepth	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  color_depth_t Panel_M5UnitLCD::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
setColorDepth	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  color_depth_t Panel_RA8875::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_RA8875
setColorDepth	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  color_depth_t Panel_1bitOLED::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_1bitOLED
setColorDepth	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  color_depth_t Panel_SSD1327::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_SSD1327
setColorDepth	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^  color_depth_t Panel_SSD1963::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_SSD1963
setColorDepth	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  color_depth_t Panel_fb::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_fb
setColorDepth	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  color_depth_t Panel_OpenCV::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_OpenCV
setColorDepth	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  color_depth_t Panel_sdl::setColorDepth(color_depth_t depth)$/;"	f	class:lgfx::v1::Panel_sdl
setColorDepth_impl	src/lgfx/v1/panel/Panel_LCD.hpp	/^    virtual void setColorDepth_impl(color_depth_t depth) { _write_depth = ((int)depth & color_depth_t::bit_mask) > 16 ? rgb888_3Byte : rgb565_2Byte; _read_depth = rgb888_3Byte; }$/;"	f	struct:lgfx::v1::Panel_LCD
setComPins	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_SSD1306::setComPins(uint8_t data)$/;"	f	class:lgfx::v1::Panel_SSD1306
setCursor	src/lgfx/v0/LGFXBase.hpp	/^    void setCursor( int32_t x, int32_t y)                    { _filled_x = 0; _cursor_x = x; _cursor_y = y; }$/;"	f	class:lgfx::v0::LGFXBase
setCursor	src/lgfx/v0/LGFXBase.hpp	/^    void setCursor( int32_t x, int32_t y, const IFont* font) { _filled_x = 0; _cursor_x = x; _cursor_y = y; setFont(font); }$/;"	f	class:lgfx::v0::LGFXBase
setCursor	src/lgfx/v0/LGFXBase.hpp	/^    void setCursor( int32_t x, int32_t y, uint8_t font) { _filled_x = 0; _cursor_x = x; _cursor_y = y; setFont(fontdata[font]); }$/;"	f	class:lgfx::v0::LGFXBase
setCursor	src/lgfx/v1/LGFXBase.hpp	/^    void setCursor( int32_t x, int32_t y)                    { _decoderState = utf8_state0; _filled_x = 0; _cursor_x = x; _cursor_y = y; }$/;"	f	class:lgfx::v1::LGFXBase
setCursor	src/lgfx/v1/LGFXBase.hpp	/^    void setCursor( int32_t x, int32_t y, const IFont* font) { setCursor(x, y); setFont(font); }$/;"	f	class:lgfx::v1::LGFXBase
setCursor	src/lgfx/v1/LGFXBase.hpp	/^    void setCursor( int32_t x, int32_t y, uint8_t      font) { setCursor(x, y); setFont(fontdata[font]); }$/;"	f	class:lgfx::v1::LGFXBase
setDrawCb	src/lgfx/v1/LGFX_Button.hpp	/^    void setDrawCb(drawCb cb) { _drawCb=cb; };$/;"	f	class:lgfx::v1::LGFX_Button
setEpdMode	src/lgfx/v0/LGFXBase.hpp	/^    epd_mode_t setEpdMode(epd_mode_t flg) { _epd_mode = flg; return flg; }$/;"	f	class:lgfx::v0::LGFXBase
setEpdMode	src/lgfx/v1/LGFXBase.hpp	/^    void setEpdMode(epd_mode_t epd_mode) { _panel->setEpdMode(epd_mode); }$/;"	f	class:lgfx::v1::LGFX_Device
setEpdMode	src/lgfx/v1/Panel.hpp	/^    void setEpdMode(epd_mode_t epd_mode) { if (_epd_mode && epd_mode) _epd_mode = epd_mode; }$/;"	f	struct:lgfx::v1::IPanel
setFS	src/lgfx/v0/platforms/esp32_common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v0::FileWrapper
setFS	src/lgfx/v0/platforms/samd51_common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v0::FileWrapper
setFS	src/lgfx/v1/misc/DataWrapper.hpp	/^    void setFS(LGFX_SDFAT_TYPE &fs) {$/;"	f	struct:lgfx::v1::SdFatWrapper
setFS	src/lgfx/v1/platforms/arduino_default/common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/esp32/common.hpp	/^    void setFS(T& fs) {}$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/esp32/common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/esp8266/common.hpp	/^    void setFS(T& fs) {}$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/esp8266/common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/rp2040/common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/samd21/common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/samd51/common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/spresense/common.hpp	/^    void setFS(StorageClass& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/spresense/common.hpp	/^    void setFS(T& fs) {}$/;"	f	struct:lgfx::v1::FileWrapper
setFS	src/lgfx/v1/platforms/stm32/common.hpp	/^    void setFS(fs::FS& fs) {$/;"	f	struct:lgfx::v1::FileWrapper
setFirmWare	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^    void setFirmWare(const gsl_fw_data* fw_data, size_t fw_size) { _fw_data = fw_data; _fw_size = fw_size; };$/;"	f	struct:lgfx::v1::Touch_GSLx680
setFont	src/LovyanGFX.hpp	/^#undef setFont$/;"	d
setFont	src/lgfx/v0/LGFXBase.cpp	/^    void LGFXBase::setFont(const IFont* font)$/;"	f	class:lgfx::v0::LGFXBase
setFont	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::setFont(const IFont* font)$/;"	f	class:lgfx::v1::LGFXBase
setFreeFont	src/lgfx/v0/LGFXBase.hpp	/^    void setFreeFont(const IFont* font = nullptr) { setFont(font); }$/;"	f	class:lgfx::v0::LGFXBase
setFreeFont	src/lgfx/v1/LGFXBase.hpp	/^    void setFreeFont(const IFont* font = nullptr) { setFont(font); }$/;"	f	class:lgfx::v1::LGFXBase
setFreqDiv	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void setFreqDiv(uint32_t div)$/;"	f	class:lgfx::v0::LGFX_SPI
setFreqDiv	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::setFreqDiv(uint32_t div)$/;"	f	class:lgfx::v1::Bus_SPI
setFreqDiv	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::setFreqDiv(uint32_t div)$/;"	f	class:lgfx::v1::Bus_SPI
setFunctionModule	src/lgfx/utility/lgfx_qrcode.c	/^static void setFunctionModule(BitBucket *modules, BitBucket *isFunction, uint_fast8_t x, uint_fast8_t y, bool on) {$/;"	f	file:
setHSync	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^  void Panel_SSD1963::setHSync(uint_fast16_t front, uint_fast16_t sync, uint_fast16_t back, uint_fast16_t move, uint_fast16_t lpspp)$/;"	f	class:lgfx::v1::Panel_SSD1963
setImageBuffer	src/lgfx/v1/Bus.hpp	/^    virtual void setImageBuffer(void* buffer, color_depth_t depth) {}$/;"	f	struct:lgfx::v1::Bus_ImagePush
setImageBuffer	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::setImageBuffer(void* buffer, color_depth_t depth)$/;"	f	class:lgfx::v1::Bus_HUB75
setInvert	src/lgfx/v1/Bus.hpp	/^    virtual void setInvert(uint8_t invert) {}$/;"	f	struct:lgfx::v1::Bus_ImagePush
setInvert	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
setInvert	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_ILI9225
setInvert	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_IT8951
setInvert	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_LCD
setInvert	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setInvert	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
setInvert	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  void Panel_NT35510::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_NT35510
setInvert	src/lgfx/v1/panel/Panel_RM68120.cpp	/^  void Panel_RM68120::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_RM68120
setInvert	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_1bitOLED
setInvert	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_SSD1327
setInvert	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_SSD1331
setInvert	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::setInvert(bool invert)$/;"	f	class:lgfx::v1::Panel_SSD1351
setLabelDatum	src/lgfx/v1/LGFX_Button.cpp	/^  void LGFX_Button::setLabelDatum(int16_t x_delta, int16_t y_delta, textdatum_t datum)$/;"	f	class:lgfx::v1::LGFX_Button
setLight	src/lgfx/v1/panel/Panel_Device.hpp	/^    void setLight(ILight* light) { _light = light; }$/;"	f	struct:lgfx::v1::Panel_Device
setOutputLevel	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void Panel_CVBS::setOutputLevel(uint8_t output_level)$/;"	f	class:lgfx::v1::Panel_CVBS
setPWMDuty	src/lgfx/v0/platforms/esp32_common.cpp	/^  void setPWMDuty(uint32_t pwm_ch, uint8_t duty)$/;"	f	namespace:lgfx::v0
setPWMDuty	src/lgfx/v0/platforms/samd51_common.hpp	/^  static inline void setPWMDuty(uint32_t , uint8_t = 0 ) {$/;"	f	namespace:lgfx::v0
setPaletteColor	src/lgfx/v0/LGFX_Sprite.hpp	/^    void setPaletteColor(size_t index, T color) {$/;"	f	class:lgfx::v0::LGFX_Sprite
setPaletteColor	src/lgfx/v0/LGFX_Sprite.hpp	/^    void setPaletteColor(size_t index, const bgr888_t& rgb)$/;"	f	class:lgfx::v0::LGFX_Sprite
setPaletteColor	src/lgfx/v0/LGFX_Sprite.hpp	/^    void setPaletteColor(size_t index, uint8_t r, uint8_t g, uint8_t b)$/;"	f	class:lgfx::v0::LGFX_Sprite
setPaletteColor	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setPaletteColor(size_t index, T color) {$/;"	f	class:lgfx::v1::LGFX_Sprite
setPaletteColor	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setPaletteColor(size_t index, const bgr888_t& rgb)$/;"	f	class:lgfx::v1::LGFX_Sprite
setPaletteColor	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setPaletteColor(size_t index, uint8_t r, uint8_t g, uint8_t b)$/;"	f	class:lgfx::v1::LGFX_Sprite
setPaletteGrayscale	src/lgfx/v0/LGFX_Sprite.hpp	/^    void setPaletteGrayscale(void)$/;"	f	class:lgfx::v0::LGFX_Sprite
setPaletteGrayscale	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setPaletteGrayscale(void)$/;"	f	class:lgfx::v1::LGFX_Sprite
setPanel	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline void setPanel(PanelCommon* panel) { _panel = panel; postSetPanel(); }$/;"	f	class:lgfx::v0::LGFX_Device
setPanel	src/lgfx/v1/LGFXBase.cpp	/^  void LGFX_Device::setPanel(Panel_Device* panel)$/;"	f	class:lgfx::v1::LGFX_Device
setPanelDataWidth	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    void setPanelDataWidth(panel_data_width_t panel_data_width) { _timing_params.data_width = panel_data_width; }$/;"	f	namespace:lgfx::v1
setPanelPosition	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  bool Panel_HUB75_Multi::setPanelPosition(uint_fast8_t index, uint_fast16_t x, uint_fast16_t y, uint_fast8_t rotation)$/;"	f	class:lgfx::v1::Panel_HUB75_Multi
setPins	src/lgfx/v1/platforms/esp32/common.cpp	/^      void setPins(i2c_dev_t* dev, gpio_num_t scl, gpio_num_t sda)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
setPins	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> setPins(int i2c_port, int pin_sda, int pin_scl)$/;"	f	namespace:lgfx::v1::i2c
setPins	src/lgfx/v1/platforms/sdl/common.hpp	/^    static inline cpp::result<void, error_t> setPins(int i2c_port, int pin_sda, int pin_scl) { return {}; }$/;"	f	namespace:lgfx::v1::i2c
setPivot	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void setPivot(float x, float y) { _xpivot = x; _ypivot = y; }$/;"	f	class:lgfx::v0::LGFXBase
setPivot	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void  setPivot(float x, float y) { _xpivot = x; _ypivot = y; }$/;"	f	class:lgfx::v1::LGFXBase
setPowerSave	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
setPowerSave	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_ILI9225
setPowerSave	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_IT8951
setPowerSave	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_LCD
setPowerSave	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setPowerSave	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
setPowerSave	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_SSD1327
setPowerSave	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_SSD1331
setPowerSave	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::setPowerSave(bool flg)$/;"	f	class:lgfx::v1::Panel_SSD1351
setPsram	src/lgfx/v0/LGFX_Sprite.hpp	/^    void setPsram( bool enabled )$/;"	f	class:lgfx::v0::LGFX_Sprite
setPsram	src/lgfx/v1/LGFX_Sprite.hpp	/^    void setPsram( bool enabled )$/;"	f	class:lgfx::v1::LGFX_Sprite
setPsram	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    void setPsram( bool use_psram ) { _config_detail.use_psram = use_psram; config_detail(_config_detail); }$/;"	f	struct:lgfx::v1::Panel_CVBS
setPsram	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^    void setPsram( bool use_psram ) { _config_detail.use_psram = use_psram; }$/;"	f	struct:lgfx::v1::Panel_RGB
setRawColor	src/lgfx/v0/LGFXBase.hpp	/^                         __attribute__ ((always_inline)) inline void setRawColor(uint32_t c) { _color.raw = c; }$/;"	f	class:lgfx::v0::LGFXBase
setRawColor	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void setRawColor(uint32_t c) { *((uint32_t*)&_color) = c; }$/;"	f	class:lgfx::v1::LGFXBase
setReadClock	src/lgfx/v1/Bus.hpp	/^    virtual void setReadClock(uint32_t) {};$/;"	f	struct:lgfx::v1::IBus
setRefreshRate	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::setRefreshRate(uint16_t refresh_rate)$/;"	f	class:lgfx::v1::Bus_HUB75
setResolution	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::setResolution( const config_resolution_t& cfg_reso )$/;"	f	class:lgfx::v1::Panel_M5HDMI
setResolution	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::setResolution( uint16_t logical_width, uint16_t logical_height, float refresh_rate, uint16_t output_width, uint16_t output_height, uint8_t scale_w, uint8_t scale_h)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setResolution	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void Panel_CVBS::setResolution(uint16_t width, uint16_t height, config_detail_t::signal_type_t type, int output_width, int output_height, int offset_x, int offset_y)$/;"	f	class:lgfx::v1::Panel_CVBS
setResolution	src/lgfx_user/M5AtomDisplay.hpp	/^  bool setResolution( uint16_t logical_width  = M5ATOMDISPLAY_LOGICAL_WIDTH$/;"	f	class:M5AtomDisplay
setRotation	src/lgfx/v0/LGFX_Device.hpp	/^    void setRotation(int_fast8_t r)$/;"	f	class:lgfx::v0::LGFX_Device
setRotation	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::setRotation(uint_fast8_t rotation)$/;"	f	class:lgfx::v1::LGFXBase
setRotation	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_Sprite
setRotation	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
setRotation	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
setRotation	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_HasBuffer
setRotation	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_ILI9225
setRotation	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_IT8951
setRotation	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_LCD
setRotation	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setRotation	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
setRotation	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_RA8875
setRotation	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^  void Panel_SSD1963::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_SSD1963
setRotation	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_fb
setRotation	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_OpenCV
setRotation	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::setRotation(uint_fast8_t r)$/;"	f	class:lgfx::v1::Panel_sdl
setSPIShared	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void          setSPIShared     (bool shared) { _spi_shared = shared; }$/;"	f	class:lgfx::v0::LGFXBase
setScaling	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setScaling(uint_fast8_t x_scale, uint_fast8_t y_scale)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setScaling	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::setScaling(uint_fast8_t scaling_x, uint_fast8_t scaling_y)$/;"	f	class:lgfx::v1::Panel_sdl
setScrollRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::setScrollRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
setScrollRect	src/lgfx/v0/LGFXBase.hpp	/^    void setScrollRect(int32_t x, int32_t y, int32_t w, int32_t h, const T& color) {$/;"	f	class:lgfx::v0::LGFXBase
setScrollRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::setScrollRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
setScrollRect	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void setScrollRect(int32_t x, int32_t y, int32_t w, int32_t h, const T& color) { setBaseColor(color); setScrollRect(x, y, w, h); }$/;"	f	class:lgfx::v1::LGFXBase
setSignalType	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^    void setSignalType(config_detail_t::signal_type_t signal_type) { _config_detail.signal_type = signal_type; config_detail(_config_detail); }$/;"	f	struct:lgfx::v1::Panel_CVBS
setSleep	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
setSleep	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_ILI9225
setSleep	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_IT8951
setSleep	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_LCD
setSleep	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setSleep	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
setSleep	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_1bitOLED
setSleep	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_SSD1327
setSleep	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_SSD1331
setSleep	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::setSleep(bool flg)$/;"	f	class:lgfx::v1::Panel_SSD1351
setSwapBytes	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void          setSwapBytes     (bool swap) { _swapBytes = swap; }$/;"	f	class:lgfx::v0::LGFXBase
setSwapBytes	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void setSwapBytes(bool swap) { _swapBytes = swap; }$/;"	f	class:lgfx::v1::LGFXBase
setTextColor	src/lgfx/v0/LGFXBase.hpp	/^    void setTextColor(T color) {$/;"	f	class:lgfx::v0::LGFXBase
setTextColor	src/lgfx/v0/LGFXBase.hpp	/^    void setTextColor(T1 fgcolor, T2 bgcolor) {$/;"	f	class:lgfx::v0::LGFXBase
setTextColor	src/lgfx/v1/LGFXBase.hpp	/^    void setTextColor(T color) {$/;"	f	class:lgfx::v1::LGFXBase
setTextColor	src/lgfx/v1/LGFXBase.hpp	/^    void setTextColor(T1 fgcolor, T2 bgcolor) {$/;"	f	class:lgfx::v1::LGFXBase
setTextDatum	src/lgfx/v0/LGFXBase.hpp	/^    void setTextDatum(textdatum_t datum) { _text_style.datum = datum; }$/;"	f	class:lgfx::v0::LGFXBase
setTextDatum	src/lgfx/v0/LGFXBase.hpp	/^    void setTextDatum(uint8_t datum) { _text_style.datum = (textdatum_t)datum; }$/;"	f	class:lgfx::v0::LGFXBase
setTextDatum	src/lgfx/v1/LGFXBase.hpp	/^    void setTextDatum(textdatum_t datum) { _text_style.datum = datum; }$/;"	f	class:lgfx::v1::LGFXBase
setTextDatum	src/lgfx/v1/LGFXBase.hpp	/^    void setTextDatum(uint8_t datum) { _text_style.datum = (textdatum_t)datum; }$/;"	f	class:lgfx::v1::LGFXBase
setTextFont	src/lgfx/v0/LGFXBase.hpp	/^    void setTextFont(const IFont* font = nullptr) { setFont(font); }$/;"	f	class:lgfx::v0::LGFXBase
setTextFont	src/lgfx/v0/LGFXBase.hpp	/^    void setTextFont(int f)$/;"	f	class:lgfx::v0::LGFXBase
setTextFont	src/lgfx/v1/LGFXBase.hpp	/^    void setTextFont(const IFont* font = nullptr) { setFont(font); }$/;"	f	class:lgfx::v1::LGFXBase
setTextFont	src/lgfx/v1/LGFXBase.hpp	/^    void setTextFont(int f)$/;"	f	class:lgfx::v1::LGFXBase
setTextPadding	src/lgfx/v0/LGFXBase.hpp	/^    void setTextPadding(uint32_t padding_x) { _padding_x = padding_x; }$/;"	f	class:lgfx::v0::LGFXBase
setTextPadding	src/lgfx/v1/LGFXBase.hpp	/^    void setTextPadding(uint32_t padding_x) { _text_style.padding_x = padding_x; }$/;"	f	class:lgfx::v1::LGFXBase
setTextScroll	src/lgfx/v0/LGFXBase.hpp	/^    void setTextScroll(bool scroll) { _textscroll = scroll; if (_cursor_x < this->_sx) { _cursor_x = this->_sx; } if (_cursor_y < this->_sy) { _cursor_y = this->_sy; } }$/;"	f	class:lgfx::v0::LGFXBase
setTextScroll	src/lgfx/v1/LGFXBase.hpp	/^    void setTextScroll(bool scroll) { _textscroll = scroll; if (_cursor_x < this->_sx) { _cursor_x = this->_sx; } if (_cursor_y < this->_sy) { _cursor_y = this->_sy; } }$/;"	f	class:lgfx::v1::LGFXBase
setTextSize	src/lgfx/v0/LGFXBase.hpp	/^    void setTextSize(float size) { setTextSize(size, size); }$/;"	f	class:lgfx::v0::LGFXBase
setTextSize	src/lgfx/v0/LGFXBase.hpp	/^    void setTextSize(float sx, float sy) { _text_style.size_x = (sx > 0) ? sx : 1; _text_style.size_y = (sy > 0) ? sy : 1; }$/;"	f	class:lgfx::v0::LGFXBase
setTextSize	src/lgfx/v1/LGFXBase.hpp	/^    void setTextSize(float size) { setTextSize(size, size); }$/;"	f	class:lgfx::v1::LGFXBase
setTextSize	src/lgfx/v1/LGFXBase.hpp	/^    void setTextSize(float sx, float sy) { _text_style.size_x = (sx > 0) ? sx : 1; _text_style.size_y = (sy > 0) ? sy : 1; }$/;"	f	class:lgfx::v1::LGFXBase
setTextStyle	src/lgfx/v0/LGFXBase.hpp	/^    void setTextStyle(const TextStyle& text_style) { _text_style = text_style; }$/;"	f	class:lgfx::v0::LGFXBase
setTextStyle	src/lgfx/v1/LGFXBase.hpp	/^    void setTextStyle(const TextStyle& text_style) { _text_style = text_style; }$/;"	f	class:lgfx::v1::LGFXBase
setTextWrap	src/lgfx/v0/LGFXBase.hpp	/^    void setTextWrap( bool wrapX, bool wrapY = false) { _textwrap_x = wrapX; _textwrap_y = wrapY; }$/;"	f	class:lgfx::v0::LGFXBase
setTextWrap	src/lgfx/v1/LGFXBase.hpp	/^    void setTextWrap( bool wrapX, bool wrapY = false) { _textwrap_x = wrapX; _textwrap_y = wrapY; }$/;"	f	class:lgfx::v1::LGFXBase
setTouch	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline void setTouch(TouchCommon* touch_) { _touch = touch_; postSetTouch(); }$/;"	f	class:lgfx::v0::LGFX_Device
setTouch	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::setTouch(ITouch* touch)$/;"	f	class:lgfx::v1::Panel_Device
setTouchCalibrate	src/lgfx/v0/LGFX_Device.hpp	/^    void setTouchCalibrate(uint16_t *parameters) { set_touch_calibrate(parameters); }$/;"	f	class:lgfx::v0::LGFX_Device
setTouchCalibrate	src/lgfx/v1/LGFXBase.hpp	/^    void setTouchCalibrate(uint16_t *parameters)$/;"	f	class:lgfx::v1::LGFX_Device
setTouchNums	src/lgfx/v0/touch/Touch_GT911.cpp	/^  void Touch_GT911::setTouchNums(int_fast8_t nums)$/;"	f	class:lgfx::v0::Touch_GT911
setTouchNums	src/lgfx/v1/touch/Touch_GT911.cpp	/^  void Touch_GT911::setTouchNums(int_fast8_t nums)$/;"	f	class:lgfx::v1::Touch_GT911
setVCOM	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::setVCOM(uint16_t vcom)$/;"	f	class:lgfx::v1::Panel_IT8951
setVSync	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^  void Panel_SSD1963::setVSync(uint_fast16_t front, uint_fast16_t sync, uint_fast16_t back, uint_fast16_t move)$/;"	f	class:lgfx::v1::Panel_SSD1963
setVideoTiming	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setVideoTiming(const video_timing_t* param)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setViewPort	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setViewPort(uint_fast16_t x, uint_fast16_t y)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setWindow	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void setWindow(int32_t xs, int32_t ys, int32_t xe, int32_t ye) { setWindow_impl(xs, ys, xe, ye); }$/;"	f	class:lgfx::v0::LGFXBase
setWindow	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye) { _panel->setWindow(xs, ys, xe, ye); }$/;"	f	class:lgfx::v1::LGFXBase
setWindow	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_Sprite
setWindow	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
setWindow	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
setWindow	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_HasBuffer
setWindow	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_ILI9225
setWindow	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_IT8951
setWindow	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_LCD
setWindow	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_M5HDMI
setWindow	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
setWindow	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  void Panel_NT35510::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_NT35510
setWindow	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_RA8875
setWindow	src/lgfx/v1/panel/Panel_RM68120.cpp	/^  void Panel_RM68120::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_RM68120
setWindow	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_SSD1331
setWindow	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_SSD1351
setWindow	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^  void Panel_SSD1963::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_SSD1963
setWindow	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_fb
setWindow	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_OpenCV
setWindow	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::setWindow(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v1::Panel_sdl
set_clock_fill	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_fill(void)  { *reg(SPI_CLOCK_REG(_spi_port)) = _clkdiv_fill;  }$/;"	f	class:lgfx::v0::LGFX_SPI
set_clock_fill	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_fill(void)  { setFreqDiv(_clkdiv_fill ); }$/;"	f	class:lgfx::v0::LGFX_SPI
set_clock_read	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_read(void)  { *reg(SPI_CLOCK_REG(_spi_port)) = _clkdiv_read;  }$/;"	f	class:lgfx::v0::LGFX_SPI
set_clock_read	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_read(void)  { setFreqDiv(_clkdiv_read ); }$/;"	f	class:lgfx::v0::LGFX_SPI
set_clock_read	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_read(void)  { setFreqDiv(_clkdiv_read ); }$/;"	f	class:lgfx::v1::Bus_SPI
set_clock_read	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_read(void)  { setFreqDiv(_clkdiv_read ); }$/;"	f	class:lgfx::v1::Bus_SPI
set_clock_write	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_write(void) { *reg(SPI_CLOCK_REG(_spi_port)) = _clkdiv_write; }$/;"	f	class:lgfx::v0::LGFX_SPI
set_clock_write	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_write(void) { setFreqDiv(_clkdiv_write); }$/;"	f	class:lgfx::v0::LGFX_SPI
set_clock_write	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_write(void) { setFreqDiv(_clkdiv_write); }$/;"	f	class:lgfx::v1::Bus_SPI
set_clock_write	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_clock_write(void) { setFreqDiv(_clkdiv_write); }$/;"	f	class:lgfx::v1::Bus_SPI
set_dss_16	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) void set_dss_16()$/;"	f	class:lgfx::v1::Bus_SPI
set_dss_8	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) void set_dss_8()$/;"	f	class:lgfx::v1::Bus_SPI
set_interlace_pass	src/lgfx/utility/lgfx_pngle.c	/^static void set_interlace_pass(pngle_t *pngle, uint_fast8_t pass)$/;"	f	file:
set_read_len	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void set_read_len( uint32_t bitlen) { *reg(SPI_MISO_DLEN_REG(_spi_port)) = bitlen - 1; }$/;"	f	class:lgfx::v0::LGFX_SPI
set_read_len	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_read_len( uint32_t bitlen) { *reg(SPI_MISO_DLEN_REG(_spi_port)) = bitlen - 1; }$/;"	f	class:lgfx::v1::Bus_SPI
set_read_len	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_read_len( uint32_t bitlen) { SPI1U1 = (bitlen - 1) << SPILMISO; }$/;"	f	class:lgfx::v1::Bus_SPI
set_target_address	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void set_target_address(volatile i2c_hw_t * i2c_regs, int addr)$/;"	f	namespace:lgfx::v1::i2c::__anon58
set_touch_calibrate	src/lgfx/v0/LGFX_Device.hpp	/^    void set_touch_calibrate(uint16_t *parameters)$/;"	f	class:lgfx::v0::LGFX_Device
set_window	src/lgfx/v0/LGFX_Sprite.hpp	/^    void set_window(int32_t xs, int32_t ys, int32_t xe, int32_t ye)$/;"	f	class:lgfx::v0::LGFX_Sprite
set_window	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void set_window(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye, uint32_t cmd)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
set_window	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void set_window(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v0::LGFX_SPI
set_window	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void set_window(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye)$/;"	f	class:lgfx::v0::LGFX_SPI
set_window	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::set_window(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye, uint32_t cmd)$/;"	f	class:lgfx::v1::Panel_ILI9225
set_window_16	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::set_window_16(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye, uint32_t cmd)$/;"	f	class:lgfx::v1::Panel_LCD
set_window_8	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::set_window_8(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye, uint32_t cmd)$/;"	f	class:lgfx::v1::Panel_LCD
set_window_8	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::set_window_8(uint_fast16_t xs, uint_fast16_t ys, uint_fast16_t xe, uint_fast16_t ye, uint32_t cmd)$/;"	f	class:lgfx::v1::Panel_SSD1351
set_write_len	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void set_write_len(uint32_t bitlen) { *_spi_mosi_dlen_reg = bitlen - 1; }$/;"	f	class:lgfx::v0::LGFX_SPI
set_write_len	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_write_len(uint32_t bitlen) { *_spi_mosi_dlen_reg = bitlen - 1; }$/;"	f	class:lgfx::v1::Bus_SPI
set_write_len	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void set_write_len( uint32_t bitlen) { SPI1U1 = (bitlen - 1) << SPILMOSI; }$/;"	f	class:lgfx::v1::Bus_SPI
setup	examples/Test/build_test/main/main.cpp	/^void setup()$/;"	f
setup	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^void setup()$/;"	f
setup	examples_for_PC/CMake_OpenCV/user_code.cpp	/^void setup()$/;"	f
setup	examples_for_PC/CMake_SDL/user_code.cpp	/^void setup()$/;"	f
setup	src/lgfx_user/M5UnitLCD.hpp	/^  void setup(uint8_t pin_sda = M5UNITLCD_SDA, uint8_t pin_scl = M5UNITLCD_SCL, uint32_t i2c_freq = M5UNITLCD_FREQ, int8_t i2c_port = -1, uint8_t i2c_addr = M5UNITLCD_ADDR)$/;"	f	class:M5UnitLCD
setup	src/lgfx_user/M5UnitOLED.hpp	/^  void setup(uint8_t pin_sda = M5UNITOLED_SDA, uint8_t pin_scl = M5UNITOLED_SCL, uint32_t i2c_freq = M5UNITOLED_FREQ, int8_t i2c_port = -1, uint8_t i2c_addr = M5UNITOLED_ADDR)$/;"	f	class:M5UnitOLED
setup_palette	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    void (*setup_palette)(uint32_t*, uint_fast16_t, uint_fast16_t, uint_fast8_t); \/\/ パレット生成関数のポインタ;$/;"	m	struct:lgfx::v1::signal_setup_info_t	file:
setup_palette_ntsc	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static void setup_palette_ntsc(uint32_t* palette, uint_fast16_t white_level, uint_fast16_t black_level, uint_fast8_t chroma_level)$/;"	f	namespace:lgfx::v1
setup_palette_pal	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static void setup_palette_pal(uint32_t* palette, uint_fast16_t white_level, uint_fast16_t black_level, uint_fast8_t chroma_level)$/;"	f	namespace:lgfx::v1
showFont	src/lgfx/v0/LGFXBase.cpp	/^    void LGFXBase::showFont(uint32_t td)$/;"	f	class:lgfx::v0::LGFXBase
showFont	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::showFont(uint32_t td)$/;"	f	class:lgfx::v1::LGFXBase
signal_setup_info_t	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  struct signal_setup_info_t$/;"	s	namespace:lgfx::v1	file:
signal_spec_info_t	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  struct signal_spec_info_t$/;"	s	namespace:lgfx::v1	file:
signal_type	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^      signal_type_t signal_type = signal_type_t::NTSC;$/;"	m	struct:lgfx::v1::Panel_CVBS::config_detail_t
signal_type_max	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^        signal_type_max,     \/\/ dummy, can't select this.$/;"	e	enum:lgfx::v1::Panel_CVBS::config_detail_t::signal_type_t
signal_type_t	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^      enum signal_type_t$/;"	g	struct:lgfx::v1::Panel_CVBS::config_detail_t
single_height	src/lgfx/v1/panel/Panel_HUB75.hpp	/^      uint16_t single_height = 32;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi::config_detail_t
single_width	src/lgfx/v1/panel/Panel_HUB75.hpp	/^      uint16_t single_width = 64;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi::config_detail_t
size	src/lgfx/utility/lgfx_qrcode.h	/^    uint8_t size;$/;"	m	struct:QRCode
size	src/lgfx/v0/lgfx_common.hpp	/^    int16_t size;$/;"	m	struct:lgfx::touch_point_t
size	src/lgfx/v1/Touch.hpp	/^    uint16_t size = 0;$/;"	m	struct:lgfx::v1::touch_point_t
size_x	src/lgfx/v0/lgfx_common.hpp	/^    float size_x = 1;$/;"	m	struct:lgfx::TextStyle
size_x	src/lgfx/v1/lgfx_fonts.hpp	/^    float size_x = 1;$/;"	m	struct:lgfx::v1::TextStyle
size_y	src/lgfx/v0/lgfx_common.hpp	/^    float size_y = 1;$/;"	m	struct:lgfx::TextStyle
size_y	src/lgfx/v1/lgfx_fonts.hpp	/^    float size_y = 1;$/;"	m	struct:lgfx::v1::TextStyle
skip_bit_affine	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t skip_bit_affine(int32_t index, int32_t last, pixelcopy_t* param)$/;"	f	struct:lgfx::pixelcopy_t
skip_bit_affine	src/lgfx/v1/misc/pixelcopy.cpp	/^    uint32_t pixelcopy_t::skip_bit_affine(uint32_t index, uint32_t last, pixelcopy_t* param)$/;"	f	class:lgfx::v1::pixelcopy_t
skip_rgb_affine	src/lgfx/v0/lgfx_common.hpp	/^    static int32_t skip_rgb_affine(int32_t index, int32_t last, pixelcopy_t* param)$/;"	f	struct:lgfx::pixelcopy_t
skip_rgb_affine	src/lgfx/v1/misc/pixelcopy.hpp	/^    static uint32_t skip_rgb_affine(uint32_t index, uint32_t last, pixelcopy_t* param)$/;"	f	struct:lgfx::v1::pixelcopy_t
sleep	src/lgfx/v0/LGFX_Device.hpp	/^    void sleep(void)$/;"	f	class:lgfx::v0::LGFX_Device
sleep	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual void sleep(LGFX_Device*)$/;"	f	struct:lgfx::v0::PanelCommon
sleep	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::sleep(LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
sleep	src/lgfx/v0/touch/TouchCommon.hpp	/^    virtual void sleep(void) {}$/;"	f	struct:lgfx::v0::TouchCommon
sleep	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  void Touch_FT5x06::sleep(void)$/;"	f	class:lgfx::v0::Touch_FT5x06
sleep	src/lgfx/v0/touch/Touch_GT911.cpp	/^  void Touch_GT911::sleep(void)$/;"	f	class:lgfx::v0::Touch_GT911
sleep	src/lgfx/v1/LGFXBase.hpp	/^    inline void sleep(void) { _panel->setBrightness(0); _panel->setSleep(true); }$/;"	f	class:lgfx::v1::LGFX_Device
sleep	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  void Touch_FT5x06::sleep(void)$/;"	f	class:lgfx::v1::Touch_FT5x06
sleep	src/lgfx/v1/touch/Touch_GT911.cpp	/^  void Touch_GT911::sleep(void)$/;"	f	class:lgfx::v1::Touch_GT911
sleep	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^  void Touch_STMPE610::sleep(void)$/;"	f	class:lgfx::v1::Touch_STMPE610
spaceWidth	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t spaceWidth; \/\/ Width of a space character$/;"	m	struct:lgfx::v0::VLWfont
spaceWidth	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t spaceWidth; \/\/ Width of a space character$/;"	m	struct:lgfx::v1::VLWfont
spi	src/lgfx/v0/lgfx_common.hpp	/^  namespace spi$/;"	n	namespace:lgfx
spi	src/lgfx/v0/platforms/esp32_common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v0	file:
spi	src/lgfx/v0/platforms/esp32_common.hpp	/^  namespace spi$/;"	n	namespace:lgfx::v0
spi	src/lgfx/v0/platforms/samd51_common.cpp	/^  namespace spi \/\/ TODO: implement.$/;"	n	namespace:lgfx::v0	file:
spi	src/lgfx/v1/platforms/arduino_default/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/common.hpp	/^  namespace spi$/;"	n	namespace:lgfx::v1
spi	src/lgfx/v1/platforms/esp32/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/esp32/common.hpp	/^  namespace spi$/;"	n	namespace:lgfx::v1
spi	src/lgfx/v1/platforms/esp8266/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/framebuffer/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/opencv/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/rp2040/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/rp2040/common.hpp	/^  namespace spi$/;"	n	namespace:lgfx::v1
spi	src/lgfx/v1/platforms/samd21/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/samd51/common.cpp	/^  namespace spi \/\/ TODO: implement.$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/sdl/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/sdl/common.hpp	/^  namespace spi$/;"	n	namespace:lgfx::v1
spi	src/lgfx/v1/platforms/spresense/common.cpp	/^  namespace spi$/;"	n	namespace:lgfx::v1	file:
spi	src/lgfx/v1/platforms/stm32/common.cpp	/^  namespace spi \/\/ TODO: implement.$/;"	n	namespace:lgfx::v1	file:
spi0_miso_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t spi0_miso_pinlist[] = {  0,  4, 16, 20, UINT8_MAX };$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spi0_mosi_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t spi0_mosi_pinlist[] = {  3,  7, 19, 23, UINT8_MAX };$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spi0_sclk_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t spi0_sclk_pinlist[] = {  2,  6, 18, 23, UINT8_MAX };$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spi1_miso_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t spi1_miso_pinlist[] = {  8, 12, 24, 28, UINT8_MAX };$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spi1_mosi_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t spi1_mosi_pinlist[] = { 11, 15, 27,     UINT8_MAX };$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spi1_sclk_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr uint8_t spi1_sclk_pinlist[] = { 10, 14, 26,     UINT8_MAX };$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spiWrite	src/lgfx/v0/LGFX_Device.hpp	/^    inline  void spiWrite( uint_fast8_t data) { writeData(data); } \/\/ AdafruitGFX compatible$/;"	f	class:lgfx::v0::LGFX_Device
spiWrite	src/lgfx/v1/LGFXBase.hpp	/^    inline void spiWrite(   uint8_t  data) { _panel->writeData(                  data , 1); } \/\/ AdafruitGFX compatible$/;"	f	class:lgfx::v1::LGFX_Device
spi_3wire	src/lgfx/v0/panel/PanelCommon.hpp	/^    bool spi_3wire = false;           \/\/ SPI 3wire mode (read from MOSI)$/;"	m	struct:lgfx::v0::PanelCommon
spi_3wire	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      bool spi_3wire = true;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_3wire	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      bool spi_3wire = true;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_3wire	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      bool spi_3wire;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t
spi_cs	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t spi_cs    = -1;      \/\/ SPI CS pin number$/;"	m	struct:lgfx::v0::PanelCommon
spi_cs	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast16_t spi_cs;$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon456
spi_dc	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast16_t spi_dc    = -1;      \/\/ SPI dc pin number$/;"	m	struct:lgfx::v0::PanelCommon
spi_dev	src/lgfx/v1/platforms/rp2040/common.cpp	/^      volatile spi_hw_t * const spi_dev[] = {$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spi_dlen	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^    static constexpr int spi_dlen = 8;$/;"	m	struct:lgfx::LGFX_Config
spi_dlen	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast8_t spi_dlen  = 0;        \/\/ SPI transfer length (8 or 16)$/;"	m	struct:lgfx::v0::PanelCommon
spi_dma_reset	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void spi_dma_reset()$/;"	f	class:lgfx::v0::LGFX_SPI
spi_dma_transfer_active	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^  inline static void spi_dma_transfer_active(int dmachan)$/;"	f	namespace:lgfx::v0
spi_host	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::v0::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^    static constexpr spi_host_device_t spi_host = HSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^    static constexpr spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::LGFX_Config
spi_host	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast8_t spi_host; \/\/ ESP32:spi_host_device_t VSPI_HOST or HSPI_HOST$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon456
spi_host	src/lgfx/v1/Touch.hpp	/^          int8_t spi_host; \/\/ ESP32:spi_host_device_t VSPI_HOST or HSPI_HOST$/;"	m	struct:lgfx::v1::ITouch::config_t::__anon259::__anon260
spi_host	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      spi_host_device_t spi_host = SPI2_HOST;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_host	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      spi_host_device_t spi_host = VSPI_HOST;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_host	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      uint8_t spi_host = default_spi_host;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_host	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      spi_host_device_t spi_host;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t
spi_info	src/lgfx/v1/platforms/rp2040/common.cpp	/^      spi_info_str spi_info[n_spi];$/;"	m	namespace:lgfx::v1::spi::__anon55	file:
spi_info_str	src/lgfx/v1/platforms/rp2040/common.cpp	/^      struct spi_info_str {$/;"	s	namespace:lgfx::v1::spi::__anon55	file:
spi_miso	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^    static constexpr int spi_miso = 19;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^    static constexpr int spi_miso = -1;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^    static constexpr int spi_miso = 25;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^    static constexpr int spi_miso = 19;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^    static constexpr int spi_miso = 19;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^    static constexpr int spi_miso = 14;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^    static constexpr int spi_miso = 19;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^    static constexpr int spi_miso = -1;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^    static constexpr int spi_miso = -1;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^    static constexpr int spi_miso = -1;$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr int spi_miso = 0x0112; \/\/ PORTB 18 (PORTB=0x0100 | 18=0x0012)$/;"	m	struct:lgfx::LGFX_Config
spi_miso	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast16_t spi_miso;$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon456
spi_mode	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast8_t spi_mode  = 0;        \/\/ SPI mode (0~3)$/;"	m	struct:lgfx::v0::PanelCommon
spi_mode	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      uint8_t spi_mode = 0;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_mode	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^      int8_t spi_mode;$/;"	m	struct:lgfx::v1::LGFX::_detector_spi_t
spi_mode_read	src/lgfx/v0/panel/PanelCommon.hpp	/^    int_fast8_t spi_mode_read = 0;    \/\/ SPI mode (0~3) when read pixel$/;"	m	struct:lgfx::v0::PanelCommon
spi_mosi	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^    static constexpr int spi_mosi = 23;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^    static constexpr int spi_mosi = 26;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^    static constexpr int spi_mosi = 23;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^    static constexpr int spi_mosi = 23;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^    static constexpr int spi_mosi = 23;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^    static constexpr int spi_mosi = 15;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^    static constexpr int spi_mosi = 23;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^    static constexpr int spi_mosi = 23;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^    static constexpr int spi_mosi = 19;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^    static constexpr int spi_mosi = 19;$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr int spi_mosi = 0x0113; \/\/ PORTB 19 (PORTB=0x0100 | 19=0x0013)$/;"	m	struct:lgfx::LGFX_Config
spi_mosi	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast16_t spi_mosi;$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon456
spi_periph_num	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int spi_periph_num = 3;$/;"	m	namespace:lgfx::v1::spi	file:
spi_periph_num	src/lgfx/v1/platforms/esp32/common.cpp	/^    static constexpr int spi_periph_num = SOC_SPI_PERIPH_NUM;$/;"	m	namespace:lgfx::v1::spi	file:
spi_pinlist	src/lgfx/v1/platforms/rp2040/common.cpp	/^      } spi_pinlist[] = {$/;"	m	namespace:lgfx::v1::spi::__anon55	typeref:struct:lgfx::v1::spi::__anon55::spi_pinlist_str	file:
spi_pinlist_str	src/lgfx/v1/platforms/rp2040/common.cpp	/^      constexpr struct spi_pinlist_str {$/;"	s	namespace:lgfx::v1::spi::__anon55	file:
spi_port	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^      uint8_t spi_port = 4;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_port	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      SPI_TypeDef *spi_port = SPI1;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
spi_read	src/lgfx/v0/panel/PanelCommon.hpp	/^    bool spi_read  = true;            \/\/ Use SPI read$/;"	m	struct:lgfx::v0::PanelCommon
spi_sclk	src/lgfx/v0/config/LGFX_Config_Custom.hpp	/^    static constexpr int spi_sclk = 18;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_DDUINO32_XS.hpp	/^    static constexpr int spi_sclk = 27;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_ESP_WROVER_KIT.hpp	/^    static constexpr int spi_sclk = 19;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_LoLinD32.hpp	/^    static constexpr int spi_sclk = 18;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_M5Stack.hpp	/^    static constexpr int spi_sclk = 18;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_M5StickC.hpp	/^    static constexpr int spi_sclk = 13;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_ODROID_GO.hpp	/^    static constexpr int spi_sclk = 18;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_TTGO_TS.hpp	/^    static constexpr int spi_sclk =  5;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_TTGO_TWatch.hpp	/^    static constexpr int spi_sclk = 18;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_TTGO_TWristband.hpp	/^    static constexpr int spi_sclk = 18;$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/config/LGFX_Config_WioTerminal.hpp	/^    static constexpr int spi_sclk = 0x0114; \/\/ PORTB 20 (PORTB=0x0100 | 20=0x0014)$/;"	m	struct:lgfx::LGFX_Config
spi_sclk	src/lgfx/v0/touch/TouchCommon.hpp	/^        int_fast16_t spi_sclk;$/;"	m	struct:lgfx::v0::TouchCommon::__anon455::__anon456
sr_mask	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      static constexpr uint32_t sr_mask = SPI_SR_TXE;$/;"	m	class:lgfx::v1::Bus_SPI
sr_mask	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^      static constexpr uint32_t sr_mask = SPI_SR_TXP;$/;"	m	class:lgfx::v1::Bus_SPI
src_attrib	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint8_t src_attrib;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon4::__anon5
src_bits	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t src_bits = 8;$/;"	m	struct:lgfx::pixelcopy_t
src_bits	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint8_t src_bits;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon4::__anon5
src_bitwidth	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t src_bitwidth = 0;$/;"	m	struct:lgfx::pixelcopy_t
src_bitwidth	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t src_bitwidth = 0;$/;"	m	struct:lgfx::v1::pixelcopy_t
src_data	src/lgfx/v0/lgfx_common.hpp	/^    const void* src_data = nullptr;$/;"	m	struct:lgfx::pixelcopy_t
src_data	src/lgfx/v1/misc/pixelcopy.hpp	/^    const void* src_data = nullptr;$/;"	m	struct:lgfx::v1::pixelcopy_t
src_depth	src/lgfx/v1/misc/pixelcopy.hpp	/^      color_depth_t src_depth = rgb332_1Byte;$/;"	m	union:lgfx::v1::pixelcopy_t::__anon4
src_height	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t src_height = 0;$/;"	m	struct:lgfx::pixelcopy_t
src_height	src/lgfx/v1/misc/pixelcopy.hpp	/^    int32_t src_height = 0;$/;"	m	struct:lgfx::v1::pixelcopy_t
src_mask	src/lgfx/v0/lgfx_common.hpp	/^    uint8_t src_mask  = ~0;$/;"	m	struct:lgfx::pixelcopy_t
src_mask	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint8_t src_mask  = ~0;$/;"	m	struct:lgfx::v1::pixelcopy_t
src_width	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t src_width = 0;$/;"	m	struct:lgfx::pixelcopy_t
src_width	src/lgfx/v1/misc/pixelcopy.hpp	/^    int32_t src_width = 0;$/;"	m	struct:lgfx::v1::pixelcopy_t
src_x	src/lgfx/v0/lgfx_common.hpp	/^         int16_t src_x;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_x	src/lgfx/v1/misc/pixelcopy.hpp	/^         int16_t src_x;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
src_x32	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t src_x32;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon505
src_x32	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint32_t src_x32;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon2
src_x32_add	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t src_x32_add = 1 << FP_SCALE;$/;"	m	struct:lgfx::pixelcopy_t
src_x32_add	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t src_x32_add = 1 << FP_SCALE;$/;"	m	struct:lgfx::v1::pixelcopy_t
src_x_lo	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t src_x_lo;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_x_lo	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint16_t src_x_lo;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
src_xe	src/lgfx/v0/lgfx_common.hpp	/^         int16_t src_xe;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_xe	src/lgfx/v1/misc/pixelcopy.hpp	/^         int16_t src_xe;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
src_xe32	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t src_xe32;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon505
src_xe32	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint32_t src_xe32;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon2
src_xe_lo	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t src_xe_lo;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_xe_lo	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint16_t src_xe_lo;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
src_y	src/lgfx/v0/lgfx_common.hpp	/^         int16_t src_y;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_y	src/lgfx/v1/misc/pixelcopy.hpp	/^         int16_t src_y;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
src_y32	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t src_y32;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon505
src_y32	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint32_t src_y32;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon2
src_y32_add	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t src_y32_add = 0;$/;"	m	struct:lgfx::pixelcopy_t
src_y32_add	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t src_y32_add = 0;$/;"	m	struct:lgfx::v1::pixelcopy_t
src_y_lo	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t src_y_lo;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_y_lo	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint16_t src_y_lo;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
src_ye	src/lgfx/v0/lgfx_common.hpp	/^         int16_t src_ye;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_ye	src/lgfx/v1/misc/pixelcopy.hpp	/^         int16_t src_ye;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
src_ye32	src/lgfx/v0/lgfx_common.hpp	/^        uint32_t src_ye32;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon505
src_ye32	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint32_t src_ye32;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon2
src_ye_lo	src/lgfx/v0/lgfx_common.hpp	/^        uint16_t src_ye_lo;$/;"	m	struct:lgfx::pixelcopy_t::__anon504::__anon506
src_ye_lo	src/lgfx/v1/misc/pixelcopy.hpp	/^        uint16_t src_ye_lo;$/;"	m	struct:lgfx::v1::pixelcopy_t::__anon1::__anon3
start	src/lgfx/v0/lgfx_fonts.cpp	/^    uint8_t start;$/;"	m	struct:lgfx::v0::glcd_fontinfo_t	file:
start	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t start;$/;"	m	struct:lgfx::v0::EncodeRange
start	src/lgfx/v1/lgfx_fonts.cpp	/^    uint8_t start;$/;"	m	struct:lgfx::v1::glcd_fontinfo_t	file:
start	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t start;$/;"	m	struct:lgfx::v1::EncodeRange
startTransmissionWIRE	src/lgfx/v1/platforms/samd21/common.cpp	/^    static bool startTransmissionWIRE(SercomI2cm *i2cm, uint8_t address, bool read)$/;"	f	namespace:lgfx::v1::i2c
startWrite	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void startWrite(bool transaction)$/;"	f	class:lgfx::v0::LGFXBase
startWrite	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void startWrite(void) {                           if (1 == ++_transaction_count) beginTransaction(); }$/;"	f	class:lgfx::v0::LGFXBase
startWrite	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void startWrite(bool transaction = true) { _panel->startWrite(transaction); }$/;"	f	class:lgfx::v1::LGFXBase
startWrite	src/lgfx/v1/Panel.hpp	/^    void startWrite(bool transaction = true) { if (1 == ++_start_count && transaction) { beginTransaction(); } }$/;"	f	struct:lgfx::v1::IPanel
start_pos_lower_a	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t start_pos_lower_a(void) const { return _font[19] << 8 | _font[20]; }$/;"	f	struct:lgfx::v0::U8g2font
start_pos_lower_a	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t start_pos_lower_a(void) const { return pgm_read_byte(&_font[19]) << 8 | pgm_read_byte(&_font[20]); }$/;"	f	struct:lgfx::v1::U8g2font
start_pos_unicode	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t start_pos_unicode(void) const { return _font[21] << 8 | _font[22]; }$/;"	f	struct:lgfx::v0::U8g2font
start_pos_unicode	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t start_pos_unicode(void) const { return pgm_read_byte(&_font[21]) << 8 | pgm_read_byte(&_font[22]); }$/;"	f	struct:lgfx::v1::U8g2font
start_pos_upper_A	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t start_pos_upper_A(void) const { return _font[17] << 8 | _font[18]; }$/;"	f	struct:lgfx::v0::U8g2font
start_pos_upper_A	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t start_pos_upper_A(void) const { return pgm_read_byte(&_font[17]) << 8 | pgm_read_byte(&_font[18]); }$/;"	f	struct:lgfx::v1::U8g2font
start_read	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void start_read(void)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
start_read	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void start_read(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
start_read	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void start_read(void) {$/;"	f	class:lgfx::v0::LGFX_SPI
state	src/lgfx/utility/miniz.c	/^  struct mz_internal_state *state;  \/\/ internal state, allocated by zalloc\/zfree$/;"	m	struct:mz_stream_s	typeref:struct:mz_stream_s::mz_internal_state	file:
state	src/lgfx/v1/platforms/esp32/common.cpp	/^      cpp::result<state_t, error_t> state;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
state	src/lgfx/v1/platforms/esp8266/common.cpp	/^      cpp::result<state_t, error_t> state;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
state	src/lgfx/v1/platforms/samd51/common.cpp	/^      cpp::result<state_t, error_t> state;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
state_disconnect	src/lgfx/v1/platforms/esp32/common.cpp	/^        state_disconnect,$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_disconnect	src/lgfx/v1/platforms/esp8266/common.cpp	/^        state_disconnect,$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_disconnect	src/lgfx/v1/platforms/samd51/common.cpp	/^        state_disconnect,$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_none	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      state_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_none	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      state_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_none	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      state_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_none	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      state_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_none	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      state_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_read	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      state_read,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_read	src/lgfx/v1/platforms/esp32/common.cpp	/^        state_read$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_read	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      state_read,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_read	src/lgfx/v1/platforms/esp8266/common.cpp	/^        state_read$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_read	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      state_read,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_read	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      state_read,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_read	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      state_read,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_read	src/lgfx/v1/platforms/samd51/common.cpp	/^        state_read$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_t	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^    enum state_t$/;"	g	class:lgfx::v1::Bus_I2C
state_t	src/lgfx/v1/platforms/esp32/common.cpp	/^      enum state_t$/;"	g	struct:lgfx::v1::i2c::i2c_context_t	file:
state_t	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^    enum state_t$/;"	g	class:lgfx::v1::Bus_I2C
state_t	src/lgfx/v1/platforms/esp8266/common.cpp	/^      enum state_t$/;"	g	struct:lgfx::v1::i2c::i2c_context_t	file:
state_t	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^    enum state_t$/;"	g	class:lgfx::v1::Bus_I2C
state_t	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^    enum state_t$/;"	g	class:lgfx::v1::Bus_I2C
state_t	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^    enum state_t$/;"	g	class:lgfx::v1::Bus_I2C
state_t	src/lgfx/v1/platforms/samd51/common.cpp	/^      enum state_t$/;"	g	struct:lgfx::v1::i2c::i2c_context_t	file:
state_write	src/lgfx/v1/platforms/esp32/common.cpp	/^        state_write,$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_write	src/lgfx/v1/platforms/esp8266/common.cpp	/^        state_write,$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_write	src/lgfx/v1/platforms/samd51/common.cpp	/^        state_write,$/;"	e	enum:lgfx::v1::i2c::i2c_context_t::state_t	file:
state_write_cmd	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      state_write_cmd,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_cmd	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      state_write_cmd,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_cmd	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      state_write_cmd,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_cmd	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      state_write_cmd,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_cmd	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      state_write_cmd,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_data	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      state_write_data,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_data	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      state_write_data,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_data	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      state_write_data,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_data	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      state_write_data,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_data	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      state_write_data,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_none	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^      state_write_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_none	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^      state_write_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_none	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^      state_write_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_none	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^      state_write_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
state_write_none	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^      state_write_none,$/;"	e	enum:lgfx::v1::Bus_I2C::state_t
std	src/lgfx/utility/result.hpp	/^namespace std {$/;"	n
stm32	src/lgfx/v1/platforms/stm32/common.hpp	/^  namespace stm32$/;"	n	namespace:lgfx::v1
store_absolute	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  static uint8_t* store_absolute(uint8_t* dst, const uint8_t* src, size_t src_size, size_t bytes)$/;"	f	namespace:lgfx::v1
store_encoded	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  static uint8_t* store_encoded(uint8_t* dst, const uint8_t* src, size_t data_num, size_t bytes)$/;"	f	namespace:lgfx::v1
stream	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^      Stream* stream = nullptr;$/;"	m	struct:lgfx::v1::Bus_Stream::config_t
sub_heap_alloc	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  static inline uint8_t* sub_heap_alloc(bool flg_psram, size_t size)$/;"	f	namespace:lgfx::v1
swap32	src/lgfx/utility/lgfx_pngle.c	/^static inline uint32_t swap32(uint32_t c) { c = (c >> 16) + (c << 16); return ((c >> 8) & 0xFF00FF) + ((c & 0xFF00FF) << 8); }$/;"	f	file:
swap565	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint16_t swap565( uint8_t r, uint8_t g, uint8_t b) { return lgfx::swap565( r, g, b); }$/;"	f	class:lgfx::v0::LGFXBase
swap565	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline static constexpr uint16_t swap565( uint8_t r, uint8_t g, uint8_t b) { return (((r >> 3) << 3) + (g >> 5)) | (((g >> 2) << 5) | (b >> 3)) << 8; }$/;"	f	namespace:lgfx::v0
swap565	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static constexpr uint16_t swap565( uint8_t r, uint8_t g, uint8_t b) { return lgfx::swap565( r, g, b); }$/;"	f	class:lgfx::v1::LGFXBase
swap565	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint16_t swap565( uint8_t r, uint8_t g, uint8_t b) { return (((r >> 3) << 3) + (g >> 5)) | (((g >> 2) << 5) | (b >> 3)) << 8; }$/;"	f	namespace:lgfx::v1
swap565_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr swap565_t(uint16_t swap565) : raw(swap565) {}$/;"	f	struct:lgfx::v0::swap565_t
swap565_t	src/lgfx/v0/lgfx_common.hpp	/^    constexpr swap565_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw(swap565(r8,g8,b8)) {}$/;"	f	struct:lgfx::v0::swap565_t
swap565_t	src/lgfx/v0/lgfx_common.hpp	/^    swap565_t() : raw(0) {}$/;"	f	struct:lgfx::v0::swap565_t
swap565_t	src/lgfx/v0/lgfx_common.hpp	/^  struct swap565_t {$/;"	s	namespace:lgfx::v0
swap565_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr swap565_t(uint16_t swap565) : raw(swap565) {}$/;"	f	struct:lgfx::v1::swap565_t
swap565_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr swap565_t(uint8_t r8, uint8_t g8, uint8_t b8) : raw(swap565(r8, g8, b8)) {}$/;"	f	struct:lgfx::v1::swap565_t
swap565_t	src/lgfx/v1/misc/colortype.hpp	/^    constexpr swap565_t(void) : raw(0) {}$/;"	f	struct:lgfx::v1::swap565_t
swap565_t	src/lgfx/v1/misc/colortype.hpp	/^  struct swap565_t$/;"	s	namespace:lgfx::v1
swap888	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline static uint32_t swap888( uint8_t r, uint8_t g, uint8_t b) { return lgfx::swap888( r, g, b); }$/;"	f	class:lgfx::v0::LGFXBase
swap888	src/lgfx/v0/lgfx_common.hpp	/^  __attribute__ ((always_inline)) inline static constexpr uint32_t swap888( uint8_t r, uint8_t g, uint8_t b) { return b << 16 | g << 8 | r; }$/;"	f	namespace:lgfx::v0
swap888	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE static constexpr uint32_t swap888( uint8_t r, uint8_t g, uint8_t b) { return lgfx::swap888( r, g, b); }$/;"	f	class:lgfx::v1::LGFXBase
swap888	src/lgfx/v1/misc/colortype.hpp	/^  LGFX_INLINE constexpr uint32_t swap888( uint8_t r, uint8_t g, uint8_t b) { return b << 16 | g << 8 | r; }$/;"	f	namespace:lgfx::v1
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = false;$/;"	m	struct:lgfx::v0::argb8888_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = false;$/;"	m	struct:lgfx::v0::rgb332_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = false;$/;"	m	struct:lgfx::v0::rgb565_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = false;$/;"	m	struct:lgfx::v0::rgb888_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v0::bgr666_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v0::bgr888_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v0::bgra8888_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v0::grayscale_t
swapped	src/lgfx/v0/lgfx_common.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v0::swap565_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = false;$/;"	m	struct:lgfx::v1::argb8888_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = false;$/;"	m	struct:lgfx::v1::rgb565_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = false;$/;"	m	struct:lgfx::v1::rgb888_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v1::bgr666_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v1::bgr888_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v1::bgra8888_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v1::grayscale_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v1::rgb332_t
swapped	src/lgfx/v1/misc/colortype.hpp	/^    static constexpr bool swapped = true;$/;"	m	struct:lgfx::v1::swap565_t
switch_gpio_control	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^  void Bus_HUB75::switch_gpio_control(bool switch_to_dma)$/;"	f	class:lgfx::v1::Bus_HUB75
sync	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^        uint16_t sync;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::video_timing_t::info_t
syncSYSOP	src/lgfx/v1/platforms/samd21/common.cpp	/^    static inline void syncSYSOP(SercomI2cm *i2cm)$/;"	f	namespace:lgfx::v1::i2c
sync_proc	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t sync_proc[2][12];     \/\/ 垂直同期期間の処理内容テーブル 偶数行・奇数行で2要素,各要素12ライン分;$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
sz_pool	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast16_t sz_pool;			\/* Size of momory pool (bytes available) *\/$/;"	m	struct:lgfxJdec
t	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t t;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon51
target_x	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^int32_t target_x = (SCREEN_X \/ 2) * 256;$/;"	v
target_x	examples_for_PC/CMake_OpenCV/user_code.cpp	/^int32_t target_x = 160 * 256;$/;"	v
target_x	examples_for_PC/CMake_SDL/user_code.cpp	/^int32_t target_x = 160 * 256;$/;"	v
target_y	examples_for_PC/CMake_FrameBuffer/user_code.cpp	/^int32_t target_y = (SCREEN_Y \/ 2) * 256;$/;"	v
target_y	examples_for_PC/CMake_OpenCV/user_code.cpp	/^int32_t target_y = 120 * 256;$/;"	v
target_y	examples_for_PC/CMake_SDL/user_code.cpp	/^int32_t target_y = 120 * 256;$/;"	v
task_memcpy	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    static void task_memcpy(void* args)$/;"	f	class:lgfx::v1::scanline_cache_t	file:
task_pinned_core	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      BaseType_t task_pinned_core = -1;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t
task_priority	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^      UBaseType_t task_priority = 2;$/;"	m	struct:lgfx::v1::Bus_HUB75::config_t
tasktype	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    typedef void(*tasktype)(void*);$/;"	t	class:lgfx::v1::scanline_cache_t	file:
tc_index	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      uint8_t tc_index = 0;$/;"	m	struct:lgfx::v1::Light_TC::config_t
tc_index	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^      uint8_t tc_index = 0;$/;"	m	struct:lgfx::v1::Light_TC::config_t
tcc_index	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      uint8_t tcc_index = 0;$/;"	m	struct:lgfx::v1::Light_TCC::config_t
tdefl_calculate_minimum_redundancy	src/lgfx/utility/miniz.c	/^static void tdefl_calculate_minimum_redundancy(tdefl_sym_freq *A, int n)$/;"	f	file:
tdefl_compress	src/lgfx/utility/miniz.c	/^tdefl_status tdefl_compress(tdefl_compressor *d, const void *pIn_buf, size_t *pIn_buf_size, void *pOut_buf, size_t *pOut_buf_size, tdefl_flush flush)$/;"	f
tdefl_compress_block	src/lgfx/utility/miniz.c	/^static mz_bool tdefl_compress_block(tdefl_compressor *d, mz_bool static_block)$/;"	f	file:
tdefl_compress_buffer	src/lgfx/utility/miniz.c	/^tdefl_status tdefl_compress_buffer(tdefl_compressor *d, const void *pIn_buf, size_t in_buf_size, tdefl_flush flush)$/;"	f
tdefl_compress_fast	src/lgfx/utility/miniz.c	/^static mz_bool tdefl_compress_fast(tdefl_compressor *d)$/;"	f	file:
tdefl_compress_lz_codes	src/lgfx/utility/miniz.c	/^static mz_bool tdefl_compress_lz_codes(tdefl_compressor *d)$/;"	f	file:
tdefl_compress_mem_to_heap	src/lgfx/utility/miniz.c	/^void *tdefl_compress_mem_to_heap(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)$/;"	f
tdefl_compress_mem_to_mem	src/lgfx/utility/miniz.c	/^size_t tdefl_compress_mem_to_mem(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)$/;"	f
tdefl_compress_mem_to_output	src/lgfx/utility/miniz.c	/^mz_bool tdefl_compress_mem_to_output(const void *pBuf, size_t buf_len, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)$/;"	f
tdefl_compress_normal	src/lgfx/utility/miniz.c	/^static mz_bool tdefl_compress_normal(tdefl_compressor *d)$/;"	f	file:
tdefl_compressor	src/lgfx/utility/miniz.c	/^} tdefl_compressor;$/;"	t	typeref:struct:__anon536	file:
tdefl_create_comp_flags_from_zip_params	src/lgfx/utility/miniz.c	/^mz_uint tdefl_create_comp_flags_from_zip_params(int level, int window_bits, int strategy)$/;"	f
tdefl_find_match	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE void tdefl_find_match(tdefl_compressor *d, mz_uint lookahead_pos, mz_uint max_dist, mz_uint max_match_len, mz_uint *pMatch_dist, mz_uint *pMatch_len)$/;"	f	file:
tdefl_flush	src/lgfx/utility/miniz.c	/^} tdefl_flush;$/;"	t	typeref:enum:__anon535	file:
tdefl_flush_block	src/lgfx/utility/miniz.c	/^static int tdefl_flush_block(tdefl_compressor *d, int flush)$/;"	f	file:
tdefl_flush_output_buffer	src/lgfx/utility/miniz.c	/^static tdefl_status tdefl_flush_output_buffer(tdefl_compressor *d)$/;"	f	file:
tdefl_get_adler32	src/lgfx/utility/miniz.c	/^mz_uint32 tdefl_get_adler32(tdefl_compressor *d)$/;"	f
tdefl_get_png_row_default	src/lgfx/utility/miniz.c	/^mz_uint8 *tdefl_get_png_row_default( mz_uint8 *pImage, mz_bool flip, int w, int h, int y, int bpl, void *target ) {$/;"	f
tdefl_get_png_row_func	src/lgfx/utility/miniz.c	/^typedef mz_uint8 *(*tdefl_get_png_row_func)(mz_uint8 *pImage, mz_bool flip, int w, int h, int y, int bpl, void *target);$/;"	t	file:
tdefl_get_prev_return_status	src/lgfx/utility/miniz.c	/^tdefl_status tdefl_get_prev_return_status(tdefl_compressor *d)$/;"	f
tdefl_huffman_enforce_max_code_size	src/lgfx/utility/miniz.c	/^static void tdefl_huffman_enforce_max_code_size(int *pNum_codes, int code_list_len, int max_code_size)$/;"	f	file:
tdefl_init	src/lgfx/utility/miniz.c	/^tdefl_status tdefl_init(tdefl_compressor *d, tdefl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)$/;"	f
tdefl_optimize_huffman_table	src/lgfx/utility/miniz.c	/^static void tdefl_optimize_huffman_table(tdefl_compressor *d, int table_num, int table_len, int code_size_limit, int static_table)$/;"	f	file:
tdefl_output_buffer	src/lgfx/utility/miniz.c	/^} tdefl_output_buffer;$/;"	t	typeref:struct:__anon540	file:
tdefl_output_buffer_putter	src/lgfx/utility/miniz.c	/^static mz_bool tdefl_output_buffer_putter(const void *pBuf, int len, void *pUser)$/;"	f	file:
tdefl_put_buf_func_ptr	src/lgfx/utility/miniz.c	/^typedef mz_bool (*tdefl_put_buf_func_ptr)(const void* pBuf, int len, void *pUser);$/;"	t	file:
tdefl_radix_sort_syms	src/lgfx/utility/miniz.c	/^static tdefl_sym_freq* tdefl_radix_sort_syms(mz_uint num_syms, tdefl_sym_freq* pSyms0, tdefl_sym_freq* pSyms1)$/;"	f	file:
tdefl_record_literal	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE void tdefl_record_literal(tdefl_compressor *d, mz_uint8 lit)$/;"	f	file:
tdefl_record_match	src/lgfx/utility/miniz.c	/^static MZ_FORCEINLINE void tdefl_record_match(tdefl_compressor *d, mz_uint match_len, mz_uint match_dist)$/;"	f	file:
tdefl_start_dynamic_block	src/lgfx/utility/miniz.c	/^static void tdefl_start_dynamic_block(tdefl_compressor *d)$/;"	f	file:
tdefl_start_static_block	src/lgfx/utility/miniz.c	/^static void tdefl_start_static_block(tdefl_compressor *d)$/;"	f	file:
tdefl_status	src/lgfx/utility/miniz.c	/^} tdefl_status;$/;"	t	typeref:enum:__anon534	file:
tdefl_sym_freq	src/lgfx/utility/miniz.c	/^typedef struct { mz_uint16 m_key, m_sym_index; } tdefl_sym_freq;$/;"	t	typeref:struct:__anon538	file:
tdefl_write_image_to_png_file_in_memory	src/lgfx/utility/miniz.c	/^void *tdefl_write_image_to_png_file_in_memory(const void *pImage, int w, int h, int num_chans, size_t *pLen_out)$/;"	f
tdefl_write_image_to_png_file_in_memory_ex	src/lgfx/utility/miniz.c	/^void *tdefl_write_image_to_png_file_in_memory_ex(const void *pImage, int w, int h, int num_chans, size_t *pLen_out, mz_uint level, mz_bool flip)$/;"	f
tdefl_write_image_to_png_file_in_memory_ex_with_cb	src/lgfx/utility/miniz.c	/^void *tdefl_write_image_to_png_file_in_memory_ex_with_cb(const void *pImage, int w, int h, int num_chans, size_t *pLen_out, mz_uint level, mz_bool flip, tdefl_get_png_row_func cb, void *target)$/;"	f
tell	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      int32_t tell(void) { return _index; }$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
test	examples/Test/build_test/main/main.cpp	/^void test(LGFX_Device &lcd)$/;"	f
textLength	src/lgfx/v0/LGFXBase.cpp	/^    int32_t LGFXBase::textLength(const char *string, int32_t width)$/;"	f	class:lgfx::v0::LGFXBase
textLength	src/lgfx/v0/LGFXBase.hpp	/^    inline int32_t textLength(const String& string, int32_t width) { return textLength(string.c_str(), width); }$/;"	f	class:lgfx::v0::LGFXBase
textLength	src/lgfx/v1/LGFXBase.cpp	/^  int32_t LGFXBase::textLength(const char *string, int32_t width)$/;"	f	class:lgfx::v1::LGFXBase
textLength	src/lgfx/v1/LGFXBase.hpp	/^    inline int32_t textLength(const String& string, int32_t width) { return textLength(string.c_str(), width); }$/;"	f	class:lgfx::v1::LGFXBase
textWidth	src/lgfx/v0/LGFXBase.cpp	/^    int32_t LGFXBase::textWidth(const char *string)$/;"	f	class:lgfx::v0::LGFXBase
textWidth	src/lgfx/v0/LGFXBase.hpp	/^    inline int32_t textWidth(const String& string) { return textWidth(string.c_str()); }$/;"	f	class:lgfx::v0::LGFXBase
textWidth	src/lgfx/v1/LGFXBase.cpp	/^  int32_t LGFXBase::textWidth(const char *string, const IFont* font)$/;"	f	class:lgfx::v1::LGFXBase
textWidth	src/lgfx/v1/LGFXBase.hpp	/^    inline int32_t textWidth(const String& string) { return textWidth(string.c_str()); }$/;"	f	class:lgfx::v1::LGFXBase
textWidth	src/lgfx/v1/LGFXBase.hpp	/^    inline int32_t textWidth(const String& string, const IFont* font) { return textWidth(string.c_str(), font); }$/;"	f	class:lgfx::v1::LGFXBase
textWidth	src/lgfx/v1/LGFXBase.hpp	/^    int32_t textWidth(const char *string) { return textWidth(string, _font); };$/;"	f	class:lgfx::v1::LGFXBase
text_width	src/lgfx/v1/LGFXBase.cpp	/^  int32_t LGFXBase::text_width(const char *string, const IFont* font, FontMetrics* metrics)$/;"	f	class:lgfx::v1::LGFXBase
textdatum	src/lgfx/v0/lgfx_common.hpp	/^  namespace textdatum$/;"	n	namespace:lgfx::v0
textdatum	src/lgfx/v1/misc/enum.hpp	/^  namespace textdatum$/;"	n	namespace:lgfx::v1
texture	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    SDL_Texture* texture = nullptr;$/;"	m	struct:lgfx::v1::monitor_t
tft_command	src/LGFX_TFT_eSPI.hpp	/^  namespace tft_command$/;"	n	namespace:lgfx
tft_fb	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    bgr888_t* tft_fb = nullptr;$/;"	m	struct:lgfx::v1::monitor_t
threshold	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^    int threshold = 512;$/;"	m	struct:lgfx::v0::Touch_XPT2046
threshold	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^    int threshold = 512;$/;"	m	struct:lgfx::v1::Touch_STMPE610
timer_alt	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      bool timer_alt = false;$/;"	m	struct:lgfx::v1::Light_TC::config_t
timer_alt	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^      bool timer_alt = false;$/;"	m	struct:lgfx::v1::Light_TCC::config_t
timing_params_t	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^    struct timing_params_t$/;"	s	namespace:lgfx::v1
tinfl_bit_buf_t	src/lgfx/utility/miniz.c	/^  typedef mz_uint32 tinfl_bit_buf_t;$/;"	t	file:
tinfl_bit_buf_t	src/lgfx/utility/miniz.c	/^  typedef mz_uint64 tinfl_bit_buf_t;$/;"	t	file:
tinfl_decompress	src/lgfx/utility/miniz.c	/^tinfl_status tinfl_decompress(tinfl_decompressor *r, const mz_uint8 *pIn_buf_next, size_t *pIn_buf_size, mz_uint8 *pOut_buf_start, mz_uint8 *pOut_buf_next, size_t *pOut_buf_size, const mz_uint32 decomp_flags)$/;"	f
tinfl_decompress_mem_to_callback	src/lgfx/utility/miniz.c	/^int tinfl_decompress_mem_to_callback(const void *pIn_buf, size_t *pIn_buf_size, tinfl_put_buf_func_ptr pPut_buf_func, void *pPut_buf_user, int flags)$/;"	f
tinfl_decompress_mem_to_heap	src/lgfx/utility/miniz.c	/^void *tinfl_decompress_mem_to_heap(const void *pSrc_buf, size_t src_buf_len, size_t *pOut_len, int flags)$/;"	f
tinfl_decompress_mem_to_mem	src/lgfx/utility/miniz.c	/^size_t tinfl_decompress_mem_to_mem(void *pOut_buf, size_t out_buf_len, const void *pSrc_buf, size_t src_buf_len, int flags)$/;"	f
tinfl_decompressor	src/lgfx/utility/miniz.c	/^struct tinfl_decompressor_tag; typedef struct tinfl_decompressor_tag tinfl_decompressor;$/;"	t	typeref:struct:tinfl_decompressor_tag	file:
tinfl_decompressor_tag	src/lgfx/utility/miniz.c	/^struct tinfl_decompressor_tag$/;"	s	file:
tinfl_get_adler32	src/lgfx/utility/miniz.c	/^#define tinfl_get_adler32(/;"	d	file:
tinfl_huff_table	src/lgfx/utility/miniz.c	/^} tinfl_huff_table;$/;"	t	typeref:struct:__anon528	file:
tinfl_init	src/lgfx/utility/miniz.c	/^#define tinfl_init(/;"	d	file:
tinfl_put_buf_func_ptr	src/lgfx/utility/miniz.c	/^typedef int (*tinfl_put_buf_func_ptr)(const void* pBuf, int len, void *pUser);$/;"	t	file:
tinfl_status	src/lgfx/utility/miniz.c	/^} tinfl_status;$/;"	t	typeref:enum:__anon526	file:
tmpBeginTransaction	src/lgfx/v0/LGFXBase.hpp	/^    static void tmpBeginTransaction(void* lgfx)$/;"	f	class:lgfx::v0::LGFXBase
tmpBeginTransaction	src/lgfx/v1/LGFXBase.hpp	/^    static void tmpBeginTransaction(LGFXBase* lgfx)$/;"	f	class:lgfx::v1::LGFXBase
tmpEndTransaction	src/lgfx/v0/LGFXBase.hpp	/^    static void tmpEndTransaction(void* lgfx)$/;"	f	class:lgfx::v0::LGFXBase
tmpEndTransaction	src/lgfx/v1/LGFXBase.hpp	/^    static void tmpEndTransaction(LGFXBase* lgfx)$/;"	f	class:lgfx::v1::LGFXBase
to_gray	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  inline static uint32_t to_gray(uint8_t r, uint8_t g, uint8_t b)$/;"	f	namespace:lgfx::v1
top	src/lgfx/utility/lgfx_tjpgd.h	/^	uint32_t left, right, top, bottom;$/;"	m	struct:__anon552
top	src/lgfx/v0/lgfx_common.hpp	/^        int32_t top;$/;"	m	struct:lgfx::range_rect_t::__anon509::__anon510
top	src/lgfx/v1/misc/range.hpp	/^        int_fast16_t top;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon50
total_in	src/lgfx/utility/miniz.c	/^  mz_ulong total_in;                \/\/ total number of bytes consumed so far$/;"	m	struct:mz_stream_s	file:
total_out	src/lgfx/utility/miniz.c	/^  mz_ulong total_out;               \/\/ total number of bytes produced so far$/;"	m	struct:mz_stream_s	file:
total_scanlines	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t total_scanlines;     \/\/ 走査線数(２フィールド、１フレーム);$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
touch	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline TouchCommon* touch(void) const { return _touch; }$/;"	f	class:lgfx::v0::LGFX_Device
touch	src/lgfx/v0/LGFX_Device.hpp	/^    __attribute__ ((always_inline)) inline void touch(TouchCommon* touch_) { _touch = touch_; postSetTouch(); }$/;"	f	class:lgfx::v0::LGFX_Device
touch	src/lgfx/v1/LGFXBase.hpp	/^    inline ITouch* touch(void) const { return _panel ? panel()->touch() : nullptr; }$/;"	f	class:lgfx::v1::LGFX_Device
touch	src/lgfx/v1/panel/Panel_Device.hpp	/^    ITouch* touch(void) const { return _touch; }$/;"	f	struct:lgfx::v1::Panel_Device
touch	src/lgfx/v1/panel/Panel_Device.hpp	/^    void touch(ITouch* touch) { setTouch(touch); }$/;"	f	struct:lgfx::v1::Panel_Device
touchCalibrate	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::touchCalibrate(void)$/;"	f	class:lgfx::v1::Panel_Device
touch_point_t	src/lgfx/v0/lgfx_common.hpp	/^  struct touch_point_t$/;"	s	namespace:lgfx
touch_point_t	src/lgfx/v1/Touch.hpp	/^  struct touch_point_t$/;"	s	namespace:lgfx::v1
touch_x	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    int touch_x, touch_y;$/;"	m	struct:lgfx::v1::monitor_t
touch_y	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    int touch_x, touch_y;$/;"	m	struct:lgfx::v1::monitor_t
touched	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    bool touched = false;$/;"	m	struct:lgfx::v1::monitor_t
trans_color	src/lgfx/utility/lgfx_pngle.c	/^  uint32_t trans_color;$/;"	m	struct:_pngle_t	file:
transactionRead	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> transactionRead(int i2c_port, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> transactionRead(int i2c_port, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> transactionRead(int i2c_port, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> transactionRead(int i2c_port, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> transactionRead(int i2c_port, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> transactionRead(int i2c_port, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> transactionRead(int sercom_index, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> transactionRead(int sercom_index, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> transactionRead(int i2c_port, int addr, uint8_t *readdata, uint8_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionRead	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> transactionRead(int , int , uint8_t *, uint8_t , uint32_t )  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int sercom_index, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int sercom_index, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWrite	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> transactionWrite(int , int , const uint8_t *, uint8_t , uint32_t )  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int sercom_index, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int sercom_index, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int i2c_port, int addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, size_t readlen, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transactionWriteRead	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> transactionWriteRead(int , int , const uint8_t *, uint8_t , uint8_t *, size_t , uint32_t )  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
transfer	src/lgfx/v1/touch/Touch_XPT2046.cpp	/^  static void transfer(uint8_t* read_data, const uint8_t* write_data, size_t len, const Touch_XPT2046::config_t *cfg)$/;"	f	namespace:lgfx::v1
transp	src/lgfx/v0/lgfx_common.hpp	/^    uint32_t transp   = 1 << 24u; \/\/ A1 R0 G0 B0$/;"	m	struct:lgfx::pixelcopy_t
transp	src/lgfx/v1/misc/pixelcopy.hpp	/^    uint32_t transp   = NON_TRANSP;$/;"	m	struct:lgfx::v1::pixelcopy_t
true	src/lgfx/utility/lgfx_qrcode.h	/^static const bool true = 1;$/;"	v
type	src/lgfx/utility/result.hpp	/^      & -> typename std::add_lvalue_reference<T>::type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::std::add_lvalue_reference
type	src/lgfx/utility/result.hpp	/^      && -> typename std::add_rvalue_reference<T>::type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::std::add_rvalue_reference
type	src/lgfx/utility/result.hpp	/^      && -> typename std::remove_reference<T>::type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::std::remove_reference
type	src/lgfx/utility/result.hpp	/^      const & -> typename std::add_lvalue_reference<typename std::add_const<T>::type>::type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::std::add_lvalue_reference
type	src/lgfx/utility/result.hpp	/^      const & -> typename std::remove_reference<T>::type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::std::remove_reference
type	src/lgfx/utility/result.hpp	/^      const && -> typename std::add_rvalue_reference<typename std::add_const<T>::type>::type;$/;"	m	class:RESULT_NAMESPACE_INTERNAL::bitwizeshift::result::std::add_rvalue_reference
u8g2_font_courB08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courB08_tr[994] = $/;"	v
u8g2_font_courB10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courB10_tr[1363] = $/;"	v
u8g2_font_courB12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courB12_tr[1546] = $/;"	v
u8g2_font_courB14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courB14_tr[1755] = $/;"	v
u8g2_font_courB18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courB18_tr[2244] = $/;"	v
u8g2_font_courB24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courB24_tr[3023] = $/;"	v
u8g2_font_courR08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courR08_tr[997] = $/;"	v
u8g2_font_courR10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courR10_tr[1339] = $/;"	v
u8g2_font_courR12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courR12_tr[1473] = $/;"	v
u8g2_font_courR14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courR14_tr[1682] = $/;"	v
u8g2_font_courR18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courR18_tr[2077] = $/;"	v
u8g2_font_courR24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_courR24_tr[2758] = $/;"	v
u8g2_font_decode_t	src/lgfx/v0/lgfx_fonts.cpp	/^    u8g2_font_decode_t(const uint8_t* ptr) : decode_ptr(ptr), decode_bit_pos(0) {}$/;"	f	struct:lgfx::v0::u8g2_font_decode_t
u8g2_font_decode_t	src/lgfx/v0/lgfx_fonts.cpp	/^  struct u8g2_font_decode_t$/;"	s	namespace:lgfx::v0	file:
u8g2_font_decode_t	src/lgfx/v1/lgfx_fonts.cpp	/^    u8g2_font_decode_t(const uint8_t* ptr) : decode_ptr(ptr), decode_bit_pos(0) {}$/;"	f	struct:lgfx::v1::u8g2_font_decode_t
u8g2_font_decode_t	src/lgfx/v1/lgfx_fonts.cpp	/^  struct u8g2_font_decode_t$/;"	s	namespace:lgfx::v1	file:
u8g2_font_helvB08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvB08_tr[1062] = $/;"	v
u8g2_font_helvB10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvB10_tr[1347] = $/;"	v
u8g2_font_helvB12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvB12_tr[1530] = $/;"	v
u8g2_font_helvB14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvB14_tr[1771] = $/;"	v
u8g2_font_helvB18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvB18_tr[2253] = $/;"	v
u8g2_font_helvB24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvB24_tr[2987] = $/;"	v
u8g2_font_helvR08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvR08_tr[1043] = $/;"	v
u8g2_font_helvR10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvR10_tr[1320] = $/;"	v
u8g2_font_helvR12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvR12_tr[1529] = $/;"	v
u8g2_font_helvR14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvR14_tr[1744] = $/;"	v
u8g2_font_helvR18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvR18_tr[2241] = $/;"	v
u8g2_font_helvR24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_helvR24_tr[3174] = $/;"	v
u8g2_font_ncenB08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenB08_tr[1192] = $/;"	v
u8g2_font_ncenB10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenB10_tr[1619] = $/;"	v
u8g2_font_ncenB12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenB12_tr[1838] = $/;"	v
u8g2_font_ncenB14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenB14_tr[2129] = $/;"	v
u8g2_font_ncenB18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenB18_tr[2745] = $/;"	v
u8g2_font_ncenB24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenB24_tr[3923] = $/;"	v
u8g2_font_ncenR08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenR08_tr[1110] = $/;"	v
u8g2_font_ncenR10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenR10_tr[1585] = $/;"	v
u8g2_font_ncenR12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenR12_tr[1762] = $/;"	v
u8g2_font_ncenR14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenR14_tr[2075] = $/;"	v
u8g2_font_ncenR18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenR18_tr[2608] = $/;"	v
u8g2_font_ncenR24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_ncenR24_tr[3744] = $/;"	v
u8g2_font_profont10_tr	examples/HowToUse/4_unicode_fonts/u8g2/profont.c	/^const uint8_t u8g2_font_profont10_tr[886] = $/;"	v
u8g2_font_profont11_tr	examples/HowToUse/4_unicode_fonts/u8g2/profont.c	/^const uint8_t u8g2_font_profont11_tr[967] = $/;"	v
u8g2_font_profont12_tr	examples/HowToUse/4_unicode_fonts/u8g2/profont.c	/^const uint8_t u8g2_font_profont12_tr[980] = $/;"	v
u8g2_font_profont15_tr	examples/HowToUse/4_unicode_fonts/u8g2/profont.c	/^const uint8_t u8g2_font_profont15_tr[1093] = $/;"	v
u8g2_font_profont17_tr	examples/HowToUse/4_unicode_fonts/u8g2/profont.c	/^const uint8_t u8g2_font_profont17_tr[1308] = $/;"	v
u8g2_font_profont22_tr	examples/HowToUse/4_unicode_fonts/u8g2/profont.c	/^const uint8_t u8g2_font_profont22_tr[1704] = $/;"	v
u8g2_font_profont29_tr	examples/HowToUse/4_unicode_fonts/u8g2/profont.c	/^const uint8_t u8g2_font_profont29_tr[2108] = $/;"	v
u8g2_font_timB08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timB08_tr[1081] = $/;"	v
u8g2_font_timB10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timB10_tr[1411] = $/;"	v
u8g2_font_timB12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timB12_tr[1628] = $/;"	v
u8g2_font_timB14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timB14_tr[1856] = $/;"	v
u8g2_font_timB18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timB18_tr[2527] = $/;"	v
u8g2_font_timB24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timB24_tr[3447] = $/;"	v
u8g2_font_timR08_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timR08_tr[1034] = $/;"	v
u8g2_font_timR10_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timR10_tr[1373] = $/;"	v
u8g2_font_timR12_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timR12_tr[1594] = $/;"	v
u8g2_font_timR14_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timR14_tr[1876] = $/;"	v
u8g2_font_timR18_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timR18_tr[2415] = $/;"	v
u8g2_font_timR24_tr	examples/HowToUse/4_unicode_fonts/u8g2/adobex11font.c	/^const uint8_t u8g2_font_timR24_tr[3360] = $/;"	v
uInt	src/lgfx/utility/miniz.c	/^  typedef unsigned int uInt;$/;"	t	file:
uIntf	src/lgfx/utility/miniz.c	/^  typedef uInt uIntf;$/;"	t	file:
uLong	src/lgfx/utility/miniz.c	/^  typedef mz_ulong uLong;$/;"	t	file:
uLongf	src/lgfx/utility/miniz.c	/^  typedef uLong uLongf;$/;"	t	file:
uint16_t	src/lgfx/utility/lgfx_tjpgd.h	/^ typedef unsigned short	uint16_t;$/;"	t
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :12;              \/*!< bit:  0..11  Reserved                           *\/$/;"	m	struct:__anon352::__anon354
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :1;               \/*!< bit:      3  Reserved                           *\/$/;"	m	struct:__anon352::__anon353
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit:  0.. 1  Reserved                           *\/$/;"	m	struct:__anon441::__anon442
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon352::__anon353
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit: 14..15  Reserved                           *\/$/;"	m	struct:__anon352::__anon353
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit: 14..15  Reserved                           *\/$/;"	m	struct:__anon352::__anon354
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :3;               \/*!< bit:  9..11  Reserved                           *\/$/;"	m	struct:__anon352::__anon353
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :4;               \/*!< bit:  4.. 7  Reserved                           *\/$/;"	m	struct:__anon320::__anon321
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :4;               \/*!< bit: 10..13  Reserved                           *\/$/;"	m	struct:__anon320::__anon321
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :4;               \/*!< bit: 12..15  Reserved                           *\/$/;"	m	struct:__anon441::__anon442
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :7;               \/*!< bit:  9..15  Reserved                           *\/$/;"	m	struct:__anon445::__anon446
uint16_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint16_t :8;               \/*!< bit:  3..10  Reserved                           *\/$/;"	m	struct:__anon441::__anon442
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :12;              \/*!< bit:  0..11  Reserved                           *\/$/;"	m	struct:__anon138::__anon140
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :1;               \/*!< bit:      3  Reserved                           *\/$/;"	m	struct:__anon138::__anon139
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit:  0.. 1  Reserved                           *\/$/;"	m	struct:__anon227::__anon228
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon138::__anon139
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit: 14..15  Reserved                           *\/$/;"	m	struct:__anon138::__anon139
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :2;               \/*!< bit: 14..15  Reserved                           *\/$/;"	m	struct:__anon138::__anon140
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :3;               \/*!< bit:  9..11  Reserved                           *\/$/;"	m	struct:__anon138::__anon139
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :4;               \/*!< bit:  4.. 7  Reserved                           *\/$/;"	m	struct:__anon106::__anon107
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :4;               \/*!< bit: 10..13  Reserved                           *\/$/;"	m	struct:__anon106::__anon107
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :4;               \/*!< bit: 12..15  Reserved                           *\/$/;"	m	struct:__anon227::__anon228
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :7;               \/*!< bit:  9..15  Reserved                           *\/$/;"	m	struct:__anon231::__anon232
uint16_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint16_t :8;               \/*!< bit:  3..10  Reserved                           *\/$/;"	m	struct:__anon227::__anon228
uint32_t	src/lgfx/utility/lgfx_tjpgd.h	/^ typedef unsigned long	uint32_t;$/;"	t
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :10;              \/*!< bit: 22..31  Reserved                           *\/$/;"	m	struct:__anon345::__anon347
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :14;              \/*!< bit: 18..31  Reserved                           *\/$/;"	m	struct:__anon429::__anon430
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :15;              \/*!< bit: 17..31  Reserved                           *\/$/;"	m	struct:__anon299::__anon300
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :16;              \/*!< bit:  0..15  Reserved                           *\/$/;"	m	struct:__anon345::__anon347
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :16;              \/*!< bit: 16..31  Reserved                           *\/$/;"	m	struct:__anon297::__anon298
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :16;              \/*!< bit: 16..31  Reserved                           *\/$/;"	m	struct:__anon331::__anon332
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :17;              \/*!< bit: 15..31  Reserved                           *\/$/;"	m	struct:__anon301::__anon302
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :18;              \/*!< bit:  6..23  Reserved                           *\/$/;"	m	struct:__anon431::__anon432
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :18;              \/*!< bit: 14..31  Reserved                           *\/$/;"	m	struct:__anon277::__anon278
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :18;              \/*!< bit: 14..31  Reserved                           *\/$/;"	m	struct:__anon277::__anon279
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      0  Reserved                           *\/$/;"	m	struct:__anon310::__anon311
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      1  Reserved                           *\/$/;"	m	struct:__anon277::__anon278
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      3  Reserved                           *\/$/;"	m	struct:__anon299::__anon300
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      3  Reserved                           *\/$/;"	m	struct:__anon443::__anon444
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      5  Reserved                           *\/$/;"	m	struct:__anon299::__anon300
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      6  Reserved                           *\/$/;"	m	struct:__anon310::__anon311
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      7  Reserved                           *\/$/;"	m	struct:__anon331::__anon332
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      8  Reserved                           *\/$/;"	m	struct:__anon299::__anon300
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     12  Reserved                           *\/$/;"	m	struct:__anon301::__anon302
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     14  Reserved                           *\/$/;"	m	struct:__anon295::__anon296
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     16  Reserved                           *\/$/;"	m	struct:__anon429::__anon430
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     23  Reserved                           *\/$/;"	m	struct:__anon310::__anon311
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     23  Reserved                           *\/$/;"	m	struct:__anon417::__anon418
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     26  Reserved                           *\/$/;"	m	struct:__anon345::__anon346
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     29  Reserved                           *\/$/;"	m	struct:__anon417::__anon418
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     31  Reserved                           *\/$/;"	m	struct:__anon427::__anon428
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon303::__anon304
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon322::__anon323
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon322::__anon324
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon325::__anon326
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon325::__anon327
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon328::__anon329
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon328::__anon330
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :24;              \/*!< bit:  8..31  Reserved                           *\/$/;"	m	struct:__anon282::__anon283
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :24;              \/*!< bit:  8..31  Reserved                           *\/$/;"	m	struct:__anon374::__anon375
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :24;              \/*!< bit:  8..31  Reserved                           *\/$/;"	m	struct:__anon374::__anon376
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :26;              \/*!< bit:  6..31  Reserved                           *\/$/;"	m	struct:__anon341::__anon342
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :27;              \/*!< bit:  5..31  Reserved                           *\/$/;"	m	struct:__anon443::__anon444
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  0.. 1  Reserved                           *\/$/;"	m	struct:__anon277::__anon279
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon310::__anon311
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  4.. 5  Reserved                           *\/$/;"	m	struct:__anon282::__anon283
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  5.. 6  Reserved                           *\/$/;"	m	struct:__anon427::__anon428
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  7.. 8  Reserved                           *\/$/;"	m	struct:__anon429::__anon430
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 12..13  Reserved                           *\/$/;"	m	struct:__anon331::__anon332
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 14..15  Reserved                           *\/$/;"	m	struct:__anon280::__anon281
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 17..18  Reserved                           *\/$/;"	m	struct:__anon295::__anon296
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 18..19  Reserved                           *\/$/;"	m	struct:__anon345::__anon346
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 18..19  Reserved                           *\/$/;"	m	struct:__anon345::__anon347
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 18..19  Reserved                           *\/$/;"	m	struct:__anon427::__anon428
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 22..23  Reserved                           *\/$/;"	m	struct:__anon345::__anon346
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 22..23  Reserved                           *\/$/;"	m	struct:__anon427::__anon428
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit:  0.. 2  Reserved                           *\/$/;"	m	struct:__anon301::__anon302
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit:  3.. 5  Reserved                           *\/$/;"	m	struct:__anon429::__anon430
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit: 10..12  Reserved                           *\/$/;"	m	struct:__anon429::__anon430
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit: 19..21  Reserved                           *\/$/;"	m	struct:__anon417::__anon418
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit: 29..31  Reserved                           *\/$/;"	m	struct:__anon345::__anon346
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :4;               \/*!< bit:  4.. 7  Reserved                           *\/$/;"	m	struct:__anon280::__anon281
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :4;               \/*!< bit: 12..15  Reserved                           *\/$/;"	m	struct:__anon345::__anon346
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :6;               \/*!< bit:  0.. 5  Reserved                           *\/$/;"	m	struct:__anon374::__anon376
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :7;               \/*!< bit:  9..15  Reserved                           *\/$/;"	m	struct:__anon427::__anon428
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :7;               \/*!< bit: 25..31  Reserved                           *\/$/;"	m	struct:__anon431::__anon432
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :8;               \/*!< bit:  8..15  Reserved                           *\/$/;"	m	struct:__anon447::__anon448
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :8;               \/*!< bit: 24..31  Reserved                           *\/$/;"	m	struct:__anon295::__anon296
uint32_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint32_t :8;               \/*!< bit: 24..31  Reserved                           *\/$/;"	m	struct:__anon447::__anon448
uint32_t	src/lgfx/v1/misc/pixelcopy.hpp	/^    static auto get_fp_copy_palette_affine(color_depth_t dst_depth) -> uint32_t(*)(void*, uint32_t, uint32_t, pixelcopy_t*)$/;"	f	struct:lgfx::v1::pixelcopy_t
uint32_t	src/lgfx/v1/misc/pixelcopy.hpp	/^    static auto get_fp_copy_rgb_affine(color_depth_t dst_depth) -> uint32_t(*)(void*, uint32_t, uint32_t, pixelcopy_t*)$/;"	f	struct:lgfx::v1::pixelcopy_t
uint32_t	src/lgfx/v1/misc/pixelcopy.hpp	/^    static auto get_fp_copy_rgb_affine_dst(color_depth_t src_depth) -> uint32_t(*)(void*, uint32_t, uint32_t, pixelcopy_t*)$/;"	f	struct:lgfx::v1::pixelcopy_t
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :10;              \/*!< bit: 22..31  Reserved                           *\/$/;"	m	struct:__anon131::__anon133
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :14;              \/*!< bit: 18..31  Reserved                           *\/$/;"	m	struct:__anon215::__anon216
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :15;              \/*!< bit: 17..31  Reserved                           *\/$/;"	m	struct:__anon85::__anon86
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :16;              \/*!< bit:  0..15  Reserved                           *\/$/;"	m	struct:__anon131::__anon133
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :16;              \/*!< bit: 16..31  Reserved                           *\/$/;"	m	struct:__anon117::__anon118
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :16;              \/*!< bit: 16..31  Reserved                           *\/$/;"	m	struct:__anon83::__anon84
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :17;              \/*!< bit: 15..31  Reserved                           *\/$/;"	m	struct:__anon87::__anon88
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :18;              \/*!< bit:  6..23  Reserved                           *\/$/;"	m	struct:__anon217::__anon218
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :18;              \/*!< bit: 14..31  Reserved                           *\/$/;"	m	struct:__anon63::__anon64
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :18;              \/*!< bit: 14..31  Reserved                           *\/$/;"	m	struct:__anon63::__anon65
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      0  Reserved                           *\/$/;"	m	struct:__anon96::__anon97
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      1  Reserved                           *\/$/;"	m	struct:__anon63::__anon64
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      3  Reserved                           *\/$/;"	m	struct:__anon229::__anon230
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      3  Reserved                           *\/$/;"	m	struct:__anon85::__anon86
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      5  Reserved                           *\/$/;"	m	struct:__anon85::__anon86
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      6  Reserved                           *\/$/;"	m	struct:__anon96::__anon97
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      7  Reserved                           *\/$/;"	m	struct:__anon117::__anon118
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:      8  Reserved                           *\/$/;"	m	struct:__anon85::__anon86
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     12  Reserved                           *\/$/;"	m	struct:__anon87::__anon88
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     14  Reserved                           *\/$/;"	m	struct:__anon81::__anon82
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     16  Reserved                           *\/$/;"	m	struct:__anon215::__anon216
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     23  Reserved                           *\/$/;"	m	struct:__anon203::__anon204
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     23  Reserved                           *\/$/;"	m	struct:__anon96::__anon97
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     26  Reserved                           *\/$/;"	m	struct:__anon131::__anon132
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     29  Reserved                           *\/$/;"	m	struct:__anon203::__anon204
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :1;               \/*!< bit:     31  Reserved                           *\/$/;"	m	struct:__anon213::__anon214
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon108::__anon109
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon108::__anon110
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon111::__anon112
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon111::__anon113
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon114::__anon115
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon114::__anon116
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :20;              \/*!< bit: 12..31  Reserved                           *\/$/;"	m	struct:__anon89::__anon90
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :24;              \/*!< bit:  8..31  Reserved                           *\/$/;"	m	struct:__anon160::__anon161
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :24;              \/*!< bit:  8..31  Reserved                           *\/$/;"	m	struct:__anon160::__anon162
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :24;              \/*!< bit:  8..31  Reserved                           *\/$/;"	m	struct:__anon68::__anon69
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :26;              \/*!< bit:  6..31  Reserved                           *\/$/;"	m	struct:__anon127::__anon128
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :27;              \/*!< bit:  5..31  Reserved                           *\/$/;"	m	struct:__anon229::__anon230
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  0.. 1  Reserved                           *\/$/;"	m	struct:__anon63::__anon65
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon96::__anon97
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  4.. 5  Reserved                           *\/$/;"	m	struct:__anon68::__anon69
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  5.. 6  Reserved                           *\/$/;"	m	struct:__anon213::__anon214
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit:  7.. 8  Reserved                           *\/$/;"	m	struct:__anon215::__anon216
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 12..13  Reserved                           *\/$/;"	m	struct:__anon117::__anon118
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 14..15  Reserved                           *\/$/;"	m	struct:__anon66::__anon67
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 17..18  Reserved                           *\/$/;"	m	struct:__anon81::__anon82
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 18..19  Reserved                           *\/$/;"	m	struct:__anon131::__anon132
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 18..19  Reserved                           *\/$/;"	m	struct:__anon131::__anon133
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 18..19  Reserved                           *\/$/;"	m	struct:__anon213::__anon214
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 22..23  Reserved                           *\/$/;"	m	struct:__anon131::__anon132
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :2;               \/*!< bit: 22..23  Reserved                           *\/$/;"	m	struct:__anon213::__anon214
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit:  0.. 2  Reserved                           *\/$/;"	m	struct:__anon87::__anon88
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit:  3.. 5  Reserved                           *\/$/;"	m	struct:__anon215::__anon216
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit: 10..12  Reserved                           *\/$/;"	m	struct:__anon215::__anon216
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit: 19..21  Reserved                           *\/$/;"	m	struct:__anon203::__anon204
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :3;               \/*!< bit: 29..31  Reserved                           *\/$/;"	m	struct:__anon131::__anon132
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :4;               \/*!< bit:  4.. 7  Reserved                           *\/$/;"	m	struct:__anon66::__anon67
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :4;               \/*!< bit: 12..15  Reserved                           *\/$/;"	m	struct:__anon131::__anon132
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :6;               \/*!< bit:  0.. 5  Reserved                           *\/$/;"	m	struct:__anon160::__anon162
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :7;               \/*!< bit:  9..15  Reserved                           *\/$/;"	m	struct:__anon213::__anon214
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :7;               \/*!< bit: 25..31  Reserved                           *\/$/;"	m	struct:__anon217::__anon218
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :8;               \/*!< bit:  8..15  Reserved                           *\/$/;"	m	struct:__anon233::__anon234
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :8;               \/*!< bit: 24..31  Reserved                           *\/$/;"	m	struct:__anon233::__anon234
uint32_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint32_t :8;               \/*!< bit: 24..31  Reserved                           *\/$/;"	m	struct:__anon81::__anon82
uint8_t	src/lgfx/utility/lgfx_tjpgd.h	/^ typedef unsigned char	uint8_t;$/;"	t
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon361::__anon362
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon361::__anon362
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon361::__anon363
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon439::__anon440
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon361::__anon363
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon337::__anon338
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    __I uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon289::__anon290
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :1;               \/*!< bit:      2  Reserved                           *\/$/;"	m	struct:__anon364::__anon365
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :1;               \/*!< bit:      7  Reserved                           *\/$/;"	m	struct:__anon306::__anon307
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :1;               \/*!< bit:      7  Reserved                           *\/$/;"	m	struct:__anon423::__anon424
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon355::__anon356
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon358::__anon359
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  3.. 4  Reserved                           *\/$/;"	m	struct:__anon348::__anon349
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  3.. 4  Reserved                           *\/$/;"	m	struct:__anon350::__anon351
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon355::__anon356
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon355::__anon357
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon358::__anon359
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon358::__anon360
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon364::__anon365
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon364::__anon366
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  3.. 5  Reserved                           *\/$/;"	m	struct:__anon423::__anon424
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon318::__anon319
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon435::__anon436
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon437::__anon438
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon355::__anon357
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon358::__anon360
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon364::__anon366
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  2.. 5  Reserved                           *\/$/;"	m	struct:__anon306::__anon307
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  4.. 7  Reserved                           *\/$/;"	m	struct:__anon308::__anon309
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon333::__anon334
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon335::__anon336
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon339::__anon340
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon367::__anon368
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon369::__anon370
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon369::__anon371
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon275::__anon276
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon285::__anon286
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon287::__anon288
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon313::__anon314
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon372::__anon373
uint8_t	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon451::__anon452
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon147::__anon148
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon147::__anon148
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon147::__anon149
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon225::__anon226
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon147::__anon149
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon123::__anon124
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    __I uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon75::__anon76
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :1;               \/*!< bit:      2  Reserved                           *\/$/;"	m	struct:__anon150::__anon151
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :1;               \/*!< bit:      7  Reserved                           *\/$/;"	m	struct:__anon209::__anon210
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :1;               \/*!< bit:      7  Reserved                           *\/$/;"	m	struct:__anon92::__anon93
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon141::__anon142
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  2.. 3  Reserved                           *\/$/;"	m	struct:__anon144::__anon145
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  3.. 4  Reserved                           *\/$/;"	m	struct:__anon134::__anon135
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  3.. 4  Reserved                           *\/$/;"	m	struct:__anon136::__anon137
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon141::__anon142
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon141::__anon143
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon144::__anon145
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon144::__anon146
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon150::__anon151
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :2;               \/*!< bit:  6.. 7  Reserved                           *\/$/;"	m	struct:__anon150::__anon152
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  3.. 5  Reserved                           *\/$/;"	m	struct:__anon209::__anon210
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon104::__anon105
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon221::__anon222
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :3;               \/*!< bit:  4.. 6  Reserved                           *\/$/;"	m	struct:__anon223::__anon224
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon141::__anon143
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon144::__anon146
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  0.. 3  Reserved                           *\/$/;"	m	struct:__anon150::__anon152
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  2.. 5  Reserved                           *\/$/;"	m	struct:__anon92::__anon93
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :4;               \/*!< bit:  4.. 7  Reserved                           *\/$/;"	m	struct:__anon94::__anon95
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon119::__anon120
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon121::__anon122
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon125::__anon126
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon153::__anon154
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon155::__anon156
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :6;               \/*!< bit:  2.. 7  Reserved                           *\/$/;"	m	struct:__anon155::__anon157
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon158::__anon159
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon237::__anon238
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon61::__anon62
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon71::__anon72
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon73::__anon74
uint8_t	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^    uint8_t  :7;               \/*!< bit:  1.. 7  Reserved                           *\/$/;"	m	struct:__anon99::__anon100
uncompress	src/lgfx/utility/miniz.c	/^  #define uncompress /;"	d	file:
unit	src/lgfx/utility/result.hpp	/^    struct unit {};$/;"	s	namespace:RESULT_NAMESPACE_INTERNAL::bitwizeshift::detail
unknown_err	src/lgfx/v1/misc/enum.hpp	/^  { unknown_err$/;"	e	enum:lgfx::v1::error_t
unloadFont	src/lgfx/v0/LGFXBase.cpp	/^    void LGFXBase::unloadFont(void)$/;"	f	class:lgfx::v0::LGFXBase
unloadFont	src/lgfx/v0/lgfx_fonts.cpp	/^  bool VLWfont::unloadFont(void) {$/;"	f	class:lgfx::v0::VLWfont
unloadFont	src/lgfx/v0/lgfx_fonts.hpp	/^    virtual bool unloadFont(void) { return false; }$/;"	f	struct:lgfx::v0::IFont
unloadFont	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::unloadFont(void)$/;"	f	class:lgfx::v1::LGFXBase
unloadFont	src/lgfx/v1/lgfx_fonts.cpp	/^  bool VLWfont::unloadFont(void)$/;"	f	class:lgfx::v1::VLWfont
unloadFont	src/lgfx/v1/lgfx_fonts.hpp	/^    virtual bool unloadFont(void) { return false; }$/;"	f	struct:lgfx::v1::IFont
updateDev	src/lgfx/v1/platforms/esp32/common.cpp	/^    static void updateDev(i2c_dev_t* dev)$/;"	f	namespace:lgfx::v1::i2c
updateFontMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  bool BDFfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v0::BDFfont
updateFontMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  bool BMPfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v0::BMPfont
updateFontMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  bool FixedBMPfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v0::FixedBMPfont
updateFontMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  bool GFXfont::updateFontMetric(lgfx::FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v0::GFXfont
updateFontMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  bool GLCDfont::updateFontMetric(FontMetrics*, uint16_t uniCode) const {$/;"	f	class:lgfx::v0::GLCDfont
updateFontMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  bool U8g2font::updateFontMetric(lgfx::FontMetrics *metrics, uint16_t uniCode) const$/;"	f	class:lgfx::v0::U8g2font
updateFontMetric	src/lgfx/v0/lgfx_fonts.cpp	/^  bool VLWfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v0::VLWfont
updateFontMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  bool BDFfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v1::BDFfont
updateFontMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  bool BMPfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v1::BMPfont
updateFontMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  bool FixedBMPfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v1::FixedBMPfont
updateFontMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  bool GFXfont::updateFontMetric(lgfx::FontMetrics *metrics, uint16_t uniCode) const$/;"	f	class:lgfx::v1::GFXfont
updateFontMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  bool GLCDfont::updateFontMetric(FontMetrics*, uint16_t uniCode) const {$/;"	f	class:lgfx::v1::GLCDfont
updateFontMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  bool U8g2font::updateFontMetric(lgfx::FontMetrics *metrics, uint16_t uniCode) const$/;"	f	class:lgfx::v1::U8g2font
updateFontMetric	src/lgfx/v1/lgfx_fonts.cpp	/^  bool VLWfont::updateFontMetric(FontMetrics *metrics, uint16_t uniCode) const {$/;"	f	class:lgfx::v1::VLWfont
updateSignalLevel	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  void Panel_CVBS::updateSignalLevel(void)$/;"	f	class:lgfx::v1::Panel_CVBS
update_madctl	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::update_madctl(void)$/;"	f	class:lgfx::v1::Panel_ILI9225
update_madctl	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::update_madctl(void)$/;"	f	class:lgfx::v1::Panel_LCD
update_madctl	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  void Panel_NT35510::update_madctl(void)$/;"	f	class:lgfx::v1::Panel_NT35510
update_madctl	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::update_madctl(void)$/;"	f	class:lgfx::v1::Panel_RA8875
update_madctl	src/lgfx/v1/panel/Panel_RM68120.cpp	/^  void Panel_RM68120::update_madctl(void)$/;"	f	class:lgfx::v1::Panel_RM68120
update_madctl	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::update_madctl(void)$/;"	f	class:lgfx::v1::Panel_SSD1331
update_madctl	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::update_madctl(void)$/;"	f	class:lgfx::v1::Panel_SSD1351
use_dma	src/lgfx/v0/LGFX_Sprite.hpp	/^      bool use_dma() { return _source == AllocationSource::Dma; }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
use_dma	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    bool use_dma(void) const { return _source == AllocationSource::Dma; }$/;"	f	class:lgfx::v1::SpriteBuffer
use_lock	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^      bool use_lock = true;$/;"	m	struct:lgfx::v1::Bus_SPI::config_t
use_memcpy	src/lgfx/v0/LGFX_Sprite.hpp	/^      bool use_memcpy() { return _source != AllocationSource::Psram; }$/;"	f	class:lgfx::v0::LGFX_Sprite::SpriteBuffer
use_memcpy	src/lgfx/v1/misc/SpriteBuffer.hpp	/^    bool use_memcpy(void) const { return _source != AllocationSource::Psram; }$/;"	f	class:lgfx::v1::SpriteBuffer
use_psram	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t use_psram = 0;          \/\/ フレームバッファ PSRAM使用モード 0=不使用 \/ 1=半分PSRAM \/ 2=全部PSRAM$/;"	m	struct:lgfx::v1::internal_t	file:
use_psram	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^      uint8_t use_psram = 0;$/;"	m	struct:lgfx::v1::Panel_CVBS::config_detail_t
use_psram	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^      uint8_t use_psram = 0;$/;"	m	struct:lgfx::v1::Panel_RGB::config_detail_t
user_data	src/lgfx/utility/lgfx_pngle.c	/^  void *user_data;$/;"	m	struct:_pngle_t	file:
user_data	src/lgfx/utility/lgfx_qoi.c	/^  void *user_data;$/;"	m	struct:_qoi_t	file:
utf8	src/lgfx/v0/lgfx_common.hpp	/^    bool utf8 = true;$/;"	m	struct:lgfx::TextStyle
utf8	src/lgfx/v1/lgfx_fonts.hpp	/^    bool utf8 = true;$/;"	m	struct:lgfx::v1::TextStyle
utf8_decode_state_t	src/lgfx/v0/LGFXBase.hpp	/^    enum utf8_decode_state_t$/;"	g	class:lgfx::v0::LGFXBase
utf8_state0	src/lgfx/v0/LGFXBase.hpp	/^    { utf8_state0 = 0$/;"	e	enum:lgfx::v0::LGFXBase::utf8_decode_state_t
utf8_state1	src/lgfx/v0/LGFXBase.hpp	/^    , utf8_state1 = 1$/;"	e	enum:lgfx::v0::LGFXBase::utf8_decode_state_t
utf8_state2	src/lgfx/v0/LGFXBase.hpp	/^    , utf8_state2 = 2$/;"	e	enum:lgfx::v0::LGFXBase::utf8_decode_state_t
utf8_switch	src/lgfx/v0/lgfx_common.hpp	/^    , utf8_switch  = 2$/;"	e	enum:lgfx::v0::attribute::attribute_t
utf8_switch	src/lgfx/v1/misc/enum.hpp	/^    , utf8_switch  = 2$/;"	e	enum:lgfx::v1::attribute::attribute_t
v	src/lgfx/utility/lgfx_qoi.c	/^  unsigned int v;$/;"	m	union:__anon548	file:
v	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^      info_t v;$/;"	m	struct:lgfx::v1::Panel_M5HDMI::video_timing_t
v0	src/lgfx/v0/LGFXBase.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/LGFXBase.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/LGFX_Device.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/LGFX_Sprite.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/config/LGFX_Config_AutoDetectESP32.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/lgfx_common.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/lgfx_filesystem_support.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/lgfx_fonts.cpp	/^ inline namespace v0$/;"	n	namespace:fonts	file:
v0	src/lgfx/v0/lgfx_fonts.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/lgfx_fonts.hpp	/^ inline namespace v0$/;"	n	namespace:fonts
v0	src/lgfx/v0/lgfx_fonts.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/PanelCommon.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/PanelIlitekCommon.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/panel/Panel_GDEW0154M09.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_HX8357.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ILI9163.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ILI9341.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ILI9481.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ILI9486.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ILI9488.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_IT8951.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/panel/Panel_IT8951.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_SSD1351.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ST7735.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ST7789.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/panel/Panel_ST7796.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/platforms/esp32_common.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/platforms/esp32_common.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/platforms/samd51_common.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/platforms/samd51_common.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/touch/TouchCommon.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/touch/Touch_FT5x06.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/touch/Touch_GT911.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/touch/Touch_GT911.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/touch/Touch_STMPE610.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v0	src/lgfx/v0/touch/Touch_XPT2046.cpp	/^ inline namespace v0$/;"	n	namespace:lgfx	file:
v0	src/lgfx/v0/touch/Touch_XPT2046.hpp	/^ inline namespace v0$/;"	n	namespace:lgfx
v1	src/lgfx/v1/Bus.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/LGFXBase.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/LGFXBase.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/LGFX_Button.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/LGFX_Button.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/LGFX_Sprite.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/LGFX_Sprite.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/Light.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/Panel.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/Touch.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/lgfx_filesystem_support.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/lgfx_fonts.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/lgfx_fonts.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/DataWrapper.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/DividedFrameBuffer.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/misc/DividedFrameBuffer.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/SpriteBuffer.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/misc/SpriteBuffer.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/bitmap.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/colortype.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/common_function.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/misc/common_function.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/enum.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/pixelcopy.cpp	/^  inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/misc/pixelcopy.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/misc/range.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_Device.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_Device.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_FrameBufferBase.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_GC9A01.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_GDEW0154M09.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_HUB75.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_HUB75.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_HasBuffer.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ILI9163.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_ILI9225.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ILI9341.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ILI9342.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ILI948x.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_IT8951.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_IT8951.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_LCD.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_LCD.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_M5UnitLCD.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_NT35510.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_NT35510.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_R61529.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_RA8875.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_RA8875.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_RM68120.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_RM68120.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_S6D04K1.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_SSD1306.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_SSD1327.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_SSD1331.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_SSD1351.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_SSD1963.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ST7735.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ST7789.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/panel/Panel_ST7796.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/arduino_default/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/arduino_default/Bus_Stream.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/arduino_default/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/arduino_default/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32/Bus_HUB75.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32/Bus_I2C.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32/Bus_Parallel8.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32/Light_PWM.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32/Light_PWM.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32/Panel_CVBS.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32s3/Bus_RGB.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp32s3/Panel_RGB.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp32s3/Panel_RGB.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp8266/Bus_I2C.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/esp8266/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/esp8266/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/framebuffer/Panel_fb.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/framebuffer/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/framebuffer/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/opencv/Panel_OpenCV.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/opencv/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/opencv/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/rp2040/Bus_I2C.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/rp2040/Light_PWM.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/rp2040/Light_PWM.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/rp2040/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/rp2040/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/samd21/Bus_I2C.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/samd21/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/samd21/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/samd51/Bus_I2C.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/samd51/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/samd51/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/sdl/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/sdl/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/spresense/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/spresense/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/platforms/stm32/common.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/platforms/stm32/common.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/touch/Touch_FT5x06.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/touch/Touch_GSLx680.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/touch/Touch_GSLx680.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/touch/Touch_GT911.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/touch/Touch_GT911.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/touch/Touch_NS2009.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/touch/Touch_NS2009.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/touch/Touch_STMPE610.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/touch/Touch_TT21xxx.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/touch/Touch_TT21xxx.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1/touch/Touch_XPT2046.cpp	/^ inline namespace v1$/;"	n	namespace:lgfx	file:
v1	src/lgfx/v1/touch/Touch_XPT2046.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S2.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32S3.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP32_all.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_ESP8266.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_FrameBuffer.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_OpenCV.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD21.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_SAMD51.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_STM32.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v1	src/lgfx/v1_autodetect/LGFX_AutoDetect_sdl.hpp	/^ inline namespace v1$/;"	n	namespace:lgfx
v_branking_total	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint16_t v_branking_total = 45;$/;"	m	struct:lgfx::v1::timing_params_t
val	src/lgfx/v1/touch/gslx680/Touch_GSLx680_FW.h	/^  uint32_t val;$/;"	m	struct:gsl_fw_data
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon277	typeref:struct:__anon277::__anon279
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon315	typeref:struct:__anon315::__anon317
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon322	typeref:struct:__anon322::__anon324
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon325	typeref:struct:__anon325::__anon327
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon328	typeref:struct:__anon328::__anon330
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon345	typeref:struct:__anon345::__anon347
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon352	typeref:struct:__anon352::__anon354
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon355	typeref:struct:__anon355::__anon357
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon358	typeref:struct:__anon358::__anon360
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon361	typeref:struct:__anon361::__anon363
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon364	typeref:struct:__anon364::__anon366
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon369	typeref:struct:__anon369::__anon371
vec	src/lgfx/v0/platforms/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon374	typeref:struct:__anon374::__anon376
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon101	typeref:struct:__anon101::__anon103
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon108	typeref:struct:__anon108::__anon110
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon111	typeref:struct:__anon111::__anon113
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon114	typeref:struct:__anon114::__anon116
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon131	typeref:struct:__anon131::__anon133
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon138	typeref:struct:__anon138::__anon140
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon141	typeref:struct:__anon141::__anon143
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon144	typeref:struct:__anon144::__anon146
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon147	typeref:struct:__anon147::__anon149
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon150	typeref:struct:__anon150::__anon152
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon155	typeref:struct:__anon155::__anon157
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon160	typeref:struct:__anon160::__anon162
vec	src/lgfx/v1/platforms/samd51/samd51_arduino_compat.hpp	/^  } vec;                       \/*!< Structure used for vec  access                  *\/$/;"	m	union:__anon63	typeref:struct:__anon63::__anon65
version	src/lgfx/utility/lgfx_qrcode.h	/^    uint8_t version;$/;"	m	struct:QRCode
vertical	src/lgfx/v0/lgfx_common.hpp	/^      range_t vertical;$/;"	m	union:lgfx::range_rect_t::__anon509
vertical	src/lgfx/v1/misc/range.hpp	/^        range_t vertical;$/;"	m	struct:lgfx::v1::range_rect_t::__anon48::__anon49
vfwscanf	src/lgfx/internal/memory.h	/^  __attribute__((weak)) int vfwscanf(void*, const wchar_t *, ...) { return 0; }$/;"	f
video_timing_t	src/lgfx/v1/panel/Panel_M5HDMI.hpp	/^    struct video_timing_t$/;"	s	struct:lgfx::v1::Panel_M5HDMI
void_chartbl	src/lgfx/v0/lgfx_fonts.hpp	/^      const void *void_chartbl;$/;"	m	union:lgfx::v0::BaseFont::__anon458
void_chartbl	src/lgfx/v1/lgfx_fonts.hpp	/^      const void *void_chartbl;$/;"	m	union:lgfx::v1::BaseFont::__anon264
voidp	src/lgfx/utility/miniz.c	/^  typedef void *voidp;$/;"	t	file:
voidpc	src/lgfx/utility/miniz.c	/^  typedef void *const voidpc;$/;"	t	file:
voidpf	src/lgfx/utility/miniz.c	/^  typedef void *voidpf;$/;"	t	file:
vprintf	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::vprintf(const char* __restrict format, va_list arg)$/;"	f	class:lgfx::v1::LGFXBase
vps	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint16_t vps = 16;$/;"	m	struct:lgfx::v1::timing_params_t
vpw	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint8_t  vpw = 16;$/;"	m	struct:lgfx::v1::timing_params_t
vswscanf	src/lgfx/internal/memory.h	/^  __attribute__((weak)) int vswscanf(const wchar_t*, const wchar_t *, ...) { return 0; }$/;"	f
vsync_back_porch	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t vsync_back_porch = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
vsync_front_porch	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t vsync_front_porch = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
vsync_lines	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint8_t vsync_lines;          \/\/ 垂直同期期間(表示期間外)の走査線数(単フィールド分)$/;"	m	struct:lgfx::v1::signal_spec_info_t	file:
vsync_polarity	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      bool vsync_polarity = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
vsync_pulse_width	src/lgfx/v1/platforms/esp32s3/Bus_RGB.hpp	/^      int8_t vsync_pulse_width = 0;$/;"	m	struct:lgfx::v1::Bus_RGB::config_t
vwscanf	src/lgfx/internal/memory.h	/^  __attribute__((weak)) int vwscanf(const wchar_t*, ...) { return 0; }$/;"	f
wait	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void wait(void) const {$/;"	f	class:lgfx::v0::LGFX_PARALLEL
wait	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::wait(void)$/;"	f	class:lgfx::v1::Bus_I2C
wait	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
wait	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
wait	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
wait	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel16
wait	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::wait(void)$/;"	f	class:lgfx::v1::Bus_Parallel8
wait	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::wait(void)$/;"	f	class:lgfx::v1::Bus_I2C
wait	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::wait(void)$/;"	f	class:lgfx::v1::Bus_I2C
wait	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::wait(void)$/;"	f	class:lgfx::v1::Bus_I2C
wait	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::wait(void)$/;"	f	class:lgfx::v1::Bus_I2C
wait	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::wait(void)$/;"	f	class:lgfx::v1::Bus_SPI
waitDMA	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void waitDMA(void) { waitDMA_impl(); }$/;"	f	class:lgfx::v0::LGFXBase
waitDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void waitDMA(void) { _panel->waitDMA(); }$/;"	f	class:lgfx::v1::LGFXBase
waitDMA	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::waitDMA(void)$/;"	f	class:lgfx::v1::Panel_Device
waitDisplay	src/lgfx/v0/LGFX_Device.hpp	/^    void waitDisplay(void) $/;"	f	class:lgfx::v0::LGFX_Device
waitDisplay	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::waitDisplay(PanelCommon* panel, LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
waitDisplay	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::waitDisplay(PanelCommon* panel, LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_IT8951
waitDisplay	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void waitDisplay(void) { _panel->waitDisplay(); }$/;"	f	class:lgfx::v1::LGFXBase
waitDisplay	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::waitDisplay(void)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
waitDisplay	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::waitDisplay(void)$/;"	f	class:lgfx::v1::Panel_IT8951
waitDisplay	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::waitDisplay(void)$/;"	f	class:lgfx::v1::Panel_M5HDMI
waitDisplay	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::waitDisplay(void)$/;"	f	class:lgfx::v1::Panel_RA8875
waitDisplay	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::waitDisplay(void)$/;"	f	class:lgfx::v1::Panel_1bitOLED
waitDisplay	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::waitDisplay(void)$/;"	f	class:lgfx::v1::Panel_SSD1327
wait_ack	src/lgfx/v1/platforms/esp32/common.cpp	/^      bool wait_ack = false;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
wait_ack	src/lgfx/v1/platforms/esp8266/common.cpp	/^      bool wait_ack = false;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
wait_ack	src/lgfx/v1/platforms/samd51/common.cpp	/^      bool wait_ack = false;$/;"	m	struct:lgfx::v1::i2c::i2c_context_t	file:
wait_complete	src/lgfx/v1/platforms/rp2040/common.cpp	/^      __attribute__ ((always_inline)) inline void wait_complete(volatile i2c_hw_t * i2c_regs)$/;"	f	namespace:lgfx::v1::i2c::__anon58
wait_i2s	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void wait_i2s(void) const {$/;"	f	class:lgfx::v0::LGFX_PARALLEL
wait_spi	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void) { while (*_spi_cmd_reg & SPI_USR); }$/;"	f	class:lgfx::v0::LGFX_SPI
wait_spi	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void) { if (_need_wait != true) return; auto *intflag = &_sercom->SPI.INTFLAG.bit; while (intflag->TXC == 0); }$/;"	f	class:lgfx::v0::LGFX_SPI
wait_spi	src/lgfx/v1/platforms/esp32/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void) { while (*_spi_cmd_reg & SPI_USR); }$/;"	f	class:lgfx::v1::Bus_SPI
wait_spi	src/lgfx/v1/platforms/esp8266/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void) { while (SPI1CMD & SPIBUSY); }$/;"	f	class:lgfx::v1::Bus_SPI
wait_spi	src/lgfx/v1/platforms/rp2040/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait_spi	src/lgfx/v1/platforms/samd21/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void) { if (_need_wait != true) return; auto *intflag = &_sercom->SPI.INTFLAG.bit; while (!intflag->TXC); }$/;"	f	class:lgfx::v1::Bus_SPI
wait_spi	src/lgfx/v1/platforms/samd51/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void) { if (_need_wait != true) return; auto *intflag = &_sercom->SPI.INTFLAG.bit; while (intflag->TXC == 0); }$/;"	f	class:lgfx::v1::Bus_SPI
wait_spi	src/lgfx/v1/platforms/spresense/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void)$/;"	f	class:lgfx::v1::Bus_SPI
wait_spi	src/lgfx/v1/platforms/stm32/Bus_SPI.hpp	/^    __attribute__ ((always_inline)) inline void wait_spi(void)$/;"	f	class:lgfx::v1::Bus_SPI
wakeup	src/lgfx/v0/LGFX_Device.hpp	/^    void wakeup(void)$/;"	f	class:lgfx::v0::LGFX_Device
wakeup	src/lgfx/v0/panel/PanelCommon.hpp	/^    virtual void wakeup(LGFX_Device*)$/;"	f	struct:lgfx::v0::PanelCommon
wakeup	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::wakeup(LGFX_Device* gfx)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
wakeup	src/lgfx/v0/touch/TouchCommon.hpp	/^    virtual void wakeup(void) {}$/;"	f	struct:lgfx::v0::TouchCommon
wakeup	src/lgfx/v0/touch/Touch_FT5x06.cpp	/^  void Touch_FT5x06::wakeup(void)$/;"	f	class:lgfx::v0::Touch_FT5x06
wakeup	src/lgfx/v0/touch/Touch_GT911.cpp	/^  void Touch_GT911::wakeup(void)$/;"	f	class:lgfx::v0::Touch_GT911
wakeup	src/lgfx/v1/LGFXBase.hpp	/^    inline void wakeup(void) { _panel->setSleep(false); _panel->setBrightness(_brightness); }$/;"	f	class:lgfx::v1::LGFX_Device
wakeup	src/lgfx/v1/touch/Touch_FT5x06.cpp	/^  void Touch_FT5x06::wakeup(void)$/;"	f	class:lgfx::v1::Touch_FT5x06
wakeup	src/lgfx/v1/touch/Touch_GT911.cpp	/^  void Touch_GT911::wakeup(void)$/;"	f	class:lgfx::v1::Touch_GT911
wakeup	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^  void Touch_STMPE610::wakeup(void)$/;"	f	class:lgfx::v1::Touch_STMPE610
wcstombs	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) size_t wcstombs(char*, const wchar_t*, size_t) { return 0; }$/;"	f
wctomb	src/lgfx/internal/algorithm.h	/^  __attribute__((weak)) int wctomb(char*, wchar_t) { return 0; }$/;"	f
white_mv	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^    uint16_t white_mv;            \/\/ SYNCレベルと白レベルの電圧差 mV$/;"	m	struct:lgfx::v1::signal_setup_info_t	file:
widtbl_f16	src/lgfx/Fonts/Font16.h	/^PROGMEM const unsigned char widtbl_f16[96] =         \/\/ character width table$/;"	v
widtbl_f32	src/lgfx/Fonts/Font32rle.h	/^PROGMEM const unsigned char widtbl_f32[96] =         \/\/ character width table$/;"	v
widtbl_f64	src/lgfx/Fonts/Font64rle.h	/^PROGMEM const unsigned char widtbl_f64[96] =          \/\/ character width table$/;"	v
widtbl_f72	src/lgfx/Fonts/Font72rle.h	/^PROGMEM const unsigned char widtbl_f72[96] =          \/\/ character width table$/;"	v
widtbl_f72	src/lgfx/Fonts/Font72x53rle.h	/^PROGMEM const unsigned char widtbl_f72[96] =          \/\/ character width table$/;"	v
widtbl_f7s	src/lgfx/Fonts/Font7srle.h	/^PROGMEM const unsigned char widtbl_f7s[96] =          \/\/ character width table$/;"	v
width	src/lgfx/utility/lgfx_pngle.h	/^  uint32_t width;$/;"	m	struct:_pngle_ihdr_t
width	src/lgfx/utility/lgfx_qoi.c	/^  unsigned int width;$/;"	m	struct:_qoi_desc_t	file:
width	src/lgfx/utility/lgfx_tjpgd.h	/^	uint_fast16_t width, height;\/* Size of the input image (pixel) *\/$/;"	m	struct:lgfxJdec
width	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline int32_t       width            (void) const { return _width; }$/;"	f	class:lgfx::v0::LGFXBase
width	src/lgfx/v0/lgfx_common.hpp	/^    int32_t width(void) const { return right - left + 1; }$/;"	f	struct:lgfx::range_rect_t
width	src/lgfx/v0/lgfx_fonts.hpp	/^    const uint8_t width;$/;"	m	struct:lgfx::v0::BaseFont
width	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t width;$/;"	m	struct:lgfx::v0::FontMetrics
width	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t  width, height;    \/\/ Bitmap dimensions in pixels$/;"	m	struct:lgfx::v0::GFXglyph
width	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   int32_t width (void) const { return _panel->width(); }$/;"	f	class:lgfx::v1::LGFXBase
width	src/lgfx/v1/Panel.hpp	/^    uint16_t width(void) const { return _width; }$/;"	f	struct:lgfx::v1::IPanel
width	src/lgfx/v1/lgfx_fonts.hpp	/^    const uint8_t width;$/;"	m	struct:lgfx::v1::BaseFont
width	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t width;$/;"	m	struct:lgfx::v1::FontMetrics
width	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t  width, height;    \/\/ Bitmap dimensions in pixels$/;"	m	struct:lgfx::v1::GFXglyph
width	src/lgfx/v1/misc/range.hpp	/^    LGFX_INLINE int_fast16_t width(void) const { return right - left + 1; }$/;"	f	struct:lgfx::v1::range_rect_t
widthtbl	src/lgfx/v0/lgfx_fonts.hpp	/^    const uint8_t *widthtbl;$/;"	m	struct:lgfx::v0::BaseFont
widthtbl	src/lgfx/v1/lgfx_fonts.hpp	/^    const uint8_t *widthtbl;$/;"	m	struct:lgfx::v1::BaseFont
window	src/lgfx/v1/platforms/sdl/Panel_sdl.hpp	/^    SDL_Window* window = nullptr;$/;"	m	struct:lgfx::v1::monitor_t
window_name	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^    const char* window_name;$/;"	m	struct:lgfx::v1::cvmat_info_t	file:
workbuf	src/lgfx/utility/lgfx_tjpgd.h	/^	void* workbuf;				\/* Working buffer for IDCT and RGB output *\/$/;"	m	struct:lgfxJdec
write	src/lgfx/v0/LGFXBase.cpp	/^    size_t LGFXBase::write(uint8_t utf8)$/;"	f	class:lgfx::v0::LGFXBase
write	src/lgfx/v0/LGFXBase.hpp	/^    size_t write(const char *buf, size_t size)    { return write((const uint8_t *) buf, size); }$/;"	f	class:lgfx::v0::LGFXBase
write	src/lgfx/v0/LGFXBase.hpp	/^    size_t write(const char* str)                 { return (!str) ? 0 : write((const uint8_t*)str, strlen(str)); }$/;"	f	class:lgfx::v0::LGFXBase
write	src/lgfx/v0/LGFXBase.hpp	/^    size_t write(const uint8_t *buf, size_t size) { size_t n = 0; this->startWrite(); while (size--) { n += write(*buf++); } this->endWrite(); return n; }$/;"	f	class:lgfx::v0::LGFXBase
write	src/lgfx/v1/LGFXBase.cpp	/^  size_t LGFXBase::write(uint8_t utf8)$/;"	f	class:lgfx::v1::LGFXBase
write	src/lgfx/v1/LGFXBase.hpp	/^    size_t write(const char *buf, size_t size)    { return write((const uint8_t *) buf, size); }$/;"	f	class:lgfx::v1::LGFXBase
write	src/lgfx/v1/LGFXBase.hpp	/^    size_t write(const char* str)                 { return (!str) ? 0 : write((const uint8_t*)str, strlen(str)); }$/;"	f	class:lgfx::v1::LGFXBase
write	src/lgfx/v1/LGFXBase.hpp	/^    size_t write(const uint8_t *buf, size_t size) { size_t n = 0; this->startWrite(); while (size--) { n += write(*buf++); } this->endWrite(); return n; }$/;"	f	class:lgfx::v1::LGFXBase
writeBlock	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_Sprite
writeBlock	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
writeBlock	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
writeBlock	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  void Panel_HasBuffer::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_HasBuffer
writeBlock	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_IT8951
writeBlock	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::writeBlock(uint32_t rawcolor, uint32_t len)$/;"	f	class:lgfx::v1::Panel_LCD
writeBlock	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_M5HDMI
writeBlock	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
writeBlock	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_RA8875
writeBlock	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_fb
writeBlock	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_OpenCV
writeBlock	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::writeBlock(uint32_t rawcolor, uint32_t length)$/;"	f	class:lgfx::v1::Panel_sdl
writeBuffer	src/lgfx/utility/lgfx_qoi.c	/^static uint8_t* writeBuffer;$/;"	v	file:
writeBufferPos	src/lgfx/utility/lgfx_qoi.c	/^static uint32_t writeBufferPos;$/;"	v	file:
writeBufferSize	src/lgfx/utility/lgfx_qoi.c	/^static size_t writeBufferSize;$/;"	v	file:
writeBytes	src/lgfx/v0/LGFX_Device.hpp	/^    void writeBytes(const uint8_t* data, int32_t length, bool use_dma = true) { writeBytes_impl(data, length, use_dma); }$/;"	f	class:lgfx::v0::LGFX_Device
writeBytes	src/lgfx/v0/platforms/esp32_common.cpp	/^    bool writeBytes(int i2c_port, uint16_t addr, const uint8_t *data, uint8_t len)$/;"	f	namespace:lgfx::v0::i2c
writeBytes	src/lgfx/v0/platforms/samd51_common.cpp	/^    bool writeBytes(int, uint16_t, const uint8_t*, uint8_t)$/;"	f	namespace:lgfx::v0::i2c
writeBytes	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  void Bus_Stream::writeBytes(const uint8_t* data, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Stream
writeBytes	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> writeBytes(int i2c_port, const uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    void writeBytes(int spi_host, const uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
writeBytes	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeBytes	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> writeBytes(int i2c_port, const uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/esp32/common.cpp	/^    void writeBytes(int spi_host, const uint8_t* data, size_t len)$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeBytes	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeBytes	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeBytes	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeBytes	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeBytes	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
writeBytes	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> writeBytes(int i2c_port, const uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/esp8266/common.cpp	/^    void writeBytes(int spi_host, const uint8_t* data, size_t length)$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> writeBytes(int i2c_port, const uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    void writeBytes(int spi_host, const uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> writeBytes(int i2c_port, const uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/opencv/common.cpp	/^    void writeBytes(int spi_host, const uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
writeBytes	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> writeBytes(int i2c_port, [[maybe_unused]]const uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
writeBytes	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> writeBytes(int sercom_index, const uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/samd21/common.cpp	/^    void writeBytes(int sercom_index, const uint8_t* data, size_t length)$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_I2C
writeBytes	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> writeBytes(int sercom_index, const uint8_t *data, size_t length)$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/samd51/common.cpp	/^    void writeBytes(int sercom_index, const uint8_t* data, size_t length)$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> writeBytes(int i2c_port, const uint8_t *data, size_t length) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/sdl/common.cpp	/^    void writeBytes(int spi_host, const uint8_t* data, size_t length) {}$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> writeBytes(int , const uint8_t *, size_t ) { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeBytes	src/lgfx/v1/platforms/spresense/common.cpp	/^    void writeBytes(int , const uint8_t* , size_t ) {}$/;"	f	namespace:lgfx::v1::spi
writeBytes	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::writeBytes(const uint8_t* data, uint32_t length, bool dc, bool use_dma)$/;"	f	class:lgfx::v1::Bus_SPI
writeBytes	src/lgfx/v1/platforms/stm32/common.cpp	/^    bool writeBytes(int, uint16_t, const uint8_t*, uint8_t)$/;"	f	namespace:lgfx::v1::i2c
writeColor	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void writeColor    ( const T& color, int32_t length) {      if (0 >= length) return; setColor(color);    pushBlock_impl(length); }$/;"	f	class:lgfx::v0::LGFXBase
writeColor	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writeColor      ( const T& color, uint32_t length) { if (0 == length) return; setColor(color);               _panel->writeBlock(getRawColor(), length); }$/;"	f	class:lgfx::v1::LGFXBase
writeCommand	src/lgfx/v1/LGFXBase.hpp	/^    inline void writeCommand(  uint8_t  cmd) { _panel->writeCommand(             cmd , 1); } \/\/ AdafruitGFX compatible$/;"	f	class:lgfx::v1::LGFX_Device
writeCommand	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::writeCommand(uint32_t data, uint_fast8_t length)$/;"	f	class:lgfx::v1::Panel_Device
writeCommand	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::writeCommand(uint32_t cmd, uint_fast8_t length)$/;"	f	class:lgfx::v1::Panel_RA8875
writeCommand	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  bool Bus_I2C::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeCommand	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeCommand	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeCommand	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeCommand	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeCommand	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  bool Bus_Parallel16::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeCommand	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  bool Bus_Parallel8::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeCommand	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  bool Bus_I2C::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeCommand	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  bool Bus_I2C::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeCommand	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  bool Bus_I2C::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeCommand	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  bool Bus_I2C::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeCommand	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  bool Bus_SPI::writeCommand(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeCommand16	src/lgfx/v1/LGFXBase.hpp	/^    inline void writeCommand16(uint16_t cmd) { _panel->writeCommand((cmd<<8)+(cmd>>8), 2); }$/;"	f	class:lgfx::v1::LGFX_Device
writeCommandList	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  void Panel_NT35510::writeCommandList(const uint8_t *addr)$/;"	f	class:lgfx::v1::Panel_NT35510
writeData	src/lgfx/v0/platforms/esp32_common.cpp	/^    void writeData(int spi_host, const uint8_t* data, uint32_t len)$/;"	f	namespace:lgfx::v0::spi
writeData	src/lgfx/v0/platforms/samd51_common.cpp	/^    void writeData(int, const uint8_t*, uint32_t) {}$/;"	f	namespace:lgfx::v0::spi
writeData	src/lgfx/v1/LGFXBase.hpp	/^    inline void writeData(  uint8_t  data) { _panel->writeData(                  data , 1); }$/;"	f	class:lgfx::v1::LGFX_Device
writeData	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::writeData(uint32_t data, uint_fast8_t length)$/;"	f	class:lgfx::v1::Panel_Device
writeData	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::writeData(uint32_t data, uint_fast8_t length)$/;"	f	class:lgfx::v1::Panel_RA8875
writeData	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  void Bus_Stream::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Stream
writeData	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeData	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeData	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeData	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeData	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeData	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeData	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeData	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeData	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeData	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeData	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_I2C
writeData	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::writeData(uint32_t data, uint_fast8_t bit_length)$/;"	f	class:lgfx::v1::Bus_SPI
writeData	src/lgfx/v1/platforms/stm32/common.cpp	/^    void writeData(int, const uint8_t*, uint32_t) {}$/;"	f	namespace:lgfx::v1::spi
writeData16	src/lgfx/v1/LGFXBase.hpp	/^    inline void writeData16(uint16_t data) { _panel->writeData((data<<8)+(data>>8), 2); }$/;"	f	class:lgfx::v1::LGFX_Device
writeData32	src/lgfx/v1/LGFXBase.hpp	/^    inline void writeData32(uint32_t data) { data = (data << 16) + (data >> 16); _panel->writeData(((data >> 8) & 0xFF00FF) + ((data & 0xFF00FF) << 8), 4); }$/;"	f	class:lgfx::v1::LGFX_Device
writeDataRepeat	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writeDataRepeat	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  void Bus_Stream::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Stream
writeDataRepeat	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writeDataRepeat	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeDataRepeat(uint32_t color_raw, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeDataRepeat	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count)$/;"	f	class:lgfx::v1::Bus_SPI
writeDataRepeat	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeDataRepeat(uint32_t color_raw, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeDataRepeat	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writeDataRepeat(uint32_t color_raw, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeDataRepeat	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeDataRepeat(uint32_t color_raw, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeDataRepeat	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writeDataRepeat(uint32_t color_raw, uint_fast8_t bit_length, uint32_t count)$/;"	f	class:lgfx::v1::Bus_Parallel16
writeDataRepeat	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writeDataRepeat(uint32_t color_raw, uint_fast8_t bit_length, uint32_t count)$/;"	f	class:lgfx::v1::Bus_Parallel8
writeDataRepeat	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writeDataRepeat	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t count)$/;"	f	class:lgfx::v1::Bus_SPI
writeDataRepeat	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writeDataRepeat	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writeDataRepeat	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writeDataRepeat	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writeDataRepeat	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writeDataRepeat	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writeDataRepeat	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writeDataRepeat	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::writeDataRepeat(uint32_t data, uint_fast8_t bit_length, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writeFastHLine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::writeFastHLine(int32_t x, int32_t y, int32_t w)$/;"	f	class:lgfx::v0::LGFXBase
writeFastHLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void writeFastHLine( int32_t x, int32_t y, int32_t w           , const T& color) { setColor(color); writeFastHLine(x, y, w   ); }$/;"	f	class:lgfx::v0::LGFXBase
writeFastHLine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::writeFastHLine(int32_t x, int32_t y, int32_t w)$/;"	f	class:lgfx::v1::LGFXBase
writeFastHLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writeFastHLine  ( int32_t x, int32_t y, int32_t w           , const T& color) { setColor(color); writeFastHLine(x, y, w   ); }$/;"	f	class:lgfx::v1::LGFXBase
writeFastVLine	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::writeFastVLine(int32_t x, int32_t y, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
writeFastVLine	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void writeFastVLine( int32_t x, int32_t y           , int32_t h, const T& color) { setColor(color); writeFastVLine(x, y   , h); }$/;"	f	class:lgfx::v0::LGFXBase
writeFastVLine	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::writeFastVLine(int32_t x, int32_t y, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
writeFastVLine	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writeFastVLine  ( int32_t x, int32_t y           , int32_t h, const T& color) { setColor(color); writeFastVLine(x, y   , h); }$/;"	f	class:lgfx::v1::LGFXBase
writeFillRect	src/lgfx/v0/LGFXBase.cpp	/^  void LGFXBase::writeFillRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v0::LGFXBase
writeFillRect	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void writeFillRect ( int32_t x, int32_t y, int32_t w, int32_t h, const T& color) { setColor(color); writeFillRect (x, y, w, h); }$/;"	f	class:lgfx::v0::LGFXBase
writeFillRect	src/lgfx/v1/LGFXBase.cpp	/^  void LGFXBase::writeFillRect(int32_t x, int32_t y, int32_t w, int32_t h)$/;"	f	class:lgfx::v1::LGFXBase
writeFillRect	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writeFillRect   ( int32_t x, int32_t y, int32_t w, int32_t h, const T& color) { setColor(color); writeFillRect (x, y, w, h); }$/;"	f	class:lgfx::v1::LGFXBase
writeFillRectAlphaPreclipped	src/lgfx/v1/Panel.hpp	/^    virtual void writeFillRectAlphaPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t argb8888)$/;"	f	struct:lgfx::v1::IPanel
writeFillRectAlphaPreclipped	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::writeFillRectAlphaPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t argb8888)$/;"	f	class:lgfx::v1::Panel_M5HDMI
writeFillRectAlphaPreclipped	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::writeFillRectAlphaPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t argb8888)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
writeFillRectPreclipped	src/lgfx/v0/LGFXBase.hpp	/^                                void writeFillRectPreclipped( int32_t x, int32_t y, int32_t w, int32_t h)                 {                  writeFillRect_impl (x, y, w, h); }$/;"	f	class:lgfx::v0::LGFXBase
writeFillRectPreclipped	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void writeFillRectPreclipped( int32_t x, int32_t y, int32_t w, int32_t h, const T& color) { setColor(color); writeFillRect_impl (x, y, w, h); }$/;"	f	class:lgfx::v0::LGFXBase
writeFillRectPreclipped	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void writeFillRectPreclipped( int32_t x, int32_t y, int32_t w, int32_t h)                 { _panel->writeFillRectPreclipped(x, y, w, h, getRawColor()); }$/;"	f	class:lgfx::v1::LGFXBase
writeFillRectPreclipped	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writeFillRectPreclipped( int32_t x, int32_t y, int32_t w, int32_t h, const T& color) { setColor(color); writeFillRectPreclipped(x, y, w, h); }$/;"	f	class:lgfx::v1::LGFXBase
writeFillRectPreclipped	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_Sprite
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_ILI9225.cpp	/^  void Panel_ILI9225::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_ILI9225
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_IT8951
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_LCD
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_M5HDMI
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_RA8875
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_1bitOLED
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_SSD1327
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_SSD1331.cpp	/^  void Panel_SSD1331::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_SSD1331
writeFillRectPreclipped	src/lgfx/v1/panel/Panel_SSD1351.cpp	/^  void Panel_SSD1351::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_SSD1351
writeFillRectPreclipped	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_fb
writeFillRectPreclipped	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_OpenCV
writeFillRectPreclipped	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::writeFillRectPreclipped(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, uint32_t rawcolor)$/;"	f	class:lgfx::v1::Panel_sdl
writeImage	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool)$/;"	f	class:lgfx::v1::Panel_Sprite
writeImage	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
writeImage	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
writeImage	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
writeImage	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_IT8951
writeImage	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_LCD
writeImage	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_M5HDMI
writeImage	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
writeImage	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_RA8875
writeImage	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_1bitOLED
writeImage	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool use_dma)$/;"	f	class:lgfx::v1::Panel_SSD1327
writeImage	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool)$/;"	f	class:lgfx::v1::Panel_fb
writeImage	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool)$/;"	f	class:lgfx::v1::Panel_OpenCV
writeImage	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::writeImage(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param, bool)$/;"	f	class:lgfx::v1::Panel_sdl
writeImageARGB	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_Sprite
writeImageARGB	src/lgfx/v1/panel/Panel_Device.cpp	/^  void Panel_Device::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_Device
writeImageARGB	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
writeImageARGB	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
writeImageARGB	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_M5HDMI
writeImageARGB	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
writeImageARGB	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_fb
writeImageARGB	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_OpenCV
writeImageARGB	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::writeImageARGB(uint_fast16_t x, uint_fast16_t y, uint_fast16_t w, uint_fast16_t h, pixelcopy_t* param)$/;"	f	class:lgfx::v1::Panel_sdl
writeIndexedPixels	src/lgfx/v0/LGFXBase.hpp	/^    void writeIndexedPixels(const uint8_t *data, T* palette, int32_t len, lgfx::color_depth_t colordepth = lgfx::rgb332_1Byte)$/;"	f	class:lgfx::v0::LGFXBase
writeIndexedPixels	src/lgfx/v1/LGFXBase.hpp	/^    void writeIndexedPixels(const uint8_t* data, T* palette, int32_t len, uint8_t depth = 8)$/;"	f	class:lgfx::v1::LGFXBase
writePixel	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void writePixel(int32_t x, int32_t y)  { if (x >= _clip_l && x <= _clip_r && y >= _clip_t && y <= _clip_b) writeFillRect_impl(x, y, 1, 1); }$/;"	f	class:lgfx::v0::LGFXBase
writePixel	src/lgfx/v0/LGFXBase.hpp	/^    template<typename T> inline void writePixel    ( int32_t x, int32_t y                      , const T& color) { setColor(color); writePixel    (x, y      ); }$/;"	f	class:lgfx::v0::LGFXBase
writePixel	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void writePixel(int32_t x, int32_t y)  { if (x >= _clip_l && x <= _clip_r && y >= _clip_t && y <= _clip_b) writeFillRectPreclipped(x, y, 1, 1); }$/;"	f	class:lgfx::v1::LGFXBase
writePixel	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writePixel      ( int32_t x, int32_t y                      , const T& color) { setColor(color); writePixel    (x, y      ); }$/;"	f	class:lgfx::v1::LGFXBase
writePixels	src/lgfx/v0/LGFXBase.hpp	/^    void writePixels(const T *data, int32_t len)                   { auto pc = create_pc_fast(data      ); writePixels_impl(len, &pc); }$/;"	f	class:lgfx::v0::LGFXBase
writePixels	src/lgfx/v0/LGFXBase.hpp	/^    void writePixels(const uint16_t* data, int32_t len, bool swap) { auto pc = create_pc_fast(data, swap); writePixels_impl(len, &pc); }$/;"	f	class:lgfx::v0::LGFXBase
writePixels	src/lgfx/v0/LGFXBase.hpp	/^    void writePixels(const void*     data, int32_t len, bool swap) { auto pc = create_pc_fast(data, swap); writePixels_impl(len, &pc); }$/;"	f	class:lgfx::v0::LGFXBase
writePixels	src/lgfx/v0/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::writePixels(PanelCommon* panel, LGFX_Device* gfx, int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::Panel_GDEW0154M09
writePixels	src/lgfx/v0/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::writePixels(PanelCommon* panel, LGFX_Device* gfx, int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::Panel_IT8951
writePixels	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void writePixels(const uint16_t* data, int32_t len, bool swap) { auto pc = create_pc_fast(data, swap); _panel->writePixels(&pc, len, false); }$/;"	f	class:lgfx::v1::LGFXBase
writePixels	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void writePixels(const void*     data, int32_t len, bool swap) { auto pc = create_pc_fast(data, swap); _panel->writePixels(&pc, len, false); }$/;"	f	class:lgfx::v1::LGFXBase
writePixels	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writePixels(const T*        data, int32_t len           ) { auto pc = create_pc_fast(data      ); _panel->writePixels(&pc, len, false); }$/;"	f	class:lgfx::v1::LGFXBase
writePixels	src/lgfx/v1/LGFX_Sprite.cpp	/^  void Panel_Sprite::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_Sprite
writePixels	src/lgfx/v1/panel/Panel_FlexibleFrameBuffer.cpp	/^  void Panel_FlexibleFrameBuffer::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_FlexibleFrameBuffer
writePixels	src/lgfx/v1/panel/Panel_FrameBufferBase.cpp	/^  void Panel_FrameBufferBase::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_FrameBufferBase
writePixels	src/lgfx/v1/panel/Panel_GDEW0154M09.cpp	/^  void Panel_GDEW0154M09::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_GDEW0154M09
writePixels	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  void Panel_IT8951::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_IT8951
writePixels	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::writePixels(pixelcopy_t* param, uint32_t len, bool use_dma)$/;"	f	class:lgfx::v1::Panel_LCD
writePixels	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  void Panel_M5HDMI::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_M5HDMI
writePixels	src/lgfx/v1/panel/Panel_M5UnitLCD.cpp	/^  void Panel_M5UnitLCD::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_M5UnitLCD
writePixels	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_RA8875
writePixels	src/lgfx/v1/panel/Panel_SSD1306.cpp	/^  void Panel_1bitOLED::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_1bitOLED
writePixels	src/lgfx/v1/panel/Panel_SSD1327.cpp	/^  void Panel_SSD1327::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_SSD1327
writePixels	src/lgfx/v1/platforms/arduino_default/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixels	src/lgfx/v1/platforms/arduino_default/Bus_Stream.cpp	/^  void Bus_Stream::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Stream
writePixels	src/lgfx/v1/platforms/esp32/Bus_I2C.cpp	/^  void Bus_I2C::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writePixels	src/lgfx/v1/platforms/esp32/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writePixels	src/lgfx/v1/platforms/esp32/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixels	src/lgfx/v1/platforms/esp32c3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writePixels	src/lgfx/v1/platforms/esp32s2/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel16
writePixels	src/lgfx/v1/platforms/esp32s2/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writePixels	src/lgfx/v1/platforms/esp32s3/Bus_Parallel16.cpp	/^  void Bus_Parallel16::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel16
writePixels	src/lgfx/v1/platforms/esp32s3/Bus_Parallel8.cpp	/^  void Bus_Parallel8::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_Parallel8
writePixels	src/lgfx/v1/platforms/esp8266/Bus_I2C.cpp	/^  void Bus_I2C::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writePixels	src/lgfx/v1/platforms/esp8266/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixels	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  void Panel_fb::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_fb
writePixels	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  void Panel_OpenCV::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_OpenCV
writePixels	src/lgfx/v1/platforms/rp2040/Bus_I2C.cpp	/^  void Bus_I2C::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writePixels	src/lgfx/v1/platforms/rp2040/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixels	src/lgfx/v1/platforms/samd21/Bus_I2C.cpp	/^  void Bus_I2C::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writePixels	src/lgfx/v1/platforms/samd21/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixels	src/lgfx/v1/platforms/samd51/Bus_I2C.cpp	/^  void Bus_I2C::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_I2C
writePixels	src/lgfx/v1/platforms/samd51/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixels	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  void Panel_sdl::writePixels(pixelcopy_t* param, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_sdl
writePixels	src/lgfx/v1/platforms/spresense/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixels	src/lgfx/v1/platforms/stm32/Bus_SPI.cpp	/^  void Bus_SPI::writePixels(pixelcopy_t* param, uint32_t length)$/;"	f	class:lgfx::v1::Bus_SPI
writePixelsDMA	src/lgfx/v0/LGFXBase.hpp	/^    __attribute__ ((always_inline)) inline void writePixelsDMA(const void* data, int32_t len) { if (len < 0) return;               writePixelsDMA_impl(data, len);             }$/;"	f	class:lgfx::v0::LGFXBase
writePixelsDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void writePixelsDMA(const uint16_t* data, int32_t len, bool swap) { auto pc = create_pc_fast(data, swap); _panel->writePixels(&pc, len, true); }$/;"	f	class:lgfx::v1::LGFXBase
writePixelsDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE   void writePixelsDMA(const void*     data, int32_t len, bool swap) { auto pc = create_pc_fast(data, swap); _panel->writePixels(&pc, len, true); }$/;"	f	class:lgfx::v1::LGFXBase
writePixelsDMA	src/lgfx/v1/LGFXBase.hpp	/^    LGFX_INLINE_T void writePixelsDMA(const T*        data, int32_t len           ) { auto pc = create_pc_fast(data      ); _panel->writePixels(&pc, len, true); }$/;"	f	class:lgfx::v1::LGFXBase
writeRawColor	src/lgfx/v0/LGFXBase.hpp	/^    void writeRawColor( uint32_t color, int32_t length) { if (0 >= length) return; setRawColor(color); pushBlock_impl(length); }$/;"	f	class:lgfx::v0::LGFXBase
writeReadBytes	src/lgfx/v0/platforms/esp32_common.cpp	/^    bool writeReadBytes(int i2c_port, uint16_t addr, const uint8_t *writedata, uint8_t writelen, uint8_t *readdata, uint8_t readlen)$/;"	f	namespace:lgfx::v0::i2c
writeReadBytes	src/lgfx/v0/platforms/samd51_common.cpp	/^    bool writeReadBytes(int, uint16_t, const uint8_t*, uint8_t, uint8_t*, uint8_t)$/;"	f	namespace:lgfx::v0::i2c
writeReadBytes	src/lgfx/v1/platforms/stm32/common.cpp	/^    bool writeReadBytes(int, uint16_t, const uint8_t*, uint8_t, uint8_t*, uint8_t)$/;"	f	namespace:lgfx::v1::i2c
writeRegister	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::HDMI_Trans::writeRegister(uint8_t register_address, uint8_t value)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
writeRegister	src/lgfx/v1/panel/Panel_NT35510.cpp	/^  void Panel_NT35510::writeRegister(uint16_t cmd, uint8_t data)$/;"	f	class:lgfx::v1::Panel_NT35510
writeRegister	src/lgfx/v1/panel/Panel_RM68120.cpp	/^  void Panel_RM68120::writeRegister(uint16_t cmd, uint8_t data)$/;"	f	class:lgfx::v1::Panel_RM68120
writeRegister8	src/lgfx/v0/platforms/esp32_common.cpp	/^    bool writeRegister8(int i2c_port, uint16_t addr, uint8_t reg, uint8_t data, uint8_t mask)$/;"	f	namespace:lgfx::v0::i2c
writeRegister8	src/lgfx/v0/platforms/samd51_common.cpp	/^    bool writeRegister8(int i2c_port, uint16_t addr, uint8_t reg, uint8_t data, uint8_t mask)$/;"	f	namespace:lgfx::v0::i2c
writeRegister8	src/lgfx/v0/touch/Touch_STMPE610.cpp	/^  void Touch_STMPE610::writeRegister8(uint8_t reg, uint8_t val)$/;"	f	class:lgfx::v0::Touch_STMPE610
writeRegister8	src/lgfx/v1/platforms/arduino_default/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int i2c_port, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/esp32/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int i2c_port, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/esp8266/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int i2c_port, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/framebuffer/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int i2c_port, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/opencv/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int i2c_port, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/rp2040/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int i2c_port, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/samd21/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int sercom_index, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/samd51/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int sercom_index, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/sdl/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int i2c_port, int addr, uint8_t reg, uint8_t data, uint8_t mask, uint32_t freq)  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/spresense/common.cpp	/^    cpp::result<void, error_t> writeRegister8(int , int , uint8_t , uint8_t , uint8_t , uint32_t )  { return cpp::fail(error_t::unknown_err); }$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/platforms/stm32/common.cpp	/^    bool writeRegister8(int i2c_port, uint16_t addr, uint8_t reg, uint8_t data, uint8_t mask)$/;"	f	namespace:lgfx::v1::i2c
writeRegister8	src/lgfx/v1/touch/Touch_STMPE610.cpp	/^  void Touch_STMPE610::writeRegister8(uint8_t reg, uint8_t val)$/;"	f	class:lgfx::v1::Touch_STMPE610
writeRegisterSet	src/lgfx/v1/panel/Panel_M5HDMI.cpp	/^  bool Panel_M5HDMI::HDMI_Trans::writeRegisterSet(const uint8_t *reg_data_pair, size_t len)$/;"	f	class:lgfx::v1::Panel_M5HDMI::HDMI_Trans
write_3byte_unaligned	src/lgfx/utility/pgmspace.h	/^  static inline void write_3byte_unaligned(void* addr, uint32_t value)$/;"	f
write_byte	src/lgfx/v1/platforms/esp8266/common.cpp	/^      bool write_byte(uint8_t byte)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
write_bytes	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void write_bytes(const uint8_t* data, int32_t length, bool use_dma = false)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
write_bytes	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void write_bytes(const uint8_t* data, int32_t length, bool use_dma = false)$/;"	f	class:lgfx::v0::LGFX_SPI
write_bytes	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void write_bytes(const uint8_t* data, int32_t length, bool use_dma = false)$/;"	f	class:lgfx::v0::LGFX_SPI
write_bytes	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::write_bytes(const uint8_t* data, uint32_t len, bool use_dma)$/;"	f	class:lgfx::v1::Panel_LCD
write_bytes	src/lgfx/v1/panel/Panel_RA8875.cpp	/^  void Panel_RA8875::write_bytes(const uint8_t* data, uint32_t length, bool use_dma)$/;"	f	class:lgfx::v1::Panel_RA8875
write_cmd	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void write_cmd(uint_fast8_t cmd)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
write_cmd	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void write_cmd(uint_fast8_t cmd)$/;"	f	class:lgfx::v0::LGFX_SPI
write_cmd	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void write_cmd(uint_fast8_t cmd)$/;"	f	class:lgfx::v0::LGFX_SPI
write_cmd_data	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void write_cmd_data(const uint8_t* addr)$/;"	f	class:lgfx::v0::LGFX_SPI
write_cmd_data	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void write_cmd_data(const uint8_t *addr)$/;"	f	class:lgfx::v0::LGFX_SPI
write_command	src/lgfx/v1/panel/Panel_LCD.cpp	/^  void Panel_LCD::write_command(uint32_t data)$/;"	f	class:lgfx::v1::Panel_LCD
write_data	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void write_data(uint32_t data, uint32_t bit_length)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
write_data	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void write_data(uint32_t data, uint32_t bit_length)$/;"	f	class:lgfx::v0::LGFX_SPI
write_data	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void write_data(uint32_t data, uint32_t bit_length)$/;"	f	class:lgfx::v0::LGFX_SPI
write_depth	src/lgfx/v0/panel/PanelCommon.hpp	/^    color_depth_t write_depth = rgb565_2Byte;$/;"	m	struct:lgfx::v0::PanelCommon
write_pixels	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    void write_pixels(int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::LGFX_PARALLEL
write_pixels	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    void write_pixels(int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::LGFX_SPI
write_pixels	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    void write_pixels(int32_t length, pixelcopy_t* param)$/;"	f	class:lgfx::v0::LGFX_SPI
write_start	src/lgfx/v1/platforms/esp8266/common.cpp	/^      bool write_start(void)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
write_stop	src/lgfx/v1/platforms/esp8266/common.cpp	/^      bool write_stop(void)$/;"	f	struct:lgfx::v1::i2c::i2c_context_t
writecommand	src/lgfx/v0/LGFX_Device.hpp	/^    inline  void writecommand(uint_fast8_t cmd) { writeCommand(cmd); } \/\/ TFT_eSPI compatible$/;"	f	class:lgfx::v0::LGFX_Device
writecommand	src/lgfx/v1/LGFXBase.hpp	/^    inline void writecommand(  uint8_t  cmd) { _panel->writeCommand(             cmd , 1); } \/\/ TFT_eSPI compatible$/;"	f	class:lgfx::v1::LGFX_Device
writedata	src/lgfx/v0/LGFX_Device.hpp	/^    inline  void writedata(uint_fast8_t data) { writeData(data); } \/\/ TFT_eSPI compatible$/;"	f	class:lgfx::v0::LGFX_Device
writedata	src/lgfx/v1/LGFXBase.hpp	/^    inline void writedata(  uint8_t  data) { _panel->writeData(                  data , 1); } \/\/ TFT_eSPI compatible$/;"	f	class:lgfx::v1::LGFX_Device
x	src/lgfx/v0/LGFXBase.cpp	/^    int32_t x;$/;"	m	struct:lgfx::v0::image_info_t	file:
x	src/lgfx/v0/LGFXBase.cpp	/^    int32_t x;$/;"	m	struct:lgfx::v0::png_encoder_t	file:
x	src/lgfx/v0/lgfx_common.hpp	/^    int32_t x;$/;"	m	struct:lgfx::touch_point_t
x	src/lgfx/v1/LGFXBase.cpp	/^    int32_t x;$/;"	m	struct:lgfx::v1::image_info_t	file:
x	src/lgfx/v1/LGFXBase.cpp	/^    int32_t x;$/;"	m	struct:lgfx::v1::png_encoder_t	file:
x	src/lgfx/v1/Touch.hpp	/^    int16_t x = -1;$/;"	m	struct:lgfx::v1::touch_point_t
x	src/lgfx/v1/panel/Panel_HUB75.hpp	/^      uint16_t x;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi::panel_position_t
xAdvance	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t  xAdvance;         \/\/ Distance to advance cursor (x axis)$/;"	m	struct:lgfx::v0::GFXglyph
xAdvance	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t  xAdvance;         \/\/ Distance to advance cursor (x axis)$/;"	m	struct:lgfx::v1::GFXglyph
xOffset	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t   xOffset, yOffset; \/\/ Dist from cursor pos to UL corner$/;"	m	struct:lgfx::v0::GFXglyph
xOffset	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t   xOffset, yOffset; \/\/ Dist from cursor pos to UL corner$/;"	m	struct:lgfx::v1::GFXglyph
x_advance	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t x_advance;$/;"	m	struct:lgfx::v0::FontMetrics
x_advance	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t x_advance;$/;"	m	struct:lgfx::v1::FontMetrics
x_max	src/lgfx/v0/touch/TouchCommon.hpp	/^    uint32_t x_max = 3600;$/;"	m	struct:lgfx::v0::TouchCommon
x_max	src/lgfx/v1/Touch.hpp	/^      uint16_t x_max = 3600;$/;"	m	struct:lgfx::v1::ITouch::config_t
x_min	src/lgfx/v0/touch/TouchCommon.hpp	/^    uint32_t x_min = 0;$/;"	m	struct:lgfx::v0::TouchCommon
x_min	src/lgfx/v1/Touch.hpp	/^      uint16_t x_min = 0;$/;"	m	struct:lgfx::v1::ITouch::config_t
x_offset	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t x_offset;$/;"	m	struct:lgfx::v0::FontMetrics
x_offset	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t x_offset       (void) const { return _font[11]; }$/;"	f	struct:lgfx::v0::U8g2font
x_offset	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t x_offset;$/;"	m	struct:lgfx::v1::FontMetrics
x_offset	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t x_offset       (void) const { return pgm_read_byte(&_font[11]); }$/;"	f	struct:lgfx::v1::U8g2font
xe	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t xe;              \/\/ 32$/;"	m	struct:lgfx::v1::asm_work_t	file:
xe_idx	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint32_t xe_idx;          \/\/ 28$/;"	m	struct:lgfx::v1::asm_work_t	file:
xe_tbl	src/lgfx/v1/platforms/esp32/Bus_HUB75.cpp	/^    uint16_t* xe_tbl;         \/\/ 20$/;"	m	struct:lgfx::v1::asm_work_t	file:
xtal_clock	src/lgfx/v1/panel/Panel_SSD1963.hpp	/^      uint32_t xtal_clock = 10000000;  \/\/\/ Oscillator frequency on board;$/;"	m	struct:lgfx::v1::timing_params_t
y	src/lgfx/v0/LGFXBase.cpp	/^    int32_t y;$/;"	m	struct:lgfx::v0::image_info_t	file:
y	src/lgfx/v0/LGFXBase.cpp	/^    int32_t y;$/;"	m	struct:lgfx::v0::png_encoder_t	file:
y	src/lgfx/v0/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v0::paint_point_t	file:
y	src/lgfx/v0/lgfx_common.hpp	/^    int32_t y;$/;"	m	struct:lgfx::touch_point_t
y	src/lgfx/v1/LGFXBase.cpp	/^    int32_t y;$/;"	m	struct:lgfx::v1::image_info_t	file:
y	src/lgfx/v1/LGFXBase.cpp	/^    int32_t y;$/;"	m	struct:lgfx::v1::png_encoder_t	file:
y	src/lgfx/v1/LGFXBase.cpp	/^  struct paint_point_t { int32_t lx,rx,y,oy; };$/;"	m	struct:lgfx::v1::paint_point_t	file:
y	src/lgfx/v1/Touch.hpp	/^    int16_t y = -1;$/;"	m	struct:lgfx::v1::touch_point_t
y	src/lgfx/v1/panel/Panel_HUB75.hpp	/^      uint16_t y;$/;"	m	struct:lgfx::v1::Panel_HUB75_Multi::panel_position_t
yAdvance	src/lgfx/v0/lgfx_fonts.hpp	/^    uint16_t yAdvance;   \/\/ Line advance$/;"	m	struct:lgfx::v0::VLWfont
yAdvance	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t   yAdvance;    \/\/ Newline distance (y axis)$/;"	m	struct:lgfx::v0::GFXfont
yAdvance	src/lgfx/v1/lgfx_fonts.hpp	/^    uint16_t yAdvance;   \/\/ Line advance$/;"	m	struct:lgfx::v1::VLWfont
yAdvance	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t   yAdvance;    \/\/ Newline distance (y axis)$/;"	m	struct:lgfx::v1::GFXfont
yOffset	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t   xOffset, yOffset; \/\/ Dist from cursor pos to UL corner$/;"	m	struct:lgfx::v0::GFXglyph
yOffset	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t   xOffset, yOffset; \/\/ Dist from cursor pos to UL corner$/;"	m	struct:lgfx::v1::GFXglyph
y_advance	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t y_advance;$/;"	m	struct:lgfx::v0::FontMetrics
y_advance	src/lgfx/v0/lgfx_fonts.hpp	/^    uint8_t y_advance;$/;"	m	struct:lgfx::v0::BDFfont
y_advance	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t y_advance;$/;"	m	struct:lgfx::v1::FontMetrics
y_advance	src/lgfx/v1/lgfx_fonts.hpp	/^    uint8_t y_advance;$/;"	m	struct:lgfx::v1::BDFfont
y_max	src/lgfx/v0/touch/TouchCommon.hpp	/^    uint32_t y_max = 3600;$/;"	m	struct:lgfx::v0::TouchCommon
y_max	src/lgfx/v1/Touch.hpp	/^      uint16_t y_max = 3600;$/;"	m	struct:lgfx::v1::ITouch::config_t
y_min	src/lgfx/v0/touch/TouchCommon.hpp	/^    uint32_t y_min = 0;$/;"	m	struct:lgfx::v0::TouchCommon
y_min	src/lgfx/v1/Touch.hpp	/^      uint16_t y_min = 0;$/;"	m	struct:lgfx::v1::ITouch::config_t
y_offset	src/lgfx/v0/lgfx_fonts.hpp	/^    int16_t y_offset;$/;"	m	struct:lgfx::v0::FontMetrics
y_offset	src/lgfx/v0/lgfx_fonts.hpp	/^    int8_t y_offset       (void) const { return _font[12]; }$/;"	f	struct:lgfx::v0::U8g2font
y_offset	src/lgfx/v1/lgfx_fonts.hpp	/^    int16_t y_offset;$/;"	m	struct:lgfx::v1::FontMetrics
y_offset	src/lgfx/v1/lgfx_fonts.hpp	/^    int8_t y_offset       (void) const { return pgm_read_byte(&_font[12]); }$/;"	f	struct:lgfx::v1::U8g2font
zError	src/lgfx/utility/miniz.c	/^  #define zError /;"	d	file:
z_stream	src/lgfx/utility/miniz.c	/^  #define z_stream /;"	d	file:
zalloc	src/lgfx/utility/miniz.c	/^  mz_alloc_func zalloc;             \/\/ optional heap allocation function (defaults to malloc)$/;"	m	struct:mz_stream_s	file:
zfree	src/lgfx/utility/miniz.c	/^  mz_free_func zfree;               \/\/ optional heap free function (defaults to free)$/;"	m	struct:mz_stream_s	file:
zlibVersion	src/lgfx/utility/miniz.c	/^  #define zlibVersion /;"	d	file:
zlib_version	src/lgfx/utility/miniz.c	/^  #define zlib_version /;"	d	file:
zoom_x	src/lgfx/v0/LGFXBase.cpp	/^    float zoom_x;$/;"	m	struct:lgfx::v0::image_info_t	file:
zoom_x	src/lgfx/v1/LGFXBase.cpp	/^    float zoom_x;$/;"	m	struct:lgfx::v1::image_info_t	file:
zoom_y	src/lgfx/v0/LGFXBase.cpp	/^    float zoom_y;$/;"	m	struct:lgfx::v0::image_info_t	file:
zoom_y	src/lgfx/v1/LGFXBase.cpp	/^    float zoom_y;$/;"	m	struct:lgfx::v1::image_info_t	file:
~DataWrapper	src/lgfx/v0/lgfx_common.hpp	/^    virtual ~DataWrapper() {}$/;"	f	struct:lgfx::DataWrapper
~FlipBuffer	src/lgfx/v1/platforms/common.hpp	/^    virtual ~FlipBuffer(void)$/;"	f	class:lgfx::v1::FlipBuffer
~HttpWrapper	src/lgfx/v1/lgfx_filesystem_support.hpp	/^      virtual ~HttpWrapper(void)$/;"	f	struct:lgfx::v1::LGFX_FILESYSTEM_Support::HttpWrapper
~LGFXBase	src/lgfx/v0/LGFXBase.hpp	/^    virtual ~LGFXBase() {}$/;"	f	class:lgfx::v0::LGFXBase
~LGFX_FILESYSTEM_Support	src/lgfx/v0/lgfx_filesystem_support.hpp	/^    virtual ~LGFX_FILESYSTEM_Support<Base>()$/;"	f	class:lgfx::v0::LGFX_FILESYSTEM_Support
~LGFX_PARALLEL	src/lgfx/v0/platforms/LGFX_PARALLEL_ESP32.hpp	/^    virtual ~LGFX_PARALLEL() {$/;"	f	class:lgfx::v0::LGFX_PARALLEL
~LGFX_SPI	src/lgfx/v0/platforms/LGFX_SPI_ESP32.hpp	/^    virtual ~LGFX_SPI() {$/;"	f	class:lgfx::v0::LGFX_SPI
~LGFX_SPI	src/lgfx/v0/platforms/LGFX_SPI_SAMD51.hpp	/^    virtual ~LGFX_SPI() {$/;"	f	class:lgfx::v0::LGFX_SPI
~LGFX_Sprite	src/lgfx/v0/LGFX_Sprite.hpp	/^    virtual ~LGFX_Sprite() {$/;"	f	class:lgfx::v0::LGFX_Sprite
~LGFX_Sprite	src/lgfx/v1/LGFX_Sprite.hpp	/^    virtual ~LGFX_Sprite() {$/;"	f	class:lgfx::v1::LGFX_Sprite
~Panel_CVBS	src/lgfx/v1/platforms/esp32/Panel_CVBS.cpp	/^  Panel_CVBS::~Panel_CVBS()$/;"	f	class:lgfx::v1::Panel_CVBS
~Panel_HUB75	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  Panel_HUB75::~Panel_HUB75(void)$/;"	f	class:lgfx::v1::Panel_HUB75
~Panel_HUB75_Multi	src/lgfx/v1/panel/Panel_HUB75.cpp	/^  Panel_HUB75_Multi::~Panel_HUB75_Multi(void)$/;"	f	class:lgfx::v1::Panel_HUB75_Multi
~Panel_HasBuffer	src/lgfx/v1/panel/Panel_HasBuffer.cpp	/^  Panel_HasBuffer::~Panel_HasBuffer(void)$/;"	f	class:lgfx::v1::Panel_HasBuffer
~Panel_IT8951	src/lgfx/v1/panel/Panel_IT8951.cpp	/^  Panel_IT8951::~Panel_IT8951(void)$/;"	f	class:lgfx::v1::Panel_IT8951
~Panel_OpenCV	src/lgfx/v1/platforms/opencv/Panel_OpenCV.cpp	/^  Panel_OpenCV::~Panel_OpenCV(void)$/;"	f	class:lgfx::v1::Panel_OpenCV
~Panel_RGB	src/lgfx/v1/platforms/esp32s3/Panel_RGB.cpp	/^  Panel_RGB::~Panel_RGB(void)$/;"	f	class:lgfx::v1::Panel_RGB
~Panel_fb	src/lgfx/v1/platforms/framebuffer/Panel_fb.cpp	/^  Panel_fb::~Panel_fb(void)$/;"	f	class:lgfx::v1::Panel_fb
~Panel_sdl	src/lgfx/v1/platforms/sdl/Panel_sdl.cpp	/^  Panel_sdl::~Panel_sdl(void)$/;"	f	class:lgfx::v1::Panel_sdl
~RunTimeFont	src/lgfx/v0/lgfx_fonts.hpp	/^    virtual ~RunTimeFont() {}$/;"	f	struct:lgfx::v0::RunTimeFont
~SimpleBuffer	src/lgfx/v1/platforms/common.hpp	/^    virtual ~SimpleBuffer(void)$/;"	f	class:lgfx::v1::SimpleBuffer
~VLWfont	src/lgfx/v0/lgfx_fonts.cpp	/^  VLWfont::~VLWfont() {$/;"	f	class:lgfx::v0::VLWfont
~VLWfont	src/lgfx/v1/lgfx_fonts.cpp	/^  VLWfont::~VLWfont() {$/;"	f	class:lgfx::v1::VLWfont
